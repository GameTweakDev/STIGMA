#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Marker_OccupationArea

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Marker_OccupationArea.Marker_OccupationArea_C.ExecuteUbergraph_Marker_OccupationArea
// 0x0004 (0x0004 - 0x0000)
struct Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea) == 0x000004, "Wrong alignment on Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea");
static_assert(sizeof(Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea) == 0x000004, "Wrong size on Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea");
static_assert(offsetof(Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea, EntryPoint) == 0x000000, "Member 'Marker_OccupationArea_C_ExecuteUbergraph_Marker_OccupationArea::EntryPoint' has a wrong offset!");

// Function Marker_OccupationArea.Marker_OccupationArea_C.OnTick
// 0x0040 (0x0040 - 0x0000)
struct Marker_OccupationArea_C_OnTick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         _delta;                                            // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_OccupationArea_C_OnTick) == 0x000004, "Wrong alignment on Marker_OccupationArea_C_OnTick");
static_assert(sizeof(Marker_OccupationArea_C_OnTick) == 0x000040, "Wrong size on Marker_OccupationArea_C_OnTick");
static_assert(offsetof(Marker_OccupationArea_C_OnTick, MyGeometry) == 0x000000, "Member 'Marker_OccupationArea_C_OnTick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_OnTick, _delta) == 0x000038, "Member 'Marker_OccupationArea_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_OnTick, ReturnValue) == 0x00003C, "Member 'Marker_OccupationArea_C_OnTick::ReturnValue' has a wrong offset!");

// Function Marker_OccupationArea.Marker_OccupationArea_C.UpdateColor
// 0x0060 (0x0060 - 0x0000)
struct Marker_OccupationArea_C_UpdateColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        Own_team;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTeamDef                               CallFunc_GetTeamDefine_ReturnValue;                // 0x0018(0x0028)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37FA[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AActor*                                 CallFunc_GetBoundActor_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AOccupationArea*                        K2Node_DynamicCast_AsOccupation_Area;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_OccupationArea_C_UpdateColor) == 0x000008, "Wrong alignment on Marker_OccupationArea_C_UpdateColor");
static_assert(sizeof(Marker_OccupationArea_C_UpdateColor) == 0x000060, "Wrong size on Marker_OccupationArea_C_UpdateColor");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, Color) == 0x000000, "Member 'Marker_OccupationArea_C_UpdateColor::Color' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, Own_team) == 0x000010, "Member 'Marker_OccupationArea_C_UpdateColor::Own_team' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, CallFunc_GetTeamDefine_ReturnValue) == 0x000018, "Member 'Marker_OccupationArea_C_UpdateColor::CallFunc_GetTeamDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Marker_OccupationArea_C_UpdateColor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, CallFunc_GetBoundActor_ReturnValue) == 0x000048, "Member 'Marker_OccupationArea_C_UpdateColor::CallFunc_GetBoundActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, K2Node_DynamicCast_AsOccupation_Area) == 0x000050, "Member 'Marker_OccupationArea_C_UpdateColor::K2Node_DynamicCast_AsOccupation_Area' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_UpdateColor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Marker_OccupationArea_C_UpdateColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Marker_OccupationArea.Marker_OccupationArea_C.ValidateMaterial
// 0x0010 (0x0010 - 0x0000)
struct Marker_OccupationArea_C_ValidateMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_OccupationArea_C_ValidateMaterial) == 0x000008, "Wrong alignment on Marker_OccupationArea_C_ValidateMaterial");
static_assert(sizeof(Marker_OccupationArea_C_ValidateMaterial) == 0x000010, "Wrong size on Marker_OccupationArea_C_ValidateMaterial");
static_assert(offsetof(Marker_OccupationArea_C_ValidateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Marker_OccupationArea_C_ValidateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_OccupationArea_C_ValidateMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Marker_OccupationArea_C_ValidateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

