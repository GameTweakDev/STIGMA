#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LVRow_RandomBoxEntry

#include "Basic.hpp"

#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LVRow_RandomBoxEntry.LVRow_RandomBoxEntry_C
// 0x00A0 (0x0590 - 0x04F0)
class ULVRow_RandomBoxEntry_C final : public UPreviewableWidget
{
public:
	class UImage*                                 IMG_CountBack;                                     // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_NameBack;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_RateBack;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OVL_CountColumn;                                   // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OVL_NameColumn;                                    // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OVL_RateColumn;                                    // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Count;                                         // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Name;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Rate;                                          // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_LVRow_RandomBoxEntry_C;                       // 0x0538(0x0018)(Edit, BlueprintVisible)
	class FText                                   CountText;                                         // 0x0550(0x0018)(Edit, BlueprintVisible)
	class FText                                   PercentText;                                       // 0x0568(0x0018)(Edit, BlueprintVisible)
	double                                        BackgroundAlpha;                                   // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VerticalSpace;                                     // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Config(const class FText& _Name, const class FText& _count, const class FText& _percent, double _Alpha);
	bool OnSynchronizeProperties();
	void UpdateSetting();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LVRow_RandomBoxEntry_C">();
	}
	static class ULVRow_RandomBoxEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULVRow_RandomBoxEntry_C>();
	}
};
static_assert(alignof(ULVRow_RandomBoxEntry_C) == 0x000008, "Wrong alignment on ULVRow_RandomBoxEntry_C");
static_assert(sizeof(ULVRow_RandomBoxEntry_C) == 0x000590, "Wrong size on ULVRow_RandomBoxEntry_C");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, IMG_CountBack) == 0x0004F0, "Member 'ULVRow_RandomBoxEntry_C::IMG_CountBack' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, IMG_NameBack) == 0x0004F8, "Member 'ULVRow_RandomBoxEntry_C::IMG_NameBack' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, IMG_RateBack) == 0x000500, "Member 'ULVRow_RandomBoxEntry_C::IMG_RateBack' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, OVL_CountColumn) == 0x000508, "Member 'ULVRow_RandomBoxEntry_C::OVL_CountColumn' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, OVL_NameColumn) == 0x000510, "Member 'ULVRow_RandomBoxEntry_C::OVL_NameColumn' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, OVL_RateColumn) == 0x000518, "Member 'ULVRow_RandomBoxEntry_C::OVL_RateColumn' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, TXT_Count) == 0x000520, "Member 'ULVRow_RandomBoxEntry_C::TXT_Count' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, TXT_Name) == 0x000528, "Member 'ULVRow_RandomBoxEntry_C::TXT_Name' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, TXT_Rate) == 0x000530, "Member 'ULVRow_RandomBoxEntry_C::TXT_Rate' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, Name_LVRow_RandomBoxEntry_C) == 0x000538, "Member 'ULVRow_RandomBoxEntry_C::Name_LVRow_RandomBoxEntry_C' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, CountText) == 0x000550, "Member 'ULVRow_RandomBoxEntry_C::CountText' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, PercentText) == 0x000568, "Member 'ULVRow_RandomBoxEntry_C::PercentText' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, BackgroundAlpha) == 0x000580, "Member 'ULVRow_RandomBoxEntry_C::BackgroundAlpha' has a wrong offset!");
static_assert(offsetof(ULVRow_RandomBoxEntry_C, VerticalSpace) == 0x000588, "Member 'ULVRow_RandomBoxEntry_C::VerticalSpace' has a wrong offset!");

}

