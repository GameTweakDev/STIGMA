#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Annihilation_PlayerController_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Annihilation_PlayerController_BP.Annihilation_PlayerController_BP_C
// 0x0010 (0x0E58 - 0x0E48)
class AAnnihilation_PlayerController_BP_C final : public AAnnihilation_PlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0E48(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_SelectCharacter_InGame_C*           SelectPage_InGame;                                 // 0x0E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void DEBUG_FillBotUp();
	void ExecuteUbergraph_Annihilation_PlayerController_BP(int32 EntryPoint);
	void InpActEvt_BackSpace_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_2(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	struct FNetReply OnACK_SetCharacterSetting(EResultCode _rcode, const struct FApiResult& _ack);
	void OnChangedArmory(ECharaType _chara_type, const struct FItemID& _item_id, int32 _idx_slot);
	void OnClosedArmory();
	void OnRoundStart(const struct FRoundStartNotify& Notify);
	void OnShowRoundStart(const struct FRoundStartNotify& _notify);
	void PopupArmory();
	void UpdateCharaSelecting(class ABattlePlayerState* Player_state);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Annihilation_PlayerController_BP_C">();
	}
	static class AAnnihilation_PlayerController_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAnnihilation_PlayerController_BP_C>();
	}
};
static_assert(alignof(AAnnihilation_PlayerController_BP_C) == 0x000008, "Wrong alignment on AAnnihilation_PlayerController_BP_C");
static_assert(sizeof(AAnnihilation_PlayerController_BP_C) == 0x000E58, "Wrong size on AAnnihilation_PlayerController_BP_C");
static_assert(offsetof(AAnnihilation_PlayerController_BP_C, UberGraphFrame) == 0x000E48, "Member 'AAnnihilation_PlayerController_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAnnihilation_PlayerController_BP_C, SelectPage_InGame) == 0x000E50, "Member 'AAnnihilation_PlayerController_BP_C::SelectPage_InGame' has a wrong offset!");

}

