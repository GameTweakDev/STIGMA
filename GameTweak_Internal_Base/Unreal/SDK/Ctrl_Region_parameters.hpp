#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Region

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_Region.Ctrl_Region_C.ValidatePingMaterial
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_Region_C_ValidatePingMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_ValidatePingMaterial) == 0x000008, "Wrong alignment on Ctrl_Region_C_ValidatePingMaterial");
static_assert(sizeof(Ctrl_Region_C_ValidatePingMaterial) == 0x000010, "Wrong size on Ctrl_Region_C_ValidatePingMaterial");
static_assert(offsetof(Ctrl_Region_C_ValidatePingMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Ctrl_Region_C_ValidatePingMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_ValidatePingMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ctrl_Region_C_ValidatePingMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.UpdateRegion
// 0x0048 (0x0048 - 0x0000)
struct Ctrl_Region_C_UpdateRegion final
{
public:
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Region                         CallFunc_GetRegion_ReturnValue;                    // 0x0008(0x0040)(ConstParm)
};
static_assert(alignof(Ctrl_Region_C_UpdateRegion) == 0x000008, "Wrong alignment on Ctrl_Region_C_UpdateRegion");
static_assert(sizeof(Ctrl_Region_C_UpdateRegion) == 0x000048, "Wrong size on Ctrl_Region_C_UpdateRegion");
static_assert(offsetof(Ctrl_Region_C_UpdateRegion, CallFunc_IsEmpty_ReturnValue) == 0x000000, "Member 'Ctrl_Region_C_UpdateRegion::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdateRegion, CallFunc_GetRegion_ReturnValue) == 0x000008, "Member 'Ctrl_Region_C_UpdateRegion::CallFunc_GetRegion_ReturnValue' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.UpdatePing
// 0x0070 (0x0070 - 0x0000)
struct Ctrl_Region_C_UpdatePing final
{
public:
	struct FRegion                                Region_data;                                       // 0x0000(0x0018)(Edit, BlueprintVisible)
	double                                        Mask;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPingQuality                                  Ping_quality;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStigmaGameInstance*                    K2Node_DynamicCast_AsStigma_Game_Instance;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E3[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FRegion                                CallFunc_GetRegionData_ReturnValue;                // 0x0050(0x0018)(ConstParm)
	EPingQuality                                  CallFunc_JudgePingQuality_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E4[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_UpdatePing) == 0x000008, "Wrong alignment on Ctrl_Region_C_UpdatePing");
static_assert(sizeof(Ctrl_Region_C_UpdatePing) == 0x000070, "Wrong size on Ctrl_Region_C_UpdatePing");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, Region_data) == 0x000000, "Member 'Ctrl_Region_C_UpdatePing::Region_data' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, Mask) == 0x000018, "Member 'Ctrl_Region_C_UpdatePing::Mask' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, Color) == 0x000020, "Member 'Ctrl_Region_C_UpdatePing::Color' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, Ping_quality) == 0x000030, "Member 'Ctrl_Region_C_UpdatePing::Ping_quality' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'Ctrl_Region_C_UpdatePing::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, K2Node_DynamicCast_AsStigma_Game_Instance) == 0x000040, "Member 'Ctrl_Region_C_UpdatePing::K2Node_DynamicCast_AsStigma_Game_Instance' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ctrl_Region_C_UpdatePing::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, CallFunc_GetRegionData_ReturnValue) == 0x000050, "Member 'Ctrl_Region_C_UpdatePing::CallFunc_GetRegionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, CallFunc_JudgePingQuality_ReturnValue) == 0x000068, "Member 'Ctrl_Region_C_UpdatePing::CallFunc_JudgePingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, K2Node_SwitchEnum_CmpSuccess) == 0x000069, "Member 'Ctrl_Region_C_UpdatePing::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_UpdatePing, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00006C, "Member 'Ctrl_Region_C_UpdatePing::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_Region_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_Tick) == 0x000004, "Wrong alignment on Ctrl_Region_C_Tick");
static_assert(sizeof(Ctrl_Region_C_Tick) == 0x00003C, "Wrong size on Ctrl_Region_C_Tick");
static_assert(offsetof(Ctrl_Region_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_Region_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_Region_C_Tick::InDeltaTime' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.SetRegion
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_Region_C_SetRegion final
{
public:
	class FString                                 _region_code;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_SetRegion) == 0x000008, "Wrong alignment on Ctrl_Region_C_SetRegion");
static_assert(sizeof(Ctrl_Region_C_SetRegion) == 0x000010, "Wrong size on Ctrl_Region_C_SetRegion");
static_assert(offsetof(Ctrl_Region_C_SetRegion, _region_code) == 0x000000, "Member 'Ctrl_Region_C_SetRegion::_region_code' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.OnTick
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Region_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_OnTick) == 0x000008, "Wrong alignment on Ctrl_Region_C_OnTick");
static_assert(sizeof(Ctrl_Region_C_OnTick) == 0x000018, "Wrong size on Ctrl_Region_C_OnTick");
static_assert(offsetof(Ctrl_Region_C_OnTick, _delta) == 0x000000, "Member 'Ctrl_Region_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ctrl_Region_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_OnTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ctrl_Region_C_OnTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Region_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_Region_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_Region_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_Region_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_Region_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_Region_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_Region.Ctrl_Region_C.ExecuteUbergraph_Ctrl_Region
// 0x0048 (0x0048 - 0x0000)
struct Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region) == 0x000008, "Wrong alignment on Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region");
static_assert(sizeof(Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region) == 0x000048, "Wrong size on Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region");
static_assert(offsetof(Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region, EntryPoint) == 0x000000, "Member 'Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region, K2Node_Event_MyGeometry) == 0x000004, "Member 'Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region, CallFunc_OnTick__delta_ImplicitCast) == 0x000040, "Member 'Ctrl_Region_C_ExecuteUbergraph_Ctrl_Region::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

}

