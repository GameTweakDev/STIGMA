#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HUD_Radar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_HUD_Radar.Ctrl_HUD_Radar_C.Add Actor
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_HUD_Radar_C_Add_Actor final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_Radar_C_Add_Actor) == 0x000008, "Wrong alignment on Ctrl_HUD_Radar_C_Add_Actor");
static_assert(sizeof(Ctrl_HUD_Radar_C_Add_Actor) == 0x000010, "Wrong size on Ctrl_HUD_Radar_C_Add_Actor");
static_assert(offsetof(Ctrl_HUD_Radar_C_Add_Actor, _Actor) == 0x000000, "Member 'Ctrl_HUD_Radar_C_Add_Actor::_Actor' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_Add_Actor, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ctrl_HUD_Radar_C_Add_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ctrl_HUD_Radar.Ctrl_HUD_Radar_C.ExecuteUbergraph_Ctrl_HUD_Radar
// 0x0080 (0x0080 - 0x0000)
struct Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFA[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UMinimap*                               CallFunc_GetCurrentMinimap_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeMinimapSpot_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetZoomScale__scale_ImplicitCast;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar) == 0x000008, "Wrong alignment on Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar");
static_assert(sizeof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar) == 0x000080, "Wrong size on Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, EntryPoint) == 0x000000, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, K2Node_Event_MyGeometry) == 0x000008, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, K2Node_Event_InDeltaTime) == 0x000040, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_GetCurrentMinimap_ReturnValue) == 0x000048, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_GetCurrentMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_ChangeMinimapSpot_ReturnValue) == 0x000058, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_ChangeMinimapSpot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_GetViewTarget_ReturnValue) == 0x000068, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_SetZoomScale__scale_ImplicitCast) == 0x000070, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_SetZoomScale__scale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'Ctrl_HUD_Radar_C_ExecuteUbergraph_Ctrl_HUD_Radar::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ctrl_HUD_Radar.Ctrl_HUD_Radar_C.SetZoomScale
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_HUD_Radar_C_SetZoomScale final
{
public:
	double                                        _scale;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetZoomScale__scale_ImplicitCast;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_Radar_C_SetZoomScale) == 0x000008, "Wrong alignment on Ctrl_HUD_Radar_C_SetZoomScale");
static_assert(sizeof(Ctrl_HUD_Radar_C_SetZoomScale) == 0x000010, "Wrong size on Ctrl_HUD_Radar_C_SetZoomScale");
static_assert(offsetof(Ctrl_HUD_Radar_C_SetZoomScale, _scale) == 0x000000, "Member 'Ctrl_HUD_Radar_C_SetZoomScale::_scale' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_SetZoomScale, CallFunc_SetZoomScale__scale_ImplicitCast) == 0x000008, "Member 'Ctrl_HUD_Radar_C_SetZoomScale::CallFunc_SetZoomScale__scale_ImplicitCast' has a wrong offset!");

// Function Ctrl_HUD_Radar.Ctrl_HUD_Radar_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_HUD_Radar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_Radar_C_Tick) == 0x000004, "Wrong alignment on Ctrl_HUD_Radar_C_Tick");
static_assert(sizeof(Ctrl_HUD_Radar_C_Tick) == 0x00003C, "Wrong size on Ctrl_HUD_Radar_C_Tick");
static_assert(offsetof(Ctrl_HUD_Radar_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_HUD_Radar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_Radar_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_HUD_Radar_C_Tick::InDeltaTime' has a wrong offset!");

}

