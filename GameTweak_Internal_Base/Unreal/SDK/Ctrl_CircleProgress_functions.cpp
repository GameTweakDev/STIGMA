#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_CircleProgress

#include "Basic.hpp"

#include "Ctrl_CircleProgress_classes.hpp"
#include "Ctrl_CircleProgress_parameters.hpp"


namespace SDK
{

// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.DriveAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  _delta                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::DriveAnim(double _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "DriveAnim");

	Params::Ctrl_CircleProgress_C_DriveAnim Parms{};

	Parms._delta = _delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.ExecuteUbergraph_Ctrl_CircleProgress
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::ExecuteUbergraph_Ctrl_CircleProgress(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "ExecuteUbergraph_Ctrl_CircleProgress");

	Params::Ctrl_CircleProgress_C_ExecuteUbergraph_Ctrl_CircleProgress Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.OnTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  _delta                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::OnTick(double _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "OnTick");

	Params::Ctrl_CircleProgress_C_OnTick Parms{};

	Parms._delta = _delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.SetProgressTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  _time                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::SetProgressTime(double _time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "SetProgressTime");

	Params::Ctrl_CircleProgress_C_SetProgressTime Parms{};

	Parms._time = _time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.SetTargetOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        _offset                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::SetTargetOffset(const struct FVector2D& _offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "SetTargetOffset");

	Params::Ctrl_CircleProgress_C_SetTargetOffset Parms{};

	Parms._offset = std::move(_offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  _duration                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _manual_destroy                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::Start(double _duration, bool _manual_destroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "Start");

	Params::Ctrl_CircleProgress_C_Start Parms{};

	Parms._duration = _duration;
	Parms._manual_destroy = _manual_destroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "Tick");

	Params::Ctrl_CircleProgress_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.ValidateMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UCtrl_CircleProgress_C::ValidateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "ValidateMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.GetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        _size                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::GetSize(struct FVector2D* _size) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "GetSize");

	Params::Ctrl_CircleProgress_C_GetSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_size != nullptr)
		*_size = std::move(Parms._size);
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.IsExpired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    _expired                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::IsExpired(bool* _expired) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "IsExpired");

	Params::Ctrl_CircleProgress_C_IsExpired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_expired != nullptr)
		*_expired = Parms._expired;
}


// Function Ctrl_CircleProgress.Ctrl_CircleProgress_C.IsManualDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    _yes                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_CircleProgress_C::IsManualDestroy(bool* _yes) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CircleProgress_C", "IsManualDestroy");

	Params::Ctrl_CircleProgress_C_IsManualDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_yes != nullptr)
		*_yes = Parms._yes;
}

}

