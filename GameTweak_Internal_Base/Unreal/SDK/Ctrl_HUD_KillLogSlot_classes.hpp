#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HUD_KillLogSlot

#include "Basic.hpp"

#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_HUD_KillLogSlot.Ctrl_HUD_KillLogSlot_C
// 0x0030 (0x0618 - 0x05E8)
class UCtrl_HUD_KillLogSlot_C final : public UHUD_KillLogSlot
{
public:
	class UImage*                                 IMG_Blank;                                         // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Blank_1;                                       // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Blank_2;                                       // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Blank_3;                                       // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Blank_4;                                       // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainCanvasPanel;                                   // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_HUD_KillLogSlot_C">();
	}
	static class UCtrl_HUD_KillLogSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_HUD_KillLogSlot_C>();
	}
};
static_assert(alignof(UCtrl_HUD_KillLogSlot_C) == 0x000008, "Wrong alignment on UCtrl_HUD_KillLogSlot_C");
static_assert(sizeof(UCtrl_HUD_KillLogSlot_C) == 0x000618, "Wrong size on UCtrl_HUD_KillLogSlot_C");
static_assert(offsetof(UCtrl_HUD_KillLogSlot_C, IMG_Blank) == 0x0005E8, "Member 'UCtrl_HUD_KillLogSlot_C::IMG_Blank' has a wrong offset!");
static_assert(offsetof(UCtrl_HUD_KillLogSlot_C, IMG_Blank_1) == 0x0005F0, "Member 'UCtrl_HUD_KillLogSlot_C::IMG_Blank_1' has a wrong offset!");
static_assert(offsetof(UCtrl_HUD_KillLogSlot_C, IMG_Blank_2) == 0x0005F8, "Member 'UCtrl_HUD_KillLogSlot_C::IMG_Blank_2' has a wrong offset!");
static_assert(offsetof(UCtrl_HUD_KillLogSlot_C, IMG_Blank_3) == 0x000600, "Member 'UCtrl_HUD_KillLogSlot_C::IMG_Blank_3' has a wrong offset!");
static_assert(offsetof(UCtrl_HUD_KillLogSlot_C, IMG_Blank_4) == 0x000608, "Member 'UCtrl_HUD_KillLogSlot_C::IMG_Blank_4' has a wrong offset!");
static_assert(offsetof(UCtrl_HUD_KillLogSlot_C, MainCanvasPanel) == 0x000610, "Member 'UCtrl_HUD_KillLogSlot_C::MainCanvasPanel' has a wrong offset!");

}

