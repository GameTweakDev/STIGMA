#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Page_PassiveSetting

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "MediaUtils_structs.hpp"


namespace SDK::Params
{

// Function Page_PassiveSetting.Page_PassiveSetting_C.UpdateSkillPoint
// 0x0060 (0x0060 - 0x0000)
struct Page_PassiveSetting_C_UpdateSkillPoint final
{
public:
	int32                                         Skill_point;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Coeffi;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Digits;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360C[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0038(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_UpdateSkillPoint) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_UpdateSkillPoint");
static_assert(sizeof(Page_PassiveSetting_C_UpdateSkillPoint) == 0x000060, "Wrong size on Page_PassiveSetting_C_UpdateSkillPoint");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, Skill_point) == 0x000000, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::Skill_point' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, Coeffi) == 0x000004, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::Coeffi' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, Digits) == 0x000008, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::Digits' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, Temp_bool_Variable) == 0x00000C, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, Temp_int_Variable) == 0x000010, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000038, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Multiply_IntInt_ReturnValue) == 0x000054, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Divide_IntInt_ReturnValue) == 0x000058, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_UpdateSkillPoint, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005C, "Member 'Page_PassiveSetting_C_UpdateSkillPoint::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.Tick
// 0x003C (0x003C - 0x0000)
struct Page_PassiveSetting_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_Tick) == 0x000004, "Wrong alignment on Page_PassiveSetting_C_Tick");
static_assert(sizeof(Page_PassiveSetting_C_Tick) == 0x00003C, "Wrong size on Page_PassiveSetting_C_Tick");
static_assert(offsetof(Page_PassiveSetting_C_Tick, MyGeometry) == 0x000000, "Member 'Page_PassiveSetting_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_Tick, InDeltaTime) == 0x000038, "Member 'Page_PassiveSetting_C_Tick::InDeltaTime' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.SetTotalPassiveSkillPoint
// 0x0004 (0x0004 - 0x0000)
struct Page_PassiveSetting_C_SetTotalPassiveSkillPoint final
{
public:
	int32                                         _point;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_SetTotalPassiveSkillPoint) == 0x000004, "Wrong alignment on Page_PassiveSetting_C_SetTotalPassiveSkillPoint");
static_assert(sizeof(Page_PassiveSetting_C_SetTotalPassiveSkillPoint) == 0x000004, "Wrong size on Page_PassiveSetting_C_SetTotalPassiveSkillPoint");
static_assert(offsetof(Page_PassiveSetting_C_SetTotalPassiveSkillPoint, _point) == 0x000000, "Member 'Page_PassiveSetting_C_SetTotalPassiveSkillPoint::_point' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.SetCurrentPassiveSkillPoint
// 0x0004 (0x0004 - 0x0000)
struct Page_PassiveSetting_C_SetCurrentPassiveSkillPoint final
{
public:
	int32                                         _point;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_SetCurrentPassiveSkillPoint) == 0x000004, "Wrong alignment on Page_PassiveSetting_C_SetCurrentPassiveSkillPoint");
static_assert(sizeof(Page_PassiveSetting_C_SetCurrentPassiveSkillPoint) == 0x000004, "Wrong size on Page_PassiveSetting_C_SetCurrentPassiveSkillPoint");
static_assert(offsetof(Page_PassiveSetting_C_SetCurrentPassiveSkillPoint, _point) == 0x000000, "Member 'Page_PassiveSetting_C_SetCurrentPassiveSkillPoint::_point' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Page_PassiveSetting_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_PreConstruct) == 0x000001, "Wrong alignment on Page_PassiveSetting_C_PreConstruct");
static_assert(sizeof(Page_PassiveSetting_C_PreConstruct) == 0x000001, "Wrong size on Page_PassiveSetting_C_PreConstruct");
static_assert(offsetof(Page_PassiveSetting_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Page_PassiveSetting_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.PlayPreview
// 0x0200 (0x0200 - 0x0000)
struct Page_PassiveSetting_C_PlayPreview final
{
public:
	struct FPassiveSkillID                        _passive_id;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	EMediaPlayerOptionBooleanOverride             Setting;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TSoftObjectPtr<class UFileMediaSource>        Media_source;                                      // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ECharaAction                                  Action_slot;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_360F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPassiveSkillEntry                     CallFunc_GetPassiveSkillDefineByID_ReturnValue;    // 0x0048(0x0198)(ConstParm)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3610[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UFileMediaSource*                       K2Node_DynamicCast_As_________;                    // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenSource_ReturnValue;                   // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_PlayPreview) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_PlayPreview");
static_assert(sizeof(Page_PassiveSetting_C_PlayPreview) == 0x000200, "Wrong size on Page_PassiveSetting_C_PlayPreview");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, _passive_id) == 0x000000, "Member 'Page_PassiveSetting_C_PlayPreview::_passive_id' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, Setting) == 0x000010, "Member 'Page_PassiveSetting_C_PlayPreview::Setting' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, Media_source) == 0x000018, "Member 'Page_PassiveSetting_C_PlayPreview::Media_source' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, Action_slot) == 0x000040, "Member 'Page_PassiveSetting_C_PlayPreview::Action_slot' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, CallFunc_GetPassiveSkillDefineByID_ReturnValue) == 0x000048, "Member 'Page_PassiveSetting_C_PlayPreview::CallFunc_GetPassiveSkillDefineByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001E0, "Member 'Page_PassiveSetting_C_PlayPreview::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001E8, "Member 'Page_PassiveSetting_C_PlayPreview::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, K2Node_DynamicCast_As_________) == 0x0001F0, "Member 'Page_PassiveSetting_C_PlayPreview::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'Page_PassiveSetting_C_PlayPreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_PlayPreview, CallFunc_OpenSource_ReturnValue) == 0x0001F9, "Member 'Page_PassiveSetting_C_PlayPreview::CallFunc_OpenSource_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.OnSelectSlot
// 0x0010 (0x0010 - 0x0000)
struct Page_PassiveSetting_C_OnSelectSlot final
{
public:
	struct FPassiveSkillID                        _skill_id;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_OnSelectSlot) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_OnSelectSlot");
static_assert(sizeof(Page_PassiveSetting_C_OnSelectSlot) == 0x000010, "Wrong size on Page_PassiveSetting_C_OnSelectSlot");
static_assert(offsetof(Page_PassiveSetting_C_OnSelectSlot, _skill_id) == 0x000000, "Member 'Page_PassiveSetting_C_OnSelectSlot::_skill_id' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.OnClosePage
// 0x0040 (0x0040 - 0x0000)
struct Page_PassiveSetting_C_OnClosePage final
{
public:
	ELobbyPage                                    _next_page;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3611[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3612[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_OnClosePage) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_OnClosePage");
static_assert(sizeof(Page_PassiveSetting_C_OnClosePage) == 0x000040, "Wrong size on Page_PassiveSetting_C_OnClosePage");
static_assert(offsetof(Page_PassiveSetting_C_OnClosePage, _next_page) == 0x000000, "Member 'Page_PassiveSetting_C_OnClosePage::_next_page' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClosePage, ReturnValue) == 0x000001, "Member 'Page_PassiveSetting_C_OnClosePage::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClosePage, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'Page_PassiveSetting_C_OnClosePage::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClosePage, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'Page_PassiveSetting_C_OnClosePage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClosePage, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'Page_PassiveSetting_C_OnClosePage::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClosePage, CallFunc_AddToastMessage_ReturnValue) == 0x000038, "Member 'Page_PassiveSetting_C_OnClosePage::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.OnClick_Preview
// 0x0230 (0x0230 - 0x0000)
struct Page_PassiveSetting_C_OnClick_Preview final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3613[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Pause_ReturnValue;                        // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_OnClick_Preview) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_OnClick_Preview");
static_assert(sizeof(Page_PassiveSetting_C_OnClick_Preview) == 0x000230, "Wrong size on Page_PassiveSetting_C_OnClick_Preview");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, MyGeometry) == 0x000000, "Member 'Page_PassiveSetting_C_OnClick_Preview::MyGeometry' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, MouseEvent) == 0x000038, "Member 'Page_PassiveSetting_C_OnClick_Preview::MouseEvent' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, ReturnValue) == 0x0000B0, "Member 'Page_PassiveSetting_C_OnClick_Preview::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, CallFunc_Not_PreBool_ReturnValue) == 0x000168, "Member 'Page_PassiveSetting_C_OnClick_Preview::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'Page_PassiveSetting_C_OnClick_Preview::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, CallFunc_Play_ReturnValue) == 0x000228, "Member 'Page_PassiveSetting_C_OnClick_Preview::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, CallFunc_Not_PreBool_ReturnValue_1) == 0x000229, "Member 'Page_PassiveSetting_C_OnClick_Preview::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_OnClick_Preview, CallFunc_Pause_ReturnValue) == 0x00022A, "Member 'Page_PassiveSetting_C_OnClick_Preview::CallFunc_Pause_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.InitPreviewPlayer
// 0x0010 (0x0010 - 0x0000)
struct Page_PassiveSetting_C_InitPreviewPlayer final
{
public:
	class UMaterialInstanceDynamic*               Mtl;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_InitPreviewPlayer) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_InitPreviewPlayer");
static_assert(sizeof(Page_PassiveSetting_C_InitPreviewPlayer) == 0x000010, "Wrong size on Page_PassiveSetting_C_InitPreviewPlayer");
static_assert(offsetof(Page_PassiveSetting_C_InitPreviewPlayer, Mtl) == 0x000000, "Member 'Page_PassiveSetting_C_InitPreviewPlayer::Mtl' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_InitPreviewPlayer, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'Page_PassiveSetting_C_InitPreviewPlayer::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.GetToolTip_PassiveSkillPoint
// 0x0020 (0x0020 - 0x0000)
struct Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_ItemID_Default_C*           K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint");
static_assert(sizeof(Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint) == 0x000020, "Wrong size on Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint");
static_assert(offsetof(Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint, ReturnValue) == 0x000000, "Member 'Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000008, "Member 'Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint, K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default) == 0x000010, "Member 'Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint::K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Page_PassiveSetting_C_GetToolTip_PassiveSkillPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.GetConfirmBtnEnabled
// 0x0002 (0x0002 - 0x0000)
struct Page_PassiveSetting_C_GetConfirmBtnEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_GetConfirmBtnEnabled) == 0x000001, "Wrong alignment on Page_PassiveSetting_C_GetConfirmBtnEnabled");
static_assert(sizeof(Page_PassiveSetting_C_GetConfirmBtnEnabled) == 0x000002, "Wrong size on Page_PassiveSetting_C_GetConfirmBtnEnabled");
static_assert(offsetof(Page_PassiveSetting_C_GetConfirmBtnEnabled, ReturnValue) == 0x000000, "Member 'Page_PassiveSetting_C_GetConfirmBtnEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_GetConfirmBtnEnabled, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'Page_PassiveSetting_C_GetConfirmBtnEnabled::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.ExecuteUbergraph_Page_PassiveSetting
// 0x0100 (0x0100 - 0x0000)
struct Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3614[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3615[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3616[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         K2Node_Event__point_1;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__point;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3617[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	struct FPassiveSkillID                        K2Node_Event__skill_id;                            // 0x00C8(0x0010)(ConstParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting");
static_assert(sizeof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting) == 0x000100, "Wrong size on Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, EntryPoint) == 0x000000, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::EntryPoint' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_Event_MyGeometry) == 0x000014, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_Event_IsDesignTime) == 0x000050, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_Event__point_1) == 0x000054, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_Event__point_1' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_Event__point) == 0x000058, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_Event__point' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_Event__skill_id) == 0x0000C8, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_Event__skill_id' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, K2Node_MakeArray_Array) == 0x0000D8, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'Page_PassiveSetting_C_ExecuteUbergraph_Page_PassiveSetting::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.DrivePreviewPlayerBtn
// 0x0001 (0x0001 - 0x0000)
struct Page_PassiveSetting_C_DrivePreviewPlayerBtn final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_DrivePreviewPlayerBtn) == 0x000001, "Wrong alignment on Page_PassiveSetting_C_DrivePreviewPlayerBtn");
static_assert(sizeof(Page_PassiveSetting_C_DrivePreviewPlayerBtn) == 0x000001, "Wrong size on Page_PassiveSetting_C_DrivePreviewPlayerBtn");
static_assert(offsetof(Page_PassiveSetting_C_DrivePreviewPlayerBtn, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'Page_PassiveSetting_C_DrivePreviewPlayerBtn::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function Page_PassiveSetting.Page_PassiveSetting_C.BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'Page_PassiveSetting_C_BndEvt__Page_PassiveSetting_Btn_Apply_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

}

