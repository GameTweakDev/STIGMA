#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_CompetitionTab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.UpdateTab
// 0x0058 (0x0058 - 0x0000)
struct Ctrl_CompetitionTab_C_UpdateTab final
{
public:
	class UCompetitionInfoManager*                CallFunc_GetCompetitionInfoManager_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4179[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UCompetitionInfo*                       CallFunc_GetCompetitionPlayerInfo_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UCompetitionPlayer*                     CallFunc_GetMyPlayer_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417B[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_GetEndAt_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECompetitionState                             CallFunc_GetPlayerState_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class UCompetitionPlayer*>             CallFunc_GetPlayers_ReturnValue;                   // 0x0040(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_UpdateTab) == 0x000008, "Wrong alignment on Ctrl_CompetitionTab_C_UpdateTab");
static_assert(sizeof(Ctrl_CompetitionTab_C_UpdateTab) == 0x000058, "Wrong size on Ctrl_CompetitionTab_C_UpdateTab");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_GetCompetitionInfoManager_ReturnValue) == 0x000000, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_GetCompetitionInfoManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_IsEnable_ReturnValue) == 0x000009, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_GetCompetitionPlayerInfo_ReturnValue) == 0x000010, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_GetCompetitionPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_GetMyPlayer_ReturnValue) == 0x000020, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_GetMyPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_IsValid_ReturnValue_3) == 0x000029, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_GetEndAt_ReturnValue) == 0x000030, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_GetEndAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_GetPlayerState_ReturnValue) == 0x000038, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_GetPlayers_ReturnValue) == 0x000040, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_GetPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'Ctrl_CompetitionTab_C_UpdateTab::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateTab, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'Ctrl_CompetitionTab_C_UpdateTab::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.UpdateSelected
// 0x0002 (0x0002 - 0x0000)
struct Ctrl_CompetitionTab_C_UpdateSelected final
{
public:
	bool                                          Param_IsSelected;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_UpdateSelected) == 0x000001, "Wrong alignment on Ctrl_CompetitionTab_C_UpdateSelected");
static_assert(sizeof(Ctrl_CompetitionTab_C_UpdateSelected) == 0x000002, "Wrong size on Ctrl_CompetitionTab_C_UpdateSelected");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateSelected, Param_IsSelected) == 0x000000, "Member 'Ctrl_CompetitionTab_C_UpdateSelected::Param_IsSelected' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_UpdateSelected, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000001, "Member 'Ctrl_CompetitionTab_C_UpdateSelected::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.SetSelectedID
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_CompetitionTab_C_SetSelectedID final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_SetSelectedID) == 0x000004, "Wrong alignment on Ctrl_CompetitionTab_C_SetSelectedID");
static_assert(sizeof(Ctrl_CompetitionTab_C_SetSelectedID) == 0x000008, "Wrong size on Ctrl_CompetitionTab_C_SetSelectedID");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetSelectedID, _id) == 0x000000, "Member 'Ctrl_CompetitionTab_C_SetSelectedID::_id' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.SetRemainTimer
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_CompetitionTab_C_SetRemainTimer final
{
public:
	struct FDateTime                              EndAt;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_SetRemainTimer) == 0x000008, "Wrong alignment on Ctrl_CompetitionTab_C_SetRemainTimer");
static_assert(sizeof(Ctrl_CompetitionTab_C_SetRemainTimer) == 0x000008, "Wrong size on Ctrl_CompetitionTab_C_SetRemainTimer");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetRemainTimer, EndAt) == 0x000000, "Member 'Ctrl_CompetitionTab_C_SetRemainTimer::EndAt' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.SetMemberCnt
// 0x0100 (0x0100 - 0x0000)
struct Ctrl_CompetitionTab_C_SetMemberCnt final
{
public:
	int32                                         _memberCnt;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00E8(0x0018)()
};
static_assert(alignof(Ctrl_CompetitionTab_C_SetMemberCnt) == 0x000008, "Wrong alignment on Ctrl_CompetitionTab_C_SetMemberCnt");
static_assert(sizeof(Ctrl_CompetitionTab_C_SetMemberCnt) == 0x000100, "Wrong size on Ctrl_CompetitionTab_C_SetMemberCnt");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, _memberCnt) == 0x000000, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::_memberCnt' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, K2Node_MakeArray_Array) == 0x000060, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, CallFunc_Format_ReturnValue) == 0x000070, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_SetMemberCnt, CallFunc_Format_ReturnValue_1) == 0x0000E8, "Member 'Ctrl_CompetitionTab_C_SetMemberCnt::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.OnSynchronizeProperties
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_CompetitionTab_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_OnSynchronizeProperties) == 0x000008, "Wrong alignment on Ctrl_CompetitionTab_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_CompetitionTab_C_OnSynchronizeProperties) == 0x000020, "Wrong size on Ctrl_CompetitionTab_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_CompetitionTab_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_CompetitionTab_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_OnSynchronizeProperties, CallFunc_BreakVector2D_X) == 0x000008, "Member 'Ctrl_CompetitionTab_C_OnSynchronizeProperties::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_OnSynchronizeProperties, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'Ctrl_CompetitionTab_C_OnSynchronizeProperties::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_OnSynchronizeProperties, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000018, "Member 'Ctrl_CompetitionTab_C_OnSynchronizeProperties::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ctrl_CompetitionTab_C_OnSynchronizeProperties, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00001C, "Member 'Ctrl_CompetitionTab_C_OnSynchronizeProperties::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_CompetitionTab_C_OnSelected__DelegateSignature final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_OnSelected__DelegateSignature) == 0x000004, "Wrong alignment on Ctrl_CompetitionTab_C_OnSelected__DelegateSignature");
static_assert(sizeof(Ctrl_CompetitionTab_C_OnSelected__DelegateSignature) == 0x000008, "Wrong size on Ctrl_CompetitionTab_C_OnSelected__DelegateSignature");
static_assert(offsetof(Ctrl_CompetitionTab_C_OnSelected__DelegateSignature, _id) == 0x000000, "Member 'Ctrl_CompetitionTab_C_OnSelected__DelegateSignature::_id' has a wrong offset!");

// Function Ctrl_CompetitionTab.Ctrl_CompetitionTab_C.ExecuteUbergraph_Ctrl_CompetitionTab
// 0x0004 (0x0004 - 0x0000)
struct Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab) == 0x000004, "Wrong alignment on Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab");
static_assert(sizeof(Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab) == 0x000004, "Wrong size on Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab");
static_assert(offsetof(Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab, EntryPoint) == 0x000000, "Member 'Ctrl_CompetitionTab_C_ExecuteUbergraph_Ctrl_CompetitionTab::EntryPoint' has a wrong offset!");

}

