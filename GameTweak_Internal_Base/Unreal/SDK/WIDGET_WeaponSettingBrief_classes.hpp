#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: WIDGET_WeaponSettingBrief

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"
#include "Stigma_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_WeaponSettingBrief.WIDGET_WeaponSettingBrief_C
// 0x0090 (0x0580 - 0x04F0)
class UWIDGET_WeaponSettingBrief_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                BTN_Select;                                        // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_CPLack;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ExpiredGun;                                    // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Gun_Icon;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PartsCharm;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PartsFront;                                        // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PartsSticker;                                      // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PartsTop;                                          // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PartsUnder;                                        // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_EquipGunPartsCnt;                              // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_GunName;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_PresetName;                                    // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPopup_SelectWeapon_C*                  Popup_select_weapon;                               // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnOpenWeaponPopup;                                 // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCloseWeaponPopup;                                // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WIDGET_WeaponSettingBrief_Btn_Select_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void CalculateEquippedParts(const struct FGunPreset& _gun_preset, int32* EquipableCnt, int32* EquippedCnt);
	void ExecuteUbergraph_WIDGET_WeaponSettingBrief(int32 EntryPoint);
	void GetGunPartsSlots(int32 Idx, class UImage** IMG_PartsSlot, TArray<EGunPartsSlot>* Enum_PartsSlots);
	ESlateVisibility GetVisibility_Icon_CPLack();
	ESlateVisibility GetVisibility_Icon_ExpiredGun();
	void OnClosePopup();
	void OnCloseWeaponPopup__DelegateSignature();
	void OnEVENT_Select_End(bool _selected);
	class UWidget* OnGetToolTipWidget();
	void OnOpenWeaponPopup__DelegateSignature();
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_WeaponSettingBrief_C">();
	}
	static class UWIDGET_WeaponSettingBrief_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_WeaponSettingBrief_C>();
	}
};
static_assert(alignof(UWIDGET_WeaponSettingBrief_C) == 0x000008, "Wrong alignment on UWIDGET_WeaponSettingBrief_C");
static_assert(sizeof(UWIDGET_WeaponSettingBrief_C) == 0x000580, "Wrong size on UWIDGET_WeaponSettingBrief_C");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, UberGraphFrame) == 0x0004F0, "Member 'UWIDGET_WeaponSettingBrief_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, BTN_Select) == 0x0004F8, "Member 'UWIDGET_WeaponSettingBrief_C::BTN_Select' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, Img_CPLack) == 0x000500, "Member 'UWIDGET_WeaponSettingBrief_C::Img_CPLack' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, Img_ExpiredGun) == 0x000508, "Member 'UWIDGET_WeaponSettingBrief_C::Img_ExpiredGun' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, IMG_Gun_Icon) == 0x000510, "Member 'UWIDGET_WeaponSettingBrief_C::IMG_Gun_Icon' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, PartsCharm) == 0x000518, "Member 'UWIDGET_WeaponSettingBrief_C::PartsCharm' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, PartsFront) == 0x000520, "Member 'UWIDGET_WeaponSettingBrief_C::PartsFront' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, PartsSticker) == 0x000528, "Member 'UWIDGET_WeaponSettingBrief_C::PartsSticker' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, PartsTop) == 0x000530, "Member 'UWIDGET_WeaponSettingBrief_C::PartsTop' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, PartsUnder) == 0x000538, "Member 'UWIDGET_WeaponSettingBrief_C::PartsUnder' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, TXT_EquipGunPartsCnt) == 0x000540, "Member 'UWIDGET_WeaponSettingBrief_C::TXT_EquipGunPartsCnt' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, TXT_GunName) == 0x000548, "Member 'UWIDGET_WeaponSettingBrief_C::TXT_GunName' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, Txt_PresetName) == 0x000550, "Member 'UWIDGET_WeaponSettingBrief_C::Txt_PresetName' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, Popup_select_weapon) == 0x000558, "Member 'UWIDGET_WeaponSettingBrief_C::Popup_select_weapon' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, OnOpenWeaponPopup) == 0x000560, "Member 'UWIDGET_WeaponSettingBrief_C::OnOpenWeaponPopup' has a wrong offset!");
static_assert(offsetof(UWIDGET_WeaponSettingBrief_C, OnCloseWeaponPopup) == 0x000570, "Member 'UWIDGET_WeaponSettingBrief_C::OnCloseWeaponPopup' has a wrong offset!");

}

