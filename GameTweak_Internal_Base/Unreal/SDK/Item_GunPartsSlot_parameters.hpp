#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Item_GunPartsSlot

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Item_GunPartsSlot.Item_GunPartsSlot_C.OnGetTooltip
// 0x0080 (0x0080 - 0x0000)
struct Item_GunPartsSlot_C_OnGetTooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETooltipType                                  Tooltip_type;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                Gun_parts_id;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 CallFunc_GetCategory_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C9[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_GetExpireAt_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETooltipType                                  CallFunc_GetTooltipTypeFromItemCategory_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CB[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip_GunPartsBase_C*             K2Node_DynamicCast_AsUI_Tooltip_Gun_Parts_Base;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10CC[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetGunPartsID_ReturnValue;                // 0x0058(0x0010)(HasGetValueTypeHash)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_GunPartsDesc_C*             K2Node_DynamicCast_AsUI_Tooltip_Gun_Parts_Desc;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_GunPartsSlot_C_OnGetTooltip) == 0x000008, "Wrong alignment on Item_GunPartsSlot_C_OnGetTooltip");
static_assert(sizeof(Item_GunPartsSlot_C_OnGetTooltip) == 0x000080, "Wrong size on Item_GunPartsSlot_C_OnGetTooltip");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, ReturnValue) == 0x000000, "Member 'Item_GunPartsSlot_C_OnGetTooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, Tooltip_type) == 0x000008, "Member 'Item_GunPartsSlot_C_OnGetTooltip::Tooltip_type' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, Gun_parts_id) == 0x000010, "Member 'Item_GunPartsSlot_C_OnGetTooltip::Gun_parts_id' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_GetGunType_ReturnValue) == 0x000020, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_GetCategory_ReturnValue) == 0x000021, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_GetExpireAt_ReturnValue) == 0x000028, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_GetExpireAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_GetTooltipTypeFromItemCategory_ReturnValue) == 0x000030, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_GetTooltipTypeFromItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000038, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_IsValidItemID_ReturnValue) == 0x000040, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, K2Node_DynamicCast_AsUI_Tooltip_Gun_Parts_Base) == 0x000048, "Member 'Item_GunPartsSlot_C_OnGetTooltip::K2Node_DynamicCast_AsUI_Tooltip_Gun_Parts_Base' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Item_GunPartsSlot_C_OnGetTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_GetGunPartsID_ReturnValue) == 0x000058, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_GetGunPartsID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, CallFunc_CreateTooltipWidget_ReturnValue_1) == 0x000068, "Member 'Item_GunPartsSlot_C_OnGetTooltip::CallFunc_CreateTooltipWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, K2Node_DynamicCast_AsUI_Tooltip_Gun_Parts_Desc) == 0x000070, "Member 'Item_GunPartsSlot_C_OnGetTooltip::K2Node_DynamicCast_AsUI_Tooltip_Gun_Parts_Desc' has a wrong offset!");
static_assert(offsetof(Item_GunPartsSlot_C_OnGetTooltip, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'Item_GunPartsSlot_C_OnGetTooltip::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Item_GunPartsSlot.Item_GunPartsSlot_C.ExecuteUbergraph_Item_GunPartsSlot
// 0x0004 (0x0004 - 0x0000)
struct Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot) == 0x000004, "Wrong alignment on Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot");
static_assert(sizeof(Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot) == 0x000004, "Wrong size on Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot");
static_assert(offsetof(Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot, EntryPoint) == 0x000000, "Member 'Item_GunPartsSlot_C_ExecuteUbergraph_Item_GunPartsSlot::EntryPoint' has a wrong offset!");

}

