#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HUD_BoosterAuto

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_HUD_BoosterAuto.Ctrl_HUD_BoosterAuto_C.OnSynchronizeProperties
// 0x0028 (0x0028 - 0x0000)
struct Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserOption*                            CallFunc_GetUserOptionSubSystem_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCharacterType_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsedAutoBoosters_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties) == 0x000008, "Wrong alignment on Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties) == 0x000028, "Wrong size on Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, CallFunc_GetUserOptionSubSystem_ReturnValue) == 0x000010, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::CallFunc_GetUserOptionSubSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000018, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, CallFunc_GetCharacterType_ReturnValue) == 0x000021, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::CallFunc_GetCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties, CallFunc_IsUsedAutoBoosters_ReturnValue) == 0x000022, "Member 'Ctrl_HUD_BoosterAuto_C_OnSynchronizeProperties::CallFunc_IsUsedAutoBoosters_ReturnValue' has a wrong offset!");

// Function Ctrl_HUD_BoosterAuto.Ctrl_HUD_BoosterAuto_C.SetUseAutoBooster
// 0x002C (0x002C - 0x0000)
struct Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster final
{
public:
	bool                                          Is_use_auto_booster;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
};
static_assert(alignof(Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster) == 0x000004, "Wrong alignment on Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster");
static_assert(sizeof(Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster) == 0x00002C, "Wrong size on Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster, Is_use_auto_booster) == 0x000000, "Member 'Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster::Is_use_auto_booster' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'Ctrl_HUD_BoosterAuto_C_SetUseAutoBooster::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

}

