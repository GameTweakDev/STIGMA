#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Nano_Post_AnimBP

#include "Basic.hpp"

#include "KawaiiPhysics_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Nano_Post_AnimBP.Nano_Post_AnimBP_C
// 0x3180 (0x34D0 - 0x0350)
class UNano_Post_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_1C84[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	uint8                                         Pad_1C85[0x8];                                     // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_5;                     // 0x0370(0x0790)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_4;                     // 0x0B00(0x0790)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1290(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_3;                     // 0x12B0(0x0790)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1A40(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x1A60(0x0790)()
	struct FAnimNode_SpringBone                   AnimGraphNode_SpringBone_1;                        // 0x21F0(0x0168)()
	struct FAnimNode_SpringBone                   AnimGraphNode_SpringBone;                          // 0x2358(0x0168)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x24C0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2578(0x0020)()
	uint8                                         Pad_1C86[0x8];                                     // 0x2598(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x25A0(0x0790)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x2D30(0x0790)()
	double                                        DynamicAlpha;                                      // 0x34C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Nano_Post_AnimBP(int32 EntryPoint);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Nano_Post_AnimBP_C">();
	}
	static class UNano_Post_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNano_Post_AnimBP_C>();
	}
};
static_assert(alignof(UNano_Post_AnimBP_C) == 0x000010, "Wrong alignment on UNano_Post_AnimBP_C");
static_assert(sizeof(UNano_Post_AnimBP_C) == 0x0034D0, "Wrong size on UNano_Post_AnimBP_C");
static_assert(offsetof(UNano_Post_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UNano_Post_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UNano_Post_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UNano_Post_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_5) == 0x000370, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_5' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_4) == 0x000B00, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_4' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x001290, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_3) == 0x0012B0, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_3' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001A40, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_2) == 0x001A60, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_SpringBone_1) == 0x0021F0, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_SpringBone_1' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_SpringBone) == 0x002358, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_SpringBone' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x0024C0, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_Root) == 0x002578, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_1) == 0x0025A0, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics) == 0x002D30, "Member 'UNano_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UNano_Post_AnimBP_C, DynamicAlpha) == 0x0034C0, "Member 'UNano_Post_AnimBP_C::DynamicAlpha' has a wrong offset!");

}

