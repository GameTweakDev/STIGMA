#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_GN_BattleStart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_GN_BattleStart.UI_GN_BattleStart_C.ExecuteUbergraph_UI_GN_BattleStart
// 0x0004 (0x0004 - 0x0000)
struct UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart) == 0x000004, "Wrong alignment on UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart");
static_assert(sizeof(UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart) == 0x000004, "Wrong size on UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart");
static_assert(offsetof(UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart, EntryPoint) == 0x000000, "Member 'UI_GN_BattleStart_C_ExecuteUbergraph_UI_GN_BattleStart::EntryPoint' has a wrong offset!");

// Function UI_GN_BattleStart.UI_GN_BattleStart_C.InitWidget
// 0x0020 (0x0020 - 0x0000)
struct UI_GN_BattleStart_C_InitWidget final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         _duration;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     GameModeType;                                      // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     CallFunc_GetCurrentGameModeType__out_game_mode_type; // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentGameModeType_ReturnValue;       // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GN_BattleStart_C_InitWidget) == 0x000008, "Wrong alignment on UI_GN_BattleStart_C_InitWidget");
static_assert(sizeof(UI_GN_BattleStart_C_InitWidget) == 0x000020, "Wrong size on UI_GN_BattleStart_C_InitWidget");
static_assert(offsetof(UI_GN_BattleStart_C_InitWidget, _text) == 0x000000, "Member 'UI_GN_BattleStart_C_InitWidget::_text' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_InitWidget, _duration) == 0x000018, "Member 'UI_GN_BattleStart_C_InitWidget::_duration' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_InitWidget, GameModeType) == 0x00001C, "Member 'UI_GN_BattleStart_C_InitWidget::GameModeType' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_InitWidget, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'UI_GN_BattleStart_C_InitWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_InitWidget, CallFunc_GetCurrentGameModeType__out_game_mode_type) == 0x00001E, "Member 'UI_GN_BattleStart_C_InitWidget::CallFunc_GetCurrentGameModeType__out_game_mode_type' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_InitWidget, CallFunc_GetCurrentGameModeType_ReturnValue) == 0x00001F, "Member 'UI_GN_BattleStart_C_InitWidget::CallFunc_GetCurrentGameModeType_ReturnValue' has a wrong offset!");

// Function UI_GN_BattleStart.UI_GN_BattleStart_C.SetModeImages
// 0x0100 (0x0100 - 0x0000)
struct UI_GN_BattleStart_C_SetModeImages final
{
public:
	EGameMode                                     GameModeType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361C[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateBrush                            CallFunc_Map_Find_Value;                           // 0x0010(0x00D0)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361D[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLinearColor                           CallFunc_Map_Find_Value_1;                         // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GN_BattleStart_C_SetModeImages) == 0x000010, "Wrong alignment on UI_GN_BattleStart_C_SetModeImages");
static_assert(sizeof(UI_GN_BattleStart_C_SetModeImages) == 0x000100, "Wrong size on UI_GN_BattleStart_C_SetModeImages");
static_assert(offsetof(UI_GN_BattleStart_C_SetModeImages, GameModeType) == 0x000000, "Member 'UI_GN_BattleStart_C_SetModeImages::GameModeType' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetModeImages, CallFunc_Map_Find_Value) == 0x000010, "Member 'UI_GN_BattleStart_C_SetModeImages::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetModeImages, CallFunc_Map_Find_ReturnValue) == 0x0000E0, "Member 'UI_GN_BattleStart_C_SetModeImages::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetModeImages, CallFunc_Map_Find_Value_1) == 0x0000E4, "Member 'UI_GN_BattleStart_C_SetModeImages::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetModeImages, CallFunc_Map_Find_ReturnValue_1) == 0x0000F4, "Member 'UI_GN_BattleStart_C_SetModeImages::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function UI_GN_BattleStart.UI_GN_BattleStart_C.SetTDMText
// 0x00C0 (0x00C0 - 0x0000)
struct UI_GN_BattleStart_C_SetTDMText final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDM_GameState*                         K2Node_DynamicCast_AsTDM_Game_State;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTDMRule                               CallFunc_GetTDMRule_ReturnValue;                   // 0x0018(0x0028)(ConstParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
};
static_assert(alignof(UI_GN_BattleStart_C_SetTDMText) == 0x000008, "Wrong alignment on UI_GN_BattleStart_C_SetTDMText");
static_assert(sizeof(UI_GN_BattleStart_C_SetTDMText) == 0x0000C0, "Wrong size on UI_GN_BattleStart_C_SetTDMText");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'UI_GN_BattleStart_C_SetTDMText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, K2Node_DynamicCast_AsTDM_Game_State) == 0x000008, "Member 'UI_GN_BattleStart_C_SetTDMText::K2Node_DynamicCast_AsTDM_Game_State' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UI_GN_BattleStart_C_SetTDMText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, CallFunc_GetTDMRule_ReturnValue) == 0x000018, "Member 'UI_GN_BattleStart_C_SetTDMText::CallFunc_GetTDMRule_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'UI_GN_BattleStart_C_SetTDMText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'UI_GN_BattleStart_C_SetTDMText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, K2Node_MakeArray_Array) == 0x000098, "Member 'UI_GN_BattleStart_C_SetTDMText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_GN_BattleStart_C_SetTDMText, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'UI_GN_BattleStart_C_SetTDMText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

