#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: HUD_ChallengeMode

#include "Basic.hpp"

#include "HUD_ChallengeMode_classes.hpp"
#include "HUD_ChallengeMode_parameters.hpp"


namespace SDK
{

// Function HUD_ChallengeMode.HUD_ChallengeMode_C.ClearPreRoundPopups
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_ChallengeMode_C::ClearPreRoundPopups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "ClearPreRoundPopups");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.DriveChallenge
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_ChallengeMode_C::DriveChallenge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "DriveChallenge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.ExecuteUbergraph_HUD_ChallengeMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_ChallengeMode_C::ExecuteUbergraph_HUD_ChallengeMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "ExecuteUbergraph_HUD_ChallengeMode");

	Params::HUD_ChallengeMode_C_ExecuteUbergraph_HUD_ChallengeMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.GetText_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UHUD_ChallengeMode_C::GetText_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "GetText_0");

	Params::HUD_ChallengeMode_C_GetText_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.OnReset
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_ChallengeMode_C::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.OpenChallengeMissionPopup
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_ChallengeMode_C::OpenChallengeMissionPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "OpenChallengeMissionPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.ResetWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewRound                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_ChallengeMode_C::ResetWidget(int32 NewRound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "ResetWidget");

	Params::HUD_ChallengeMode_C_ResetWidget Parms{};

	Parms.NewRound = NewRound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.ShowRewardPopup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UHUD_ChallengeMode_C::ShowRewardPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "ShowRewardPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.StartRound
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_ChallengeMode_C::StartRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "StartRound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_ChallengeMode.HUD_ChallengeMode_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_ChallengeMode_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ChallengeMode_C", "Tick");

	Params::HUD_ChallengeMode_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

