#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_TooltipKey

#include "Basic.hpp"

#include "UI_TooltipKey_classes.hpp"
#include "UI_TooltipKey_parameters.hpp"


namespace SDK
{

// Function UI_TooltipKey.UI_TooltipKey_C.ExecuteUbergraph_UI_TooltipKey
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_TooltipKey_C::ExecuteUbergraph_UI_TooltipKey(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKey_C", "ExecuteUbergraph_UI_TooltipKey");

	Params::UI_TooltipKey_C_ExecuteUbergraph_UI_TooltipKey Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TooltipKey.UI_TooltipKey_C.SetInfoText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _info_text                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_TooltipKey_C::SetInfoText(const class FText& _info_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKey_C", "SetInfoText");

	Params::UI_TooltipKey_C_SetInfoText Parms{};

	Parms._info_text = std::move(_info_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_TooltipKey.UI_TooltipKey_C.SetKey
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKey                             _Key                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UUI_TooltipKey_C::SetKey(const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKey_C", "SetKey");

	Params::UI_TooltipKey_C_SetKey Parms{};

	Parms._Key = std::move(_Key);

	UObject::ProcessEvent(Func, &Parms);
}

}

