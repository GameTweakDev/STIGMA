#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Item_Character_ControlPower

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.GetTooltipWidget
// 0x0A18 (0x0A18 - 0x0000)
struct Item_Character_ControlPower_C_GetTooltipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_Character_C*                ToolTip;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0018(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8D[0x7];                                     // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0A00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_Character_C*                K2Node_DynamicCast_AsUI_Tooltip_Character;         // 0x0A08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_GetTooltipWidget) == 0x000008, "Wrong alignment on Item_Character_ControlPower_C_GetTooltipWidget");
static_assert(sizeof(Item_Character_ControlPower_C_GetTooltipWidget) == 0x000A18, "Wrong size on Item_Character_ControlPower_C_GetTooltipWidget");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, ReturnValue) == 0x000000, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, ToolTip) == 0x000008, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::ToolTip' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, CallFunc_GetCharacterDefByType__out_data) == 0x000018, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, CallFunc_GetCharacterDefByType_ReturnValue) == 0x0009F8, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000A00, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, K2Node_DynamicCast_AsUI_Tooltip_Character) == 0x000A08, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::K2Node_DynamicCast_AsUI_Tooltip_Character' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_GetTooltipWidget, K2Node_DynamicCast_bSuccess) == 0x000A10, "Member 'Item_Character_ControlPower_C_GetTooltipWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.ExecuteUbergraph_Item_Character_ControlPower
// 0x0020 (0x0020 - 0x0000)
struct Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULVData_ControlPowerMaster*             K2Node_DynamicCast_AsLVData_Control_Power_Master;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower) == 0x000008, "Wrong alignment on Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower");
static_assert(sizeof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower) == 0x000020, "Wrong size on Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower");
static_assert(offsetof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower, EntryPoint) == 0x000000, "Member 'Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower::EntryPoint' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower, K2Node_Event_ListItemObject) == 0x000008, "Member 'Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower, K2Node_DynamicCast_AsLVData_Control_Power_Master) == 0x000010, "Member 'Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower::K2Node_DynamicCast_AsLVData_Control_Power_Master' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower, K2Node_Event_bIsExpanded) == 0x000019, "Member 'Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower, K2Node_Event_bIsSelected) == 0x00001A, "Member 'Item_Character_ControlPower_C_ExecuteUbergraph_Item_Character_ControlPower::K2Node_Event_bIsSelected' has a wrong offset!");

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct Item_Character_ControlPower_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on Item_Character_ControlPower_C_BP_OnItemSelectionChanged");
static_assert(sizeof(Item_Character_ControlPower_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on Item_Character_ControlPower_C_BP_OnItemSelectionChanged");
static_assert(offsetof(Item_Character_ControlPower_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'Item_Character_ControlPower_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct Item_Character_ControlPower_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on Item_Character_ControlPower_C_BP_OnItemExpansionChanged");
static_assert(sizeof(Item_Character_ControlPower_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on Item_Character_ControlPower_C_BP_OnItemExpansionChanged");
static_assert(offsetof(Item_Character_ControlPower_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'Item_Character_ControlPower_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.UpdateUI
// 0x0040 (0x0040 - 0x0000)
struct Item_Character_ControlPower_C_UpdateUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    CallFunc_GetLocalPlayerContext_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGunPreset                             CallFunc_GetGunPreset_ReturnValue;                 // 0x0010(0x0010)(ConstParm, HasGetValueTypeHash)
	struct FGunPreset                             CallFunc_GetGunPreset_ReturnValue_1;               // 0x0020(0x0010)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsEqualGunPreset_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E90[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_UpdateUI) == 0x000008, "Wrong alignment on Item_Character_ControlPower_C_UpdateUI");
static_assert(sizeof(Item_Character_ControlPower_C_UpdateUI) == 0x000040, "Wrong size on Item_Character_ControlPower_C_UpdateUI");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_Greater_IntInt_ReturnValue) == 0x000002, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_GetLocalPlayerContext_ReturnValue) == 0x000008, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_GetLocalPlayerContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_GetGunPreset_ReturnValue) == 0x000010, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_GetGunPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_GetGunPreset_ReturnValue_1) == 0x000020, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_GetGunPreset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_IsEqualGunPreset_ReturnValue) == 0x000030, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_IsEqualGunPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateUI, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'Item_Character_ControlPower_C_UpdateUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.UpdateChara
// 0x09F8 (0x09F8 - 0x0000)
struct Item_Character_ControlPower_C_UpdateChara final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E91[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0008(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E92[0x7];                                     // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ULVITEM_Character_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x09F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_UpdateChara) == 0x000008, "Wrong alignment on Item_Character_ControlPower_C_UpdateChara");
static_assert(sizeof(Item_Character_ControlPower_C_UpdateChara) == 0x0009F8, "Wrong size on Item_Character_ControlPower_C_UpdateChara");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateChara, _chara_type) == 0x000000, "Member 'Item_Character_ControlPower_C_UpdateChara::_chara_type' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateChara, CallFunc_GetCharacterDefByType__out_data) == 0x000008, "Member 'Item_Character_ControlPower_C_UpdateChara::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateChara, CallFunc_GetCharacterDefByType_ReturnValue) == 0x0009E8, "Member 'Item_Character_ControlPower_C_UpdateChara::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_Character_ControlPower_C_UpdateChara, CallFunc_SpawnObject_ReturnValue) == 0x0009F0, "Member 'Item_Character_ControlPower_C_UpdateChara::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function Item_Character_ControlPower.Item_Character_ControlPower_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct Item_Character_ControlPower_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_Character_ControlPower_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on Item_Character_ControlPower_C_OnListItemObjectSet");
static_assert(sizeof(Item_Character_ControlPower_C_OnListItemObjectSet) == 0x000008, "Wrong size on Item_Character_ControlPower_C_OnListItemObjectSet");
static_assert(offsetof(Item_Character_ControlPower_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'Item_Character_ControlPower_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

}

