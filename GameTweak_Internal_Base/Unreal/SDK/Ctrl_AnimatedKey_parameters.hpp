#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_AnimatedKey

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_AnimatedKey.Ctrl_AnimatedKey_C.ExecuteUbergraph_Ctrl_AnimatedKey
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey) == 0x000008, "Wrong alignment on Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey");
static_assert(sizeof(Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey) == 0x000010, "Wrong size on Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey");
static_assert(offsetof(Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey, EntryPoint) == 0x000000, "Member 'Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Ctrl_AnimatedKey_C_ExecuteUbergraph_Ctrl_AnimatedKey::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function Ctrl_AnimatedKey.Ctrl_AnimatedKey_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_AnimatedKey_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_AnimatedKey_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_AnimatedKey_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_AnimatedKey_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_AnimatedKey_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_AnimatedKey_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_AnimatedKey_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_AnimatedKey.Ctrl_AnimatedKey_C.SetGuide
// 0x0050 (0x0050 - 0x0000)
struct Ctrl_AnimatedKey_C_SetGuide final
{
public:
	struct FLinkedSkillGuide                      _guide;                                            // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Ctrl_AnimatedKey_C_SetGuide) == 0x000008, "Wrong alignment on Ctrl_AnimatedKey_C_SetGuide");
static_assert(sizeof(Ctrl_AnimatedKey_C_SetGuide) == 0x000050, "Wrong size on Ctrl_AnimatedKey_C_SetGuide");
static_assert(offsetof(Ctrl_AnimatedKey_C_SetGuide, _guide) == 0x000000, "Member 'Ctrl_AnimatedKey_C_SetGuide::_guide' has a wrong offset!");

// Function Ctrl_AnimatedKey.Ctrl_AnimatedKey_C.Update
// 0x0003 (0x0003 - 0x0000)
struct Ctrl_AnimatedKey_C_Update final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_AnimatedKey_C_Update) == 0x000001, "Wrong alignment on Ctrl_AnimatedKey_C_Update");
static_assert(sizeof(Ctrl_AnimatedKey_C_Update) == 0x000003, "Wrong size on Ctrl_AnimatedKey_C_Update");
static_assert(offsetof(Ctrl_AnimatedKey_C_Update, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ctrl_AnimatedKey_C_Update::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_AnimatedKey_C_Update, CallFunc_Key_IsValid_ReturnValue) == 0x000001, "Member 'Ctrl_AnimatedKey_C_Update::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_AnimatedKey_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ctrl_AnimatedKey_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

