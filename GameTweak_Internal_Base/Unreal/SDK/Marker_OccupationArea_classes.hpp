#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Marker_OccupationArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Minimap_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Marker_OccupationArea.Marker_OccupationArea_C
// 0x0018 (0x0540 - 0x0528)
class UMarker_OccupationArea_C final : public UMinimapMarker
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0528(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IMG_Color;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_Marker_OccupationArea(int32 EntryPoint);
	bool OnTick(const struct FGeometry& MyGeometry, float _delta);
	void UpdateColor();
	void ValidateMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Marker_OccupationArea_C">();
	}
	static class UMarker_OccupationArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMarker_OccupationArea_C>();
	}
};
static_assert(alignof(UMarker_OccupationArea_C) == 0x000008, "Wrong alignment on UMarker_OccupationArea_C");
static_assert(sizeof(UMarker_OccupationArea_C) == 0x000540, "Wrong size on UMarker_OccupationArea_C");
static_assert(offsetof(UMarker_OccupationArea_C, UberGraphFrame) == 0x000528, "Member 'UMarker_OccupationArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMarker_OccupationArea_C, IMG_Color) == 0x000530, "Member 'UMarker_OccupationArea_C::IMG_Color' has a wrong offset!");
static_assert(offsetof(UMarker_OccupationArea_C, Material) == 0x000538, "Member 'UMarker_OccupationArea_C::Material' has a wrong offset!");

}

