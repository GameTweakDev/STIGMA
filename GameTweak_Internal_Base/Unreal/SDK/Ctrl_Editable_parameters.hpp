#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Editable

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_Editable.Ctrl_Editable_C.BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'Ctrl_Editable_C_BndEvt__ED_Text_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.ExecuteUbergraph_Ctrl_Editable
// 0x0040 (0x0040 - 0x0000)
struct Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0028(0x0018)(ConstParm)
};
static_assert(alignof(Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable) == 0x000008, "Wrong alignment on Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable");
static_assert(sizeof(Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable) == 0x000040, "Wrong size on Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable");
static_assert(offsetof(Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable, EntryPoint) == 0x000000, "Member 'Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable, K2Node_ComponentBoundEvent_Text_1) == 0x000028, "Member 'Ctrl_Editable_C_ExecuteUbergraph_Ctrl_Editable::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.OnChangedText__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Editable_C_OnChangedText__DelegateSignature final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Ctrl_Editable_C_OnChangedText__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_Editable_C_OnChangedText__DelegateSignature");
static_assert(sizeof(Ctrl_Editable_C_OnChangedText__DelegateSignature) == 0x000018, "Wrong size on Ctrl_Editable_C_OnChangedText__DelegateSignature");
static_assert(offsetof(Ctrl_Editable_C_OnChangedText__DelegateSignature, _text) == 0x000000, "Member 'Ctrl_Editable_C_OnChangedText__DelegateSignature::_text' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.OnCommitText__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_Editable_C_OnCommitText__DelegateSignature final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextCommit                                   _commit_method;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Editable_C_OnCommitText__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_Editable_C_OnCommitText__DelegateSignature");
static_assert(sizeof(Ctrl_Editable_C_OnCommitText__DelegateSignature) == 0x000020, "Wrong size on Ctrl_Editable_C_OnCommitText__DelegateSignature");
static_assert(offsetof(Ctrl_Editable_C_OnCommitText__DelegateSignature, _text) == 0x000000, "Member 'Ctrl_Editable_C_OnCommitText__DelegateSignature::_text' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_OnCommitText__DelegateSignature, _commit_method) == 0x000018, "Member 'Ctrl_Editable_C_OnCommitText__DelegateSignature::_commit_method' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.OnFocusReceived
// 0x0268 (0x0268 - 0x0000)
struct Ctrl_Editable_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00F8(0x00B8)()
	struct FEventReply                            CallFunc_SetUserFocus_ReturnValue;                 // 0x01B0(0x00B8)()
};
static_assert(alignof(Ctrl_Editable_C_OnFocusReceived) == 0x000008, "Wrong alignment on Ctrl_Editable_C_OnFocusReceived");
static_assert(sizeof(Ctrl_Editable_C_OnFocusReceived) == 0x000268, "Wrong size on Ctrl_Editable_C_OnFocusReceived");
static_assert(offsetof(Ctrl_Editable_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'Ctrl_Editable_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'Ctrl_Editable_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'Ctrl_Editable_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x0000F8, "Member 'Ctrl_Editable_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_OnFocusReceived, CallFunc_SetUserFocus_ReturnValue) == 0x0001B0, "Member 'Ctrl_Editable_C_OnFocusReceived::CallFunc_SetUserFocus_ReturnValue' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Editable_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Editable_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_Editable_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_Editable_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_Editable_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_Editable_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_Editable_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Editable_C_SetText final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Ctrl_Editable_C_SetText) == 0x000008, "Wrong alignment on Ctrl_Editable_C_SetText");
static_assert(sizeof(Ctrl_Editable_C_SetText) == 0x000018, "Wrong size on Ctrl_Editable_C_SetText");
static_assert(offsetof(Ctrl_Editable_C_SetText, _text) == 0x000000, "Member 'Ctrl_Editable_C_SetText::_text' has a wrong offset!");

// Function Ctrl_Editable.Ctrl_Editable_C.GetText
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_Editable_C_GetText final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
};
static_assert(alignof(Ctrl_Editable_C_GetText) == 0x000008, "Wrong alignment on Ctrl_Editable_C_GetText");
static_assert(sizeof(Ctrl_Editable_C_GetText) == 0x000030, "Wrong size on Ctrl_Editable_C_GetText");
static_assert(offsetof(Ctrl_Editable_C_GetText, _text) == 0x000000, "Member 'Ctrl_Editable_C_GetText::_text' has a wrong offset!");
static_assert(offsetof(Ctrl_Editable_C_GetText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'Ctrl_Editable_C_GetText::CallFunc_GetText_ReturnValue' has a wrong offset!");

}

