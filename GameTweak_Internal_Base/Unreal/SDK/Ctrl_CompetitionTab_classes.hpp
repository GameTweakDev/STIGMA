#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_CompetitionTab

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_CompetitionTab.Ctrl_CompetitionTab_C
// 0x0490 (0x0980 - 0x04F0)
class UCtrl_CompetitionTab_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class URadioButton*                           BTN_Body;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Activate;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ovl_Activate;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RemainDateTimer_C*                  RemainTimer;                                       // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Size;                                           // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_CompetitionStatus;                             // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_MemberCnt;                                     // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Title;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECompetitionType                              Competition_Type;                                  // 0x0538(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4178[0x7];                                     // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class USoundBase*                             ClickSound;                                        // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSelected;                                        // 0x0548(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   ID;                                                // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FButtonStyle                           Style;                                             // 0x0570(0x03F0)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FName                                   SelectedID;                                        // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0968(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void UpdateTab();
	void UpdateSelected();
	void SetSelectedID(class FName _id);
	void SetRemainTimer(const struct FDateTime& EndAt);
	void SetMemberCnt(int32 _memberCnt);
	void OnTabSelected();
	bool OnSynchronizeProperties();
	void OnSelected__DelegateSignature(class FName _id);
	void ExecuteUbergraph_Ctrl_CompetitionTab(int32 EntryPoint);
	void BndEvt__Ctrl_CustomTab_Button_51_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Ctrl_CustomTab_BTN_Body_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Ctrl_CustomTab_BTN_Body_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Ctrl_CompetitionTab_RemainTimer_K2Node_ComponentBoundEvent_3_DM_OnEventTimeEnded_Void__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_CompetitionTab_C">();
	}
	static class UCtrl_CompetitionTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_CompetitionTab_C>();
	}
};
static_assert(alignof(UCtrl_CompetitionTab_C) == 0x000010, "Wrong alignment on UCtrl_CompetitionTab_C");
static_assert(sizeof(UCtrl_CompetitionTab_C) == 0x000980, "Wrong size on UCtrl_CompetitionTab_C");
static_assert(offsetof(UCtrl_CompetitionTab_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_CompetitionTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, BTN_Body) == 0x0004F8, "Member 'UCtrl_CompetitionTab_C::BTN_Body' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, M_Activate) == 0x000500, "Member 'UCtrl_CompetitionTab_C::M_Activate' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Ovl_Activate) == 0x000508, "Member 'UCtrl_CompetitionTab_C::Ovl_Activate' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, RemainTimer) == 0x000510, "Member 'UCtrl_CompetitionTab_C::RemainTimer' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, SB_Size) == 0x000518, "Member 'UCtrl_CompetitionTab_C::SB_Size' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Txt_CompetitionStatus) == 0x000520, "Member 'UCtrl_CompetitionTab_C::Txt_CompetitionStatus' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, TXT_MemberCnt) == 0x000528, "Member 'UCtrl_CompetitionTab_C::TXT_MemberCnt' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Txt_Title) == 0x000530, "Member 'UCtrl_CompetitionTab_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Competition_Type) == 0x000538, "Member 'UCtrl_CompetitionTab_C::Competition_Type' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, ClickSound) == 0x000540, "Member 'UCtrl_CompetitionTab_C::ClickSound' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, OnSelected) == 0x000548, "Member 'UCtrl_CompetitionTab_C::OnSelected' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, ID) == 0x000558, "Member 'UCtrl_CompetitionTab_C::ID' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Size) == 0x000560, "Member 'UCtrl_CompetitionTab_C::Size' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Style) == 0x000570, "Member 'UCtrl_CompetitionTab_C::Style' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, SelectedID) == 0x000960, "Member 'UCtrl_CompetitionTab_C::SelectedID' has a wrong offset!");
static_assert(offsetof(UCtrl_CompetitionTab_C, Title) == 0x000968, "Member 'UCtrl_CompetitionTab_C::Title' has a wrong offset!");

}

