#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Panel_CharacterPick

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "BPGLib_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Panel_CharacterPick.Panel_CharacterPick_C.AddDuplicatedCharacterWarning
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_AddDuplicatedCharacterWarning final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_AddDuplicatedCharacterWarning) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_AddDuplicatedCharacterWarning");
static_assert(sizeof(Panel_CharacterPick_C_AddDuplicatedCharacterWarning) == 0x000001, "Wrong size on Panel_CharacterPick_C_AddDuplicatedCharacterWarning");
static_assert(offsetof(Panel_CharacterPick_C_AddDuplicatedCharacterWarning, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_AddDuplicatedCharacterWarning::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.AddMessage
// 0x0048 (0x0048 - 0x0000)
struct Panel_CharacterPick_C_AddMessage final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          _force;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Txt;                                               // 0x0020(0x0018)(Edit, BlueprintVisible)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_AddMessage) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_AddMessage");
static_assert(sizeof(Panel_CharacterPick_C_AddMessage) == 0x000048, "Wrong size on Panel_CharacterPick_C_AddMessage");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, Text) == 0x000000, "Member 'Panel_CharacterPick_C_AddMessage::Text' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, _force) == 0x000018, "Member 'Panel_CharacterPick_C_AddMessage::_force' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, Txt) == 0x000020, "Member 'Panel_CharacterPick_C_AddMessage::Txt' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'Panel_CharacterPick_C_AddMessage::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000040, "Member 'Panel_CharacterPick_C_AddMessage::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'Panel_CharacterPick_C_AddMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_AddMessage, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'Panel_CharacterPick_C_AddMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Get_MasterSelect_Visibility
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility) == 0x000001, "Wrong size on Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Get_MasterSelect_Visibility::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Visibility_ActiveSkills
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_BIND_Visibility_ActiveSkills final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Visibility_ActiveSkills) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Visibility_ActiveSkills");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Visibility_ActiveSkills) == 0x000001, "Wrong size on Panel_CharacterPick_C_BIND_Visibility_ActiveSkills");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_ActiveSkills, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Visibility_ActiveSkills::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Visibility_BTN_ActiveSkills
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills) == 0x000001, "Wrong size on Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Visibility_BTN_ActiveSkills::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Visibility_CharaPalette
// 0x0003 (0x0003 - 0x0000)
struct Panel_CharacterPick_C_BIND_Visibility_CharaPalette final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAPlayer_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Visibility_CharaPalette) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Visibility_CharaPalette");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Visibility_CharaPalette) == 0x000003, "Wrong size on Panel_CharacterPick_C_BIND_Visibility_CharaPalette");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_CharaPalette, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Visibility_CharaPalette::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_CharaPalette, CallFunc_IsAPlayer_ReturnValue) == 0x000001, "Member 'Panel_CharacterPick_C_BIND_Visibility_CharaPalette::CallFunc_IsAPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_CharaPalette, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Panel_CharacterPick_C_BIND_Visibility_CharaPalette::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Visibility_ReadyButton
// 0x0003 (0x0003 - 0x0000)
struct Panel_CharacterPick_C_BIND_Visibility_ReadyButton final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAPlayer_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Visibility_ReadyButton) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Visibility_ReadyButton");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Visibility_ReadyButton) == 0x000003, "Wrong size on Panel_CharacterPick_C_BIND_Visibility_ReadyButton");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_ReadyButton, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Visibility_ReadyButton::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_ReadyButton, CallFunc_IsAPlayer_ReturnValue) == 0x000001, "Member 'Panel_CharacterPick_C_BIND_Visibility_ReadyButton::CallFunc_IsAPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_ReadyButton, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Panel_CharacterPick_C_BIND_Visibility_ReadyButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Visibility_Teams
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_BIND_Visibility_Teams final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Visibility_Teams) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Visibility_Teams");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Visibility_Teams) == 0x000001, "Wrong size on Panel_CharacterPick_C_BIND_Visibility_Teams");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_Teams, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Visibility_Teams::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BIND_Visibility_TopCharaName
// 0x0005 (0x0005 - 0x0000)
struct Panel_CharacterPick_C_BIND_Visibility_TopCharaName final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAPlayer_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BIND_Visibility_TopCharaName");
static_assert(sizeof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName) == 0x000005, "Wrong size on Panel_CharacterPick_C_BIND_Visibility_TopCharaName");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_BIND_Visibility_TopCharaName::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Panel_CharacterPick_C_BIND_Visibility_TopCharaName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName, CallFunc_IsAPlayer_ReturnValue) == 0x000002, "Member 'Panel_CharacterPick_C_BIND_Visibility_TopCharaName::CallFunc_IsAPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Panel_CharacterPick_C_BIND_Visibility_TopCharaName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BIND_Visibility_TopCharaName, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Panel_CharacterPick_C_BIND_Visibility_TopCharaName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BindConfirmEvent
// 0x0028 (0x0028 - 0x0000)
struct Panel_CharacterPick_C_BindConfirmEvent final
{
public:
	TDelegate<void(EConfirmResponse Response)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         K2Node_DynamicCast_AsMatch_Serviced_Player_Controller; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BindConfirmEvent) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_BindConfirmEvent");
static_assert(sizeof(Panel_CharacterPick_C_BindConfirmEvent) == 0x000028, "Wrong size on Panel_CharacterPick_C_BindConfirmEvent");
static_assert(offsetof(Panel_CharacterPick_C_BindConfirmEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Panel_CharacterPick_C_BindConfirmEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BindConfirmEvent, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_BindConfirmEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BindConfirmEvent, K2Node_DynamicCast_AsMatch_Serviced_Player_Controller) == 0x000018, "Member 'Panel_CharacterPick_C_BindConfirmEvent::K2Node_DynamicCast_AsMatch_Serviced_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BindConfirmEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Panel_CharacterPick_C_BindConfirmEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Map_K2Node_ComponentBoundEvent_6_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_CB_Mode_K2Node_ComponentBoundEvent_7_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong size on Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_CharacterPick_C_BndEvt__UI_WaitingRoom_Panel_Characters_K2Node_ComponentBoundEvent_0_OnCharacterSelected__DelegateSignature::_chara_type' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.CheckAndUpdateMapAndMode
// 0x0068 (0x0068 - 0x0000)
struct Panel_CharacterPick_C_CheckAndUpdateMapAndMode final
{
public:
	class FString                                 Map_name;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     Game_mode;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAF[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedGameState*                CallFunc_GameState__game_state;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StriStri_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB0[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGameSetting                           CallFunc_GetGameSetting_ReturnValue;               // 0x0028(0x0040)(ConstParm)
};
static_assert(alignof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_CheckAndUpdateMapAndMode");
static_assert(sizeof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode) == 0x000068, "Wrong size on Panel_CharacterPick_C_CheckAndUpdateMapAndMode");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, Map_name) == 0x000000, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::Map_name' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, Game_mode) == 0x000010, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::Game_mode' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000011, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, CallFunc_GameState__game_state) == 0x000018, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::CallFunc_GameState__game_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, CallFunc_NotEqual_StriStri_ReturnValue) == 0x000020, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::CallFunc_NotEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckAndUpdateMapAndMode, CallFunc_GetGameSetting_ReturnValue) == 0x000028, "Member 'Panel_CharacterPick_C_CheckAndUpdateMapAndMode::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.CheckMasterMissionBrief
// 0x0004 (0x0004 - 0x0000)
struct Panel_CharacterPick_C_CheckMasterMissionBrief final
{
public:
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMasterMission_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitWidget_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_CheckMasterMissionBrief) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_CheckMasterMissionBrief");
static_assert(sizeof(Panel_CharacterPick_C_CheckMasterMissionBrief) == 0x000004, "Wrong size on Panel_CharacterPick_C_CheckMasterMissionBrief");
static_assert(offsetof(Panel_CharacterPick_C_CheckMasterMissionBrief, CallFunc_IsStandalone_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_CheckMasterMissionBrief::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckMasterMissionBrief, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Panel_CharacterPick_C_CheckMasterMissionBrief::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckMasterMissionBrief, CallFunc_HasMasterMission_ReturnValue) == 0x000002, "Member 'Panel_CharacterPick_C_CheckMasterMissionBrief::CallFunc_HasMasterMission_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CheckMasterMissionBrief, CallFunc_InitWidget_ReturnValue) == 0x000003, "Member 'Panel_CharacterPick_C_CheckMasterMissionBrief::CallFunc_InitWidget_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.ClearMessage
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_ClearMessage final
{
public:
	class FText                                   Txt;                                               // 0x0000(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(Panel_CharacterPick_C_ClearMessage) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_ClearMessage");
static_assert(sizeof(Panel_CharacterPick_C_ClearMessage) == 0x000018, "Wrong size on Panel_CharacterPick_C_ClearMessage");
static_assert(offsetof(Panel_CharacterPick_C_ClearMessage, Txt) == 0x000000, "Member 'Panel_CharacterPick_C_ClearMessage::Txt' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.CreatePlayerWidget
// 0x00B0 (0x00B0 - 0x0000)
struct Panel_CharacterPick_C_CreatePlayerWidget final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UCtrl_Player_C*>                 Ally;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UVerticalBoxSlot*                       Vslot;                                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_EnemyPlayer_C*                    Enemy_ctrl;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Ctrl;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_Player_C*                         Ally_ctrl;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              Ps;                                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_Player_C*                         CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB2[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class UUserWidget*>                    CallFunc_Map_Values_Values;                        // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB3[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_Player_C*                         K2Node_DynamicCast_AsCtrl_Player;                  // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJoinType                                     CallFunc_GetJoinType_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerSide                                   CallFunc_GetPlayerSideAgainstLocalPlayer_ReturnValue; // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB4[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB5[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_CreatePlayerWidget) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_CreatePlayerWidget");
static_assert(sizeof(Panel_CharacterPick_C_CreatePlayerWidget) == 0x0000B0, "Wrong size on Panel_CharacterPick_C_CreatePlayerWidget");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, _ps) == 0x000000, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::_ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Ally) == 0x000008, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Ally' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Vslot) == 0x000018, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Vslot' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Enemy_ctrl) == 0x000020, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Enemy_ctrl' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Ctrl) == 0x000028, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Ctrl' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Ally_ctrl) == 0x000030, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Ally_ctrl' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Ps) == 0x000038, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_Create_ReturnValue) == 0x000048, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000050, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_Map_Values_Values) == 0x000060, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_Array_Get_Item) == 0x000070, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, K2Node_DynamicCast_AsCtrl_Player) == 0x000080, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::K2Node_DynamicCast_AsCtrl_Player' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_GetJoinType_ReturnValue) == 0x00008A, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_GetJoinType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008B, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_GetPlayerSideAgainstLocalPlayer_ReturnValue) == 0x00008C, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_GetPlayerSideAgainstLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00008D, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000090, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x000098, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_CreatePlayerWidget, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'Panel_CharacterPick_C_CreatePlayerWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.DEV_BuildModeAndMapCombo
// 0x0590 (0x0590 - 0x0000)
struct Panel_CharacterPick_C_DEV_BuildModeAndMapCombo final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMapEntry>                      CallFunc_GetAllMaps_ReturnValue;                   // 0x0018(0x0010)(ReferenceParm)
	class AMatchServicedGameState*                CallFunc_GameState__game_state;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMapEntry                              CallFunc_Array_Get_Item;                           // 0x0030(0x0158)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB6[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetMapName_ReturnValue;                   // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameSetting                           CallFunc_GetGameSetting_ReturnValue;               // 0x01A0(0x0040)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB7[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x01E8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB8[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FMode                                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0208(0x0370)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DB9[0x6];                                     // 0x057A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_DEV_BuildModeAndMapCombo");
static_assert(sizeof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo) == 0x000590, "Wrong size on Panel_CharacterPick_C_DEV_BuildModeAndMapCombo");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetAllMaps_ReturnValue) == 0x000018, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetAllMaps_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GameState__game_state) == 0x000028, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GameState__game_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Array_Get_Item) == 0x000030, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetMapName_ReturnValue) == 0x000190, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetGameSetting_ReturnValue) == 0x0001A0, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Less_IntInt_ReturnValue) == 0x0001E4, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0001E8, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Array_Get_Item_1) == 0x0001F8, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Array_Length_ReturnValue_1) == 0x000200, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000208, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000578, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_Less_IntInt_ReturnValue_1) == 0x000579, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_BuildModeAndMapCombo, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000580, "Member 'Panel_CharacterPick_C_DEV_BuildModeAndMapCombo::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.DEV_SelectMode
// 0x0048 (0x0048 - 0x0000)
struct Panel_CharacterPick_C_DEV_SelectMode final
{
public:
	EGameMode                                     _mode;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _notify;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Notify;                                            // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     Mode;                                              // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_DEV_GetSelectedMap__map;                  // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWaitingRoomPlayerController*           K2Node_DynamicCast_AsWaiting_Room_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_DEV_SelectMode) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_DEV_SelectMode");
static_assert(sizeof(Panel_CharacterPick_C_DEV_SelectMode) == 0x000048, "Wrong size on Panel_CharacterPick_C_DEV_SelectMode");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, _mode) == 0x000000, "Member 'Panel_CharacterPick_C_DEV_SelectMode::_mode' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, _notify) == 0x000001, "Member 'Panel_CharacterPick_C_DEV_SelectMode::_notify' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, Notify) == 0x000002, "Member 'Panel_CharacterPick_C_DEV_SelectMode::Notify' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, Mode) == 0x000003, "Member 'Panel_CharacterPick_C_DEV_SelectMode::Mode' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, CallFunc_DEV_GetSelectedMap__map) == 0x000008, "Member 'Panel_CharacterPick_C_DEV_SelectMode::CallFunc_DEV_GetSelectedMap__map' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, CallFunc_IsEmpty_ReturnValue) == 0x000018, "Member 'Panel_CharacterPick_C_DEV_SelectMode::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Panel_CharacterPick_C_DEV_SelectMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, K2Node_DynamicCast_AsWaiting_Room_Player_Controller) == 0x000028, "Member 'Panel_CharacterPick_C_DEV_SelectMode::K2Node_DynamicCast_AsWaiting_Room_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Panel_CharacterPick_C_DEV_SelectMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_SelectMode, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'Panel_CharacterPick_C_DEV_SelectMode::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.DriveDuplicatedCharaText
// 0x0068 (0x0068 - 0x0000)
struct Panel_CharacterPick_C_DriveDuplicatedCharaText final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattleGameStateBase*                   K2Node_DynamicCast_AsBattle_Game_State_Base;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBD[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AWaitingRoomGameState*                  K2Node_DynamicCast_AsWaiting_Room_Game_State;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLeftSeconds_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DBF[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedGameState*                K2Node_DynamicCast_AsMatch_Serviced_Game_State;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC0[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              CallFunc_GetPlayerState__player_state;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FUserID                                CallFunc_GetUserID_ReturnValue;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPickedCharaInTeam_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_DriveDuplicatedCharaText) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_DriveDuplicatedCharaText");
static_assert(sizeof(Panel_CharacterPick_C_DriveDuplicatedCharaText) == 0x000068, "Wrong size on Panel_CharacterPick_C_DriveDuplicatedCharaText");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, K2Node_DynamicCast_AsBattle_Game_State_Base) == 0x000008, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::K2Node_DynamicCast_AsBattle_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000011, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, K2Node_DynamicCast_AsWaiting_Room_Game_State) == 0x000018, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::K2Node_DynamicCast_AsWaiting_Room_Game_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_GetGameState_ReturnValue_1) == 0x000028, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_GetLeftSeconds_ReturnValue) == 0x000030, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_GetLeftSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, K2Node_DynamicCast_AsMatch_Serviced_Game_State) == 0x000038, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::K2Node_DynamicCast_AsMatch_Serviced_Game_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_Greater_IntInt_ReturnValue) == 0x000041, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_GetPlayerState__player_state) == 0x000048, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_GetPlayerState__player_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_GetUserID_ReturnValue) == 0x000058, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_GetUserID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_IsPickedCharaInTeam_ReturnValue) == 0x000060, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_IsPickedCharaInTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_IsReadyToFight_ReturnValue) == 0x000061, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_BooleanAND_ReturnValue) == 0x000063, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DriveDuplicatedCharaText, CallFunc_BooleanAND_ReturnValue_1) == 0x000064, "Member 'Panel_CharacterPick_C_DriveDuplicatedCharaText::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.ExecuteUbergraph_Panel_CharacterPick
// 0x0120 (0x0120 - 0x0000)
struct Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopping_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC3[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_1;         // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_1;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     CallFunc_DEV_GetSelectedMode__mode;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_StringToEnum__enum_value;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StringToEnum_ReturnValue;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC4[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC5[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AWaitingRoomPlayerController*           K2Node_DynamicCast_AsWaiting_Room_Player_Controller; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC6[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC7[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UShowLoginUICallbackProxy*              CallFunc_ShowExternalLoginUI_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    K2Node_ComponentBoundEvent__chara_type;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC8[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentPickedCharaType_Char_Type;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC9[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentPickedCharaType_Char_Type_1;    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick");
static_assert(sizeof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick) == 0x000120, "Wrong size on Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, EntryPoint) == 0x000000, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::EntryPoint' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_CustomEvent_PlayerController_1) == 0x000008, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_CustomEvent_PlayerController) == 0x000020, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, Temp_object_Variable) == 0x000038, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_InputKeyEvent_Key) == 0x000040, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_IsDevelopping_ReturnValue) == 0x000058, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_IsDevelopping_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_Event_MyGeometry) == 0x00005C, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_Event_InDeltaTime) == 0x000094, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_ComponentBoundEvent_SelectedItem_1) == 0x000098, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_ComponentBoundEvent_SelectedItem_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_ComponentBoundEvent_SelectionType_1) == 0x0000A8, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_ComponentBoundEvent_SelectionType_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_DEV_GetSelectedMode__mode) == 0x0000A9, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_DEV_GetSelectedMode__mode' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_SwitchEnum_CmpSuccess) == 0x0000AA, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_StringToEnum__enum_value) == 0x0000AB, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_StringToEnum__enum_value' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_StringToEnum_ReturnValue) == 0x0000AC, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_StringToEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_GetValidValue_ReturnValue) == 0x0000B8, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_DynamicCast_AsWaiting_Room_Player_Controller) == 0x0000C0, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_DynamicCast_AsWaiting_Room_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_ComponentBoundEvent_SelectedItem) == 0x0000D0, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_ComponentBoundEvent_SelectionType) == 0x0000E0, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000E1, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000E8, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_ShowExternalLoginUI_ReturnValue) == 0x0000F0, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_ShowExternalLoginUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_ComponentBoundEvent__chara_type) == 0x0000F9, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_ComponentBoundEvent__chara_type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000100, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_GetCurrentPickedCharaType_Char_Type) == 0x000108, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_GetCurrentPickedCharaType_Char_Type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000110, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick, CallFunc_GetCurrentPickedCharaType_Char_Type_1) == 0x000119, "Member 'Panel_CharacterPick_C_ExecuteUbergraph_Panel_CharacterPick::CallFunc_GetCurrentPickedCharaType_Char_Type_1' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.Get Visibility Dev Panel
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_Get_Visibility_Dev_Panel final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_Get_Visibility_Dev_Panel) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_Get_Visibility_Dev_Panel");
static_assert(sizeof(Panel_CharacterPick_C_Get_Visibility_Dev_Panel) == 0x000001, "Wrong size on Panel_CharacterPick_C_Get_Visibility_Dev_Panel");
static_assert(offsetof(Panel_CharacterPick_C_Get_Visibility_Dev_Panel, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_Get_Visibility_Dev_Panel::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.GetCharacterTitleByIndex
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_GetCharacterTitleByIndex final
{
public:
	int32                                         _zidx;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UWIDGET_CharacterTitle_C*               _widget;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_GetCharacterTitleByIndex) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_GetCharacterTitleByIndex");
static_assert(sizeof(Panel_CharacterPick_C_GetCharacterTitleByIndex) == 0x000018, "Wrong size on Panel_CharacterPick_C_GetCharacterTitleByIndex");
static_assert(offsetof(Panel_CharacterPick_C_GetCharacterTitleByIndex, _zidx) == 0x000000, "Member 'Panel_CharacterPick_C_GetCharacterTitleByIndex::_zidx' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCharacterTitleByIndex, _widget) == 0x000008, "Member 'Panel_CharacterPick_C_GetCharacterTitleByIndex::_widget' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCharacterTitleByIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'Panel_CharacterPick_C_GetCharacterTitleByIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.GetCurrentPickedCharaType
// 0x0148 (0x0148 - 0x0000)
struct Panel_CharacterPick_C_GetCurrentPickedCharaType final
{
public:
	ECharaType                                    Char_Type;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLocalCharacterSet                     CallFunc_GetLocalCharacter_ReturnValue;            // 0x0020(0x0128)(ConstParm)
};
static_assert(alignof(Panel_CharacterPick_C_GetCurrentPickedCharaType) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_GetCurrentPickedCharaType");
static_assert(sizeof(Panel_CharacterPick_C_GetCurrentPickedCharaType) == 0x000148, "Wrong size on Panel_CharacterPick_C_GetCurrentPickedCharaType");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentPickedCharaType, Char_Type) == 0x000000, "Member 'Panel_CharacterPick_C_GetCurrentPickedCharaType::Char_Type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentPickedCharaType, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_GetCurrentPickedCharaType::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentPickedCharaType, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000010, "Member 'Panel_CharacterPick_C_GetCurrentPickedCharaType::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentPickedCharaType, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Panel_CharacterPick_C_GetCurrentPickedCharaType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentPickedCharaType, CallFunc_GetLocalCharacter_ReturnValue) == 0x000020, "Member 'Panel_CharacterPick_C_GetCurrentPickedCharaType::CallFunc_GetLocalCharacter_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.GetToolTip_MasterRandomBtn
// 0x0070 (0x0070 - 0x0000)
struct Panel_CharacterPick_C_GetToolTip_MasterRandomBtn final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            ToolTip;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCD[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)(ConstParm)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x0050(0x0018)(ConstParm)
	EGameMode                                     CallFunc_GetCurrentGameModeType__out_game_mode_type; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentGameModeType_ReturnValue;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_GetToolTip_MasterRandomBtn");
static_assert(sizeof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn) == 0x000070, "Wrong size on Panel_CharacterPick_C_GetToolTip_MasterRandomBtn");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, ToolTip) == 0x000008, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::ToolTip' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, Temp_text_Variable) == 0x000010, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, Temp_text_Variable_1) == 0x000030, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000048, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, Temp_text_Variable_2) == 0x000050, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, CallFunc_GetCurrentGameModeType__out_game_mode_type) == 0x000068, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::CallFunc_GetCurrentGameModeType__out_game_mode_type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, CallFunc_GetCurrentGameModeType_ReturnValue) == 0x000069, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::CallFunc_GetCurrentGameModeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetToolTip_MasterRandomBtn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'Panel_CharacterPick_C_GetToolTip_MasterRandomBtn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.Init
// 0x0C48 (0x0C48 - 0x0000)
struct Panel_CharacterPick_C_Init final
{
public:
	class UStigmaGameInstance*                    Game_inst;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentCharaType__chara_type;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0010(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCF[0x7];                                     // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TSet<EUserEvent>                              K2Node_MakeSet_Set;                                // 0x09F8(0x0050)(ConstParm)
	TDelegate<void(EUserEvent _event)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0A48(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0A58(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0AA8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0AB8(0x0018)()
	ECharaType                                    CallFunc_GetCurrentCharacterType_ReturnValue;      // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD0[0x7];                                     // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0AE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetNewCharaType_ReturnValue;              // 0x0AEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0AEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD1[0x4];                                     // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterSetting                      CallFunc_GetCharacter_ReturnValue;                 // 0x0AF0(0x0140)(ConstParm)
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0C30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALobbyControllerBase*                   K2Node_DynamicCast_AsLobby_Controller_Base;        // 0x0C38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_Init) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_Init");
static_assert(sizeof(Panel_CharacterPick_C_Init) == 0x000C48, "Wrong size on Panel_CharacterPick_C_Init");
static_assert(offsetof(Panel_CharacterPick_C_Init, Game_inst) == 0x000000, "Member 'Panel_CharacterPick_C_Init::Game_inst' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetCurrentCharaType__chara_type) == 0x000008, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetCurrentCharaType__chara_type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetCharacterDefByType__out_data) == 0x000010, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetCharacterDefByType_ReturnValue) == 0x0009F0, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_MakeSet_Set) == 0x0009F8, "Member 'Panel_CharacterPick_C_Init::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x000A48, "Member 'Panel_CharacterPick_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_MakeStruct_FormatArgumentData) == 0x000A58, "Member 'Panel_CharacterPick_C_Init::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_MakeArray_Array) == 0x000AA8, "Member 'Panel_CharacterPick_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_Format_ReturnValue) == 0x000AB8, "Member 'Panel_CharacterPick_C_Init::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetCurrentCharacterType_ReturnValue) == 0x000AD0, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetCurrentCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000AD8, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000AE0, "Member 'Panel_CharacterPick_C_Init::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_DynamicCast_bSuccess) == 0x000AE8, "Member 'Panel_CharacterPick_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_IsReadyToFight_ReturnValue) == 0x000AE9, "Member 'Panel_CharacterPick_C_Init::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetNewCharaType_ReturnValue) == 0x000AEA, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetNewCharaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000AEB, "Member 'Panel_CharacterPick_C_Init::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetCharacter_ReturnValue) == 0x000AF0, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000C30, "Member 'Panel_CharacterPick_C_Init::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_DynamicCast_AsLobby_Controller_Base) == 0x000C38, "Member 'Panel_CharacterPick_C_Init::K2Node_DynamicCast_AsLobby_Controller_Base' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x000C40, "Member 'Panel_CharacterPick_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.InitReadyButton
// 0x0040 (0x0040 - 0x0000)
struct Panel_CharacterPick_C_InitReadyButton final
{
public:
	class AMatchServicedPlayerState*              Ps;                                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
};
static_assert(alignof(Panel_CharacterPick_C_InitReadyButton) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_InitReadyButton");
static_assert(sizeof(Panel_CharacterPick_C_InitReadyButton) == 0x000040, "Wrong size on Panel_CharacterPick_C_InitReadyButton");
static_assert(offsetof(Panel_CharacterPick_C_InitReadyButton, Ps) == 0x000000, "Member 'Panel_CharacterPick_C_InitReadyButton::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_InitReadyButton, CallFunc_IsReadyToFight_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_InitReadyButton::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_InitReadyButton, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_InitReadyButton::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_InitReadyButton, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000018, "Member 'Panel_CharacterPick_C_InitReadyButton::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_InitReadyButton, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Panel_CharacterPick_C_InitReadyButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_InitReadyButton, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'Panel_CharacterPick_C_InitReadyButton::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.InpActEvt_Delete_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0");
static_assert(sizeof(Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0");
static_assert(offsetof(Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'Panel_CharacterPick_C_InpActEvt_Delete_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.On Select Character
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_On_Select_Character final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_On_Select_Character) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_On_Select_Character");
static_assert(sizeof(Panel_CharacterPick_C_On_Select_Character) == 0x000001, "Wrong size on Panel_CharacterPick_C_On_Select_Character");
static_assert(offsetof(Panel_CharacterPick_C_On_Select_Character, _chara_type) == 0x000000, "Member 'Panel_CharacterPick_C_On_Select_Character::_chara_type' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnChange_CanReady
// 0x0002 (0x0002 - 0x0000)
struct Panel_CharacterPick_C_OnChange_CanReady final
{
public:
	bool                                          _can_ready;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnChange_CanReady) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_OnChange_CanReady");
static_assert(sizeof(Panel_CharacterPick_C_OnChange_CanReady) == 0x000002, "Wrong size on Panel_CharacterPick_C_OnChange_CanReady");
static_assert(offsetof(Panel_CharacterPick_C_OnChange_CanReady, _can_ready) == 0x000000, "Member 'Panel_CharacterPick_C_OnChange_CanReady::_can_ready' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnChange_CanReady, ReturnValue) == 0x000001, "Member 'Panel_CharacterPick_C_OnChange_CanReady::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnChange_PickedCharacter
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_OnChange_PickedCharacter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnChange_PickedCharacter) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_OnChange_PickedCharacter");
static_assert(sizeof(Panel_CharacterPick_C_OnChange_PickedCharacter) == 0x000001, "Wrong size on Panel_CharacterPick_C_OnChange_PickedCharacter");
static_assert(offsetof(Panel_CharacterPick_C_OnChange_PickedCharacter, ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_OnChange_PickedCharacter::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnClick_ReadyButton
// 0x0070 (0x0070 - 0x0000)
struct Panel_CharacterPick_C_OnClick_ReadyButton final
{
public:
	class AMatchServicedPlayerState*              Ps;                                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         PC;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            battle_pc;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FLocalCharacterSet>             CallFunc_GetLocalPickedCharacters_ReturnValue;     // 0x0028(0x0010)(ConstParm, ReferenceParm)
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD5[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State_1; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD6[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         K2Node_DynamicCast_AsMatch_Serviced_Player_Controller; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnClick_ReadyButton) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnClick_ReadyButton");
static_assert(sizeof(Panel_CharacterPick_C_OnClick_ReadyButton) == 0x000070, "Wrong size on Panel_CharacterPick_C_OnClick_ReadyButton");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, Ps) == 0x000000, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, PC) == 0x000008, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::PC' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, battle_pc) == 0x000010, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::battle_pc' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000018, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, CallFunc_GetLocalPickedCharacters_ReturnValue) == 0x000028, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::CallFunc_GetLocalPickedCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000038, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, CallFunc_IsReadyToFight_ReturnValue) == 0x000041, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_AsMatch_Serviced_Player_State_1) == 0x000048, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_AsMatch_Serviced_Player_State_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000058, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_AsMatch_Serviced_Player_Controller) == 0x000060, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_AsMatch_Serviced_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnClick_ReadyButton, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'Panel_CharacterPick_C_OnClick_ReadyButton::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnConfirm_ACK
// 0x0002 (0x0002 - 0x0000)
struct Panel_CharacterPick_C_OnConfirm_ACK final
{
public:
	EConfirmResponse                              Response;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnConfirm_ACK) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_OnConfirm_ACK");
static_assert(sizeof(Panel_CharacterPick_C_OnConfirm_ACK) == 0x000002, "Wrong size on Panel_CharacterPick_C_OnConfirm_ACK");
static_assert(offsetof(Panel_CharacterPick_C_OnConfirm_ACK, Response) == 0x000000, "Member 'Panel_CharacterPick_C_OnConfirm_ACK::Response' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnConfirm_ACK, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Panel_CharacterPick_C_OnConfirm_ACK::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnEndWaiting
// 0x0050 (0x0050 - 0x0000)
struct Panel_CharacterPick_C_OnEndWaiting final
{
public:
	class AMatchServicedPlayerState*              Ps;                                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         PC;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         K2Node_DynamicCast_AsMatch_Serviced_Player_Controller; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FLocalCharacterSet>             CallFunc_GetLocalPickedCharacters_ReturnValue;     // 0x0038(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnEndWaiting) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnEndWaiting");
static_assert(sizeof(Panel_CharacterPick_C_OnEndWaiting) == 0x000050, "Wrong size on Panel_CharacterPick_C_OnEndWaiting");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, Ps) == 0x000000, "Member 'Panel_CharacterPick_C_OnEndWaiting::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, PC) == 0x000008, "Member 'Panel_CharacterPick_C_OnEndWaiting::PC' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_OnEndWaiting::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, K2Node_DynamicCast_AsMatch_Serviced_Player_Controller) == 0x000018, "Member 'Panel_CharacterPick_C_OnEndWaiting::K2Node_DynamicCast_AsMatch_Serviced_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Panel_CharacterPick_C_OnEndWaiting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000028, "Member 'Panel_CharacterPick_C_OnEndWaiting::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Panel_CharacterPick_C_OnEndWaiting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, CallFunc_GetLocalPickedCharacters_ReturnValue) == 0x000038, "Member 'Panel_CharacterPick_C_OnEndWaiting::CallFunc_GetLocalPickedCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnEndWaiting, CallFunc_IsReadyToFight_ReturnValue) == 0x000048, "Member 'Panel_CharacterPick_C_OnEndWaiting::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnFailure_B3762E494CFECE25D8C84FB38DAC6C74
// 0x0008 (0x0008 - 0x0000)
struct Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74 final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74");
static_assert(sizeof(Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74) == 0x000008, "Wrong size on Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74");
static_assert(offsetof(Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74, PlayerController) == 0x000000, "Member 'Panel_CharacterPick_C_OnFailure_B3762E494CFECE25D8C84FB38DAC6C74::PlayerController' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnLOCAL_ChangeCharacterSetting
// 0x0AD8 (0x0AD8 - 0x0000)
struct Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UWIDGET_CharacterTitle_C*               Widget;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameSetting                           Game_setting;                                      // 0x0018(0x0040)(Edit, BlueprintVisible)
	struct FCharacterDefine                       Chara_def;                                         // 0x0058(0x09E0)(Edit, BlueprintVisible)
	ECharaType                                    Chara_type;                                        // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDA[0x7];                                     // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              Ps;                                                // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentlySelectedCharaType_ReturnValue; // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDB[0x2];                                     // 0x0A4A(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Variable;                                 // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetPickedCharacterType_ReturnValue;       // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDC[0x7];                                     // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UWIDGET_CharacterTitle_C*               CallFunc_GetCharacterTitleByIndex__widget;         // 0x0A58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayableCharacterCount_ReturnValue;    // 0x0A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDD[0x4];                                     // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0A70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDE[0x7];                                     // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedGameState*                K2Node_DynamicCast_AsMatch_Serviced_Game_State;    // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDF[0x7];                                     // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGameSetting                           CallFunc_GetGameSetting_ReturnValue;               // 0x0A90(0x0040)(ConstParm)
	bool                                          CallFunc_HasValidValue_ReturnValue;                // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting");
static_assert(sizeof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting) == 0x000AD8, "Wrong size on Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, _ps) == 0x000000, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::_ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, Widget) == 0x000010, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::Widget' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, Game_setting) == 0x000018, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::Game_setting' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, Chara_def) == 0x000058, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::Chara_def' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, Chara_type) == 0x000A38, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::Chara_type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, Ps) == 0x000A40, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_GetCurrentlySelectedCharaType_ReturnValue) == 0x000A48, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_GetCurrentlySelectedCharaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_IsValid_ReturnValue) == 0x000A49, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, Temp_int_Variable) == 0x000A4C, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_GetPickedCharacterType_ReturnValue) == 0x000A50, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_GetPickedCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_GetCharacterTitleByIndex__widget) == 0x000A58, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_GetCharacterTitleByIndex__widget' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000A60, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_GetPlayableCharacterCount_ReturnValue) == 0x000A64, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_GetPlayableCharacterCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_Subtract_IntInt_ReturnValue) == 0x000A68, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_GetGameState_ReturnValue) == 0x000A70, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000A78, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, K2Node_DynamicCast_AsMatch_Serviced_Game_State) == 0x000A80, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::K2Node_DynamicCast_AsMatch_Serviced_Game_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, K2Node_DynamicCast_bSuccess) == 0x000A88, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_GetGameSetting_ReturnValue) == 0x000A90, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting, CallFunc_HasValidValue_ReturnValue) == 0x000AD0, "Member 'Panel_CharacterPick_C_OnLOCAL_ChangeCharacterSetting::CallFunc_HasValidValue_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnPlayerJoin
// 0x0028 (0x0028 - 0x0000)
struct Panel_CharacterPick_C_OnPlayerJoin final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUserWidget*                            Related_obj;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              Ps;                                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdatePlayerInfo_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnPlayerJoin) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnPlayerJoin");
static_assert(sizeof(Panel_CharacterPick_C_OnPlayerJoin) == 0x000028, "Wrong size on Panel_CharacterPick_C_OnPlayerJoin");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerJoin, _ps) == 0x000000, "Member 'Panel_CharacterPick_C_OnPlayerJoin::_ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerJoin, ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_OnPlayerJoin::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerJoin, Related_obj) == 0x000010, "Member 'Panel_CharacterPick_C_OnPlayerJoin::Related_obj' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerJoin, Ps) == 0x000018, "Member 'Panel_CharacterPick_C_OnPlayerJoin::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerJoin, CallFunc_UpdatePlayerInfo_ReturnValue) == 0x000020, "Member 'Panel_CharacterPick_C_OnPlayerJoin::CallFunc_UpdatePlayerInfo_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnPlayerLeaved
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_OnPlayerLeaved final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUserWidget*                            Ctrl;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnPlayerLeaved) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnPlayerLeaved");
static_assert(sizeof(Panel_CharacterPick_C_OnPlayerLeaved) == 0x000018, "Wrong size on Panel_CharacterPick_C_OnPlayerLeaved");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerLeaved, _ps) == 0x000000, "Member 'Panel_CharacterPick_C_OnPlayerLeaved::_ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerLeaved, ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_OnPlayerLeaved::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerLeaved, Ctrl) == 0x000010, "Member 'Panel_CharacterPick_C_OnPlayerLeaved::Ctrl' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnPlayerUpdate
// 0x0010 (0x0010 - 0x0000)
struct Panel_CharacterPick_C_OnPlayerUpdate final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdatePlayerInfo_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnPlayerUpdate) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnPlayerUpdate");
static_assert(sizeof(Panel_CharacterPick_C_OnPlayerUpdate) == 0x000010, "Wrong size on Panel_CharacterPick_C_OnPlayerUpdate");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerUpdate, _ps) == 0x000000, "Member 'Panel_CharacterPick_C_OnPlayerUpdate::_ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerUpdate, ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_OnPlayerUpdate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnPlayerUpdate, CallFunc_UpdatePlayerInfo_ReturnValue) == 0x000009, "Member 'Panel_CharacterPick_C_OnPlayerUpdate::CallFunc_UpdatePlayerInfo_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74
// 0x0008 (0x0008 - 0x0000)
struct Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74 final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74");
static_assert(sizeof(Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74) == 0x000008, "Wrong size on Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74");
static_assert(offsetof(Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74, PlayerController) == 0x000000, "Member 'Panel_CharacterPick_C_OnSuccess_B3762E494CFECE25D8C84FB38DAC6C74::PlayerController' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnUpdateGunType
// 0x0030 (0x0030 - 0x0000)
struct Panel_CharacterPick_C_OnUpdateGunType final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FApiResult                             _ack;                                              // 0x0004(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3DE3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(Panel_CharacterPick_C_OnUpdateGunType) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnUpdateGunType");
static_assert(sizeof(Panel_CharacterPick_C_OnUpdateGunType) == 0x000030, "Wrong size on Panel_CharacterPick_C_OnUpdateGunType");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateGunType, _rcode) == 0x000000, "Member 'Panel_CharacterPick_C_OnUpdateGunType::_rcode' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateGunType, _ack) == 0x000004, "Member 'Panel_CharacterPick_C_OnUpdateGunType::_ack' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateGunType, ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_OnUpdateGunType::ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnUpdateLocalPlayerContext
// 0x0038 (0x0038 - 0x0000)
struct Panel_CharacterPick_C_OnUpdateLocalPlayerContext final
{
public:
	EUserEvent                                    _event;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnUpdateLocalPlayerContext");
static_assert(sizeof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext) == 0x000038, "Wrong size on Panel_CharacterPick_C_OnUpdateLocalPlayerContext");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext, _event) == 0x000000, "Member 'Panel_CharacterPick_C_OnUpdateLocalPlayerContext::_event' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Panel_CharacterPick_C_OnUpdateLocalPlayerContext::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_OnUpdateLocalPlayerContext::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'Panel_CharacterPick_C_OnUpdateLocalPlayerContext::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUpdateLocalPlayerContext, CallFunc_AddToastMessage_ReturnValue) == 0x000030, "Member 'Panel_CharacterPick_C_OnUpdateLocalPlayerContext::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.OnUserCommitTeamChat
// 0x00C8 (0x00C8 - 0x0000)
struct Panel_CharacterPick_C_OnUserCommitTeamChat final
{
public:
	struct FChatMsg                               _chat_msg;                                         // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FChatMsg                               Chat_msg;                                          // 0x0058(0x0058)(Edit, BlueprintVisible)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWaitingRoomPlayerController*           K2Node_DynamicCast_AsWaiting_Room_Player_Controller; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_OnUserCommitTeamChat) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_OnUserCommitTeamChat");
static_assert(sizeof(Panel_CharacterPick_C_OnUserCommitTeamChat) == 0x0000C8, "Wrong size on Panel_CharacterPick_C_OnUserCommitTeamChat");
static_assert(offsetof(Panel_CharacterPick_C_OnUserCommitTeamChat, _chat_msg) == 0x000000, "Member 'Panel_CharacterPick_C_OnUserCommitTeamChat::_chat_msg' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUserCommitTeamChat, Chat_msg) == 0x000058, "Member 'Panel_CharacterPick_C_OnUserCommitTeamChat::Chat_msg' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUserCommitTeamChat, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'Panel_CharacterPick_C_OnUserCommitTeamChat::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUserCommitTeamChat, K2Node_DynamicCast_AsWaiting_Room_Player_Controller) == 0x0000B8, "Member 'Panel_CharacterPick_C_OnUserCommitTeamChat::K2Node_DynamicCast_AsWaiting_Room_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_OnUserCommitTeamChat, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Panel_CharacterPick_C_OnUserCommitTeamChat::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.PickRandomMaster
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_PickRandomMaster final
{
public:
	ECharaType                                    CallFunc_GetCurrentlySelectedCharaType_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_PickRandomMaster) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_PickRandomMaster");
static_assert(sizeof(Panel_CharacterPick_C_PickRandomMaster) == 0x000001, "Wrong size on Panel_CharacterPick_C_PickRandomMaster");
static_assert(offsetof(Panel_CharacterPick_C_PickRandomMaster, CallFunc_GetCurrentlySelectedCharaType_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_PickRandomMaster::CallFunc_GetCurrentlySelectedCharaType_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.SetCharacterSetting
// 0x0040 (0x0040 - 0x0000)
struct Panel_CharacterPick_C_SetCharacterSetting final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _slot_zidx;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Slot_zidx;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                Item_id;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         K2Node_DynamicCast_AsMatch_Serviced_Player_Controller; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_SetCharacterSetting) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_SetCharacterSetting");
static_assert(sizeof(Panel_CharacterPick_C_SetCharacterSetting) == 0x000040, "Wrong size on Panel_CharacterPick_C_SetCharacterSetting");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, _item_id) == 0x000000, "Member 'Panel_CharacterPick_C_SetCharacterSetting::_item_id' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, _slot_zidx) == 0x000010, "Member 'Panel_CharacterPick_C_SetCharacterSetting::_slot_zidx' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, Slot_zidx) == 0x000014, "Member 'Panel_CharacterPick_C_SetCharacterSetting::Slot_zidx' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, Item_id) == 0x000018, "Member 'Panel_CharacterPick_C_SetCharacterSetting::Item_id' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'Panel_CharacterPick_C_SetCharacterSetting::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, K2Node_DynamicCast_AsMatch_Serviced_Player_Controller) == 0x000030, "Member 'Panel_CharacterPick_C_SetCharacterSetting::K2Node_DynamicCast_AsMatch_Serviced_Player_Controller' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetCharacterSetting, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Panel_CharacterPick_C_SetCharacterSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.SetReadyButtonState
// 0x0038 (0x0038 - 0x0000)
struct Panel_CharacterPick_C_SetReadyButtonState final
{
public:
	bool                                          _is_ready_to_fight;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0020(0x0018)()
};
static_assert(alignof(Panel_CharacterPick_C_SetReadyButtonState) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_SetReadyButtonState");
static_assert(sizeof(Panel_CharacterPick_C_SetReadyButtonState) == 0x000038, "Wrong size on Panel_CharacterPick_C_SetReadyButtonState");
static_assert(offsetof(Panel_CharacterPick_C_SetReadyButtonState, _is_ready_to_fight) == 0x000000, "Member 'Panel_CharacterPick_C_SetReadyButtonState::_is_ready_to_fight' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetReadyButtonState, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_SetReadyButtonState::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_SetReadyButtonState, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000020, "Member 'Panel_CharacterPick_C_SetReadyButtonState::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.Tick
// 0x003C (0x003C - 0x0000)
struct Panel_CharacterPick_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_Tick) == 0x000004, "Wrong alignment on Panel_CharacterPick_C_Tick");
static_assert(sizeof(Panel_CharacterPick_C_Tick) == 0x00003C, "Wrong size on Panel_CharacterPick_C_Tick");
static_assert(offsetof(Panel_CharacterPick_C_Tick, MyGeometry) == 0x000000, "Member 'Panel_CharacterPick_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Tick, InDeltaTime) == 0x000038, "Member 'Panel_CharacterPick_C_Tick::InDeltaTime' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.ToggleDevMenus
// 0x0001 (0x0001 - 0x0000)
struct Panel_CharacterPick_C_ToggleDevMenus final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_ToggleDevMenus) == 0x000001, "Wrong alignment on Panel_CharacterPick_C_ToggleDevMenus");
static_assert(sizeof(Panel_CharacterPick_C_ToggleDevMenus) == 0x000001, "Wrong size on Panel_CharacterPick_C_ToggleDevMenus");
static_assert(offsetof(Panel_CharacterPick_C_ToggleDevMenus, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_ToggleDevMenus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.Update Game Mode And Map
// 0x07B8 (0x07B8 - 0x0000)
struct Panel_CharacterPick_C_Update_Game_Mode_And_Map final
{
public:
	bool                                          Multi_pick;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FMode                                  Mode_config;                                       // 0x0008(0x0370)(Edit, BlueprintVisible)
	class AMatchServicedGameState*                Game_state;                                        // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0380(0x0018)()
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE7[0x2];                                     // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGameSetting                           CallFunc_GetGameSetting_ReturnValue;               // 0x03C0(0x0040)(ConstParm)
	struct FGameSetting                           CallFunc_GetGameSetting_ReturnValue_1;             // 0x0400(0x0040)(ConstParm)
	struct FMode                                  CallFunc_GetGameModeEntry_ReturnValue;             // 0x0440(0x0370)(ConstParm)
	class AMatchServicedGameState*                CallFunc_GameState__game_state;                    // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_Update_Game_Mode_And_Map) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_Update_Game_Mode_And_Map");
static_assert(sizeof(Panel_CharacterPick_C_Update_Game_Mode_And_Map) == 0x0007B8, "Wrong size on Panel_CharacterPick_C_Update_Game_Mode_And_Map");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, Multi_pick) == 0x000000, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::Multi_pick' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, Mode_config) == 0x000008, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::Mode_config' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, Game_state) == 0x000378, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::Game_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_MakeLiteralText_ReturnValue) == 0x000380, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000398, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_Conv_TextToString_ReturnValue) == 0x0003A0, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x0003B0, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, K2Node_DynamicCast_bSuccess) == 0x0003B8, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_AddToastMessage_ReturnValue) == 0x0003B9, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_IsReadyToFight_ReturnValue) == 0x0003BA, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_IsStandalone_ReturnValue) == 0x0003BB, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_IsValid_ReturnValue) == 0x0003BC, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_Greater_IntInt_ReturnValue) == 0x0003BD, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_GetGameSetting_ReturnValue) == 0x0003C0, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_GetGameSetting_ReturnValue_1) == 0x000400, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_GetGameSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_GetGameModeEntry_ReturnValue) == 0x000440, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_GetGameModeEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Game_Mode_And_Map, CallFunc_GameState__game_state) == 0x0007B0, "Member 'Panel_CharacterPick_C_Update_Game_Mode_And_Map::CallFunc_GameState__game_state' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.Update Left Seconds
// 0x0048 (0x0048 - 0x0000)
struct Panel_CharacterPick_C_Update_Left_Seconds final
{
public:
	int32                                         Left_secs;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE9[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWaitingRoomGameState*                  K2Node_DynamicCast_AsWaiting_Room_Game_State;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEB[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetLeftSeconds_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_Update_Left_Seconds) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_Update_Left_Seconds");
static_assert(sizeof(Panel_CharacterPick_C_Update_Left_Seconds) == 0x000048, "Wrong size on Panel_CharacterPick_C_Update_Left_Seconds");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, Left_secs) == 0x000000, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::Left_secs' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, CallFunc_Max_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, K2Node_DynamicCast_AsWaiting_Room_Game_State) == 0x000038, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::K2Node_DynamicCast_AsWaiting_Room_Game_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_Update_Left_Seconds, CallFunc_GetLeftSeconds_ReturnValue) == 0x000044, "Member 'Panel_CharacterPick_C_Update_Left_Seconds::CallFunc_GetLeftSeconds_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.UpdateCharacterSelect
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_UpdateCharacterSelect final
{
public:
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLOCAL_ChangeCharacterSetting_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_UpdateCharacterSelect) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_UpdateCharacterSelect");
static_assert(sizeof(Panel_CharacterPick_C_UpdateCharacterSelect) == 0x000018, "Wrong size on Panel_CharacterPick_C_UpdateCharacterSelect");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharacterSelect, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_UpdateCharacterSelect::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharacterSelect, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000008, "Member 'Panel_CharacterPick_C_UpdateCharacterSelect::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharacterSelect, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Panel_CharacterPick_C_UpdateCharacterSelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharacterSelect, CallFunc_OnLOCAL_ChangeCharacterSetting_ReturnValue) == 0x000011, "Member 'Panel_CharacterPick_C_UpdateCharacterSelect::CallFunc_OnLOCAL_ChangeCharacterSetting_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.UpdateCharaInfo
// 0x13E0 (0x13E0 - 0x0000)
struct Panel_CharacterPick_C_UpdateCharaInfo final
{
public:
	class AWaitingRoomPlayerState*                _player_state;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCharacterDefine                       Chara_def;                                         // 0x0008(0x09E0)(Edit, BlueprintVisible)
	class AWaitingRoomPlayerState*                Player_state;                                      // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentCharaType_ReturnValue;          // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEC[0x7];                                     // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x09F8(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x13D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_UpdateCharaInfo) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_UpdateCharaInfo");
static_assert(sizeof(Panel_CharacterPick_C_UpdateCharaInfo) == 0x0013E0, "Wrong size on Panel_CharacterPick_C_UpdateCharaInfo");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharaInfo, _player_state) == 0x000000, "Member 'Panel_CharacterPick_C_UpdateCharaInfo::_player_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharaInfo, Chara_def) == 0x000008, "Member 'Panel_CharacterPick_C_UpdateCharaInfo::Chara_def' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharaInfo, Player_state) == 0x0009E8, "Member 'Panel_CharacterPick_C_UpdateCharaInfo::Player_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharaInfo, CallFunc_GetCurrentCharaType_ReturnValue) == 0x0009F0, "Member 'Panel_CharacterPick_C_UpdateCharaInfo::CallFunc_GetCurrentCharaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharaInfo, CallFunc_GetCharacterDefByType__out_data) == 0x0009F8, "Member 'Panel_CharacterPick_C_UpdateCharaInfo::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateCharaInfo, CallFunc_GetCharacterDefByType_ReturnValue) == 0x0013D8, "Member 'Panel_CharacterPick_C_UpdateCharaInfo::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.UpdateLocalPlayer_Character
// 0x0018 (0x0018 - 0x0000)
struct Panel_CharacterPick_C_UpdateLocalPlayer_Character final
{
public:
	class UUserWidget*                            CallFunc_GetPlayerWidget_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_Player_C*                         K2Node_DynamicCast_AsCtrl_Player;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_UpdateLocalPlayer_Character) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_UpdateLocalPlayer_Character");
static_assert(sizeof(Panel_CharacterPick_C_UpdateLocalPlayer_Character) == 0x000018, "Wrong size on Panel_CharacterPick_C_UpdateLocalPlayer_Character");
static_assert(offsetof(Panel_CharacterPick_C_UpdateLocalPlayer_Character, CallFunc_GetPlayerWidget_ReturnValue) == 0x000000, "Member 'Panel_CharacterPick_C_UpdateLocalPlayer_Character::CallFunc_GetPlayerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateLocalPlayer_Character, K2Node_DynamicCast_AsCtrl_Player) == 0x000008, "Member 'Panel_CharacterPick_C_UpdateLocalPlayer_Character::K2Node_DynamicCast_AsCtrl_Player' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateLocalPlayer_Character, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Panel_CharacterPick_C_UpdateLocalPlayer_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdateLocalPlayer_Character, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Panel_CharacterPick_C_UpdateLocalPlayer_Character::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.UpdatePlayerInfo
// 0x0040 (0x0040 - 0x0000)
struct Panel_CharacterPick_C_UpdatePlayerInfo final
{
public:
	class AMatchServicedPlayerState*              _player_state;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DED[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUserWidget*                            Related_obj;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              Ps;                                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UCtrl_Player_C*                         K2Node_DynamicCast_AsCtrl_Player;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUserWidget*                            CallFunc_GetPlayerWidget_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EJoinType                                     CallFunc_GetJoinType_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_UpdatePlayerInfo) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_UpdatePlayerInfo");
static_assert(sizeof(Panel_CharacterPick_C_UpdatePlayerInfo) == 0x000040, "Wrong size on Panel_CharacterPick_C_UpdatePlayerInfo");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, _player_state) == 0x000000, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::_player_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, Related_obj) == 0x000010, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::Related_obj' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, Ps) == 0x000018, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, K2Node_DynamicCast_AsCtrl_Player) == 0x000020, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::K2Node_DynamicCast_AsCtrl_Player' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, CallFunc_GetPlayerWidget_ReturnValue) == 0x000030, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::CallFunc_GetPlayerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, CallFunc_GetJoinType_ReturnValue) == 0x000038, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::CallFunc_GetJoinType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003B, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_UpdatePlayerInfo, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'Panel_CharacterPick_C_UpdatePlayerInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.DEV_GetSelectedMap
// 0x0020 (0x0020 - 0x0000)
struct Panel_CharacterPick_C_DEV_GetSelectedMap final
{
public:
	class FString                                 _map;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSelectedOption_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_DEV_GetSelectedMap) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_DEV_GetSelectedMap");
static_assert(sizeof(Panel_CharacterPick_C_DEV_GetSelectedMap) == 0x000020, "Wrong size on Panel_CharacterPick_C_DEV_GetSelectedMap");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMap, _map) == 0x000000, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMap::_map' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMap, CallFunc_GetSelectedOption_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMap::CallFunc_GetSelectedOption_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.DEV_GetSelectedMode
// 0x0020 (0x0020 - 0x0000)
struct Panel_CharacterPick_C_DEV_GetSelectedMode final
{
public:
	EGameMode                                     _mode;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetSelectedOption_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_StringToEnum__enum_value;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StringToEnum_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_DEV_GetSelectedMode) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_DEV_GetSelectedMode");
static_assert(sizeof(Panel_CharacterPick_C_DEV_GetSelectedMode) == 0x000020, "Wrong size on Panel_CharacterPick_C_DEV_GetSelectedMode");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMode, _mode) == 0x000000, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMode::_mode' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMode, CallFunc_GetSelectedOption_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMode::CallFunc_GetSelectedOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMode, CallFunc_StringToEnum__enum_value) == 0x000018, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMode::CallFunc_StringToEnum__enum_value' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMode, CallFunc_StringToEnum_ReturnValue) == 0x000019, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMode::CallFunc_StringToEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_DEV_GetSelectedMode, CallFunc_GetValidValue_ReturnValue) == 0x00001A, "Member 'Panel_CharacterPick_C_DEV_GetSelectedMode::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.GameState
// 0x0020 (0x0020 - 0x0000)
struct Panel_CharacterPick_C_GameState final
{
public:
	class AMatchServicedGameState*                _game_state;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedGameState*                K2Node_DynamicCast_AsMatch_Serviced_Game_State;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_GameState) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_GameState");
static_assert(sizeof(Panel_CharacterPick_C_GameState) == 0x000020, "Wrong size on Panel_CharacterPick_C_GameState");
static_assert(offsetof(Panel_CharacterPick_C_GameState, _game_state) == 0x000000, "Member 'Panel_CharacterPick_C_GameState::_game_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GameState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Panel_CharacterPick_C_GameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GameState, K2Node_DynamicCast_AsMatch_Serviced_Game_State) == 0x000010, "Member 'Panel_CharacterPick_C_GameState::K2Node_DynamicCast_AsMatch_Serviced_Game_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GameState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Panel_CharacterPick_C_GameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.GetCurrentCharaType
// 0x0020 (0x0020 - 0x0000)
struct Panel_CharacterPick_C_GetCurrentCharaType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              Ps;                                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentCharaType_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF1[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              CallFunc_GetPlayerState__player_state;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_GetCurrentCharaType) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_GetCurrentCharaType");
static_assert(sizeof(Panel_CharacterPick_C_GetCurrentCharaType) == 0x000020, "Wrong size on Panel_CharacterPick_C_GetCurrentCharaType");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentCharaType, _chara_type) == 0x000000, "Member 'Panel_CharacterPick_C_GetCurrentCharaType::_chara_type' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentCharaType, Ps) == 0x000008, "Member 'Panel_CharacterPick_C_GetCurrentCharaType::Ps' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentCharaType, CallFunc_GetCurrentCharaType_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_GetCurrentCharaType::CallFunc_GetCurrentCharaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentCharaType, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Panel_CharacterPick_C_GetCurrentCharaType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetCurrentCharaType, CallFunc_GetPlayerState__player_state) == 0x000018, "Member 'Panel_CharacterPick_C_GetCurrentCharaType::CallFunc_GetPlayerState__player_state' has a wrong offset!");

// Function Panel_CharacterPick.Panel_CharacterPick_C.GetPlayerState
// 0x0030 (0x0030 - 0x0000)
struct Panel_CharacterPick_C_GetPlayerState final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              _player_state;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_CharacterPick_C_GetPlayerState) == 0x000008, "Wrong alignment on Panel_CharacterPick_C_GetPlayerState");
static_assert(sizeof(Panel_CharacterPick_C_GetPlayerState) == 0x000030, "Wrong size on Panel_CharacterPick_C_GetPlayerState");
static_assert(offsetof(Panel_CharacterPick_C_GetPlayerState, NewParam) == 0x000000, "Member 'Panel_CharacterPick_C_GetPlayerState::NewParam' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetPlayerState, _player_state) == 0x000008, "Member 'Panel_CharacterPick_C_GetPlayerState::_player_state' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetPlayerState, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'Panel_CharacterPick_C_GetPlayerState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetPlayerState, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Panel_CharacterPick_C_GetPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetPlayerState, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000020, "Member 'Panel_CharacterPick_C_GetPlayerState::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(Panel_CharacterPick_C_GetPlayerState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Panel_CharacterPick_C_GetPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

