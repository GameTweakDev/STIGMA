#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LVITEM_Character

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function LVITEM_Character.LVITEM_Character_C.Config
// 0x09E8 (0x09E8 - 0x0000)
struct LVITEM_Character_C_Config final
{
public:
	struct FCharacterDefine                       _define;                                           // 0x0000(0x09E0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          _is_possessed;                                     // 0x09E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_Config) == 0x000008, "Wrong alignment on LVITEM_Character_C_Config");
static_assert(sizeof(LVITEM_Character_C_Config) == 0x0009E8, "Wrong size on LVITEM_Character_C_Config");
static_assert(offsetof(LVITEM_Character_C_Config, _define) == 0x000000, "Member 'LVITEM_Character_C_Config::_define' has a wrong offset!");
static_assert(offsetof(LVITEM_Character_C_Config, _is_possessed) == 0x0009E0, "Member 'LVITEM_Character_C_Config::_is_possessed' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.GetItemID
// 0x0010 (0x0010 - 0x0000)
struct LVITEM_Character_C_GetItemID final
{
public:
	struct FItemID                                Item_ID;                                           // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_GetItemID) == 0x000008, "Wrong alignment on LVITEM_Character_C_GetItemID");
static_assert(sizeof(LVITEM_Character_C_GetItemID) == 0x000010, "Wrong size on LVITEM_Character_C_GetItemID");
static_assert(offsetof(LVITEM_Character_C_GetItemID, Item_ID) == 0x000000, "Member 'LVITEM_Character_C_GetItemID::Item_ID' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.SetCurrentCharacterType
// 0x0001 (0x0001 - 0x0000)
struct LVITEM_Character_C_SetCurrentCharacterType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_SetCurrentCharacterType) == 0x000001, "Wrong alignment on LVITEM_Character_C_SetCurrentCharacterType");
static_assert(sizeof(LVITEM_Character_C_SetCurrentCharacterType) == 0x000001, "Wrong size on LVITEM_Character_C_SetCurrentCharacterType");
static_assert(offsetof(LVITEM_Character_C_SetCurrentCharacterType, _chara_type) == 0x000000, "Member 'LVITEM_Character_C_SetCurrentCharacterType::_chara_type' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct LVITEM_Character_C_SetEnable final
{
public:
	bool                                          _is_enable;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_SetEnable) == 0x000001, "Wrong alignment on LVITEM_Character_C_SetEnable");
static_assert(sizeof(LVITEM_Character_C_SetEnable) == 0x000001, "Wrong size on LVITEM_Character_C_SetEnable");
static_assert(offsetof(LVITEM_Character_C_SetEnable, _is_enable) == 0x000000, "Member 'LVITEM_Character_C_SetEnable::_is_enable' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.GetCharacterName
// 0x0018 (0x0018 - 0x0000)
struct LVITEM_Character_C_GetCharacterName final
{
public:
	class FText                                   _Name;                                             // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(LVITEM_Character_C_GetCharacterName) == 0x000008, "Wrong alignment on LVITEM_Character_C_GetCharacterName");
static_assert(sizeof(LVITEM_Character_C_GetCharacterName) == 0x000018, "Wrong size on LVITEM_Character_C_GetCharacterName");
static_assert(offsetof(LVITEM_Character_C_GetCharacterName, _Name) == 0x000000, "Member 'LVITEM_Character_C_GetCharacterName::_Name' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.GetCharacterType
// 0x0002 (0x0002 - 0x0000)
struct LVITEM_Character_C_GetCharacterType final
{
public:
	ECharaType                                    _type;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCharaType_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_GetCharacterType) == 0x000001, "Wrong alignment on LVITEM_Character_C_GetCharacterType");
static_assert(sizeof(LVITEM_Character_C_GetCharacterType) == 0x000002, "Wrong size on LVITEM_Character_C_GetCharacterType");
static_assert(offsetof(LVITEM_Character_C_GetCharacterType, _type) == 0x000000, "Member 'LVITEM_Character_C_GetCharacterType::_type' has a wrong offset!");
static_assert(offsetof(LVITEM_Character_C_GetCharacterType, CallFunc_GetCharaType_ReturnValue) == 0x000001, "Member 'LVITEM_Character_C_GetCharacterType::CallFunc_GetCharaType_ReturnValue' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.GetIcon
// 0x0590 (0x0590 - 0x0000)
struct LVITEM_Character_C_GetIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              _Icon;                                             // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FConfig_Game                           CallFunc_GetGameConfig_ReturnValue;                // 0x0028(0x0560)(ConstParm)
	bool                                          CallFunc_IsUpcommingItem_ReturnValue;              // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_GetIcon) == 0x000008, "Wrong alignment on LVITEM_Character_C_GetIcon");
static_assert(sizeof(LVITEM_Character_C_GetIcon) == 0x000590, "Wrong size on LVITEM_Character_C_GetIcon");
static_assert(offsetof(LVITEM_Character_C_GetIcon, _Icon) == 0x000000, "Member 'LVITEM_Character_C_GetIcon::_Icon' has a wrong offset!");
static_assert(offsetof(LVITEM_Character_C_GetIcon, CallFunc_GetGameConfig_ReturnValue) == 0x000028, "Member 'LVITEM_Character_C_GetIcon::CallFunc_GetGameConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(LVITEM_Character_C_GetIcon, CallFunc_IsUpcommingItem_ReturnValue) == 0x000588, "Member 'LVITEM_Character_C_GetIcon::CallFunc_IsUpcommingItem_ReturnValue' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.IsEnable
// 0x0001 (0x0001 - 0x0000)
struct LVITEM_Character_C_IsEnable final
{
public:
	bool                                          _is_enable;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_IsEnable) == 0x000001, "Wrong alignment on LVITEM_Character_C_IsEnable");
static_assert(sizeof(LVITEM_Character_C_IsEnable) == 0x000001, "Wrong size on LVITEM_Character_C_IsEnable");
static_assert(offsetof(LVITEM_Character_C_IsEnable, _is_enable) == 0x000000, "Member 'LVITEM_Character_C_IsEnable::_is_enable' has a wrong offset!");

// Function LVITEM_Character.LVITEM_Character_C.IsSelected
// 0x0003 (0x0003 - 0x0000)
struct LVITEM_Character_C_IsSelected final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCharaType_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LVITEM_Character_C_IsSelected) == 0x000001, "Wrong alignment on LVITEM_Character_C_IsSelected");
static_assert(sizeof(LVITEM_Character_C_IsSelected) == 0x000003, "Wrong size on LVITEM_Character_C_IsSelected");
static_assert(offsetof(LVITEM_Character_C_IsSelected, _selected) == 0x000000, "Member 'LVITEM_Character_C_IsSelected::_selected' has a wrong offset!");
static_assert(offsetof(LVITEM_Character_C_IsSelected, CallFunc_GetCharaType_ReturnValue) == 0x000001, "Member 'LVITEM_Character_C_IsSelected::CallFunc_GetCharaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LVITEM_Character_C_IsSelected, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'LVITEM_Character_C_IsSelected::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

