#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: CoinBase_BP

#include "Basic.hpp"

#include "BPGLib_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function CoinBase_BP.CoinBase_BP_C.ExecuteUbergraph_CoinBase_BP
// 0x0008 (0x0008 - 0x0000)
struct CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP) == 0x000004, "Wrong alignment on CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP");
static_assert(sizeof(CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP) == 0x000008, "Wrong size on CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP");
static_assert(offsetof(CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP, EntryPoint) == 0x000000, "Member 'CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'CoinBase_BP_C_ExecuteUbergraph_CoinBase_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function CoinBase_BP.CoinBase_BP_C.OnQueryAddIndiactor
// 0x0608 (0x0608 - 0x0000)
struct CoinBase_BP_C_OnQueryAddIndiactor final
{
public:
	class ABPGPlayerController*                   Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EIndicatorType                                _type;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FIndicatorData                         _out_detail;                                       // 0x0010(0x0028)(Parm, OutParm, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F2[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Game                           CallFunc_GetGameConfig_ReturnValue;                // 0x0040(0x0560)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F3[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Indicator_Ping_Default_C*           CallFunc_Create_ReturnValue;                       // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Indicator_Coin_C*                   CallFunc_Create_ReturnValue_1;                     // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FIndicatorData                         K2Node_MakeStruct_IndicatorData;                   // 0x05B8(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FIndicatorData                         K2Node_MakeStruct_IndicatorData_1;                 // 0x05E0(0x0028)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CoinBase_BP_C_OnQueryAddIndiactor) == 0x000008, "Wrong alignment on CoinBase_BP_C_OnQueryAddIndiactor");
static_assert(sizeof(CoinBase_BP_C_OnQueryAddIndiactor) == 0x000608, "Wrong size on CoinBase_BP_C_OnQueryAddIndiactor");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, Controller) == 0x000000, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::Controller' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, _type) == 0x000008, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::_type' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, _out_detail) == 0x000010, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::_out_detail' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, ReturnValue) == 0x000038, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, CallFunc_GetGameConfig_ReturnValue) == 0x000040, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::CallFunc_GetGameConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, K2Node_SwitchEnum_CmpSuccess) == 0x0005A0, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, CallFunc_Create_ReturnValue) == 0x0005A8, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, CallFunc_Create_ReturnValue_1) == 0x0005B0, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, K2Node_MakeStruct_IndicatorData) == 0x0005B8, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::K2Node_MakeStruct_IndicatorData' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryAddIndiactor, K2Node_MakeStruct_IndicatorData_1) == 0x0005E0, "Member 'CoinBase_BP_C_OnQueryAddIndiactor::K2Node_MakeStruct_IndicatorData_1' has a wrong offset!");

// Function CoinBase_BP.CoinBase_BP_C.OnQueryGetDisplayName
// 0x00A0 (0x00A0 - 0x0000)
struct CoinBase_BP_C_OnQueryGetDisplayName final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(CoinBase_BP_C_OnQueryGetDisplayName) == 0x000008, "Wrong alignment on CoinBase_BP_C_OnQueryGetDisplayName");
static_assert(sizeof(CoinBase_BP_C_OnQueryGetDisplayName) == 0x0000A0, "Wrong size on CoinBase_BP_C_OnQueryGetDisplayName");
static_assert(offsetof(CoinBase_BP_C_OnQueryGetDisplayName, _type) == 0x000000, "Member 'CoinBase_BP_C_OnQueryGetDisplayName::_type' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryGetDisplayName, ReturnValue) == 0x000008, "Member 'CoinBase_BP_C_OnQueryGetDisplayName::ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryGetDisplayName, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'CoinBase_BP_C_OnQueryGetDisplayName::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryGetDisplayName, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'CoinBase_BP_C_OnQueryGetDisplayName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryGetDisplayName, K2Node_MakeArray_Array) == 0x000078, "Member 'CoinBase_BP_C_OnQueryGetDisplayName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryGetDisplayName, CallFunc_Format_ReturnValue) == 0x000088, "Member 'CoinBase_BP_C_OnQueryGetDisplayName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function CoinBase_BP.CoinBase_BP_C.OnQueryVisibility
// 0x0018 (0x0018 - 0x0000)
struct CoinBase_BP_C_OnQueryVisibility final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F5[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoinBase_BP_C_OnQueryVisibility) == 0x000008, "Wrong alignment on CoinBase_BP_C_OnQueryVisibility");
static_assert(sizeof(CoinBase_BP_C_OnQueryVisibility) == 0x000018, "Wrong size on CoinBase_BP_C_OnQueryVisibility");
static_assert(offsetof(CoinBase_BP_C_OnQueryVisibility, _type) == 0x000000, "Member 'CoinBase_BP_C_OnQueryVisibility::_type' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryVisibility, ReturnValue) == 0x000001, "Member 'CoinBase_BP_C_OnQueryVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryVisibility, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000008, "Member 'CoinBase_BP_C_OnQueryVisibility::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CoinBase_BP_C_OnQueryVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'CoinBase_BP_C_OnQueryVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'CoinBase_BP_C_OnQueryVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CoinBase_BP.CoinBase_BP_C.OnQueryWorldTransform
// 0x0190 (0x0190 - 0x0000)
struct CoinBase_BP_C_OnQueryWorldTransform final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F6[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoinBase_BP_C_OnQueryWorldTransform) == 0x000010, "Wrong alignment on CoinBase_BP_C_OnQueryWorldTransform");
static_assert(sizeof(CoinBase_BP_C_OnQueryWorldTransform) == 0x000190, "Wrong size on CoinBase_BP_C_OnQueryWorldTransform");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, _type) == 0x000000, "Member 'CoinBase_BP_C_OnQueryWorldTransform::_type' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, ReturnValue) == 0x000010, "Member 'CoinBase_BP_C_OnQueryWorldTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'CoinBase_BP_C_OnQueryWorldTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'CoinBase_BP_C_OnQueryWorldTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'CoinBase_BP_C_OnQueryWorldTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'CoinBase_BP_C_OnQueryWorldTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'CoinBase_BP_C_OnQueryWorldTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CoinBase_BP_C_OnQueryWorldTransform, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'CoinBase_BP_C_OnQueryWorldTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function CoinBase_BP.CoinBase_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CoinBase_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoinBase_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on CoinBase_BP_C_ReceiveTick");
static_assert(sizeof(CoinBase_BP_C_ReceiveTick) == 0x000004, "Wrong size on CoinBase_BP_C_ReceiveTick");
static_assert(offsetof(CoinBase_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CoinBase_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function CoinBase_BP.CoinBase_BP_C.RemoveIndicator
// 0x0001 (0x0001 - 0x0000)
struct CoinBase_BP_C_RemoveIndicator final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CoinBase_BP_C_RemoveIndicator) == 0x000001, "Wrong alignment on CoinBase_BP_C_RemoveIndicator");
static_assert(sizeof(CoinBase_BP_C_RemoveIndicator) == 0x000001, "Wrong size on CoinBase_BP_C_RemoveIndicator");
static_assert(offsetof(CoinBase_BP_C_RemoveIndicator, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'CoinBase_BP_C_RemoveIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

