#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Question_SelectMulti

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Question_SelectMulti.UI_Question_SelectMulti_C
// 0x0098 (0x0608 - 0x0570)
class UUI_Question_SelectMulti_C final : public UCtrl_QuestionBase
{
public:
	class UUniformGridPanel*                      Questions;                                         // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSurveyQuestion                        Question;                                          // 0x0578(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCtrl_Survey_SelectMulti_C*>     Ctrls;                                             // 0x05F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ColumnCount;                                       // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowCount;                                          // 0x0604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetQuestion(struct FSurveyQuestion& _question);
	struct FSurveyAnswer OnGetAnswer();
	void GetRowColumnIndex(int32 _idx, int32* _row, int32* _column);
	void DetermineDimension();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Question_SelectMulti_C">();
	}
	static class UUI_Question_SelectMulti_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Question_SelectMulti_C>();
	}
};
static_assert(alignof(UUI_Question_SelectMulti_C) == 0x000008, "Wrong alignment on UUI_Question_SelectMulti_C");
static_assert(sizeof(UUI_Question_SelectMulti_C) == 0x000608, "Wrong size on UUI_Question_SelectMulti_C");
static_assert(offsetof(UUI_Question_SelectMulti_C, Questions) == 0x000570, "Member 'UUI_Question_SelectMulti_C::Questions' has a wrong offset!");
static_assert(offsetof(UUI_Question_SelectMulti_C, Question) == 0x000578, "Member 'UUI_Question_SelectMulti_C::Question' has a wrong offset!");
static_assert(offsetof(UUI_Question_SelectMulti_C, Ctrls) == 0x0005F0, "Member 'UUI_Question_SelectMulti_C::Ctrls' has a wrong offset!");
static_assert(offsetof(UUI_Question_SelectMulti_C, ColumnCount) == 0x000600, "Member 'UUI_Question_SelectMulti_C::ColumnCount' has a wrong offset!");
static_assert(offsetof(UUI_Question_SelectMulti_C, RowCount) == 0x000604, "Member 'UUI_Question_SelectMulti_C::RowCount' has a wrong offset!");

}

