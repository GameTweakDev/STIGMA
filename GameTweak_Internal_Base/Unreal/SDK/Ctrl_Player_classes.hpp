#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Player

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_Player.Ctrl_Player_C
// 0x0080 (0x0340 - 0x02C0)
class UCtrl_Player_C final : public UUserWidget
{
public:
	class UImage*                                 IMG_MineBackground;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Ready;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_TeamColorReady;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProfileCard_Common_C*                  ProfileCard;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProfileCard_WaitingPlayer_C*           ProfileCard_WaitingPlayer;                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Ready_Panel;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UThrobber*                              THROB_Dots;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_State;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AMatchServicedPlayerState*              PlayerState;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldBeHidden;                                    // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D97[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TSoftObjectPtr<class UTexture2D>              DefaltEmblemIcon;                                  // 0x0310(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ShowCharacterInsteadEmblem;                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindPlayer(class AMatchServicedPlayerState* _ps, bool _should_be_hidden);
	void UpdateAll();
	void UpdateCharacter();
	void UpdatePlayer();
	void UpdateState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_Player_C">();
	}
	static class UCtrl_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_Player_C>();
	}
};
static_assert(alignof(UCtrl_Player_C) == 0x000008, "Wrong alignment on UCtrl_Player_C");
static_assert(sizeof(UCtrl_Player_C) == 0x000340, "Wrong size on UCtrl_Player_C");
static_assert(offsetof(UCtrl_Player_C, IMG_MineBackground) == 0x0002C0, "Member 'UCtrl_Player_C::IMG_MineBackground' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, IMG_Ready) == 0x0002C8, "Member 'UCtrl_Player_C::IMG_Ready' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, IMG_TeamColorReady) == 0x0002D0, "Member 'UCtrl_Player_C::IMG_TeamColorReady' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, ProfileCard) == 0x0002D8, "Member 'UCtrl_Player_C::ProfileCard' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, ProfileCard_WaitingPlayer) == 0x0002E0, "Member 'UCtrl_Player_C::ProfileCard_WaitingPlayer' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, Ready_Panel) == 0x0002E8, "Member 'UCtrl_Player_C::Ready_Panel' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, THROB_Dots) == 0x0002F0, "Member 'UCtrl_Player_C::THROB_Dots' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, TXT_State) == 0x0002F8, "Member 'UCtrl_Player_C::TXT_State' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, PlayerState) == 0x000300, "Member 'UCtrl_Player_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, ShouldBeHidden) == 0x000308, "Member 'UCtrl_Player_C::ShouldBeHidden' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, DefaltEmblemIcon) == 0x000310, "Member 'UCtrl_Player_C::DefaltEmblemIcon' has a wrong offset!");
static_assert(offsetof(UCtrl_Player_C, ShowCharacterInsteadEmblem) == 0x000338, "Member 'UCtrl_Player_C::ShowCharacterInsteadEmblem' has a wrong offset!");

}

