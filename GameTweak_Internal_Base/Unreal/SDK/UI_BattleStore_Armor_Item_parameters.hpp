#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_BattleStore_Armor_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.ExecuteUbergraph_UI_BattleStore_Armor_Item
// 0x0004 (0x0004 - 0x0000)
struct UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item) == 0x000004, "Wrong alignment on UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item) == 0x000004, "Wrong size on UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item, EntryPoint) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_ExecuteUbergraph_UI_BattleStore_Armor_Item::EntryPoint' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.InitializeMaterial
// 0x0010 (0x0010 - 0x0000)
struct UI_BattleStore_Armor_Item_C_InitializeMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_InitializeMaterial) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_InitializeMaterial");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_InitializeMaterial) == 0x000010, "Wrong size on UI_BattleStore_Armor_Item_C_InitializeMaterial");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_InitializeMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_InitializeMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_InitializeMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_InitializeMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.Set Armor Resource
// 0x00B8 (0x00B8 - 0x0000)
struct UI_BattleStore_Armor_Item_C_Set_Armor_Resource final
{
public:
	class ACharaBase*                             Chara;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAverageArmor_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3848[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentAverageArmor_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3849[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_As____2D;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0048(0x0058)(HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_Set_Armor_Resource");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource) == 0x0000B8, "Wrong size on UI_BattleStore_Armor_Item_C_Set_Armor_Resource");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, Chara) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::Chara' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_GetMaxAverageArmor_ReturnValue) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_GetMaxAverageArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_GetCurrentAverageArmor_ReturnValue) == 0x000018, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_GetCurrentAverageArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000030, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, K2Node_DynamicCast_As____2D) == 0x000038, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::K2Node_DynamicCast_As____2D' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, K2Node_MakeStruct_SlateFontInfo) == 0x000048, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_FMax_A_ImplicitCast) == 0x0000A0, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000B0, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Set_Armor_Resource, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000B4, "Member 'UI_BattleStore_Armor_Item_C_Set_Armor_Resource::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.SetCoin
// 0x0050 (0x0050 - 0x0000)
struct UI_BattleStore_Armor_Item_C_SetCoin final
{
public:
	bool                                          CallFunc_IsFullyArmor_is_fully;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	bool                                          CallFunc_CanPurchase_can_purchase;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384D[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_SetCoin) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_SetCoin");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_SetCoin) == 0x000050, "Wrong size on UI_BattleStore_Armor_Item_C_SetCoin");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_SetCoin, CallFunc_IsFullyArmor_is_fully) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_SetCoin::CallFunc_IsFullyArmor_is_fully' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_SetCoin, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'UI_BattleStore_Armor_Item_C_SetCoin::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_SetCoin, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'UI_BattleStore_Armor_Item_C_SetCoin::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_SetCoin, CallFunc_CanPurchase_can_purchase) == 0x00002C, "Member 'UI_BattleStore_Armor_Item_C_SetCoin::CallFunc_CanPurchase_can_purchase' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_SetCoin, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'UI_BattleStore_Armor_Item_C_SetCoin::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_SetCoin, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'UI_BattleStore_Armor_Item_C_SetCoin::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.Should Update
// 0x0038 (0x0038 - 0x0000)
struct UI_BattleStore_Armor_Item_C_Should_Update final
{
public:
	class ABattlePlayerState*                     Ps;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_value;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MoneyChanged;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ArmorChanged;                                      // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384F[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetInGameMoney_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             CallFunc_GetOwnCharacter_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3850[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_GetCurrentAverageArmor_ReturnValue;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3851[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentArmor_ImplicitCast;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_Should_Update) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_Should_Update");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_Should_Update) == 0x000038, "Wrong size on UI_BattleStore_Armor_Item_C_Should_Update");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, Ps) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::Ps' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, Out_value) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::Out_value' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, MoneyChanged) == 0x000009, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::MoneyChanged' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, ArmorChanged) == 0x00000A, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::ArmorChanged' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_GetInGameMoney_ReturnValue) == 0x00000C, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_GetInGameMoney_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_GetOwnCharacter_ReturnValue) == 0x000010, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_GetOwnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_GetCurrentAverageArmor_ReturnValue) == 0x00001C, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_GetCurrentAverageArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000021, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000022, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000028, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_Should_Update, K2Node_VariableSet_CurrentArmor_ImplicitCast) == 0x000030, "Member 'UI_BattleStore_Armor_Item_C_Should_Update::K2Node_VariableSet_CurrentArmor_ImplicitCast' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.UpdateAlert
// 0x0010 (0x0010 - 0x0000)
struct UI_BattleStore_Armor_Item_C_UpdateAlert final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFullyArmor_is_fully;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_UpdateAlert) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_UpdateAlert");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_UpdateAlert) == 0x000010, "Wrong size on UI_BattleStore_Armor_Item_C_UpdateAlert");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateAlert, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_UpdateAlert::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateAlert, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_UpdateAlert::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateAlert, CallFunc_IsFullyArmor_is_fully) == 0x000009, "Member 'UI_BattleStore_Armor_Item_C_UpdateAlert::CallFunc_IsFullyArmor_is_fully' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.UpdateArmor
// 0x0238 (0x0238 - 0x0000)
struct UI_BattleStore_Armor_Item_C_UpdateArmor final
{
public:
	class ABattlePlayerState*                     Ps;                                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             Chara;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FUserInBattle                          CallFunc_GetUser_ReturnValue;                      // 0x0010(0x00A0)(ConstParm)
	int32                                         CallFunc_GetBattleStoreItemPrice_ReturnValue;      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3852[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsPercent_Float_ReturnValue;              // 0x00C8(0x0018)()
	class ACharaBase*                             CallFunc_GetOwnCharacter_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3853[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B8(0x0018)()
	float                                         CallFunc_GetMaxAverageArmor_ReturnValue;           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3854[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsPercent_Float_ReturnValue_1;            // 0x01E0(0x0018)()
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Should_Update_out_value;                  // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3855[0x6];                                     // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AsPercent_Float_Value_ImplicitCast;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3856[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AsPercent_Float_Value_ImplicitCast_1;     // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_UpdateArmor) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_UpdateArmor");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_UpdateArmor) == 0x000238, "Wrong size on UI_BattleStore_Armor_Item_C_UpdateArmor");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, Ps) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::Ps' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, Chara) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::Chara' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_GetUser_ReturnValue) == 0x000010, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_GetUser_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_GetBattleStoreItemPrice_ReturnValue) == 0x0000B0, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_GetBattleStoreItemPrice_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000B4, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000B8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_AsPercent_Float_ReturnValue) == 0x0000C8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_AsPercent_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_GetOwnCharacter_ReturnValue) == 0x0000E0, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_GetOwnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_MakeLiteralText_ReturnValue) == 0x000140, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, K2Node_MakeArray_Array) == 0x0001A8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Format_ReturnValue) == 0x0001B8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_GetMaxAverageArmor_ReturnValue) == 0x0001D0, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_GetMaxAverageArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001D8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_AsPercent_Float_ReturnValue_1) == 0x0001E0, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_AsPercent_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_GetLocalPlayerController_ReturnValue) == 0x0001F8, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, K2Node_DynamicCast_AsBattle_Player_State) == 0x000200, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Should_Update_out_value) == 0x000209, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Should_Update_out_value' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000210, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000218, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_AsPercent_Float_Value_ImplicitCast) == 0x000220, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_AsPercent_Float_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000228, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateArmor, CallFunc_AsPercent_Float_Value_ImplicitCast_1) == 0x000230, "Member 'UI_BattleStore_Armor_Item_C_UpdateArmor::CallFunc_AsPercent_Float_Value_ImplicitCast_1' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.UpdateHover
// 0x0005 (0x0005 - 0x0000)
struct UI_BattleStore_Armor_Item_C_UpdateHover final
{
public:
	bool                                          Is_hover;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFullyArmor_is_fully;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPurchase_can_purchase;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_UpdateHover) == 0x000001, "Wrong alignment on UI_BattleStore_Armor_Item_C_UpdateHover");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_UpdateHover) == 0x000005, "Wrong size on UI_BattleStore_Armor_Item_C_UpdateHover");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateHover, Is_hover) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_UpdateHover::Is_hover' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateHover, CallFunc_IsFullyArmor_is_fully) == 0x000001, "Member 'UI_BattleStore_Armor_Item_C_UpdateHover::CallFunc_IsFullyArmor_is_fully' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateHover, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'UI_BattleStore_Armor_Item_C_UpdateHover::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateHover, CallFunc_CanPurchase_can_purchase) == 0x000003, "Member 'UI_BattleStore_Armor_Item_C_UpdateHover::CallFunc_CanPurchase_can_purchase' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_UpdateHover, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'UI_BattleStore_Armor_Item_C_UpdateHover::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.CanPurchase
// 0x0030 (0x0030 - 0x0000)
struct UI_BattleStore_Armor_Item_C_CanPurchase final
{
public:
	bool                                          Can_purchase;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3857[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3858[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3859[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetInGameMoney_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_CanPurchase) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_CanPurchase");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_CanPurchase) == 0x000030, "Wrong size on UI_BattleStore_Armor_Item_C_CanPurchase");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, Can_purchase) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::Can_purchase' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, K2Node_DynamicCast_AsBattle_Player_State) == 0x000018, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, CallFunc_GetInGameMoney_ReturnValue) == 0x000024, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::CallFunc_GetInGameMoney_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_CanPurchase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'UI_BattleStore_Armor_Item_C_CanPurchase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UI_BattleStore_Armor_Item.UI_BattleStore_Armor_Item_C.IsFullyArmor
// 0x0040 (0x0040 - 0x0000)
struct UI_BattleStore_Armor_Item_C_IsFullyArmor final
{
public:
	bool                                          Is_fully;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385C[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_GetMaxAverageArmor_ReturnValue;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_385D[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattleStore_Armor_Item_C_IsFullyArmor) == 0x000008, "Wrong alignment on UI_BattleStore_Armor_Item_C_IsFullyArmor");
static_assert(sizeof(UI_BattleStore_Armor_Item_C_IsFullyArmor) == 0x000040, "Wrong size on UI_BattleStore_Armor_Item_C_IsFullyArmor");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, Is_fully) == 0x000000, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::Is_fully' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000010, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, K2Node_DynamicCast_AsBattle_Player_State) == 0x000020, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, CallFunc_GetMaxAverageArmor_ReturnValue) == 0x00002C, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::CallFunc_GetMaxAverageArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattleStore_Armor_Item_C_IsFullyArmor, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000038, "Member 'UI_BattleStore_Armor_Item_C_IsFullyArmor::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

}

