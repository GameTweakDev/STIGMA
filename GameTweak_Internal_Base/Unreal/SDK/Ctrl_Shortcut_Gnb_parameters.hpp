#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Shortcut_Gnb

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function ctrl_Shortcut_Gnb.ctrl_Shortcut_Gnb_C.ExecuteUbergraph_ctrl_Shortcut_Gnb
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb) == 0x000004, "Wrong alignment on Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb");
static_assert(sizeof(Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb) == 0x000008, "Wrong size on Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb");
static_assert(offsetof(Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb, EntryPoint) == 0x000000, "Member 'Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Ctrl_Shortcut_Gnb_C_ExecuteUbergraph_ctrl_Shortcut_Gnb::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ctrl_Shortcut_Gnb.ctrl_Shortcut_Gnb_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Shortcut_Gnb_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Shortcut_Gnb_C_PreConstruct) == 0x000001, "Wrong alignment on Ctrl_Shortcut_Gnb_C_PreConstruct");
static_assert(sizeof(Ctrl_Shortcut_Gnb_C_PreConstruct) == 0x000001, "Wrong size on Ctrl_Shortcut_Gnb_C_PreConstruct");
static_assert(offsetof(Ctrl_Shortcut_Gnb_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Ctrl_Shortcut_Gnb_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ctrl_Shortcut_Gnb.ctrl_Shortcut_Gnb_C.SetFontSize
// 0x0060 (0x0060 - 0x0000)
struct Ctrl_Shortcut_Gnb_C_SetFontSize final
{
public:
	float                                         Font_Size;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0008(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Shortcut_Gnb_C_SetFontSize) == 0x000008, "Wrong alignment on Ctrl_Shortcut_Gnb_C_SetFontSize");
static_assert(sizeof(Ctrl_Shortcut_Gnb_C_SetFontSize) == 0x000060, "Wrong size on Ctrl_Shortcut_Gnb_C_SetFontSize");
static_assert(offsetof(Ctrl_Shortcut_Gnb_C_SetFontSize, Font_Size) == 0x000000, "Member 'Ctrl_Shortcut_Gnb_C_SetFontSize::Font_Size' has a wrong offset!");
static_assert(offsetof(Ctrl_Shortcut_Gnb_C_SetFontSize, K2Node_MakeStruct_SlateFontInfo) == 0x000008, "Member 'Ctrl_Shortcut_Gnb_C_SetFontSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

