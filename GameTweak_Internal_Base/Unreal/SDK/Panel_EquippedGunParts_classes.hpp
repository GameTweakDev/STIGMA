#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Panel_EquippedGunParts

#include "Basic.hpp"

#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Panel_EquippedGunParts.Panel_EquippedGunParts_C
// 0x0050 (0x0540 - 0x04F0)
class UPanel_EquippedGunParts_C final : public UPreviewableWidget
{
public:
	class UItem_EquippedGunPart_C*                Item_Chm_Body;                                     // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Chm_Magazine;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Front;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Magazine;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Stk_Body;                                     // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Stk_Slide;                                    // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Top;                                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItem_EquippedGunPart_C*                Item_Under;                                        // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_CntEquippedParts;                              // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_CntTotalParts;                                 // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetGunObject(class UGunObject* _gun_object);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Panel_EquippedGunParts_C">();
	}
	static class UPanel_EquippedGunParts_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPanel_EquippedGunParts_C>();
	}
};
static_assert(alignof(UPanel_EquippedGunParts_C) == 0x000008, "Wrong alignment on UPanel_EquippedGunParts_C");
static_assert(sizeof(UPanel_EquippedGunParts_C) == 0x000540, "Wrong size on UPanel_EquippedGunParts_C");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Chm_Body) == 0x0004F0, "Member 'UPanel_EquippedGunParts_C::Item_Chm_Body' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Chm_Magazine) == 0x0004F8, "Member 'UPanel_EquippedGunParts_C::Item_Chm_Magazine' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Front) == 0x000500, "Member 'UPanel_EquippedGunParts_C::Item_Front' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Magazine) == 0x000508, "Member 'UPanel_EquippedGunParts_C::Item_Magazine' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Stk_Body) == 0x000510, "Member 'UPanel_EquippedGunParts_C::Item_Stk_Body' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Stk_Slide) == 0x000518, "Member 'UPanel_EquippedGunParts_C::Item_Stk_Slide' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Top) == 0x000520, "Member 'UPanel_EquippedGunParts_C::Item_Top' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, Item_Under) == 0x000528, "Member 'UPanel_EquippedGunParts_C::Item_Under' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, TXT_CntEquippedParts) == 0x000530, "Member 'UPanel_EquippedGunParts_C::TXT_CntEquippedParts' has a wrong offset!");
static_assert(offsetof(UPanel_EquippedGunParts_C, TXT_CntTotalParts) == 0x000538, "Member 'UPanel_EquippedGunParts_C::TXT_CntTotalParts' has a wrong offset!");

}

