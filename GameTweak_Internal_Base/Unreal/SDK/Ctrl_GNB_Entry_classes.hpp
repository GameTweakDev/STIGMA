#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_GNB_Entry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "GNB_Entry_structs.hpp"
#include "BPGLib_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_GNB_Entry.Ctrl_GNB_Entry_C
// 0x01A8 (0x0698 - 0x04F0)
class UCtrl_GNB_Entry_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                BTN_Body;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Glow;                                          // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Underline;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Title;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   Title;                                             // 0x0528(0x0018)(Edit, BlueprintVisible)
	ELobbyPage                                    LobbyPage;                                         // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4180[0x3];                                     // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            TextColor_Normal;                                  // 0x0544(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            TextColor_Hover;                                   // 0x0558(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            TextColor_Selected;                                // 0x056C(0x0014)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         Font_Normal;                                       // 0x0580(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateFontInfo                         Font_Selected;                                     // 0x05D8(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FGNB_Entry>                     SubPages;                                          // 0x0630(0x0010)(Edit, BlueprintVisible)
	TSet<ELobbyPage>                              InclusivePages;                                    // 0x0640(0x0050)(Edit, BlueprintVisible)
	class USoundBase*                             ClickSound;                                        // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateTitle();
	void UpdateSelection();
	void SetSelectedPage(ELobbyPage _page, TArray<struct FGNB_Entry>* _sub_pages);
	bool OnSynchronizeProperties();
	void OnEVENT_Select_End(bool _selected);
	void OnClicked__DelegateSignature(ELobbyPage _page, EItemCategory _option);
	void OnButtonClick();
	struct FSlateBrush Get_IMG_Glow_Brush();
	void ExecuteUbergraph_Ctrl_GNB_Entry(int32 EntryPoint);
	void BndEvt__Ctrl_GNB_Entry_BTN_Body_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	ESlateVisibility BIND_Underline_Visibility();
	struct FSlateColor BIND_Title_Color();
	struct FLinearColor BIND_BG_Alpha();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_GNB_Entry_C">();
	}
	static class UCtrl_GNB_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_GNB_Entry_C>();
	}
};
static_assert(alignof(UCtrl_GNB_Entry_C) == 0x000008, "Wrong alignment on UCtrl_GNB_Entry_C");
static_assert(sizeof(UCtrl_GNB_Entry_C) == 0x000698, "Wrong size on UCtrl_GNB_Entry_C");
static_assert(offsetof(UCtrl_GNB_Entry_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_GNB_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, BTN_Body) == 0x0004F8, "Member 'UCtrl_GNB_Entry_C::BTN_Body' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, Img_Glow) == 0x000500, "Member 'UCtrl_GNB_Entry_C::Img_Glow' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, IMG_Underline) == 0x000508, "Member 'UCtrl_GNB_Entry_C::IMG_Underline' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, Txt_Title) == 0x000510, "Member 'UCtrl_GNB_Entry_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, OnClicked) == 0x000518, "Member 'UCtrl_GNB_Entry_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, Title) == 0x000528, "Member 'UCtrl_GNB_Entry_C::Title' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, LobbyPage) == 0x000540, "Member 'UCtrl_GNB_Entry_C::LobbyPage' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, TextColor_Normal) == 0x000544, "Member 'UCtrl_GNB_Entry_C::TextColor_Normal' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, TextColor_Hover) == 0x000558, "Member 'UCtrl_GNB_Entry_C::TextColor_Hover' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, TextColor_Selected) == 0x00056C, "Member 'UCtrl_GNB_Entry_C::TextColor_Selected' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, Font_Normal) == 0x000580, "Member 'UCtrl_GNB_Entry_C::Font_Normal' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, Font_Selected) == 0x0005D8, "Member 'UCtrl_GNB_Entry_C::Font_Selected' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, SubPages) == 0x000630, "Member 'UCtrl_GNB_Entry_C::SubPages' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, InclusivePages) == 0x000640, "Member 'UCtrl_GNB_Entry_C::InclusivePages' has a wrong offset!");
static_assert(offsetof(UCtrl_GNB_Entry_C, ClickSound) == 0x000690, "Member 'UCtrl_GNB_Entry_C::ClickSound' has a wrong offset!");

}

