#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_InvenItemOpenCount

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Popup_InvenItemOpenCount.Popup_InvenItemOpenCount_C
// 0x0088 (0x05F8 - 0x0570)
class UPopup_InvenItemOpenCount_C final : public UPopupBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_CommonButton_Intensity_C*         btn_close;                                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButton_Intensity_C*         BTN_Use;                                           // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_70;                                          // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_343;                                         // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Item;                                        // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line;                                          // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line_2;                                        // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line_3;                                        // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_PopupBg;                                       // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_ItemName;                                      // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Slider_BuySlider_C*                 UI_Slider_CountSlider;                             // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvenItem*                             Selected_Item;                                     // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnOpenIvenItems;                                   // 0x05E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Max_Slider_Count;                                  // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Popup_InvenItemOpenCount_BTN_Close_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Popup_InvenItemOpenCount_BTN_Use_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void ExecuteUbergraph_Popup_InvenItemOpenCount(int32 EntryPoint);
	void Init_Widget(class UInvenItem* _SelectedItem);
	struct FNetReply OnACK_OpenInvenItems(EResultCode _code, const struct FACK_OpenInvenItems& _ack);
	void OnEVENT_Select_End(bool _selected);
	void OnOpenIvenItems__DelegateSignature(EResultCode _code, const struct FACK_OpenInvenItems& _ack);
	void OpenInvenItems();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Popup_InvenItemOpenCount_C">();
	}
	static class UPopup_InvenItemOpenCount_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPopup_InvenItemOpenCount_C>();
	}
};
static_assert(alignof(UPopup_InvenItemOpenCount_C) == 0x000008, "Wrong alignment on UPopup_InvenItemOpenCount_C");
static_assert(sizeof(UPopup_InvenItemOpenCount_C) == 0x0005F8, "Wrong size on UPopup_InvenItemOpenCount_C");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, UberGraphFrame) == 0x000570, "Member 'UPopup_InvenItemOpenCount_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, btn_close) == 0x000578, "Member 'UPopup_InvenItemOpenCount_C::btn_close' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, BTN_Use) == 0x000580, "Member 'UPopup_InvenItemOpenCount_C::BTN_Use' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Image) == 0x000588, "Member 'UPopup_InvenItemOpenCount_C::Image' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Image_70) == 0x000590, "Member 'UPopup_InvenItemOpenCount_C::Image_70' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Image_343) == 0x000598, "Member 'UPopup_InvenItemOpenCount_C::Image_343' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Image_Item) == 0x0005A0, "Member 'UPopup_InvenItemOpenCount_C::Image_Item' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Img_Line) == 0x0005A8, "Member 'UPopup_InvenItemOpenCount_C::Img_Line' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Img_Line_2) == 0x0005B0, "Member 'UPopup_InvenItemOpenCount_C::Img_Line_2' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Img_Line_3) == 0x0005B8, "Member 'UPopup_InvenItemOpenCount_C::Img_Line_3' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, IMG_PopupBg) == 0x0005C0, "Member 'UPopup_InvenItemOpenCount_C::IMG_PopupBg' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Txt_ItemName) == 0x0005C8, "Member 'UPopup_InvenItemOpenCount_C::Txt_ItemName' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, UI_Slider_CountSlider) == 0x0005D0, "Member 'UPopup_InvenItemOpenCount_C::UI_Slider_CountSlider' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Selected_Item) == 0x0005D8, "Member 'UPopup_InvenItemOpenCount_C::Selected_Item' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, OnOpenIvenItems) == 0x0005E0, "Member 'UPopup_InvenItemOpenCount_C::OnOpenIvenItems' has a wrong offset!");
static_assert(offsetof(UPopup_InvenItemOpenCount_C, Max_Slider_Count) == 0x0005F0, "Member 'UPopup_InvenItemOpenCount_C::Max_Slider_Count' has a wrong offset!");

}

