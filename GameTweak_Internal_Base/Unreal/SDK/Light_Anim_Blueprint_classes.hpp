#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Light_Anim_Blueprint

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Light_Anim_Blueprint.Light_Anim_Blueprint_C
// 0x0018 (0x02B0 - 0x0298)
class ALight_Anim_Blueprint_C final : public AActor
{
public:
	class USpotLightComponent*                    SpotLight;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_Light_Anim;                                   // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Light_Anim_Blueprint_C">();
	}
	static class ALight_Anim_Blueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALight_Anim_Blueprint_C>();
	}
};
static_assert(alignof(ALight_Anim_Blueprint_C) == 0x000008, "Wrong alignment on ALight_Anim_Blueprint_C");
static_assert(sizeof(ALight_Anim_Blueprint_C) == 0x0002B0, "Wrong size on ALight_Anim_Blueprint_C");
static_assert(offsetof(ALight_Anim_Blueprint_C, SpotLight) == 0x000298, "Member 'ALight_Anim_Blueprint_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ALight_Anim_Blueprint_C, Mesh_Light_Anim) == 0x0002A0, "Member 'ALight_Anim_Blueprint_C::Mesh_Light_Anim' has a wrong offset!");
static_assert(offsetof(ALight_Anim_Blueprint_C, DefaultSceneRoot) == 0x0002A8, "Member 'ALight_Anim_Blueprint_C::DefaultSceneRoot' has a wrong offset!");

}

