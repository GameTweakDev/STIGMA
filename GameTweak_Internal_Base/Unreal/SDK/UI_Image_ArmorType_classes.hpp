#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Image_ArmorType

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Image_ArmorType.UI_Image_ArmorType_C
// 0x0020 (0x0510 - 0x04F0)
class UUI_Image_ArmorType_C final : public UPreviewableWidget
{
public:
	class UImage*                                 IMG_ArmorType;                                     // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EArmorType                                    ArmorType;                                         // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsActivated;                                       // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3D0B[0x6];                                     // 0x04FA(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UTexture2D*                             ActivatedTexture;                                  // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             DeactivatedTexture;                                // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	struct FSlateBrush Get_IMG_ArmorType_Brush();
	void SetActivatedType(bool Param_IsActivated);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Image_ArmorType_C">();
	}
	static class UUI_Image_ArmorType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Image_ArmorType_C>();
	}
};
static_assert(alignof(UUI_Image_ArmorType_C) == 0x000008, "Wrong alignment on UUI_Image_ArmorType_C");
static_assert(sizeof(UUI_Image_ArmorType_C) == 0x000510, "Wrong size on UUI_Image_ArmorType_C");
static_assert(offsetof(UUI_Image_ArmorType_C, IMG_ArmorType) == 0x0004F0, "Member 'UUI_Image_ArmorType_C::IMG_ArmorType' has a wrong offset!");
static_assert(offsetof(UUI_Image_ArmorType_C, ArmorType) == 0x0004F8, "Member 'UUI_Image_ArmorType_C::ArmorType' has a wrong offset!");
static_assert(offsetof(UUI_Image_ArmorType_C, IsActivated) == 0x0004F9, "Member 'UUI_Image_ArmorType_C::IsActivated' has a wrong offset!");
static_assert(offsetof(UUI_Image_ArmorType_C, ActivatedTexture) == 0x000500, "Member 'UUI_Image_ArmorType_C::ActivatedTexture' has a wrong offset!");
static_assert(offsetof(UUI_Image_ArmorType_C, DeactivatedTexture) == 0x000508, "Member 'UUI_Image_ArmorType_C::DeactivatedTexture' has a wrong offset!");

}

