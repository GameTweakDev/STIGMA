#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_DailyResetTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_DailyResetTimer.UI_DailyResetTimer_C
// 0x0020 (0x0510 - 0x04F0)
class UUI_DailyResetTimer_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_RemainDateTimer_C*                  DailyResetDateTimer;                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_DailyRemainTimer;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Reset;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_DailyResetTimer(int32 EntryPoint);
	void InitWidget(const struct FDateTime& _end_at, int32 _alert_hour);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_DailyResetTimer_C">();
	}
	static class UUI_DailyResetTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_DailyResetTimer_C>();
	}
};
static_assert(alignof(UUI_DailyResetTimer_C) == 0x000008, "Wrong alignment on UUI_DailyResetTimer_C");
static_assert(sizeof(UUI_DailyResetTimer_C) == 0x000510, "Wrong size on UUI_DailyResetTimer_C");
static_assert(offsetof(UUI_DailyResetTimer_C, UberGraphFrame) == 0x0004F0, "Member 'UUI_DailyResetTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_DailyResetTimer_C, DailyResetDateTimer) == 0x0004F8, "Member 'UUI_DailyResetTimer_C::DailyResetDateTimer' has a wrong offset!");
static_assert(offsetof(UUI_DailyResetTimer_C, HB_DailyRemainTimer) == 0x000500, "Member 'UUI_DailyResetTimer_C::HB_DailyRemainTimer' has a wrong offset!");
static_assert(offsetof(UUI_DailyResetTimer_C, Txt_Reset) == 0x000508, "Member 'UUI_DailyResetTimer_C::Txt_Reset' has a wrong offset!");

}

