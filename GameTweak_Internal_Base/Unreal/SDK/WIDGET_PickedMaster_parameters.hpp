#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: WIDGET_PickedMaster

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_PickedMaster.WIDGET_PickedMaster_C.UpdateCharacter
// 0x0A78 (0x0A78 - 0x0000)
struct WIDGET_PickedMaster_C_UpdateCharacter final
{
public:
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0000(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CC[0x7];                                     // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FOrganizationDefine                    CallFunc_GetOrganizationDefine_ReturnValue;        // 0x09E8(0x0068)(ConstParm)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0A50(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35CD[0x7];                                     // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PickedMaster_C_UpdateCharacter) == 0x000008, "Wrong alignment on WIDGET_PickedMaster_C_UpdateCharacter");
static_assert(sizeof(WIDGET_PickedMaster_C_UpdateCharacter) == 0x000A78, "Wrong size on WIDGET_PickedMaster_C_UpdateCharacter");
static_assert(offsetof(WIDGET_PickedMaster_C_UpdateCharacter, CallFunc_GetCharacterDefByType__out_data) == 0x000000, "Member 'WIDGET_PickedMaster_C_UpdateCharacter::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(WIDGET_PickedMaster_C_UpdateCharacter, CallFunc_GetCharacterDefByType_ReturnValue) == 0x0009E0, "Member 'WIDGET_PickedMaster_C_UpdateCharacter::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PickedMaster_C_UpdateCharacter, CallFunc_GetOrganizationDefine_ReturnValue) == 0x0009E8, "Member 'WIDGET_PickedMaster_C_UpdateCharacter::CallFunc_GetOrganizationDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PickedMaster_C_UpdateCharacter, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000A50, "Member 'WIDGET_PickedMaster_C_UpdateCharacter::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PickedMaster_C_UpdateCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A68, "Member 'WIDGET_PickedMaster_C_UpdateCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PickedMaster_C_UpdateCharacter, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000A70, "Member 'WIDGET_PickedMaster_C_UpdateCharacter::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WIDGET_PickedMaster.WIDGET_PickedMaster_C.SetCharaType
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PickedMaster_C_SetCharaType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PickedMaster_C_SetCharaType) == 0x000001, "Wrong alignment on WIDGET_PickedMaster_C_SetCharaType");
static_assert(sizeof(WIDGET_PickedMaster_C_SetCharaType) == 0x000001, "Wrong size on WIDGET_PickedMaster_C_SetCharaType");
static_assert(offsetof(WIDGET_PickedMaster_C_SetCharaType, _chara_type) == 0x000000, "Member 'WIDGET_PickedMaster_C_SetCharaType::_chara_type' has a wrong offset!");

// Function WIDGET_PickedMaster.WIDGET_PickedMaster_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PickedMaster_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PickedMaster_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on WIDGET_PickedMaster_C_OnSynchronizeProperties");
static_assert(sizeof(WIDGET_PickedMaster_C_OnSynchronizeProperties) == 0x000001, "Wrong size on WIDGET_PickedMaster_C_OnSynchronizeProperties");
static_assert(offsetof(WIDGET_PickedMaster_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'WIDGET_PickedMaster_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function WIDGET_PickedMaster.WIDGET_PickedMaster_C.IsPicked
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PickedMaster_C_IsPicked final
{
public:
	bool                                          _is_picked;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PickedMaster_C_IsPicked) == 0x000001, "Wrong alignment on WIDGET_PickedMaster_C_IsPicked");
static_assert(sizeof(WIDGET_PickedMaster_C_IsPicked) == 0x000002, "Wrong size on WIDGET_PickedMaster_C_IsPicked");
static_assert(offsetof(WIDGET_PickedMaster_C_IsPicked, _is_picked) == 0x000000, "Member 'WIDGET_PickedMaster_C_IsPicked::_is_picked' has a wrong offset!");
static_assert(offsetof(WIDGET_PickedMaster_C_IsPicked, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WIDGET_PickedMaster_C_IsPicked::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WIDGET_PickedMaster.WIDGET_PickedMaster_C.GetCharaType
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PickedMaster_C_GetCharaType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PickedMaster_C_GetCharaType) == 0x000001, "Wrong alignment on WIDGET_PickedMaster_C_GetCharaType");
static_assert(sizeof(WIDGET_PickedMaster_C_GetCharaType) == 0x000001, "Wrong size on WIDGET_PickedMaster_C_GetCharaType");
static_assert(offsetof(WIDGET_PickedMaster_C_GetCharaType, _chara_type) == 0x000000, "Member 'WIDGET_PickedMaster_C_GetCharaType::_chara_type' has a wrong offset!");

// Function WIDGET_PickedMaster.WIDGET_PickedMaster_C.ExecuteUbergraph_WIDGET_PickedMaster
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster) == 0x000004, "Wrong alignment on WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster");
static_assert(sizeof(WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster) == 0x000004, "Wrong size on WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster");
static_assert(offsetof(WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster, EntryPoint) == 0x000000, "Member 'WIDGET_PickedMaster_C_ExecuteUbergraph_WIDGET_PickedMaster::EntryPoint' has a wrong offset!");

}

