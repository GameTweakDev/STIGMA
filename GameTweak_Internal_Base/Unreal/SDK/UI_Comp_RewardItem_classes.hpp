#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Comp_RewardItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Comp_RewardItem.UI_Comp_RewardItem_C
// 0x01F8 (0x0720 - 0x0528)
class UUI_Comp_RewardItem_C : public UUI_RewardItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0528(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_Anim_Complete;                                  // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Background;                                 // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_OutLine;                                    // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_Navigation_Border_C*              Ctrl_Navigation_Border;                            // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_104;                                         // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Ckeck;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Dimmed;                                        // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Glow;                                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Grade;                                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Icon;                                          // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Slide;                                         // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_BackLight;                                       // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OVL_Complete;                                      // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ovl_ItemSlot;                                      // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SB_Check;                                          // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SB_RewardCount;                                    // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Text;                                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_RewardCount;                                   // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowTooltip;                                       // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          UI_ShowBackGround;                                 // 0x05D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3554[0xE];                                     // 0x05D2(0x000E)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateBrush                            UI_Brush_Background;                               // 0x05E0(0x00D0)(Edit, BlueprintVisible)
	float                                         UI_Size_Width;                                     // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         UI_Size_Height;                                    // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        UI_Width_Ratio;                                    // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UI_Height_Ratio;                                   // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                UI_InnerBoxPadding;                                // 0x06C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        UI_Text_Height_Ratio;                              // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UI_CountText_RightPadding;                         // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemState                              PrevRewardState;                                   // 0x06E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UI_ShowGlow;                                       // 0x06E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UI_ShowBackLight;                                  // 0x06E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UI_ShowOutLine;                                    // 0x06E7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickItem_0;                                     // 0x06E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSoftObjectPtr<class UTexture2D>              UI_DefaultItemIcon;                                // 0x06F8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)

public:
	void BndEvt__UI_Comp_RewardItem_Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Create_Tooltip(class UUI_Tooltip** _tooltip_widget);
	void ExecuteUbergraph_UI_Comp_RewardItem(int32 EntryPoint);
	class UWidget* Get_Reward_Icon_Tool_Tip_Widget();
	void OnClickItem_0__DelegateSignature();
	void OnEVENT_Focus(bool _focus);
	bool OnSynchronizeProperties();
	void Set_Widget_Style(double _size_width, double _size_height, double Param_UI_Width_Ratio, double Param_UI_Height_Ratio, double Param_UI_Text_Height_Ratio, const struct FMargin& Param_UI_InnerBoxPadding, float Param_UI_CountText_RightPadding, const struct FSlateBrush& Param_UI_Brush_Background, bool Param_UI_ShowGlow, bool Param_UI_ShowBackLight, bool Param_UI_ShowOutLine);
	void SetCount(int32 _count);
	void SetFromItemEntry(const struct FItemEntry& _item_entry);
	void SetGrade(EItemGrade Grade);
	void SetRewardState(ERewardItemState _reward_state);
	void SyncWidgetSize();
	void SyncWidgetStateRenderOpacity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Comp_RewardItem_C">();
	}
	static class UUI_Comp_RewardItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Comp_RewardItem_C>();
	}
};
static_assert(alignof(UUI_Comp_RewardItem_C) == 0x000010, "Wrong alignment on UUI_Comp_RewardItem_C");
static_assert(sizeof(UUI_Comp_RewardItem_C) == 0x000720, "Wrong size on UUI_Comp_RewardItem_C");
static_assert(offsetof(UUI_Comp_RewardItem_C, UberGraphFrame) == 0x000528, "Member 'UUI_Comp_RewardItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Anim_Complete) == 0x000530, "Member 'UUI_Comp_RewardItem_C::UI_Anim_Complete' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Border_Background) == 0x000538, "Member 'UUI_Comp_RewardItem_C::Border_Background' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Border_OutLine) == 0x000540, "Member 'UUI_Comp_RewardItem_C::Border_OutLine' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Button) == 0x000548, "Member 'UUI_Comp_RewardItem_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Ctrl_Navigation_Border) == 0x000550, "Member 'UUI_Comp_RewardItem_C::Ctrl_Navigation_Border' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Image_104) == 0x000558, "Member 'UUI_Comp_RewardItem_C::Image_104' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Img_Ckeck) == 0x000560, "Member 'UUI_Comp_RewardItem_C::Img_Ckeck' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Img_Dimmed) == 0x000568, "Member 'UUI_Comp_RewardItem_C::Img_Dimmed' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Img_Glow) == 0x000570, "Member 'UUI_Comp_RewardItem_C::Img_Glow' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Img_Grade) == 0x000578, "Member 'UUI_Comp_RewardItem_C::Img_Grade' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Img_Icon) == 0x000580, "Member 'UUI_Comp_RewardItem_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Img_Slide) == 0x000588, "Member 'UUI_Comp_RewardItem_C::Img_Slide' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, M_BackLight) == 0x000590, "Member 'UUI_Comp_RewardItem_C::M_BackLight' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, OVL_Complete) == 0x000598, "Member 'UUI_Comp_RewardItem_C::OVL_Complete' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Ovl_ItemSlot) == 0x0005A0, "Member 'UUI_Comp_RewardItem_C::Ovl_ItemSlot' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, SB_Check) == 0x0005A8, "Member 'UUI_Comp_RewardItem_C::SB_Check' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, SB_RewardCount) == 0x0005B0, "Member 'UUI_Comp_RewardItem_C::SB_RewardCount' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, SB_Text) == 0x0005B8, "Member 'UUI_Comp_RewardItem_C::SB_Text' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, SizeBox) == 0x0005C0, "Member 'UUI_Comp_RewardItem_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, Txt_RewardCount) == 0x0005C8, "Member 'UUI_Comp_RewardItem_C::Txt_RewardCount' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, ShowTooltip) == 0x0005D0, "Member 'UUI_Comp_RewardItem_C::ShowTooltip' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_ShowBackGround) == 0x0005D1, "Member 'UUI_Comp_RewardItem_C::UI_ShowBackGround' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Brush_Background) == 0x0005E0, "Member 'UUI_Comp_RewardItem_C::UI_Brush_Background' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Size_Width) == 0x0006B0, "Member 'UUI_Comp_RewardItem_C::UI_Size_Width' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Size_Height) == 0x0006B4, "Member 'UUI_Comp_RewardItem_C::UI_Size_Height' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Width_Ratio) == 0x0006B8, "Member 'UUI_Comp_RewardItem_C::UI_Width_Ratio' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Height_Ratio) == 0x0006C0, "Member 'UUI_Comp_RewardItem_C::UI_Height_Ratio' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_InnerBoxPadding) == 0x0006C8, "Member 'UUI_Comp_RewardItem_C::UI_InnerBoxPadding' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_Text_Height_Ratio) == 0x0006D8, "Member 'UUI_Comp_RewardItem_C::UI_Text_Height_Ratio' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_CountText_RightPadding) == 0x0006E0, "Member 'UUI_Comp_RewardItem_C::UI_CountText_RightPadding' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, PrevRewardState) == 0x0006E4, "Member 'UUI_Comp_RewardItem_C::PrevRewardState' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_ShowGlow) == 0x0006E5, "Member 'UUI_Comp_RewardItem_C::UI_ShowGlow' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_ShowBackLight) == 0x0006E6, "Member 'UUI_Comp_RewardItem_C::UI_ShowBackLight' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_ShowOutLine) == 0x0006E7, "Member 'UUI_Comp_RewardItem_C::UI_ShowOutLine' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, OnClickItem_0) == 0x0006E8, "Member 'UUI_Comp_RewardItem_C::OnClickItem_0' has a wrong offset!");
static_assert(offsetof(UUI_Comp_RewardItem_C, UI_DefaultItemIcon) == 0x0006F8, "Member 'UUI_Comp_RewardItem_C::UI_DefaultItemIcon' has a wrong offset!");

}

