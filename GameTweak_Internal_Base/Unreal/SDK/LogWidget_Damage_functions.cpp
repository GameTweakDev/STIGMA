#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LogWidget_Damage

#include "Basic.hpp"

#include "LogWidget_Damage_classes.hpp"
#include "LogWidget_Damage_parameters.hpp"


namespace SDK
{

// Function LogWidget_Damage.LogWidget_Damage_C.SetDamagedData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDamagedData                     _data                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ULogWidget_Damage_C::SetDamagedData(struct FDamagedData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LogWidget_Damage_C", "SetDamagedData");

	Params::LogWidget_Damage_C_SetDamagedData Parms{};

	Parms._data = std::move(_data);

	UObject::ProcessEvent(Func, &Parms);

	_data = std::move(Parms._data);
}


// Function LogWidget_Damage.LogWidget_Damage_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ULogWidget_Damage_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LogWidget_Damage_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}

}

