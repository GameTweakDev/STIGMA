#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: AnimBP_Dummy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_Dummy.AnimBP_Dummy_C
// 0x00A0 (0x03F0 - 0x0350)
class UAnimBP_Dummy_C final : public UAnimInstance
{
public:
	uint8                                         Pad_362B[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0388(0x0048)()
	class UAnimSequenceBase*                      Idle;                                              // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              RandomIdleList;                                    // 0x03D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void ExecuteUbergraph_AnimBP_Dummy(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_Dummy_C">();
	}
	static class UAnimBP_Dummy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_Dummy_C>();
	}
};
static_assert(alignof(UAnimBP_Dummy_C) == 0x000010, "Wrong alignment on UAnimBP_Dummy_C");
static_assert(sizeof(UAnimBP_Dummy_C) == 0x0003F0, "Wrong size on UAnimBP_Dummy_C");
static_assert(offsetof(UAnimBP_Dummy_C, UberGraphFrame) == 0x000350, "Member 'UAnimBP_Dummy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_Dummy_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UAnimBP_Dummy_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_Dummy_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UAnimBP_Dummy_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_Dummy_C, AnimGraphNode_Root) == 0x000368, "Member 'UAnimBP_Dummy_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_Dummy_C, AnimGraphNode_SequencePlayer) == 0x000388, "Member 'UAnimBP_Dummy_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_Dummy_C, Idle) == 0x0003D0, "Member 'UAnimBP_Dummy_C::Idle' has a wrong offset!");
static_assert(offsetof(UAnimBP_Dummy_C, RandomIdleList) == 0x0003D8, "Member 'UAnimBP_Dummy_C::RandomIdleList' has a wrong offset!");

}

