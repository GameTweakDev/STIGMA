#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Challenge_ResultPopup

#include "Basic.hpp"

#include "Challenge_ResultPopup_classes.hpp"
#include "Challenge_ResultPopup_parameters.hpp"


namespace SDK
{

// Function Challenge_ResultPopup.Challenge_ResultPopup_C.CheckCanClose
// (Public, BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::CheckCanClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "CheckCanClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.ClosePopup
// (BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::ClosePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "ClosePopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallenge_ResultPopup_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.DelayClose
// (BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::DelayClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "DelayClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallenge_ResultPopup_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.DriveScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_ResultPopup_C::DriveScore(double Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "DriveScore");

	Params::Challenge_ResultPopup_C_DriveScore Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.ExecuteUbergraph_Challenge_ResultPopup
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_ResultPopup_C::ExecuteUbergraph_Challenge_ResultPopup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "ExecuteUbergraph_Challenge_ResultPopup");

	Params::Challenge_ResultPopup_C_ExecuteUbergraph_Challenge_ResultPopup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.Get_Bg_Line_Brush_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateBrush UChallenge_ResultPopup_C::Get_Bg_Line_Brush_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "Get_Bg_Line_Brush_0");

	Params::Challenge_ResultPopup_C_Get_Bg_Line_Brush_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.Get_TXT_Round_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UChallenge_ResultPopup_C::Get_TXT_Round_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "Get_TXT_Round_Text_0");

	Params::Challenge_ResultPopup_C_Get_TXT_Round_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.GetResultText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UChallenge_ResultPopup_C::GetResultText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "GetResultText");

	Params::Challenge_ResultPopup_C_GetResultText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.InitWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FChallengeResult                 Param_Result                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FChallengeResult                 Param_PrevResult                                       (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UChallenge_ResultPopup_C::InitWidget(const struct FChallengeResult& Param_Result, const struct FChallengeResult& Param_PrevResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "InitWidget");

	Params::Challenge_ResultPopup_C_InitWidget Parms{};

	Parms.Param_Result = std::move(Param_Result);
	Parms.Param_PrevResult = std::move(Param_PrevResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.PlayStartAnim_Score
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCtr_HUD_Challenge_ScorePanel_Entry_C*Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UChallenge_ResultPopup_C::PlayStartAnim_Score(class UCtr_HUD_Challenge_ScorePanel_Entry_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "PlayStartAnim_Score");

	Params::Challenge_ResultPopup_C_PlayStartAnim_Score Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.PlayStartAnim_ScoreEntry
// (BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::PlayStartAnim_ScoreEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "PlayStartAnim_ScoreEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.PlayStartSound
// (Public, BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::PlayStartSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "PlayStartSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.SequenceEvent__ENTRYPOINTChallenge_ResultPopup
// (Public, BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::SequenceEvent__ENTRYPOINTChallenge_ResultPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "SequenceEvent__ENTRYPOINTChallenge_ResultPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_ResultPopup_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "Tick");

	Params::Challenge_ResultPopup_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.UpdateResult
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UChallenge_ResultPopup_C::UpdateResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "UpdateResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_ResultPopup.Challenge_ResultPopup_C.GetCloseKey
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

struct FKey UChallenge_ResultPopup_C::GetCloseKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_ResultPopup_C", "GetCloseKey");

	Params::Challenge_ResultPopup_C_GetCloseKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

