#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Marker_Annihilation_GoldBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Marker_Annihilation_GoldBox.Marker_Annihilation_GoldBox_C.DriveColor
// 0x0001 (0x0001 - 0x0000)
struct Marker_Annihilation_GoldBox_C_DriveColor final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Annihilation_GoldBox_C_DriveColor) == 0x000001, "Wrong alignment on Marker_Annihilation_GoldBox_C_DriveColor");
static_assert(sizeof(Marker_Annihilation_GoldBox_C_DriveColor) == 0x000001, "Wrong size on Marker_Annihilation_GoldBox_C_DriveColor");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_DriveColor, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'Marker_Annihilation_GoldBox_C_DriveColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Marker_Annihilation_GoldBox.Marker_Annihilation_GoldBox_C.DriveVisibility
// 0x0003 (0x0003 - 0x0000)
struct Marker_Annihilation_GoldBox_C_DriveVisibility final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnDelay_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Annihilation_GoldBox_C_DriveVisibility) == 0x000001, "Wrong alignment on Marker_Annihilation_GoldBox_C_DriveVisibility");
static_assert(sizeof(Marker_Annihilation_GoldBox_C_DriveVisibility) == 0x000003, "Wrong size on Marker_Annihilation_GoldBox_C_DriveVisibility");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_DriveVisibility, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Marker_Annihilation_GoldBox_C_DriveVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_DriveVisibility, CallFunc_IsOnDelay_ReturnValue) == 0x000001, "Member 'Marker_Annihilation_GoldBox_C_DriveVisibility::CallFunc_IsOnDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_DriveVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Marker_Annihilation_GoldBox_C_DriveVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Marker_Annihilation_GoldBox.Marker_Annihilation_GoldBox_C.ExecuteUbergraph_Marker_Annihilation_GoldBox
// 0x0004 (0x0004 - 0x0000)
struct Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox) == 0x000004, "Wrong alignment on Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox");
static_assert(sizeof(Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox) == 0x000004, "Wrong size on Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox, EntryPoint) == 0x000000, "Member 'Marker_Annihilation_GoldBox_C_ExecuteUbergraph_Marker_Annihilation_GoldBox::EntryPoint' has a wrong offset!");

// Function Marker_Annihilation_GoldBox.Marker_Annihilation_GoldBox_C.OnBindActor
// 0x0020 (0x0020 - 0x0000)
struct Marker_Annihilation_GoldBox_C_OnBindActor final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGoldBox*                               K2Node_DynamicCast_AsGold_Box;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnBindActor_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Annihilation_GoldBox_C_OnBindActor) == 0x000008, "Wrong alignment on Marker_Annihilation_GoldBox_C_OnBindActor");
static_assert(sizeof(Marker_Annihilation_GoldBox_C_OnBindActor) == 0x000020, "Wrong size on Marker_Annihilation_GoldBox_C_OnBindActor");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnBindActor, _Actor) == 0x000000, "Member 'Marker_Annihilation_GoldBox_C_OnBindActor::_Actor' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnBindActor, ReturnValue) == 0x000008, "Member 'Marker_Annihilation_GoldBox_C_OnBindActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnBindActor, K2Node_DynamicCast_AsGold_Box) == 0x000010, "Member 'Marker_Annihilation_GoldBox_C_OnBindActor::K2Node_DynamicCast_AsGold_Box' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnBindActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Marker_Annihilation_GoldBox_C_OnBindActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnBindActor, CallFunc_OnBindActor_ReturnValue) == 0x000019, "Member 'Marker_Annihilation_GoldBox_C_OnBindActor::CallFunc_OnBindActor_ReturnValue' has a wrong offset!");

// Function Marker_Annihilation_GoldBox.Marker_Annihilation_GoldBox_C.OnTick
// 0x0040 (0x0040 - 0x0000)
struct Marker_Annihilation_GoldBox_C_OnTick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         _delta;                                            // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Annihilation_GoldBox_C_OnTick) == 0x000004, "Wrong alignment on Marker_Annihilation_GoldBox_C_OnTick");
static_assert(sizeof(Marker_Annihilation_GoldBox_C_OnTick) == 0x000040, "Wrong size on Marker_Annihilation_GoldBox_C_OnTick");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnTick, MyGeometry) == 0x000000, "Member 'Marker_Annihilation_GoldBox_C_OnTick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnTick, _delta) == 0x000038, "Member 'Marker_Annihilation_GoldBox_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_OnTick, ReturnValue) == 0x00003C, "Member 'Marker_Annihilation_GoldBox_C_OnTick::ReturnValue' has a wrong offset!");

// Function Marker_Annihilation_GoldBox.Marker_Annihilation_GoldBox_C.IsRotatingEnabled
// 0x0001 (0x0001 - 0x0000)
struct Marker_Annihilation_GoldBox_C_IsRotatingEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Annihilation_GoldBox_C_IsRotatingEnabled) == 0x000001, "Wrong alignment on Marker_Annihilation_GoldBox_C_IsRotatingEnabled");
static_assert(sizeof(Marker_Annihilation_GoldBox_C_IsRotatingEnabled) == 0x000001, "Wrong size on Marker_Annihilation_GoldBox_C_IsRotatingEnabled");
static_assert(offsetof(Marker_Annihilation_GoldBox_C_IsRotatingEnabled, ReturnValue) == 0x000000, "Member 'Marker_Annihilation_GoldBox_C_IsRotatingEnabled::ReturnValue' has a wrong offset!");

}

