#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Page_PlayMode

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BPGLib_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Page_PlayMode.Page_PlayMode_C.UpdateWishedGameMode
// 0x0020 (0x0020 - 0x0000)
struct Page_PlayMode_C_UpdateWishedGameMode final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _add;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStigmaGameInstance*                    K2Node_DynamicCast_AsStigma_Game_Instance;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_UpdateWishedGameMode) == 0x000008, "Wrong alignment on Page_PlayMode_C_UpdateWishedGameMode");
static_assert(sizeof(Page_PlayMode_C_UpdateWishedGameMode) == 0x000020, "Wrong size on Page_PlayMode_C_UpdateWishedGameMode");
static_assert(offsetof(Page_PlayMode_C_UpdateWishedGameMode, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_UpdateWishedGameMode::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateWishedGameMode, _add) == 0x000001, "Member 'Page_PlayMode_C_UpdateWishedGameMode::_add' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateWishedGameMode, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_UpdateWishedGameMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateWishedGameMode, K2Node_DynamicCast_AsStigma_Game_Instance) == 0x000010, "Member 'Page_PlayMode_C_UpdateWishedGameMode::K2Node_DynamicCast_AsStigma_Game_Instance' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateWishedGameMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Page_PlayMode_C_UpdateWishedGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.UpdateControllable
// 0x0048 (0x0048 - 0x0000)
struct Page_PlayMode_C_UpdateControllable final
{
public:
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_TimespanTimespan_ReturnValue;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF8[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_Now_ReturnValue_1;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckImPartyLeader_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckImInParty_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanIRequestMatchMaking_ReturnValue;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchMaking_ReturnValue;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_UpdateControllable) == 0x000008, "Wrong alignment on Page_PlayMode_C_UpdateControllable");
static_assert(sizeof(Page_PlayMode_C_UpdateControllable) == 0x000048, "Wrong size on Page_PlayMode_C_UpdateControllable");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_MakeTimespan_ReturnValue) == 0x000000, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Now_ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Greater_TimespanTimespan_ReturnValue) == 0x000028, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Greater_TimespanTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_AddToastMessage_ReturnValue) == 0x000029, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Now_ReturnValue_1) == 0x000030, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Now_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_CheckImPartyLeader_ReturnValue) == 0x000038, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_CheckImPartyLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_CheckImInParty_ReturnValue) == 0x000039, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_CheckImInParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_CanIRequestMatchMaking_ReturnValue) == 0x00003C, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_CanIRequestMatchMaking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_IsMatchMaking_ReturnValue) == 0x00003D, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_IsMatchMaking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003E, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_BooleanAND_ReturnValue_1) == 0x00003F, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_UpdateControllable, CallFunc_Not_PreBool_ReturnValue_2) == 0x000040, "Member 'Page_PlayMode_C_UpdateControllable::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.TryJoinCustomGame
// 0x0038 (0x0038 - 0x0000)
struct Page_PlayMode_C_TryJoinCustomGame final
{
public:
	class UDLG_JoinCustomGame_C*                  Dlg;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDLG_JoinCustomGame_C*                  CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& _battle_ids)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_TryJoinCustomGame) == 0x000008, "Wrong alignment on Page_PlayMode_C_TryJoinCustomGame");
static_assert(sizeof(Page_PlayMode_C_TryJoinCustomGame) == 0x000038, "Wrong size on Page_PlayMode_C_TryJoinCustomGame");
static_assert(offsetof(Page_PlayMode_C_TryJoinCustomGame, Dlg) == 0x000000, "Member 'Page_PlayMode_C_TryJoinCustomGame::Dlg' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_TryJoinCustomGame, CallFunc_Create_ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_TryJoinCustomGame::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_TryJoinCustomGame, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Page_PlayMode_C_TryJoinCustomGame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_TryJoinCustomGame, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'Page_PlayMode_C_TryJoinCustomGame::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_TryJoinCustomGame, CallFunc_DoModal_ReturnValue) == 0x000030, "Member 'Page_PlayMode_C_TryJoinCustomGame::CallFunc_DoModal_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.TryCreateCustomGame
// 0x0008 (0x0008 - 0x0000)
struct Page_PlayMode_C_TryCreateCustomGame final
{
public:
	class UDLG_JoinCustomGame_C*                  Dlg;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_TryCreateCustomGame) == 0x000008, "Wrong alignment on Page_PlayMode_C_TryCreateCustomGame");
static_assert(sizeof(Page_PlayMode_C_TryCreateCustomGame) == 0x000008, "Wrong size on Page_PlayMode_C_TryCreateCustomGame");
static_assert(offsetof(Page_PlayMode_C_TryCreateCustomGame, Dlg) == 0x000000, "Member 'Page_PlayMode_C_TryCreateCustomGame::Dlg' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.Tick
// 0x003C (0x003C - 0x0000)
struct Page_PlayMode_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_Tick) == 0x000004, "Wrong alignment on Page_PlayMode_C_Tick");
static_assert(sizeof(Page_PlayMode_C_Tick) == 0x00003C, "Wrong size on Page_PlayMode_C_Tick");
static_assert(offsetof(Page_PlayMode_C_Tick, MyGeometry) == 0x000000, "Member 'Page_PlayMode_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_Tick, InDeltaTime) == 0x000038, "Member 'Page_PlayMode_C_Tick::InDeltaTime' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.StartMatch
// 0x0290 (0x0290 - 0x0000)
struct Page_PlayMode_C_StartMatch final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)(ConstParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckImInParty_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFA[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0068(0x0018)(ConstParm)
	bool                                          CallFunc_CanIRequestMatchMaking_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFB[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0088(0x0018)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFC[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDisableMatchFunc_DisableMatch;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFD[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_CheckDisableMatchFunc_ExpireAt;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMatchOption                           CallFunc_GetMatchOption_ReturnValue;               // 0x00C0(0x0038)(ConstParm)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUserID                                CallFunc_GetUserID_ReturnValue;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchMaking_ReturnValue;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFE[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void(EResultCode _rcode, struct FACK_FindMatch& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFF[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0120(0x0018)(ConstParm)
	class FString                                 CallFunc_GetMatchableTimeRange_ReturnValue;        // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayTimespan_ReturnValue;           // 0x0148(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0160(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0178(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0238(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0250(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue_1;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue_2;            // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchableTime_ReturnValue;              // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_StartMatch) == 0x000008, "Wrong alignment on Page_PlayMode_C_StartMatch");
static_assert(sizeof(Page_PlayMode_C_StartMatch) == 0x000290, "Wrong size on Page_PlayMode_C_StartMatch");
static_assert(offsetof(Page_PlayMode_C_StartMatch, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_StartMatch::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, Temp_text_Variable) == 0x000008, "Member 'Page_PlayMode_C_StartMatch::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_MakeLiteralText_ReturnValue) == 0x000020, "Member 'Page_PlayMode_C_StartMatch::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, Temp_text_Variable_1) == 0x000038, "Member 'Page_PlayMode_C_StartMatch::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_CheckImInParty_ReturnValue) == 0x000060, "Member 'Page_PlayMode_C_StartMatch::CallFunc_CheckImInParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_AddToastMessage_ReturnValue) == 0x000061, "Member 'Page_PlayMode_C_StartMatch::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, Temp_text_Variable_2) == 0x000068, "Member 'Page_PlayMode_C_StartMatch::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_CanIRequestMatchMaking_ReturnValue) == 0x000080, "Member 'Page_PlayMode_C_StartMatch::CallFunc_CanIRequestMatchMaking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'Page_PlayMode_C_StartMatch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, Temp_text_Variable_3) == 0x000088, "Member 'Page_PlayMode_C_StartMatch::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'Page_PlayMode_C_StartMatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_UtcNow_ReturnValue) == 0x0000A8, "Member 'Page_PlayMode_C_StartMatch::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_CheckDisableMatchFunc_DisableMatch) == 0x0000B0, "Member 'Page_PlayMode_C_StartMatch::CallFunc_CheckDisableMatchFunc_DisableMatch' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_CheckDisableMatchFunc_ExpireAt) == 0x0000B8, "Member 'Page_PlayMode_C_StartMatch::CallFunc_CheckDisableMatchFunc_ExpireAt' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_GetMatchOption_ReturnValue) == 0x0000C0, "Member 'Page_PlayMode_C_StartMatch::CallFunc_GetMatchOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x0000F8, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_GetUserID_ReturnValue) == 0x000100, "Member 'Page_PlayMode_C_StartMatch::CallFunc_GetUserID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_IsMatchMaking_ReturnValue) == 0x000108, "Member 'Page_PlayMode_C_StartMatch::CallFunc_IsMatchMaking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'Page_PlayMode_C_StartMatch::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Not_PreBool_ReturnValue) == 0x00011C, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_BooleanAND_ReturnValue_1) == 0x00011D, "Member 'Page_PlayMode_C_StartMatch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, Temp_text_Variable_4) == 0x000120, "Member 'Page_PlayMode_C_StartMatch::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_GetMatchableTimeRange_ReturnValue) == 0x000138, "Member 'Page_PlayMode_C_StartMatch::CallFunc_GetMatchableTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_GetDisplayTimespan_ReturnValue) == 0x000148, "Member 'Page_PlayMode_C_StartMatch::CallFunc_GetDisplayTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Conv_StringToText_ReturnValue) == 0x000160, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, K2Node_MakeStruct_FormatArgumentData) == 0x000178, "Member 'Page_PlayMode_C_StartMatch::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001C8, "Member 'Page_PlayMode_C_StartMatch::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, K2Node_MakeArray_Array) == 0x000218, "Member 'Page_PlayMode_C_StartMatch::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, K2Node_MakeArray_Array_1) == 0x000228, "Member 'Page_PlayMode_C_StartMatch::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Format_ReturnValue) == 0x000238, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Format_ReturnValue_1) == 0x000250, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000268, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000278, "Member 'Page_PlayMode_C_StartMatch::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_AddToastMessage_ReturnValue_1) == 0x000288, "Member 'Page_PlayMode_C_StartMatch::CallFunc_AddToastMessage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_AddToastMessage_ReturnValue_2) == 0x000289, "Member 'Page_PlayMode_C_StartMatch::CallFunc_AddToastMessage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_StartMatch, CallFunc_IsMatchableTime_ReturnValue) == 0x00028A, "Member 'Page_PlayMode_C_StartMatch::CallFunc_IsMatchableTime_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.SetPVPButtonLock
// 0x0002 (0x0002 - 0x0000)
struct Page_PlayMode_C_SetPVPButtonLock final
{
public:
	bool                                          _is_lock;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_SetPVPButtonLock) == 0x000001, "Wrong alignment on Page_PlayMode_C_SetPVPButtonLock");
static_assert(sizeof(Page_PlayMode_C_SetPVPButtonLock) == 0x000002, "Wrong size on Page_PlayMode_C_SetPVPButtonLock");
static_assert(offsetof(Page_PlayMode_C_SetPVPButtonLock, _is_lock) == 0x000000, "Member 'Page_PlayMode_C_SetPVPButtonLock::_is_lock' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_SetPVPButtonLock, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Page_PlayMode_C_SetPVPButtonLock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.Set Game Mode Guide
// 0x0398 (0x0398 - 0x0000)
struct Page_PlayMode_C_Set_Game_Mode_Guide final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4000[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   _msg;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4001[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FMode                                  CallFunc_GetGameModeEntry_ReturnValue;             // 0x0028(0x0370)(ConstParm)
};
static_assert(alignof(Page_PlayMode_C_Set_Game_Mode_Guide) == 0x000008, "Wrong alignment on Page_PlayMode_C_Set_Game_Mode_Guide");
static_assert(sizeof(Page_PlayMode_C_Set_Game_Mode_Guide) == 0x000398, "Wrong size on Page_PlayMode_C_Set_Game_Mode_Guide");
static_assert(offsetof(Page_PlayMode_C_Set_Game_Mode_Guide, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_Set_Game_Mode_Guide::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_Set_Game_Mode_Guide, _msg) == 0x000008, "Member 'Page_PlayMode_C_Set_Game_Mode_Guide::_msg' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_Set_Game_Mode_Guide, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Page_PlayMode_C_Set_Game_Mode_Guide::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_Set_Game_Mode_Guide, CallFunc_GetGameModeEntry_ReturnValue) == 0x000028, "Member 'Page_PlayMode_C_Set_Game_Mode_Guide::CallFunc_GetGameModeEntry_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.RequestStartCustomGame
// 0x0050 (0x0050 - 0x0000)
struct Page_PlayMode_C_RequestStartCustomGame final
{
public:
	TDelegate<void(EResultCode _rcode, struct FACK_FindMatch& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUserID                                CallFunc_GetUserID_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchOption                           K2Node_MakeStruct_MatchOption;                     // 0x0018(0x0038)()
};
static_assert(alignof(Page_PlayMode_C_RequestStartCustomGame) == 0x000008, "Wrong alignment on Page_PlayMode_C_RequestStartCustomGame");
static_assert(sizeof(Page_PlayMode_C_RequestStartCustomGame) == 0x000050, "Wrong size on Page_PlayMode_C_RequestStartCustomGame");
static_assert(offsetof(Page_PlayMode_C_RequestStartCustomGame, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Page_PlayMode_C_RequestStartCustomGame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_RequestStartCustomGame, CallFunc_GetUserID_ReturnValue) == 0x000010, "Member 'Page_PlayMode_C_RequestStartCustomGame::CallFunc_GetUserID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_RequestStartCustomGame, K2Node_MakeStruct_MatchOption) == 0x000018, "Member 'Page_PlayMode_C_RequestStartCustomGame::K2Node_MakeStruct_MatchOption' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnParty_LeaderUpdated
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_OnParty_LeaderUpdated final
{
public:
	struct FUserID                                _leader_id;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_OnParty_LeaderUpdated) == 0x000008, "Wrong alignment on Page_PlayMode_C_OnParty_LeaderUpdated");
static_assert(sizeof(Page_PlayMode_C_OnParty_LeaderUpdated) == 0x000010, "Wrong size on Page_PlayMode_C_OnParty_LeaderUpdated");
static_assert(offsetof(Page_PlayMode_C_OnParty_LeaderUpdated, _leader_id) == 0x000000, "Member 'Page_PlayMode_C_OnParty_LeaderUpdated::_leader_id' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnParty_LeaderUpdated, ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_OnParty_LeaderUpdated::ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnParty_Exited
// 0x0001 (0x0001 - 0x0000)
struct Page_PlayMode_C_OnParty_Exited final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_OnParty_Exited) == 0x000001, "Wrong alignment on Page_PlayMode_C_OnParty_Exited");
static_assert(sizeof(Page_PlayMode_C_OnParty_Exited) == 0x000001, "Wrong size on Page_PlayMode_C_OnParty_Exited");
static_assert(offsetof(Page_PlayMode_C_OnParty_Exited, ReturnValue) == 0x000000, "Member 'Page_PlayMode_C_OnParty_Exited::ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnParty_Entered
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_OnParty_Entered final
{
public:
	const class UBriefParty*                      _party;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_OnParty_Entered) == 0x000008, "Wrong alignment on Page_PlayMode_C_OnParty_Entered");
static_assert(sizeof(Page_PlayMode_C_OnParty_Entered) == 0x000010, "Wrong size on Page_PlayMode_C_OnParty_Entered");
static_assert(offsetof(Page_PlayMode_C_OnParty_Entered, _party) == 0x000000, "Member 'Page_PlayMode_C_OnParty_Entered::_party' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnParty_Entered, ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_OnParty_Entered::ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnMatchChanged
// 0x0001 (0x0001 - 0x0000)
struct Page_PlayMode_C_OnMatchChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_OnMatchChanged) == 0x000001, "Wrong alignment on Page_PlayMode_C_OnMatchChanged");
static_assert(sizeof(Page_PlayMode_C_OnMatchChanged) == 0x000001, "Wrong size on Page_PlayMode_C_OnMatchChanged");
static_assert(offsetof(Page_PlayMode_C_OnMatchChanged, ReturnValue) == 0x000000, "Member 'Page_PlayMode_C_OnMatchChanged::ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnJoinCustomGame_Confirmed
// 0x0060 (0x0060 - 0x0000)
struct Page_PlayMode_C_OnJoinCustomGame_Confirmed final
{
public:
	class FString                                 _battle_ids;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Social_mgr;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ExtractBattleIDS_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddSystemChat_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4002[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_OnJoinCustomGame_Confirmed) == 0x000008, "Wrong alignment on Page_PlayMode_C_OnJoinCustomGame_Confirmed");
static_assert(sizeof(Page_PlayMode_C_OnJoinCustomGame_Confirmed) == 0x000060, "Wrong size on Page_PlayMode_C_OnJoinCustomGame_Confirmed");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, _battle_ids) == 0x000000, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::_battle_ids' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, Social_mgr) == 0x000010, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::Social_mgr' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, CallFunc_ExtractBattleIDS_ReturnValue) == 0x000018, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::CallFunc_ExtractBattleIDS_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, CallFunc_IsEmpty_ReturnValue) == 0x000040, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, CallFunc_AddSystemChat_ReturnValue) == 0x000041, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::CallFunc_AddSystemChat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnJoinCustomGame_Confirmed, CallFunc_AddToastMessage_ReturnValue) == 0x000058, "Member 'Page_PlayMode_C_OnJoinCustomGame_Confirmed::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnGetVisibility_CreateCustomGame
// 0x0004 (0x0004 - 0x0000)
struct Page_PlayMode_C_OnGetVisibility_CreateCustomGame final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserRole                              CallFunc_GetUserRole_ReturnValue;                  // 0x0001(0x0003)(ConstParm, NoDestructor)
};
static_assert(alignof(Page_PlayMode_C_OnGetVisibility_CreateCustomGame) == 0x000001, "Wrong alignment on Page_PlayMode_C_OnGetVisibility_CreateCustomGame");
static_assert(sizeof(Page_PlayMode_C_OnGetVisibility_CreateCustomGame) == 0x000004, "Wrong size on Page_PlayMode_C_OnGetVisibility_CreateCustomGame");
static_assert(offsetof(Page_PlayMode_C_OnGetVisibility_CreateCustomGame, ReturnValue) == 0x000000, "Member 'Page_PlayMode_C_OnGetVisibility_CreateCustomGame::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnGetVisibility_CreateCustomGame, CallFunc_GetUserRole_ReturnValue) == 0x000001, "Member 'Page_PlayMode_C_OnGetVisibility_CreateCustomGame::CallFunc_GetUserRole_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnAck_StartMatchMaking
// 0x0058 (0x0058 - 0x0000)
struct Page_PlayMode_C_OnAck_StartMatchMaking final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FACK_FindMatch                         _ack;                                              // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4003[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm)
	EResultCode                                   RCode;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4004[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              CallFunc_HandleResultCode__reply;                  // 0x0030(0x0020)()
	bool                                          CallFunc_GoBack_ReturnValue;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_OnAck_StartMatchMaking) == 0x000008, "Wrong alignment on Page_PlayMode_C_OnAck_StartMatchMaking");
static_assert(sizeof(Page_PlayMode_C_OnAck_StartMatchMaking) == 0x000058, "Wrong size on Page_PlayMode_C_OnAck_StartMatchMaking");
static_assert(offsetof(Page_PlayMode_C_OnAck_StartMatchMaking, _rcode) == 0x000000, "Member 'Page_PlayMode_C_OnAck_StartMatchMaking::_rcode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnAck_StartMatchMaking, _ack) == 0x000001, "Member 'Page_PlayMode_C_OnAck_StartMatchMaking::_ack' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnAck_StartMatchMaking, ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_OnAck_StartMatchMaking::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnAck_StartMatchMaking, RCode) == 0x000028, "Member 'Page_PlayMode_C_OnAck_StartMatchMaking::RCode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnAck_StartMatchMaking, CallFunc_HandleResultCode__reply) == 0x000030, "Member 'Page_PlayMode_C_OnAck_StartMatchMaking::CallFunc_HandleResultCode__reply' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnAck_StartMatchMaking, CallFunc_GoBack_ReturnValue) == 0x000050, "Member 'Page_PlayMode_C_OnAck_StartMatchMaking::CallFunc_GoBack_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.OnACK_LeaveParty
// 0x0058 (0x0058 - 0x0000)
struct Page_PlayMode_C_OnACK_LeaveParty final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4005[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FACK_PartyDelete                       _ack;                                              // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FNetReply                              ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm)
	EResultCode                                   RCode;                                             // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4006[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              CallFunc_NetReplyFromCode_ReturnValue;             // 0x0038(0x0020)()
};
static_assert(alignof(Page_PlayMode_C_OnACK_LeaveParty) == 0x000008, "Wrong alignment on Page_PlayMode_C_OnACK_LeaveParty");
static_assert(sizeof(Page_PlayMode_C_OnACK_LeaveParty) == 0x000058, "Wrong size on Page_PlayMode_C_OnACK_LeaveParty");
static_assert(offsetof(Page_PlayMode_C_OnACK_LeaveParty, _rcode) == 0x000000, "Member 'Page_PlayMode_C_OnACK_LeaveParty::_rcode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnACK_LeaveParty, _ack) == 0x000008, "Member 'Page_PlayMode_C_OnACK_LeaveParty::_ack' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnACK_LeaveParty, ReturnValue) == 0x000010, "Member 'Page_PlayMode_C_OnACK_LeaveParty::ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnACK_LeaveParty, RCode) == 0x000030, "Member 'Page_PlayMode_C_OnACK_LeaveParty::RCode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnACK_LeaveParty, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'Page_PlayMode_C_OnACK_LeaveParty::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_OnACK_LeaveParty, CallFunc_NetReplyFromCode_ReturnValue) == 0x000038, "Member 'Page_PlayMode_C_OnACK_LeaveParty::CallFunc_NetReplyFromCode_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.On Confirm Leave Party
// 0x0028 (0x0028 - 0x0000)
struct Page_PlayMode_C_On_Confirm_Leave_Party final
{
public:
	const class UPopupBase*                       _popup;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   _ctrl_id;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EResultCode _rcode, struct FACK_PartyDelete& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExitParty_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_On_Confirm_Leave_Party) == 0x000008, "Wrong alignment on Page_PlayMode_C_On_Confirm_Leave_Party");
static_assert(sizeof(Page_PlayMode_C_On_Confirm_Leave_Party) == 0x000028, "Wrong size on Page_PlayMode_C_On_Confirm_Leave_Party");
static_assert(offsetof(Page_PlayMode_C_On_Confirm_Leave_Party, _popup) == 0x000000, "Member 'Page_PlayMode_C_On_Confirm_Leave_Party::_popup' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_On_Confirm_Leave_Party, _ctrl_id) == 0x000008, "Member 'Page_PlayMode_C_On_Confirm_Leave_Party::_ctrl_id' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_On_Confirm_Leave_Party, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Page_PlayMode_C_On_Confirm_Leave_Party::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_On_Confirm_Leave_Party, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000020, "Member 'Page_PlayMode_C_On_Confirm_Leave_Party::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_On_Confirm_Leave_Party, CallFunc_ExitParty_ReturnValue) == 0x000021, "Member 'Page_PlayMode_C_On_Confirm_Leave_Party::CallFunc_ExitParty_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.HandleResultCode
// 0x0078 (0x0078 - 0x0000)
struct Page_PlayMode_C_HandleResultCode final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4007[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              _Reply;                                            // 0x0008(0x0020)(Parm, OutParm)
	EResultCode                                   RCode;                                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4008[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              K2Node_MakeStruct_NetReply;                        // 0x0030(0x0020)()
	struct FNetReply                              K2Node_MakeStruct_NetReply_1;                      // 0x0050(0x0020)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_HandleResultCode) == 0x000008, "Wrong alignment on Page_PlayMode_C_HandleResultCode");
static_assert(sizeof(Page_PlayMode_C_HandleResultCode) == 0x000078, "Wrong size on Page_PlayMode_C_HandleResultCode");
static_assert(offsetof(Page_PlayMode_C_HandleResultCode, _rcode) == 0x000000, "Member 'Page_PlayMode_C_HandleResultCode::_rcode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_HandleResultCode, _Reply) == 0x000008, "Member 'Page_PlayMode_C_HandleResultCode::_Reply' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_HandleResultCode, RCode) == 0x000028, "Member 'Page_PlayMode_C_HandleResultCode::RCode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_HandleResultCode, K2Node_MakeStruct_NetReply) == 0x000030, "Member 'Page_PlayMode_C_HandleResultCode::K2Node_MakeStruct_NetReply' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_HandleResultCode, K2Node_MakeStruct_NetReply_1) == 0x000050, "Member 'Page_PlayMode_C_HandleResultCode::K2Node_MakeStruct_NetReply_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_HandleResultCode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'Page_PlayMode_C_HandleResultCode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.ExecuteUbergraph_Page_PlayMode
// 0x0110 (0x0110 - 0x0000)
struct Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4009[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_ComponentBoundEvent__game_mode_3;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__is_checked_3;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_ComponentBoundEvent__game_mode_2;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__is_checked_2;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_ComponentBoundEvent__game_mode_1;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__is_checked_1;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400A[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDisableMatchFunc_DisableMatch;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400B[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_CheckDisableMatchFunc_ExpireAt;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_11;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__focus_5;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_10;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__focus_4;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400D[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_9;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__focus_3;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400E[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_8;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__focus_2;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400F[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_7;              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__focus_1;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4010[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_6;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__focus;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_ComponentBoundEvent__game_mode;             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__is_checked;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4011[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_5;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_5;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4012[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_4;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_4;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4013[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_3;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_3;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4014[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_2;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_2;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4015[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_1;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_1;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode) == 0x000008, "Wrong alignment on Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode");
static_assert(sizeof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode) == 0x000110, "Wrong size on Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, EntryPoint) == 0x000000, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__game_mode_3) == 0x000011, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__game_mode_3' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__is_checked_3) == 0x000012, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__is_checked_3' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__game_mode_2) == 0x000013, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__game_mode_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__is_checked_2) == 0x000014, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__is_checked_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__game_mode_1) == 0x000015, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__game_mode_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__is_checked_1) == 0x000016, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__is_checked_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_Event_MyGeometry) == 0x000018, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_Event_InDeltaTime) == 0x000050, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, CallFunc_CheckDisableMatchFunc_DisableMatch) == 0x000054, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::CallFunc_CheckDisableMatchFunc_DisableMatch' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, CallFunc_CheckDisableMatchFunc_ExpireAt) == 0x000058, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::CallFunc_CheckDisableMatchFunc_ExpireAt' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_11) == 0x000060, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_11' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__focus_5) == 0x000068, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__focus_5' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_10) == 0x000070, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_10' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__focus_4) == 0x000078, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__focus_4' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_9) == 0x000080, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_9' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__focus_3) == 0x000088, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__focus_3' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_8) == 0x000090, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_8' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__focus_2) == 0x000098, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__focus_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_7) == 0x0000A0, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_7' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__focus_1) == 0x0000A8, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__focus_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_6) == 0x0000B0, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_6' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__focus) == 0x0000B8, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__focus' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__game_mode) == 0x0000B9, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__is_checked) == 0x0000BA, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__is_checked' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_5) == 0x0000C0, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_5' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__select_5) == 0x0000C8, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__select_5' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_4) == 0x0000D0, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_4' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__select_4) == 0x0000D8, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__select_4' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_3) == 0x0000E0, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_3' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__select_3) == 0x0000E8, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__select_3' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_2) == 0x0000F0, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__select_2) == 0x0000F8, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__select_2' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__widget_1) == 0x000100, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__widget_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode, K2Node_ComponentBoundEvent__select_1) == 0x000108, "Member 'Page_PlayMode_C_ExecuteUbergraph_Page_PlayMode::K2Node_ComponentBoundEvent__select_1' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.EnableCtrls
// 0x0001 (0x0001 - 0x0000)
struct Page_PlayMode_C_EnableCtrls final
{
public:
	bool                                          _enable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_EnableCtrls) == 0x000001, "Wrong alignment on Page_PlayMode_C_EnableCtrls");
static_assert(sizeof(Page_PlayMode_C_EnableCtrls) == 0x000001, "Wrong size on Page_PlayMode_C_EnableCtrls");
static_assert(offsetof(Page_PlayMode_C_EnableCtrls, _enable) == 0x000000, "Member 'Page_PlayMode_C_EnableCtrls::_enable' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.CheckDisableMatchFunc
// 0x00A0 (0x00A0 - 0x0000)
struct Page_PlayMode_C_CheckDisableMatchFunc final
{
public:
	bool                                          Param_DisableMatch;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4016[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              ExpireAt;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              Expire_at;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAppliedFunction                       Func_0;                                            // 0x0018(0x0030)(Edit, BlueprintVisible)
	bool                                          Locked;                                            // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4017[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4018[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    CallFunc_GetLocalPlayerContext_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAppliedFunction                       CallFunc_FindFunctionByTarget__function;           // 0x0068(0x0030)()
	bool                                          CallFunc_FindFunctionByTarget_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_CheckDisableMatchFunc) == 0x000008, "Wrong alignment on Page_PlayMode_C_CheckDisableMatchFunc");
static_assert(sizeof(Page_PlayMode_C_CheckDisableMatchFunc) == 0x0000A0, "Wrong size on Page_PlayMode_C_CheckDisableMatchFunc");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, Param_DisableMatch) == 0x000000, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::Param_DisableMatch' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, ExpireAt) == 0x000008, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::ExpireAt' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, Expire_at) == 0x000010, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::Expire_at' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, Func_0) == 0x000018, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::Func_0' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, Locked) == 0x000048, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::Locked' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000049, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_UtcNow_ReturnValue) == 0x000050, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x000058, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_GetLocalPlayerContext_ReturnValue) == 0x000060, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_GetLocalPlayerContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_FindFunctionByTarget__function) == 0x000068, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_FindFunctionByTarget__function' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_FindFunctionByTarget_ReturnValue) == 0x000098, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_FindFunctionByTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_CheckDisableMatchFunc, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'Page_PlayMode_C_CheckDisableMatchFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _is_checked;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature) == 0x000001, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature) == 0x000002, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature, _is_checked) == 0x000001, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature::_is_checked' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _is_checked;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature) == 0x000001, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature) == 0x000002, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature, _is_checked) == 0x000001, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature::_is_checked' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _is_checked;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature) == 0x000001, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature) == 0x000002, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature, _is_checked) == 0x000001, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature::_is_checked' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _is_checked;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature) == 0x000001, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature) == 0x000002, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature, _game_mode) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature::_game_mode' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature, _is_checked) == 0x000001, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature::_is_checked' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature, _select) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature::_select' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _focus;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature, _focus) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature::_focus' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _focus;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature, _focus) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature::_focus' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature, _select) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature::_select' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _focus;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature, _focus) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature::_focus' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature, _select) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature::_select' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature, _select) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature::_select' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _focus;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature, _focus) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature::_focus' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature, _select) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature::_select' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _focus;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature, _focus) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature::_focus' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature, _select) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature::_select' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _focus;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature) == 0x000008, "Wrong alignment on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature");
static_assert(sizeof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature) == 0x000010, "Wrong size on Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature, _widget) == 0x000000, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature, _focus) == 0x000008, "Member 'Page_PlayMode_C_BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature::_focus' has a wrong offset!");

// Function Page_PlayMode.Page_PlayMode_C.AskLeavePartyIfAny
// 0x0068 (0x0068 - 0x0000)
struct Page_PlayMode_C_AskLeavePartyIfAny final
{
public:
	class USocialContext*                         Social_mgr;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USocialContext*                         CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4019[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)(ConstParm)
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)(ConstParm)
	TDelegate<void(class UPopupBase* _popup, class FName _ctrl_id)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBriefParty*                            CallFunc_GetMyParty_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Page_PlayMode_C_AskLeavePartyIfAny) == 0x000008, "Wrong alignment on Page_PlayMode_C_AskLeavePartyIfAny");
static_assert(sizeof(Page_PlayMode_C_AskLeavePartyIfAny) == 0x000068, "Wrong size on Page_PlayMode_C_AskLeavePartyIfAny");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, Social_mgr) == 0x000000, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::Social_mgr' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, Temp_text_Variable) == 0x000018, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, Temp_text_Variable_1) == 0x000030, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, CallFunc_GetMyParty_ReturnValue) == 0x000058, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::CallFunc_GetMyParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Page_PlayMode_C_AskLeavePartyIfAny, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'Page_PlayMode_C_AskLeavePartyIfAny::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

