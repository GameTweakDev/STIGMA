#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LVITEM_Character

#include "Basic.hpp"

#include "LVITEM_Character_classes.hpp"
#include "LVITEM_Character_parameters.hpp"


namespace SDK
{

// Function LVITEM_Character.LVITEM_Character_C.Config
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharacterDefine                 _define                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    _is_possessed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVITEM_Character_C::Config(struct FCharacterDefine& _define, bool _is_possessed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "Config");

	Params::LVITEM_Character_C_Config Parms{};

	Parms._define = std::move(_define);
	Parms._is_possessed = _is_possessed;

	UObject::ProcessEvent(Func, &Parms);

	_define = std::move(Parms._define);
}


// Function LVITEM_Character.LVITEM_Character_C.GetItemID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FItemID                          Item_ID                                                (Parm, OutParm, HasGetValueTypeHash)

void ULVITEM_Character_C::GetItemID(struct FItemID* Item_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "GetItemID");

	Params::LVITEM_Character_C_GetItemID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Item_ID != nullptr)
		*Item_ID = std::move(Parms.Item_ID);
}


// Function LVITEM_Character.LVITEM_Character_C.SetCurrentCharacterType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharaType                              _chara_type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVITEM_Character_C::SetCurrentCharacterType(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "SetCurrentCharacterType");

	Params::LVITEM_Character_C_SetCurrentCharacterType Parms{};

	Parms._chara_type = _chara_type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LVITEM_Character.LVITEM_Character_C.SetEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _is_enable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVITEM_Character_C::SetEnable(bool _is_enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "SetEnable");

	Params::LVITEM_Character_C_SetEnable Parms{};

	Parms._is_enable = _is_enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LVITEM_Character.LVITEM_Character_C.GetCharacterName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             _Name                                                  (Parm, OutParm)

void ULVITEM_Character_C::GetCharacterName(class FText* _Name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "GetCharacterName");

	Params::LVITEM_Character_C_GetCharacterName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_Name != nullptr)
		*_Name = std::move(Parms._Name);
}


// Function LVITEM_Character.LVITEM_Character_C.GetCharacterType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ECharaType                              _type                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVITEM_Character_C::GetCharacterType(ECharaType* _type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "GetCharacterType");

	Params::LVITEM_Character_C_GetCharacterType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_type != nullptr)
		*_type = Parms._type;
}


// Function LVITEM_Character.LVITEM_Character_C.GetIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (Parm, OutParm, HasGetValueTypeHash)

void ULVITEM_Character_C::GetIcon(TSoftObjectPtr<class UTexture2D>* _Icon) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "GetIcon");

	Params::LVITEM_Character_C_GetIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_Icon != nullptr)
		*_Icon = Parms._Icon;
}


// Function LVITEM_Character.LVITEM_Character_C.IsEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    _is_enable                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVITEM_Character_C::IsEnable(bool* _is_enable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "IsEnable");

	Params::LVITEM_Character_C_IsEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_is_enable != nullptr)
		*_is_enable = Parms._is_enable;
}


// Function LVITEM_Character.LVITEM_Character_C.IsSelected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    _selected                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVITEM_Character_C::IsSelected(bool* _selected) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVITEM_Character_C", "IsSelected");

	Params::LVITEM_Character_C_IsSelected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_selected != nullptr)
		*_selected = Parms._selected;
}

}

