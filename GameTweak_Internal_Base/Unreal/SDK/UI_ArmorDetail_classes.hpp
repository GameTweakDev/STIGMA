#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_ArmorDetail

#include "Basic.hpp"

#include "BPGLib_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ArmorDetail.UI_ArmorDetail_C
// 0x0060 (0x0550 - 0x04F0)
class UUI_ArmorDetail_C final : public UPreviewableWidget
{
public:
	class UUI_Costume_ArmorParts_C*               ArmorParts;                                        // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Detail_VerticalBox_Armor;                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           Detail_VerticalBox_Gear;                           // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_208;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_303;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Bg;                                            // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Bg_1;                                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Bg_2;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_01;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_02;                                         // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_03;                                         // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_ArmorType;                                     // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class FText GetText();
	void UpdateArmor();
	void UpdateArmorStats(class UVerticalBox* Vertical_box, TArray<struct FDisplayStat>& Display_stats);
	void UpdateDesc(bool _is_gear, class UVerticalBox* _vertical_box);
	void UpdateDisplayStats(class UVerticalBox* Vertical_box, TArray<struct FDisplayStat>& Display_stats);
	void UpdateGear();
	void UpdateGearStats(class UVerticalBox* Vertical_box, TArray<struct FDisplayStat>& Display_stats);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ArmorDetail_C">();
	}
	static class UUI_ArmorDetail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ArmorDetail_C>();
	}
};
static_assert(alignof(UUI_ArmorDetail_C) == 0x000008, "Wrong alignment on UUI_ArmorDetail_C");
static_assert(sizeof(UUI_ArmorDetail_C) == 0x000550, "Wrong size on UUI_ArmorDetail_C");
static_assert(offsetof(UUI_ArmorDetail_C, ArmorParts) == 0x0004F0, "Member 'UUI_ArmorDetail_C::ArmorParts' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Detail_VerticalBox_Armor) == 0x0004F8, "Member 'UUI_ArmorDetail_C::Detail_VerticalBox_Armor' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Detail_VerticalBox_Gear) == 0x000500, "Member 'UUI_ArmorDetail_C::Detail_VerticalBox_Gear' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Image_208) == 0x000508, "Member 'UUI_ArmorDetail_C::Image_208' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Image_303) == 0x000510, "Member 'UUI_ArmorDetail_C::Image_303' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, IMG_Bg) == 0x000518, "Member 'UUI_ArmorDetail_C::IMG_Bg' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, IMG_Bg_1) == 0x000520, "Member 'UUI_ArmorDetail_C::IMG_Bg_1' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, IMG_Bg_2) == 0x000528, "Member 'UUI_ArmorDetail_C::IMG_Bg_2' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Img_Bg_01) == 0x000530, "Member 'UUI_ArmorDetail_C::Img_Bg_01' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Img_Bg_02) == 0x000538, "Member 'UUI_ArmorDetail_C::Img_Bg_02' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, Img_Bg_03) == 0x000540, "Member 'UUI_ArmorDetail_C::Img_Bg_03' has a wrong offset!");
static_assert(offsetof(UUI_ArmorDetail_C, TXT_ArmorType) == 0x000548, "Member 'UUI_ArmorDetail_C::TXT_ArmorType' has a wrong offset!");

}

