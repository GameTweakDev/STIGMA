#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Panel_Armory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "UMG_classes.hpp"
#include "BPGLib_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Panel_Armory.Panel_Armory_C
// 0x0110 (0x03D0 - 0x02C0)
class UPanel_Armory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_ChangedStatDetail_C*              Ctrl_ChangedStatDetail;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_GunControlPower_C*                Ctrl_GunControlPower;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_GunSpecGraph_C*                   Ctrl_GunSpecGraph;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Design_Back;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPolyGraph*                             Graph;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_CharaName;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_CharaName_Graph;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Organization;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGunType                                      GunType_Current;                                   // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      GunType_Base;                                      // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF8[0x6];                                     // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterInfo                         CharaInfo;                                         // 0x0310(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	EItemCategory                                 SelectingItemCategory;                             // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF9[0x3];                                     // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         SelectingItemIndex;                                // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                CurrentItemID;                                     // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FPassiveSkill>                  PassiveSkills;                                     // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnEquipItem;                                       // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FItemID_Booster>                BoosterList;                                       // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGunPreset                             GunPreset_Current;                                 // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGunPreset                             GunPreset_Base;                                    // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ChangeBooster(const struct FItemID& _item_id);
	void ChangePassiveSkill(const struct FItemID& _item_id);
	void Config_Armory(const struct FCharacterInfo& _chara_info);
	class UWidget* CreateTooltip(EHoverGraphArea _area, int32 _idx_axis);
	void ExecuteUbergraph_Panel_Armory(int32 EntryPoint);
	void OnEndOfItemHovering();
	void OnEquipItem__DelegateSignature(ECharaType _chara_type, const struct FItemID& _item_id, int32 _idx_slot);
	void OnItemHover(const struct FItemID& _item_id);
	void OnItemSelected(const struct FItemID& _item_id);
	void RefreshCurrentItemID();
	void SetGraphValue(int32 _idx_axis, double _base, double _add1, double _add2);
	void Start_Selecting(EItemCategory _item_category, int32 _index, const struct FItemID& _item_id);
	void StartSelectingEx(EItemCategory _category);
	void UpdateBaseGun();
	void UpdateGraph();
	void UpdateHoveredGun();
	void UpdatePalette();
	void UpdatePassiveAndBooster(bool _update_passive, bool _update_booster);

	void GetCharaType(ECharaType* _chara_type) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Panel_Armory_C">();
	}
	static class UPanel_Armory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPanel_Armory_C>();
	}
};
static_assert(alignof(UPanel_Armory_C) == 0x000008, "Wrong alignment on UPanel_Armory_C");
static_assert(sizeof(UPanel_Armory_C) == 0x0003D0, "Wrong size on UPanel_Armory_C");
static_assert(offsetof(UPanel_Armory_C, UberGraphFrame) == 0x0002C0, "Member 'UPanel_Armory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, Ctrl_ChangedStatDetail) == 0x0002C8, "Member 'UPanel_Armory_C::Ctrl_ChangedStatDetail' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, Ctrl_GunControlPower) == 0x0002D0, "Member 'UPanel_Armory_C::Ctrl_GunControlPower' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, Ctrl_GunSpecGraph) == 0x0002D8, "Member 'UPanel_Armory_C::Ctrl_GunSpecGraph' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, Design_Back) == 0x0002E0, "Member 'UPanel_Armory_C::Design_Back' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, Graph) == 0x0002E8, "Member 'UPanel_Armory_C::Graph' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, TXT_CharaName) == 0x0002F0, "Member 'UPanel_Armory_C::TXT_CharaName' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, TXT_CharaName_Graph) == 0x0002F8, "Member 'UPanel_Armory_C::TXT_CharaName_Graph' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, TXT_Organization) == 0x000300, "Member 'UPanel_Armory_C::TXT_Organization' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, GunType_Current) == 0x000308, "Member 'UPanel_Armory_C::GunType_Current' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, GunType_Base) == 0x000309, "Member 'UPanel_Armory_C::GunType_Base' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, CharaInfo) == 0x000310, "Member 'UPanel_Armory_C::CharaInfo' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, SelectingItemCategory) == 0x000368, "Member 'UPanel_Armory_C::SelectingItemCategory' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, SelectingItemIndex) == 0x00036C, "Member 'UPanel_Armory_C::SelectingItemIndex' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, CurrentItemID) == 0x000370, "Member 'UPanel_Armory_C::CurrentItemID' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, PassiveSkills) == 0x000380, "Member 'UPanel_Armory_C::PassiveSkills' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, OnEquipItem) == 0x000390, "Member 'UPanel_Armory_C::OnEquipItem' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, BoosterList) == 0x0003A0, "Member 'UPanel_Armory_C::BoosterList' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, GunPreset_Current) == 0x0003B0, "Member 'UPanel_Armory_C::GunPreset_Current' has a wrong offset!");
static_assert(offsetof(UPanel_Armory_C, GunPreset_Base) == 0x0003C0, "Member 'UPanel_Armory_C::GunPreset_Base' has a wrong offset!");

}

