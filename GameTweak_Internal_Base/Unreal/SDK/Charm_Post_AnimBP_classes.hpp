#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Charm_Post_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KawaiiPhysics_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Charm_Post_AnimBP.Charm_Post_AnimBP_C
// 0x08D0 (0x10F0 - 0x0820)
class UCharm_Post_AnimBP_C final : public USpecterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0820(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0828(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0830(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0838(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0858(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0878(0x0020)()
	uint8                                         Pad_3732[0x8];                                     // 0x0898(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x08A0(0x0790)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1030(0x00B8)()
	bool                                          NewVar;                                            // 0x10E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Charm_Post_AnimBP_AnimGraphNode_KawaiiPhysics_7576E7CB4E69037A7E7BEFADB97DEEF2();
	void ExecuteUbergraph_Charm_Post_AnimBP(int32 EntryPoint);
	void SetGravity(struct FVector* NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Charm_Post_AnimBP_C">();
	}
	static class UCharm_Post_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharm_Post_AnimBP_C>();
	}
};
static_assert(alignof(UCharm_Post_AnimBP_C) == 0x000010, "Wrong alignment on UCharm_Post_AnimBP_C");
static_assert(sizeof(UCharm_Post_AnimBP_C) == 0x0010F0, "Wrong size on UCharm_Post_AnimBP_C");
static_assert(offsetof(UCharm_Post_AnimBP_C, UberGraphFrame) == 0x000820, "Member 'UCharm_Post_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000828, "Member 'UCharm_Post_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimBlueprintExtension_Base) == 0x000830, "Member 'UCharm_Post_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimGraphNode_Root) == 0x000838, "Member 'UCharm_Post_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000858, "Member 'UCharm_Post_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000878, "Member 'UCharm_Post_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics) == 0x0008A0, "Member 'UCharm_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x001030, "Member 'UCharm_Post_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UCharm_Post_AnimBP_C, NewVar) == 0x0010E8, "Member 'UCharm_Post_AnimBP_C::NewVar' has a wrong offset!");

}

