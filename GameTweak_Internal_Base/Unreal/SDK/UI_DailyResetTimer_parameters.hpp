#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_DailyResetTimer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_DailyResetTimer.UI_DailyResetTimer_C.ExecuteUbergraph_UI_DailyResetTimer
// 0x0058 (0x0058 - 0x0000)
struct UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32AC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32AD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0028(0x0018)()
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x0040(0x0018)()
};
static_assert(alignof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer) == 0x000008, "Wrong alignment on UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer");
static_assert(sizeof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer) == 0x000058, "Wrong size on UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer");
static_assert(offsetof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer, EntryPoint) == 0x000000, "Member 'UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer, K2Node_Event_IsDesignTime) == 0x000020, "Member 'UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000028, "Member 'UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer, CallFunc_AppendText_ReturnValue) == 0x000040, "Member 'UI_DailyResetTimer_C_ExecuteUbergraph_UI_DailyResetTimer::CallFunc_AppendText_ReturnValue' has a wrong offset!");

// Function UI_DailyResetTimer.UI_DailyResetTimer_C.InitWidget
// 0x0010 (0x0010 - 0x0000)
struct UI_DailyResetTimer_C_InitWidget final
{
public:
	struct FDateTime                              _end_at;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         _alert_hour;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DailyResetTimer_C_InitWidget) == 0x000008, "Wrong alignment on UI_DailyResetTimer_C_InitWidget");
static_assert(sizeof(UI_DailyResetTimer_C_InitWidget) == 0x000010, "Wrong size on UI_DailyResetTimer_C_InitWidget");
static_assert(offsetof(UI_DailyResetTimer_C_InitWidget, _end_at) == 0x000000, "Member 'UI_DailyResetTimer_C_InitWidget::_end_at' has a wrong offset!");
static_assert(offsetof(UI_DailyResetTimer_C_InitWidget, _alert_hour) == 0x000008, "Member 'UI_DailyResetTimer_C_InitWidget::_alert_hour' has a wrong offset!");

// Function UI_DailyResetTimer.UI_DailyResetTimer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_DailyResetTimer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DailyResetTimer_C_PreConstruct) == 0x000001, "Wrong alignment on UI_DailyResetTimer_C_PreConstruct");
static_assert(sizeof(UI_DailyResetTimer_C_PreConstruct) == 0x000001, "Wrong size on UI_DailyResetTimer_C_PreConstruct");
static_assert(offsetof(UI_DailyResetTimer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_DailyResetTimer_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

