#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_BundleItem

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_BundleItem.UI_BundleItem_C.ExecuteUbergraph_UI_BundleItem
// 0x0018 (0x0018 - 0x0000)
struct UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<EItemUITag>                            K2Node_Event__tags;                                // 0x0008(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem) == 0x000008, "Wrong alignment on UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem");
static_assert(sizeof(UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem) == 0x000018, "Wrong size on UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem");
static_assert(offsetof(UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem, EntryPoint) == 0x000000, "Member 'UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem, K2Node_Event__tags) == 0x000008, "Member 'UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem::K2Node_Event__tags' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.Get_IMG_RedDot_Visibility
// 0x0003 (0x0003 - 0x0000)
struct UI_BundleItem_C_Get_IMG_RedDot_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibleRedDot_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BundleItem_C_Get_IMG_RedDot_Visibility) == 0x000001, "Wrong alignment on UI_BundleItem_C_Get_IMG_RedDot_Visibility");
static_assert(sizeof(UI_BundleItem_C_Get_IMG_RedDot_Visibility) == 0x000003, "Wrong size on UI_BundleItem_C_Get_IMG_RedDot_Visibility");
static_assert(offsetof(UI_BundleItem_C_Get_IMG_RedDot_Visibility, ReturnValue) == 0x000000, "Member 'UI_BundleItem_C_Get_IMG_RedDot_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_Get_IMG_RedDot_Visibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UI_BundleItem_C_Get_IMG_RedDot_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_Get_IMG_RedDot_Visibility, CallFunc_IsVisibleRedDot_ReturnValue) == 0x000002, "Member 'UI_BundleItem_C_Get_IMG_RedDot_Visibility::CallFunc_IsVisibleRedDot_ReturnValue' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.GetTooltipWidget
// 0x0048 (0x0048 - 0x0000)
struct UI_BundleItem_C_GetTooltipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                Item_id;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EItemCategory                                 CallFunc_GetCategory_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETooltipType                                  CallFunc_GetTooltipTypeFromItemCategory_ReturnValue; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAB[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_ItemID_Default_C*           K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAC[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetItemID_ReturnValue;                    // 0x0038(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(UI_BundleItem_C_GetTooltipWidget) == 0x000008, "Wrong alignment on UI_BundleItem_C_GetTooltipWidget");
static_assert(sizeof(UI_BundleItem_C_GetTooltipWidget) == 0x000048, "Wrong size on UI_BundleItem_C_GetTooltipWidget");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, ReturnValue) == 0x000000, "Member 'UI_BundleItem_C_GetTooltipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, Item_id) == 0x000008, "Member 'UI_BundleItem_C_GetTooltipWidget::Item_id' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, CallFunc_GetCategory_ReturnValue) == 0x000018, "Member 'UI_BundleItem_C_GetTooltipWidget::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, CallFunc_GetTooltipTypeFromItemCategory_ReturnValue) == 0x000019, "Member 'UI_BundleItem_C_GetTooltipWidget::CallFunc_GetTooltipTypeFromItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, CallFunc_IsValidItemID_ReturnValue) == 0x00001A, "Member 'UI_BundleItem_C_GetTooltipWidget::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000020, "Member 'UI_BundleItem_C_GetTooltipWidget::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default) == 0x000028, "Member 'UI_BundleItem_C_GetTooltipWidget::K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UI_BundleItem_C_GetTooltipWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'UI_BundleItem_C_GetTooltipWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_GetTooltipWidget, CallFunc_GetItemID_ReturnValue) == 0x000038, "Member 'UI_BundleItem_C_GetTooltipWidget::CallFunc_GetItemID_ReturnValue' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.InitWidget
// 0x0018 (0x0018 - 0x0000)
struct UI_BundleItem_C_InitWidget final
{
public:
	bool                                          BonusItem;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UInvenItem*                             InvenItem;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BundleItem_C_InitWidget) == 0x000008, "Wrong alignment on UI_BundleItem_C_InitWidget");
static_assert(sizeof(UI_BundleItem_C_InitWidget) == 0x000018, "Wrong size on UI_BundleItem_C_InitWidget");
static_assert(offsetof(UI_BundleItem_C_InitWidget, BonusItem) == 0x000000, "Member 'UI_BundleItem_C_InitWidget::BonusItem' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_InitWidget, InvenItem) == 0x000008, "Member 'UI_BundleItem_C_InitWidget::InvenItem' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_InitWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'UI_BundleItem_C_InitWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct UI_BundleItem_C_OnClicked__DelegateSignature final
{
public:
	class UUI_BundleItem_C*                       bundle_item;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BundleItem_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on UI_BundleItem_C_OnClicked__DelegateSignature");
static_assert(sizeof(UI_BundleItem_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on UI_BundleItem_C_OnClicked__DelegateSignature");
static_assert(offsetof(UI_BundleItem_C_OnClicked__DelegateSignature, bundle_item) == 0x000000, "Member 'UI_BundleItem_C_OnClicked__DelegateSignature::bundle_item' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct UI_BundleItem_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(UI_BundleItem_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on UI_BundleItem_C_OnMouseButtonDown");
static_assert(sizeof(UI_BundleItem_C_OnMouseButtonDown) == 0x000220, "Wrong size on UI_BundleItem_C_OnMouseButtonDown");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'UI_BundleItem_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'UI_BundleItem_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'UI_BundleItem_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'UI_BundleItem_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.OnMouseButtonUp
// 0x0220 (0x0220 - 0x0000)
struct UI_BundleItem_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(UI_BundleItem_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on UI_BundleItem_C_OnMouseButtonUp");
static_assert(sizeof(UI_BundleItem_C_OnMouseButtonUp) == 0x000220, "Wrong size on UI_BundleItem_C_OnMouseButtonUp");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'UI_BundleItem_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'UI_BundleItem_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'UI_BundleItem_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'UI_BundleItem_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.OnUpdateItems
// 0x00C8 (0x00C8 - 0x0000)
struct UI_BundleItem_C_OnUpdateItems final
{
public:
	EItemCategory                                 Category;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetItemID_ReturnValue;                    // 0x0008(0x0010)(HasGetValueTypeHash)
	EItemCategory                                 CallFunc_GetCategory_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CAF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_ItemCategory                   CallFunc_GetItemCategoryDefine_ReturnValue;        // 0x0020(0x00A0)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BundleItem_C_OnUpdateItems) == 0x000008, "Wrong alignment on UI_BundleItem_C_OnUpdateItems");
static_assert(sizeof(UI_BundleItem_C_OnUpdateItems) == 0x0000C8, "Wrong size on UI_BundleItem_C_OnUpdateItems");
static_assert(offsetof(UI_BundleItem_C_OnUpdateItems, Category) == 0x000000, "Member 'UI_BundleItem_C_OnUpdateItems::Category' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnUpdateItems, CallFunc_GetItemID_ReturnValue) == 0x000008, "Member 'UI_BundleItem_C_OnUpdateItems::CallFunc_GetItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnUpdateItems, CallFunc_GetCategory_ReturnValue) == 0x000018, "Member 'UI_BundleItem_C_OnUpdateItems::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnUpdateItems, CallFunc_GetItemCategoryDefine_ReturnValue) == 0x000020, "Member 'UI_BundleItem_C_OnUpdateItems::CallFunc_GetItemCategoryDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BundleItem_C_OnUpdateItems, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'UI_BundleItem_C_OnUpdateItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_BundleItem.UI_BundleItem_C.SetTags
// 0x0010 (0x0010 - 0x0000)
struct UI_BundleItem_C_SetTags final
{
public:
	TArray<EItemUITag>                            _tags;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_BundleItem_C_SetTags) == 0x000008, "Wrong alignment on UI_BundleItem_C_SetTags");
static_assert(sizeof(UI_BundleItem_C_SetTags) == 0x000010, "Wrong size on UI_BundleItem_C_SetTags");
static_assert(offsetof(UI_BundleItem_C_SetTags, _tags) == 0x000000, "Member 'UI_BundleItem_C_SetTags::_tags' has a wrong offset!");

}

