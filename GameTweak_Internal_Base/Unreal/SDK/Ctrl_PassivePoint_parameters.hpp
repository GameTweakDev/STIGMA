#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_PassivePoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_PassivePoint.Ctrl_PassivePoint_C.ExecuteUbergraph_Ctrl_PassivePoint
// 0x0070 (0x0070 - 0x0000)
struct Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EUserEvent _event)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EEC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TSet<EUserEvent>                              K2Node_MakeSet_Set;                                // 0x0018(0x0050)(ConstParm)
	EUserEvent                                    K2Node_CustomEvent__event;                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint) == 0x000008, "Wrong alignment on Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint");
static_assert(sizeof(Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint) == 0x000070, "Wrong size on Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint");
static_assert(offsetof(Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint, EntryPoint) == 0x000000, "Member 'Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint, K2Node_MakeSet_Set) == 0x000018, "Member 'Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint, K2Node_CustomEvent__event) == 0x000068, "Member 'Ctrl_PassivePoint_C_ExecuteUbergraph_Ctrl_PassivePoint::K2Node_CustomEvent__event' has a wrong offset!");

// Function Ctrl_PassivePoint.Ctrl_PassivePoint_C.GetToolTip_PassiveSkillPoint
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_ItemID_Default_C*           K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint) == 0x000008, "Wrong alignment on Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint");
static_assert(sizeof(Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint) == 0x000020, "Wrong size on Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint");
static_assert(offsetof(Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint, ReturnValue) == 0x000000, "Member 'Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000008, "Member 'Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint, K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default) == 0x000010, "Member 'Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint::K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ctrl_PassivePoint_C_GetToolTip_PassiveSkillPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_PassivePoint.Ctrl_PassivePoint_C.InitSkillPoint
// 0x00A8 (0x00A8 - 0x0000)
struct Ctrl_PassivePoint_C_InitSkillPoint final
{
public:
	int32                                         CallFunc_GetCurrencyValue_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EED[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EEE[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetTotalSkillPoint_ReturnValue;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
};
static_assert(alignof(Ctrl_PassivePoint_C_InitSkillPoint) == 0x000008, "Wrong alignment on Ctrl_PassivePoint_C_InitSkillPoint");
static_assert(sizeof(Ctrl_PassivePoint_C_InitSkillPoint) == 0x0000A8, "Wrong size on Ctrl_PassivePoint_C_InitSkillPoint");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, CallFunc_GetCurrencyValue_ReturnValue) == 0x000000, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::CallFunc_GetCurrencyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, CallFunc_Get_ReturnValue) == 0x000008, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, CallFunc_GetTotalSkillPoint_ReturnValue) == 0x000014, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::CallFunc_GetTotalSkillPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, K2Node_MakeArray_Array) == 0x000080, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_InitSkillPoint, CallFunc_Format_ReturnValue) == 0x000090, "Member 'Ctrl_PassivePoint_C_InitSkillPoint::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_PassivePoint.Ctrl_PassivePoint_C.OnSynchronizeProperties
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_PassivePoint_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EEF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassivePoint_C_OnSynchronizeProperties) == 0x000008, "Wrong alignment on Ctrl_PassivePoint_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_PassivePoint_C_OnSynchronizeProperties) == 0x000020, "Wrong size on Ctrl_PassivePoint_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_PassivePoint_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_PassivePoint_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_OnSynchronizeProperties, CallFunc_BreakVector2D_X) == 0x000008, "Member 'Ctrl_PassivePoint_C_OnSynchronizeProperties::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_OnSynchronizeProperties, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'Ctrl_PassivePoint_C_OnSynchronizeProperties::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_OnSynchronizeProperties, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000018, "Member 'Ctrl_PassivePoint_C_OnSynchronizeProperties::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_OnSynchronizeProperties, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00001C, "Member 'Ctrl_PassivePoint_C_OnSynchronizeProperties::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function Ctrl_PassivePoint.Ctrl_PassivePoint_C.OnUpdateUser
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_PassivePoint_C_OnUpdateUser final
{
public:
	EUserEvent                                    _event;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassivePoint_C_OnUpdateUser) == 0x000001, "Wrong alignment on Ctrl_PassivePoint_C_OnUpdateUser");
static_assert(sizeof(Ctrl_PassivePoint_C_OnUpdateUser) == 0x000001, "Wrong size on Ctrl_PassivePoint_C_OnUpdateUser");
static_assert(offsetof(Ctrl_PassivePoint_C_OnUpdateUser, _event) == 0x000000, "Member 'Ctrl_PassivePoint_C_OnUpdateUser::_event' has a wrong offset!");

// Function Ctrl_PassivePoint.Ctrl_PassivePoint_C.UpdateSkillPoint
// 0x0068 (0x0068 - 0x0000)
struct Ctrl_PassivePoint_C_UpdateSkillPoint final
{
public:
	int32                                         Coeffi;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Digits;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EF0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EF1[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EF2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EF3[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EF4[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0050(0x0018)()
};
static_assert(alignof(Ctrl_PassivePoint_C_UpdateSkillPoint) == 0x000008, "Wrong alignment on Ctrl_PassivePoint_C_UpdateSkillPoint");
static_assert(sizeof(Ctrl_PassivePoint_C_UpdateSkillPoint) == 0x000068, "Wrong size on Ctrl_PassivePoint_C_UpdateSkillPoint");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, Coeffi) == 0x000000, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::Coeffi' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, Digits) == 0x000004, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::Digits' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, Temp_bool_Variable) == 0x000008, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, Temp_int_Variable) == 0x00000C, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Max_ReturnValue) == 0x000020, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Divide_IntInt_ReturnValue) == 0x000048, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00004D, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PassivePoint_C_UpdateSkillPoint, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000050, "Member 'Ctrl_PassivePoint_C_UpdateSkillPoint::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

}

