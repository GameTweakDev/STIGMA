#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_BriefUserSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_BriefUserSlot.UI_BriefUserSlot_C
// 0x00F8 (0x0798 - 0x06A0)
class UUI_BriefUserSlot_C final : public UUI_BriefUserSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_CommonButtonBase_C*               AcceptButton;                                      // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         AREA_Reply;                                        // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OutLine;                                           // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProfileCard_Friend_C*                  ProfileCard;                                       // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButtonBase_C*               RefuseButton;                                      // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           OutlineColorForOfflineHover;                       // 0x06D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutlineColorForOnlineHover;                        // 0x06E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutlineColorForBattleHover;                        // 0x06F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutlineColorForNoneHover;                          // 0x0700(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHoverMenuEntry>                ToolTipEntries_For_RecentBattle;                   // 0x0710(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnFriendAcceptBtnClick;                            // 0x0720(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnFriendRefuseBtnClick;                            // 0x0730(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCreateToolTip;                                   // 0x0740(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FHoverMenuEntry>                ToolTipEntries_For_RecentBattle_AlreadyFriend;     // 0x0750(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FHoverMenuEntry>                ToolTipEntries_For_MyFriend;                       // 0x0760(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FHoverMenuEntry>                ToolTipEntries_For_Steam;                          // 0x0770(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           OutlineColorForPartyHover;                         // 0x0780(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFriendAsk;                                       // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateToNormalState();
	void UpdateToHoverState();
	void UpdateProfileCard(class UUserProfile* _brief_user);
	void UpdateOutlineHoverState();
	void SetStateText(const class FText& _state);
	void SetStateColor(const struct FSlateColor& _color);
	void SetNickNameText(const class FText& _nickname);
	void SetNickNameColor(const struct FSlateColor& _color);
	bool OnSynchronizeProperties();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnListItemObjectSet(class UObject* ListItemObject);
	void OnFriendRefuseBtnClick__DelegateSignature(class UUserProfile* _brief_user);
	void OnFriendAcceptBtnClick__DelegateSignature(class UUserProfile* _brief_user);
	void OnCreateToolTip__DelegateSignature(TArray<struct FHoverMenuEntry>& _menu_entries);
	struct FLinearColor OnBIND_OutlineColor();
	struct FEventReply On_BIND_Background_MouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	class UWidget* On_Get_Tool_Tip();
	void GetBriefUserID(struct FUserID* _user_id);
	void ExecuteUbergraph_UI_BriefUserSlot(int32 EntryPoint);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void BndEvt__UI_BriefUserSlot_RefuseButton_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__UI_BriefUserSlot_AcceptButton_K2Node_ComponentBoundEvent_2_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	ESlateVisibility BIND_GetVisibility_Replies();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_BriefUserSlot_C">();
	}
	static class UUI_BriefUserSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_BriefUserSlot_C>();
	}
};
static_assert(alignof(UUI_BriefUserSlot_C) == 0x000008, "Wrong alignment on UUI_BriefUserSlot_C");
static_assert(sizeof(UUI_BriefUserSlot_C) == 0x000798, "Wrong size on UUI_BriefUserSlot_C");
static_assert(offsetof(UUI_BriefUserSlot_C, UberGraphFrame) == 0x0006A0, "Member 'UUI_BriefUserSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, AcceptButton) == 0x0006A8, "Member 'UUI_BriefUserSlot_C::AcceptButton' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, AREA_Reply) == 0x0006B0, "Member 'UUI_BriefUserSlot_C::AREA_Reply' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OutLine) == 0x0006B8, "Member 'UUI_BriefUserSlot_C::OutLine' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, ProfileCard) == 0x0006C0, "Member 'UUI_BriefUserSlot_C::ProfileCard' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, RefuseButton) == 0x0006C8, "Member 'UUI_BriefUserSlot_C::RefuseButton' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OutlineColorForOfflineHover) == 0x0006D0, "Member 'UUI_BriefUserSlot_C::OutlineColorForOfflineHover' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OutlineColorForOnlineHover) == 0x0006E0, "Member 'UUI_BriefUserSlot_C::OutlineColorForOnlineHover' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OutlineColorForBattleHover) == 0x0006F0, "Member 'UUI_BriefUserSlot_C::OutlineColorForBattleHover' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OutlineColorForNoneHover) == 0x000700, "Member 'UUI_BriefUserSlot_C::OutlineColorForNoneHover' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, ToolTipEntries_For_RecentBattle) == 0x000710, "Member 'UUI_BriefUserSlot_C::ToolTipEntries_For_RecentBattle' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OnFriendAcceptBtnClick) == 0x000720, "Member 'UUI_BriefUserSlot_C::OnFriendAcceptBtnClick' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OnFriendRefuseBtnClick) == 0x000730, "Member 'UUI_BriefUserSlot_C::OnFriendRefuseBtnClick' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OnCreateToolTip) == 0x000740, "Member 'UUI_BriefUserSlot_C::OnCreateToolTip' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, ToolTipEntries_For_RecentBattle_AlreadyFriend) == 0x000750, "Member 'UUI_BriefUserSlot_C::ToolTipEntries_For_RecentBattle_AlreadyFriend' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, ToolTipEntries_For_MyFriend) == 0x000760, "Member 'UUI_BriefUserSlot_C::ToolTipEntries_For_MyFriend' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, ToolTipEntries_For_Steam) == 0x000770, "Member 'UUI_BriefUserSlot_C::ToolTipEntries_For_Steam' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, OutlineColorForPartyHover) == 0x000780, "Member 'UUI_BriefUserSlot_C::OutlineColorForPartyHover' has a wrong offset!");
static_assert(offsetof(UUI_BriefUserSlot_C, IsFriendAsk) == 0x000790, "Member 'UUI_BriefUserSlot_C::IsFriendAsk' has a wrong offset!");

}

