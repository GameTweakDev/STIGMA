#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Indicator_TargetChara

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.CreateProgressMaterial
// 0x0010 (0x0010 - 0x0000)
struct UI_Indicator_TargetChara_C_CreateProgressMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_CreateProgressMaterial) == 0x000008, "Wrong alignment on UI_Indicator_TargetChara_C_CreateProgressMaterial");
static_assert(sizeof(UI_Indicator_TargetChara_C_CreateProgressMaterial) == 0x000010, "Wrong size on UI_Indicator_TargetChara_C_CreateProgressMaterial");
static_assert(offsetof(UI_Indicator_TargetChara_C_CreateProgressMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_Indicator_TargetChara_C_CreateProgressMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_CreateProgressMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'UI_Indicator_TargetChara_C_CreateProgressMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.ExecuteUbergraph_UI_Indicator_TargetChara
// 0x0040 (0x0040 - 0x0000)
struct UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara) == 0x000004, "Wrong alignment on UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara");
static_assert(sizeof(UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara) == 0x000040, "Wrong size on UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara");
static_assert(offsetof(UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara, EntryPoint) == 0x000000, "Member 'UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.Get Text_Time
// 0x0018 (0x0018 - 0x0000)
struct UI_Indicator_TargetChara_C_Get_Text_Time final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(UI_Indicator_TargetChara_C_Get_Text_Time) == 0x000008, "Wrong alignment on UI_Indicator_TargetChara_C_Get_Text_Time");
static_assert(sizeof(UI_Indicator_TargetChara_C_Get_Text_Time) == 0x000018, "Wrong size on UI_Indicator_TargetChara_C_Get_Text_Time");
static_assert(offsetof(UI_Indicator_TargetChara_C_Get_Text_Time, ReturnValue) == 0x000000, "Member 'UI_Indicator_TargetChara_C_Get_Text_Time::ReturnValue' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.GetTeamColor
// 0x0030 (0x0030 - 0x0000)
struct UI_Indicator_TargetChara_C_GetTeamColor final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA2[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLinearColor                           CallFunc_GetTeamColorByTeam_ReturnValue;           // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_GetTeamColor) == 0x000008, "Wrong alignment on UI_Indicator_TargetChara_C_GetTeamColor");
static_assert(sizeof(UI_Indicator_TargetChara_C_GetTeamColor) == 0x000030, "Wrong size on UI_Indicator_TargetChara_C_GetTeamColor");
static_assert(offsetof(UI_Indicator_TargetChara_C_GetTeamColor, ReturnValue) == 0x000000, "Member 'UI_Indicator_TargetChara_C_GetTeamColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_GetTeamColor, K2Node_DynamicCast_AsChara_Base) == 0x000010, "Member 'UI_Indicator_TargetChara_C_GetTeamColor::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_GetTeamColor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'UI_Indicator_TargetChara_C_GetTeamColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_GetTeamColor, CallFunc_GetTeam_ReturnValue) == 0x000019, "Member 'UI_Indicator_TargetChara_C_GetTeamColor::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_GetTeamColor, CallFunc_GetTeamColorByTeam_ReturnValue) == 0x00001C, "Member 'UI_Indicator_TargetChara_C_GetTeamColor::CallFunc_GetTeamColorByTeam_ReturnValue' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.OnUpdateLocation
// 0x000C (0x000C - 0x0000)
struct UI_Indicator_TargetChara_C_OnUpdateLocation final
{
public:
	bool                                          _is_clipped;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         _angle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_OnUpdateLocation) == 0x000004, "Wrong alignment on UI_Indicator_TargetChara_C_OnUpdateLocation");
static_assert(sizeof(UI_Indicator_TargetChara_C_OnUpdateLocation) == 0x00000C, "Wrong size on UI_Indicator_TargetChara_C_OnUpdateLocation");
static_assert(offsetof(UI_Indicator_TargetChara_C_OnUpdateLocation, _is_clipped) == 0x000000, "Member 'UI_Indicator_TargetChara_C_OnUpdateLocation::_is_clipped' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_OnUpdateLocation, _angle) == 0x000004, "Member 'UI_Indicator_TargetChara_C_OnUpdateLocation::_angle' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_OnUpdateLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'UI_Indicator_TargetChara_C_OnUpdateLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_Indicator_TargetChara_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_Tick) == 0x000004, "Wrong alignment on UI_Indicator_TargetChara_C_Tick");
static_assert(sizeof(UI_Indicator_TargetChara_C_Tick) == 0x00003C, "Wrong size on UI_Indicator_TargetChara_C_Tick");
static_assert(offsetof(UI_Indicator_TargetChara_C_Tick, MyGeometry) == 0x000000, "Member 'UI_Indicator_TargetChara_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_Indicator_TargetChara_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.UpdateColors
// 0x0010 (0x0010 - 0x0000)
struct UI_Indicator_TargetChara_C_UpdateColors final
{
public:
	struct FLinearColor                           CallFunc_GetTeamColor_ReturnValue;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_UpdateColors) == 0x000004, "Wrong alignment on UI_Indicator_TargetChara_C_UpdateColors");
static_assert(sizeof(UI_Indicator_TargetChara_C_UpdateColors) == 0x000010, "Wrong size on UI_Indicator_TargetChara_C_UpdateColors");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateColors, CallFunc_GetTeamColor_ReturnValue) == 0x000000, "Member 'UI_Indicator_TargetChara_C_UpdateColors::CallFunc_GetTeamColor_ReturnValue' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.UpdateDistance
// 0x0050 (0x0050 - 0x0000)
struct UI_Indicator_TargetChara_C_UpdateDistance final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_Convert_CM_To_M_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_UpdateDistance) == 0x000008, "Wrong alignment on UI_Indicator_TargetChara_C_UpdateDistance");
static_assert(sizeof(UI_Indicator_TargetChara_C_UpdateDistance) == 0x000050, "Wrong size on UI_Indicator_TargetChara_C_UpdateDistance");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_Convert_CM_To_M_ReturnValue) == 0x000004, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_Convert_CM_To_M_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_Round_ReturnValue) == 0x000008, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateDistance, CallFunc_Round_A_ImplicitCast) == 0x000048, "Member 'UI_Indicator_TargetChara_C_UpdateDistance::CallFunc_Round_A_ImplicitCast' has a wrong offset!");

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.UpdateProgress
// 0x0001 (0x0001 - 0x0000)
struct UI_Indicator_TargetChara_C_UpdateProgress final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_TargetChara_C_UpdateProgress) == 0x000001, "Wrong alignment on UI_Indicator_TargetChara_C_UpdateProgress");
static_assert(sizeof(UI_Indicator_TargetChara_C_UpdateProgress) == 0x000001, "Wrong size on UI_Indicator_TargetChara_C_UpdateProgress");
static_assert(offsetof(UI_Indicator_TargetChara_C_UpdateProgress, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_Indicator_TargetChara_C_UpdateProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

