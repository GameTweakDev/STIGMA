#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LVData_TierRewards

#include "Basic.hpp"

#include "LVData_TierRewards_classes.hpp"
#include "LVData_TierRewards_parameters.hpp"


namespace SDK
{

// Function LVData_TierRewards.LVData_TierRewards_C.Config
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETier                                   _tier                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _is_high_tier                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSeasonID                        _season_id                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    _is_my_tier                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULVData_TierRewards_C::Config(ETier _tier, bool _is_high_tier, const struct FSeasonID& _season_id, bool _is_my_tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_TierRewards_C", "Config");

	Params::LVData_TierRewards_C_Config Parms{};

	Parms._tier = _tier;
	Parms._is_high_tier = _is_high_tier;
	Parms._season_id = std::move(_season_id);
	Parms._is_my_tier = _is_my_tier;

	UObject::ProcessEvent(Func, &Parms);
}

}

