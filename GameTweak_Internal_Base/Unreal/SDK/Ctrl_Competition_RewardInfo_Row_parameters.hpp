#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Competition_RewardInfo_Row

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_Competition_RewardInfo_Row.Ctrl_Competition_RewardInfo_Row_C.UpdateReward
// 0x0050 (0x0050 - 0x0000)
struct Ctrl_Competition_RewardInfo_Row_C_UpdateReward final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Comp_RewardItem_C*                  CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRewardItem                            CallFunc_Array_Get_Item;                           // 0x0018(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAB[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Comp_RewardItem_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue_1;    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward) == 0x000008, "Wrong alignment on Ctrl_Competition_RewardInfo_Row_C_UpdateReward");
static_assert(sizeof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward) == 0x000050, "Wrong size on Ctrl_Competition_RewardInfo_Row_C_UpdateReward");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000035, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_Create_ReturnValue_1) == 0x000038, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000040, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateReward, CallFunc_AddChildToHorizontalBox_ReturnValue_1) == 0x000048, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateReward::CallFunc_AddChildToHorizontalBox_ReturnValue_1' has a wrong offset!");

// Function Ctrl_Competition_RewardInfo_Row.Ctrl_Competition_RewardInfo_Row_C.UpdateRank
// 0x0088 (0x0088 - 0x0000)
struct Ctrl_Competition_RewardInfo_Row_C_UpdateRank final
{
public:
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0050)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAC[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank) == 0x000008, "Wrong alignment on Ctrl_Competition_RewardInfo_Row_C_UpdateRank");
static_assert(sizeof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank) == 0x000088, "Wrong size on Ctrl_Competition_RewardInfo_Row_C_UpdateRank");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000000, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateRank::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateRank::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank, K2Node_SwitchInteger_CmpSuccess) == 0x000058, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateRank::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank, K2Node_MakeArray_Array) == 0x000060, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateRank::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_UpdateRank, CallFunc_Format_ReturnValue) == 0x000070, "Member 'Ctrl_Competition_RewardInfo_Row_C_UpdateRank::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_Competition_RewardInfo_Row.Ctrl_Competition_RewardInfo_Row_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_Competition_RewardInfo_Row_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

}

