#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: WIDGET_Tutorial_PointUI_BP

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.BIN_Visibility_Stop
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETutorialState                                CallFunc_GetTutorialState_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop) == 0x000001, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop) == 0x000003, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop, ReturnValue) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop, CallFunc_GetTutorialState_ReturnValue) == 0x000001, "Member 'WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop::CallFunc_GetTutorialState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WIDGET_Tutorial_PointUI_BP_C_BIN_Visibility_Stop::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'WIDGET_Tutorial_PointUI_BP_C_BndEvt__WIDGET_Tutorial_PointUI_BP_BTN_StopTutorial_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E26[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP) == 0x000008, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP) == 0x000018, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP, EntryPoint) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'WIDGET_Tutorial_PointUI_BP_C_ExecuteUbergraph_WIDGET_Tutorial_PointUI_BP::K2Node_ComponentBoundEvent__select' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.OnGetVisibility_Arrow_0
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0) == 0x000001, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0) == 0x000002, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0, ReturnValue) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.OnGetVisibility_Arrow_1
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1) == 0x000001, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1) == 0x000002, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1, ReturnValue) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_1::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.OnGetVisibility_Arrow_2
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2) == 0x000001, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2) == 0x000002, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2, ReturnValue) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_2::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.OnGetVisibility_Arrow_3
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3) == 0x000001, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3) == 0x000002, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3, ReturnValue) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_Arrow_3::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.OnGetVisibility_LetterBox
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox) == 0x000001, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox) == 0x000001, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox, ReturnValue) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnGetVisibility_LetterBox::ReturnValue' has a wrong offset!");

// Function WIDGET_Tutorial_PointUI_BP.WIDGET_Tutorial_PointUI_BP_C.OnUpdateArea
// 0x01E0 (0x01E0 - 0x0000)
struct WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea final
{
public:
	struct FVector2D                              Half_view_sz;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Center;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Area_sz;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              View_sz;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetKeyDisplayText_ReturnValue;            // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E27[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E28[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E29[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetUMGViewportSize_ReturnValue;           // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRowFill_Coefficient_ImplicitCast;      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetColumnFill_Coefficient_ImplicitCast;   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRowFill_Coefficient_ImplicitCast_1;    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetColumnFill_Coefficient_ImplicitCast_1; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetColumnFill_Coefficient_ImplicitCast_2; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRowFill_Coefficient_ImplicitCast_2;    // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea) == 0x000008, "Wrong alignment on WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea");
static_assert(sizeof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea) == 0x0001E0, "Wrong size on WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, Half_view_sz) == 0x000000, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::Half_view_sz' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, Center) == 0x000010, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::Center' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, Area_sz) == 0x000020, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::Area_sz' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, View_sz) == 0x000030, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::View_sz' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000040, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x000050, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_GetKeyDisplayText_ReturnValue) == 0x000060, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_GetKeyDisplayText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Key_IsValid_ReturnValue) == 0x0000F0, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X) == 0x0000F8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y) == 0x000100, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_1) == 0x000108, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_1) == 0x000110, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000118, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_2) == 0x000120, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_2) == 0x000128, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_3) == 0x000130, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_3) == 0x000138, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000140, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_4) == 0x000158, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_4) == 0x000160, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_5) == 0x000168, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_5) == 0x000170, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000178, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_6) == 0x000180, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_6) == 0x000188, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_X_7) == 0x000198, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_BreakVector2D_Y_7) == 0x0001A0, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_GetUMGViewportSize_ReturnValue) == 0x0001A8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_GetUMGViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001B8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_SetRowFill_Coefficient_ImplicitCast) == 0x0001C8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_SetRowFill_Coefficient_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_SetColumnFill_Coefficient_ImplicitCast) == 0x0001CC, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_SetColumnFill_Coefficient_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_SetRowFill_Coefficient_ImplicitCast_1) == 0x0001D0, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_SetRowFill_Coefficient_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_SetColumnFill_Coefficient_ImplicitCast_1) == 0x0001D4, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_SetColumnFill_Coefficient_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_SetColumnFill_Coefficient_ImplicitCast_2) == 0x0001D8, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_SetColumnFill_Coefficient_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea, CallFunc_SetRowFill_Coefficient_ImplicitCast_2) == 0x0001DC, "Member 'WIDGET_Tutorial_PointUI_BP_C_OnUpdateArea::CallFunc_SetRowFill_Coefficient_ImplicitCast_2' has a wrong offset!");

}

