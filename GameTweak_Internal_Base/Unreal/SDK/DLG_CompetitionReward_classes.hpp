#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: DLG_CompetitionReward

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DLG_CompetitionReward.DLG_CompetitionReward_C
// 0x0080 (0x05F0 - 0x0570)
class UDLG_CompetitionReward_C final : public UUI_CompetitionRewardPopup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_OnShow_Idle;                                    // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_OnShow;                                         // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCtrl_CommonButton_Intensity_C*         BTN_OK;                                            // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Rank;                                         // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Circle_01;                                       // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Circle_02;                                       // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Flip;                                            // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_Glow;                                            // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_RayCircle;                                       // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 M_StarDust;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 T_DownLine;                                        // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 T_UPLine;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Title;                                         // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RewardedItems_C*                    UI_RewardedItems;                                  // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasReward;                                         // 0x05E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetValue(const struct FBC_CompetitionEnd& _packet);
	void OnEVENT_Show_End();
	void ExecuteUbergraph_DLG_CompetitionReward(int32 EntryPoint);
	void BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DLG_CompetitionReward_C">();
	}
	static class UDLG_CompetitionReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDLG_CompetitionReward_C>();
	}
};
static_assert(alignof(UDLG_CompetitionReward_C) == 0x000008, "Wrong alignment on UDLG_CompetitionReward_C");
static_assert(sizeof(UDLG_CompetitionReward_C) == 0x0005F0, "Wrong size on UDLG_CompetitionReward_C");
static_assert(offsetof(UDLG_CompetitionReward_C, UberGraphFrame) == 0x000570, "Member 'UDLG_CompetitionReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, UI_OnShow_Idle) == 0x000578, "Member 'UDLG_CompetitionReward_C::UI_OnShow_Idle' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, UI_OnShow) == 0x000580, "Member 'UDLG_CompetitionReward_C::UI_OnShow' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, BTN_OK) == 0x000588, "Member 'UDLG_CompetitionReward_C::BTN_OK' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, Icon_Rank) == 0x000590, "Member 'UDLG_CompetitionReward_C::Icon_Rank' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, M_Circle_01) == 0x000598, "Member 'UDLG_CompetitionReward_C::M_Circle_01' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, M_Circle_02) == 0x0005A0, "Member 'UDLG_CompetitionReward_C::M_Circle_02' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, M_Flip) == 0x0005A8, "Member 'UDLG_CompetitionReward_C::M_Flip' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, M_Glow) == 0x0005B0, "Member 'UDLG_CompetitionReward_C::M_Glow' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, M_RayCircle) == 0x0005B8, "Member 'UDLG_CompetitionReward_C::M_RayCircle' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, M_StarDust) == 0x0005C0, "Member 'UDLG_CompetitionReward_C::M_StarDust' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, T_DownLine) == 0x0005C8, "Member 'UDLG_CompetitionReward_C::T_DownLine' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, T_UPLine) == 0x0005D0, "Member 'UDLG_CompetitionReward_C::T_UPLine' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, Txt_Title) == 0x0005D8, "Member 'UDLG_CompetitionReward_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, UI_RewardedItems) == 0x0005E0, "Member 'UDLG_CompetitionReward_C::UI_RewardedItems' has a wrong offset!");
static_assert(offsetof(UDLG_CompetitionReward_C, HasReward) == 0x0005E8, "Member 'UDLG_CompetitionReward_C::HasReward' has a wrong offset!");

}

