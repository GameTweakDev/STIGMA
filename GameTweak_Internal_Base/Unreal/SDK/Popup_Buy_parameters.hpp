#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_Buy

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Popup_Buy.Popup_Buy_C.BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature
// 0x0050 (0x0050 - 0x0000)
struct Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature final
{
public:
	EResultCode                                   _code;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FACK_BuyGoods                          _ack;                                              // 0x0008(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature) == 0x000008, "Wrong alignment on Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature");
static_assert(sizeof(Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature) == 0x000050, "Wrong size on Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature");
static_assert(offsetof(Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature, _code) == 0x000000, "Member 'Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature::_code' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature, _ack) == 0x000008, "Member 'Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature::_ack' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.ExecuteUbergraph_Popup_Buy
// 0x0068 (0x0068 - 0x0000)
struct Popup_Buy_C_ExecuteUbergraph_Popup_Buy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EResultCode                                   K2Node_ComponentBoundEvent__code;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F3[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FACK_BuyGoods                          K2Node_ComponentBoundEvent__ack;                   // 0x0018(0x0048)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy) == 0x000008, "Wrong alignment on Popup_Buy_C_ExecuteUbergraph_Popup_Buy");
static_assert(sizeof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy) == 0x000068, "Wrong size on Popup_Buy_C_ExecuteUbergraph_Popup_Buy");
static_assert(offsetof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy, EntryPoint) == 0x000000, "Member 'Popup_Buy_C_ExecuteUbergraph_Popup_Buy::EntryPoint' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'Popup_Buy_C_ExecuteUbergraph_Popup_Buy::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'Popup_Buy_C_ExecuteUbergraph_Popup_Buy::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy, K2Node_ComponentBoundEvent__code) == 0x000011, "Member 'Popup_Buy_C_ExecuteUbergraph_Popup_Buy::K2Node_ComponentBoundEvent__code' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy, K2Node_ComponentBoundEvent__ack) == 0x000018, "Member 'Popup_Buy_C_ExecuteUbergraph_Popup_Buy::K2Node_ComponentBoundEvent__ack' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_ExecuteUbergraph_Popup_Buy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'Popup_Buy_C_ExecuteUbergraph_Popup_Buy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.InitWidget
// 0x0458 (0x0458 - 0x0000)
struct Popup_Buy_C_InitWidget final
{
public:
	struct FConfig_Goods                          GoodsDefine;                                       // 0x0000(0x01F0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGoodsObject*                           GoodsObj;                                          // 0x01F0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FConfig_Goods                          Goods_def;                                         // 0x01F8(0x01F0)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F4[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID_Currency                       CallFunc_ToCurrencyID_ReturnValue;                 // 0x03F0(0x0010)(HasGetValueTypeHash)
	TArray<struct FItemID_Currency>               K2Node_MakeArray_Array;                            // 0x0400(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsPurchasableFromLevelCondition_ReturnValue; // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F5[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_GetLevelConditionText_ReturnValue;        // 0x0418(0x0018)()
	struct FItemID_Currency                       CallFunc_GetPriceType_ReturnValue;                 // 0x0430(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGoodsTag                              CallFunc_GetTags_ReturnValue;                      // 0x0441(0x0005)(ConstParm, NoDestructor)
	uint8                                         Pad_38F6[0x2];                                     // 0x0446(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<EItemUITag>                            CallFunc_GetUITags_ReturnValue;                    // 0x0448(0x0010)(ReferenceParm)
};
static_assert(alignof(Popup_Buy_C_InitWidget) == 0x000008, "Wrong alignment on Popup_Buy_C_InitWidget");
static_assert(sizeof(Popup_Buy_C_InitWidget) == 0x000458, "Wrong size on Popup_Buy_C_InitWidget");
static_assert(offsetof(Popup_Buy_C_InitWidget, GoodsDefine) == 0x000000, "Member 'Popup_Buy_C_InitWidget::GoodsDefine' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, GoodsObj) == 0x0001F0, "Member 'Popup_Buy_C_InitWidget::GoodsObj' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, Goods_def) == 0x0001F8, "Member 'Popup_Buy_C_InitWidget::Goods_def' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_IsValid_ReturnValue) == 0x0003E8, "Member 'Popup_Buy_C_InitWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_ToCurrencyID_ReturnValue) == 0x0003F0, "Member 'Popup_Buy_C_InitWidget::CallFunc_ToCurrencyID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, K2Node_MakeArray_Array) == 0x000400, "Member 'Popup_Buy_C_InitWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_IsPurchasableFromLevelCondition_ReturnValue) == 0x000410, "Member 'Popup_Buy_C_InitWidget::CallFunc_IsPurchasableFromLevelCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_GetLevelConditionText_ReturnValue) == 0x000418, "Member 'Popup_Buy_C_InitWidget::CallFunc_GetLevelConditionText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_GetPriceType_ReturnValue) == 0x000430, "Member 'Popup_Buy_C_InitWidget::CallFunc_GetPriceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x000440, "Member 'Popup_Buy_C_InitWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_GetTags_ReturnValue) == 0x000441, "Member 'Popup_Buy_C_InitWidget::CallFunc_GetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_InitWidget, CallFunc_GetUITags_ReturnValue) == 0x000448, "Member 'Popup_Buy_C_InitWidget::CallFunc_GetUITags_ReturnValue' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.OnSliderChanged
// 0x0020 (0x0020 - 0x0000)
struct Popup_Buy_C_OnSliderChanged final
{
public:
	const class UCtrl_OptionSliderBase*           Slider;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   _id;                                               // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _value;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Buy_C_OnSliderChanged) == 0x000008, "Wrong alignment on Popup_Buy_C_OnSliderChanged");
static_assert(sizeof(Popup_Buy_C_OnSliderChanged) == 0x000020, "Wrong size on Popup_Buy_C_OnSliderChanged");
static_assert(offsetof(Popup_Buy_C_OnSliderChanged, Slider) == 0x000000, "Member 'Popup_Buy_C_OnSliderChanged::Slider' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_OnSliderChanged, _id) == 0x000008, "Member 'Popup_Buy_C_OnSliderChanged::_id' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_OnSliderChanged, _value) == 0x000010, "Member 'Popup_Buy_C_OnSliderChanged::_value' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_OnSliderChanged, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'Popup_Buy_C_OnSliderChanged::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_OnSliderChanged, CallFunc_FTrunc_A_ImplicitCast) == 0x000018, "Member 'Popup_Buy_C_OnSliderChanged::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.SetDescPanelVisibility
// 0x0040 (0x0040 - 0x0000)
struct Popup_Buy_C_SetDescPanelVisibility final
{
public:
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0000(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0020(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Buy_C_SetDescPanelVisibility) == 0x000008, "Wrong alignment on Popup_Buy_C_SetDescPanelVisibility");
static_assert(sizeof(Popup_Buy_C_SetDescPanelVisibility) == 0x000040, "Wrong size on Popup_Buy_C_SetDescPanelVisibility");
static_assert(offsetof(Popup_Buy_C_SetDescPanelVisibility, CallFunc_GetText_ReturnValue) == 0x000000, "Member 'Popup_Buy_C_SetDescPanelVisibility::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetDescPanelVisibility, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'Popup_Buy_C_SetDescPanelVisibility::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetDescPanelVisibility, CallFunc_GetText_ReturnValue_1) == 0x000020, "Member 'Popup_Buy_C_SetDescPanelVisibility::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetDescPanelVisibility, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000038, "Member 'Popup_Buy_C_SetDescPanelVisibility::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetDescPanelVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'Popup_Buy_C_SetDescPanelVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.SetLimitDateTxt
// 0x0170 (0x0170 - 0x0000)
struct Popup_Buy_C_SetLimitDateTxt final
{
public:
	struct FDateTime                              StartDate;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              EndDate;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDay_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMonth_ReturnValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYear_ReturnValue;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDay_ReturnValue_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F9[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMonth_ReturnValue_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FA[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetYear_ReturnValue_1;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FB[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FC[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue_1;   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FD[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FE[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0158(0x0018)()
};
static_assert(alignof(Popup_Buy_C_SetLimitDateTxt) == 0x000008, "Wrong alignment on Popup_Buy_C_SetLimitDateTxt");
static_assert(sizeof(Popup_Buy_C_SetLimitDateTxt) == 0x000170, "Wrong size on Popup_Buy_C_SetLimitDateTxt");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, StartDate) == 0x000000, "Member 'Popup_Buy_C_SetLimitDateTxt::StartDate' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, EndDate) == 0x000008, "Member 'Popup_Buy_C_SetLimitDateTxt::EndDate' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_GetDay_ReturnValue) == 0x000010, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_GetDay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_GetMonth_ReturnValue) == 0x000028, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_GetMonth_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_GetYear_ReturnValue) == 0x00002C, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_GetYear_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000030, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000040, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_GetDay_ReturnValue_1) == 0x000050, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_GetDay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000068, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_GetMonth_ReturnValue_1) == 0x000088, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_GetMonth_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000A0, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_GetYear_ReturnValue_1) == 0x0000C0, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_GetYear_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_MakeDateTime_ReturnValue) == 0x0000C8, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0000D0, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x0000E0, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E8, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Greater_DateTimeDateTime_ReturnValue_1) == 0x0000F8, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Greater_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000100, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_BooleanAND_ReturnValue) == 0x000110, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000118, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000128, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000138, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000148, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetLimitDateTxt, CallFunc_Conv_StringToText_ReturnValue) == 0x000158, "Member 'Popup_Buy_C_SetLimitDateTxt::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function Popup_Buy.Popup_Buy_C.SetSlider
// 0x0048 (0x0048 - 0x0000)
struct Popup_Buy_C_SetSlider final
{
public:
	struct FBuyLimit                              BuyLimit;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         MaxValue;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCtrl_OptionSliderBase* Slider, class FName& _id, float _value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InitWidget__Max_Value_ImplicitCast;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Buy_C_SetSlider) == 0x000008, "Wrong alignment on Popup_Buy_C_SetSlider");
static_assert(sizeof(Popup_Buy_C_SetSlider) == 0x000048, "Wrong size on Popup_Buy_C_SetSlider");
static_assert(offsetof(Popup_Buy_C_SetSlider, BuyLimit) == 0x000000, "Member 'Popup_Buy_C_SetSlider::BuyLimit' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetSlider, MaxValue) == 0x000020, "Member 'Popup_Buy_C_SetSlider::MaxValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetSlider, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'Popup_Buy_C_SetSlider::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetSlider, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Popup_Buy_C_SetSlider::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetSlider, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'Popup_Buy_C_SetSlider::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetSlider, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'Popup_Buy_C_SetSlider::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Buy_C_SetSlider, CallFunc_InitWidget__Max_Value_ImplicitCast) == 0x000044, "Member 'Popup_Buy_C_SetSlider::CallFunc_InitWidget__Max_Value_ImplicitCast' has a wrong offset!");

}

