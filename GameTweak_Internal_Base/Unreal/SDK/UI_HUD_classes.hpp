#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_HUD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_HUD.UI_HUD_C
// 0x01D8 (0x0EB0 - 0x0CD8)
class UUI_HUD_C final : public UUI_HUDBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CD8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_OnShow;                                         // 0x0CE0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CP_KillStreak;                                     // 0x0CE8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CustomHUD_Slot;                                    // 0x0CF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           FloatingHit_Panel;                                 // 0x0CF8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         H_BoosterTicket;                                   // 0x0D00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_HUD_BoosterAuto_C*                HUD_AutoBooster;                                   // 0x0D08(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Hud_Booster;                                       // 0x0D10(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HUD_CenterArea;                                    // 0x0D18(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_HUD_KillLogPanel_C*               HUD_KillLogPanel;                                  // 0x0D20(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_Missions_C*                        HUD_Missions;                                      // 0x0D28(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           HUD_Skills;                                        // 0x0D30(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_Spectate_C*                        HUD_Spectate;                                      // 0x0D38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_151;                                         // 0x0D40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Rader;                                         // 0x0D48(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Rader_Bg;                                      // 0x0D50(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInGameMoney_Panel_C*                   InGameMoney_Panel;                                 // 0x0D58(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Loading;                                           // 0x0D60(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MouseInputSensor;                                  // 0x0D68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Killstreak;                                // 0x0D70(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanel_Debug_CharaState_C*              Panel_Debug_CharaState;                            // 0x0D78(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanel_DebugState_C*                    Panel_DebugState;                                  // 0x0D80(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_AnimatedKey_C*                    PressKeyGuide;                                     // 0x0D88(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Reload_Guide;                                      // 0x0D90(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Store_Panel;                                       // 0x0D98(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Store_Text;                                        // 0x0DA0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Top;                                               // 0x0DA8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Booster_Add_Count;                             // 0x0DB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Booster_Count;                                 // 0x0DB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Perf;                                          // 0x0DC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Reload;                                        // 0x0DC8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Announcement_C*                     UI_Announcement;                                   // 0x0DD0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChatBox_C*                          UI_ChatBox;                                        // 0x0DD8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Crosshair_C*                        UI_Crosshair;                                      // 0x0DE0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Crosshair_Hit_C*                    UI_Crosshair_Hit;                                  // 0x0DE8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_HitRadar_C*                         UI_HitRadar;                                       // 0x0DF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RespawnProgress_C*                  UI_InteractionProgress;                            // 0x0DF8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ModeStart_C*                        UI_ModeStart;                                      // 0x0E00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RespawnProgress_C*                  UI_RespawnProgress;                                // 0x0E08(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UCTRL_Magazine_C*>               MagazineCtrls;                                     // 0x0E10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        BaseCrosshairY;                                    // 0x0E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         OldLevel;                                          // 0x0E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6A[0x3];                                     // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CurrentSector;                                     // 0x0E34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndSector;                                         // 0x0E38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6B[0x4];                                     // 0x0E3C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        ClearTime;                                         // 0x0E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NextSectorString;                                  // 0x0E48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FLinearColor                           CurrentCrosshairColor;                             // 0x0E58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastHP;                                            // 0x0E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastRecovery;                                      // 0x0E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _HitDamageValueForDE;                              // 0x0E78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _LastHitDamageValueForDE;                          // 0x0E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _CurrentHpForDE;                                   // 0x0E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _LastHpForDE;                                      // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             _LastTargetChara;                                  // 0x0E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               _RaderMat;                                         // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          _IsSetRadar;                                       // 0x0EA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _CanUseMinimap;                                    // 0x0EA9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _ShowRespawnProgress;                              // 0x0EAA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6C[0x1];                                     // 0x0EAB(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         _LastBoosterTicket;                                // 0x0EAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Mode_HUD(class UClass* Type, class UUI_HUDMode** _new_);
	bool AddActionLog_Bounty(const struct FActionLog_Bounty& _log);
	bool AddHitData(const struct FHitData& _hit);
	bool AddKillLog(const struct FKillLog& _log);
	bool AddKillLog_Revive(const struct FKillLog_ForRevive& _log);
	void BindBoosterTicket();
	void BindMagazine();
	void BndEvt__UI_HUD_UI_ChatBox_K2Node_ComponentBoundEvent_0_OnUserCommitTeamChatDelegate__DelegateSignature(const struct FChatMsg& _message);
	void Construct();
	void ExecuteUbergraph_UI_HUD(int32 EntryPoint);
	ESlateVisibility Get_Visibility_F2_Change_Master();
	ESlateVisibility Get_Visibility_Key_Guide();
	ESlateVisibility Get_Store_Panel_Visibility();
	class FText GetText_AdditionalBoosterCount();
	ESlateVisibility GetVisibility_AdditionalBoosterCount();
	ESlateVisibility GetVisibility_DEBUG_CharaState();
	ESlateVisibility GetVisibility_StateValues();
	void Init_Custom_HUD();
	void InitChallengeHUD();
	void InitChat();
	bool OnBindTargetChara(class ACharaBase* _chara);
	bool OnChangeActionSetting();
	bool OnChangeGun(class AGunBase* _old_gun, class AGunBase* _new_gun);
	bool OnChangeLinkedSkillKeyGuide(const struct FLinkedSkillGuide& _Key);
	class UUserWidget* OnCreateFloatingHitMessageWidget(EAbnormal _abnormal);
	void OnGetIngameMoney(int32 _inc_money, EGoldRewardType _reward_type);
	ESlateVisibility OnGetVisibility_ReloadGuide();
	struct FEventReply OnMouseInputSensor_MouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	bool OnPointingActor(class AActor* _Actor);
	bool OnReloadEnd(class AGunBase* _gun, bool _is_cancel);
	bool OnReloadStart(class AGunBase* _gun);
	bool OnShowKillStreak(bool _show, const struct FKillStreakDefine& _streak);
	bool OnSynchronizeProperties();
	bool OnTargetCharaIsKilled(class ACharaBase* _killer);
	bool OnTargetCharaIsRespawned();
	void OnTick(double _delta);
	void OnUseAutoBooster(bool _is_used);
	void OnUserCommitTeamChat(struct FChatMsg& _chat_msg);
	bool Reset();
	bool SetInteractionProgressBar(bool _visibility, float _duration);
	bool ShowLoadingThrobber(bool _show);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ToggleSpectatingBanner();
	void UpdateActions();
	void UpdateBasics(double Delta);
	void UpdateBoosterCount();
	void UpdateGunsPostion();
	void UpdatePerf();
	void UpdateRadar();

	void GameState(class ABattleGameStateBase** _state) const;
	void GetActionGraphs(uint8 _slot, struct FActionGraphID* _id, class UActionGraph** _ag) const;
	void GetPlayerState(class ABattlePlayerState** _state) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_HUD_C">();
	}
	static class UUI_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_HUD_C>();
	}
};
static_assert(alignof(UUI_HUD_C) == 0x000008, "Wrong alignment on UUI_HUD_C");
static_assert(sizeof(UUI_HUD_C) == 0x000EB0, "Wrong size on UUI_HUD_C");
static_assert(offsetof(UUI_HUD_C, UberGraphFrame) == 0x000CD8, "Member 'UUI_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_OnShow) == 0x000CE0, "Member 'UUI_HUD_C::UI_OnShow' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, CP_KillStreak) == 0x000CE8, "Member 'UUI_HUD_C::CP_KillStreak' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, CustomHUD_Slot) == 0x000CF0, "Member 'UUI_HUD_C::CustomHUD_Slot' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, FloatingHit_Panel) == 0x000CF8, "Member 'UUI_HUD_C::FloatingHit_Panel' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, H_BoosterTicket) == 0x000D00, "Member 'UUI_HUD_C::H_BoosterTicket' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HUD_AutoBooster) == 0x000D08, "Member 'UUI_HUD_C::HUD_AutoBooster' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Hud_Booster) == 0x000D10, "Member 'UUI_HUD_C::Hud_Booster' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HUD_CenterArea) == 0x000D18, "Member 'UUI_HUD_C::HUD_CenterArea' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HUD_KillLogPanel) == 0x000D20, "Member 'UUI_HUD_C::HUD_KillLogPanel' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HUD_Missions) == 0x000D28, "Member 'UUI_HUD_C::HUD_Missions' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HUD_Skills) == 0x000D30, "Member 'UUI_HUD_C::HUD_Skills' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, HUD_Spectate) == 0x000D38, "Member 'UUI_HUD_C::HUD_Spectate' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Image_151) == 0x000D40, "Member 'UUI_HUD_C::Image_151' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, IMG_Rader) == 0x000D48, "Member 'UUI_HUD_C::IMG_Rader' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, IMG_Rader_Bg) == 0x000D50, "Member 'UUI_HUD_C::IMG_Rader_Bg' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, InGameMoney_Panel) == 0x000D58, "Member 'UUI_HUD_C::InGameMoney_Panel' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Loading) == 0x000D60, "Member 'UUI_HUD_C::Loading' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, MouseInputSensor) == 0x000D68, "Member 'UUI_HUD_C::MouseInputSensor' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Overlay_Killstreak) == 0x000D70, "Member 'UUI_HUD_C::Overlay_Killstreak' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Panel_Debug_CharaState) == 0x000D78, "Member 'UUI_HUD_C::Panel_Debug_CharaState' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Panel_DebugState) == 0x000D80, "Member 'UUI_HUD_C::Panel_DebugState' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, PressKeyGuide) == 0x000D88, "Member 'UUI_HUD_C::PressKeyGuide' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Reload_Guide) == 0x000D90, "Member 'UUI_HUD_C::Reload_Guide' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Store_Panel) == 0x000D98, "Member 'UUI_HUD_C::Store_Panel' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Store_Text) == 0x000DA0, "Member 'UUI_HUD_C::Store_Text' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, Top) == 0x000DA8, "Member 'UUI_HUD_C::Top' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TXT_Booster_Add_Count) == 0x000DB0, "Member 'UUI_HUD_C::TXT_Booster_Add_Count' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TXT_Booster_Count) == 0x000DB8, "Member 'UUI_HUD_C::TXT_Booster_Count' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TXT_Perf) == 0x000DC0, "Member 'UUI_HUD_C::TXT_Perf' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, TXT_Reload) == 0x000DC8, "Member 'UUI_HUD_C::TXT_Reload' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_Announcement) == 0x000DD0, "Member 'UUI_HUD_C::UI_Announcement' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_ChatBox) == 0x000DD8, "Member 'UUI_HUD_C::UI_ChatBox' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_Crosshair) == 0x000DE0, "Member 'UUI_HUD_C::UI_Crosshair' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_Crosshair_Hit) == 0x000DE8, "Member 'UUI_HUD_C::UI_Crosshair_Hit' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_HitRadar) == 0x000DF0, "Member 'UUI_HUD_C::UI_HitRadar' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_InteractionProgress) == 0x000DF8, "Member 'UUI_HUD_C::UI_InteractionProgress' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_ModeStart) == 0x000E00, "Member 'UUI_HUD_C::UI_ModeStart' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, UI_RespawnProgress) == 0x000E08, "Member 'UUI_HUD_C::UI_RespawnProgress' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, MagazineCtrls) == 0x000E10, "Member 'UUI_HUD_C::MagazineCtrls' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, BaseCrosshairY) == 0x000E20, "Member 'UUI_HUD_C::BaseCrosshairY' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, MaterialInstance) == 0x000E28, "Member 'UUI_HUD_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, OldLevel) == 0x000E30, "Member 'UUI_HUD_C::OldLevel' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, CurrentSector) == 0x000E34, "Member 'UUI_HUD_C::CurrentSector' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, EndSector) == 0x000E38, "Member 'UUI_HUD_C::EndSector' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, ClearTime) == 0x000E40, "Member 'UUI_HUD_C::ClearTime' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, NextSectorString) == 0x000E48, "Member 'UUI_HUD_C::NextSectorString' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, CurrentCrosshairColor) == 0x000E58, "Member 'UUI_HUD_C::CurrentCrosshairColor' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, LastHP) == 0x000E68, "Member 'UUI_HUD_C::LastHP' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, LastRecovery) == 0x000E70, "Member 'UUI_HUD_C::LastRecovery' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _HitDamageValueForDE) == 0x000E78, "Member 'UUI_HUD_C::_HitDamageValueForDE' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _LastHitDamageValueForDE) == 0x000E80, "Member 'UUI_HUD_C::_LastHitDamageValueForDE' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _CurrentHpForDE) == 0x000E88, "Member 'UUI_HUD_C::_CurrentHpForDE' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _LastHpForDE) == 0x000E90, "Member 'UUI_HUD_C::_LastHpForDE' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _LastTargetChara) == 0x000E98, "Member 'UUI_HUD_C::_LastTargetChara' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _RaderMat) == 0x000EA0, "Member 'UUI_HUD_C::_RaderMat' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _IsSetRadar) == 0x000EA8, "Member 'UUI_HUD_C::_IsSetRadar' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _CanUseMinimap) == 0x000EA9, "Member 'UUI_HUD_C::_CanUseMinimap' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _ShowRespawnProgress) == 0x000EAA, "Member 'UUI_HUD_C::_ShowRespawnProgress' has a wrong offset!");
static_assert(offsetof(UUI_HUD_C, _LastBoosterTicket) == 0x000EAC, "Member 'UUI_HUD_C::_LastBoosterTicket' has a wrong offset!");

}

