#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_MissionPopupSlot_BattlePass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "BPGLib_structs.hpp"


namespace SDK::Params
{

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Btn_ConfirmReward_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'UI_MissionPopupSlot_BattlePass_C_BndEvt__UI_MissionPopupSlot_BattlePass_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.ExecuteUbergraph_UI_MissionPopupSlot_BattlePass
// 0x00D0 (0x00D0 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B76[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetIdx_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B77[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetTaskID_ReturnValue;                    // 0x0010(0x0010)(ConstParm, HasGetValueTypeHash)
	struct FItemID_Mission                        CallFunc_GetMissionID_ReturnValue;                 // 0x0020(0x0010)(HasGetValueTypeHash)
	struct FItemID_BattlePass                     CallFunc_ToBattlePassID_ReturnValue;               // 0x0030(0x0010)(HasGetValueTypeHash)
	class FText                                   K2Node_Event__text_1;                              // 0x0040(0x0018)(ConstParm)
	class FText                                   K2Node_Event__text;                                // 0x0058(0x0018)(ConstParm)
	EMissionProgressType                          K2Node_Event__progress_type;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B78[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         K2Node_Event__count;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__target_count;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B79[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__bookmark;                            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__locked;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__show;                                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__can_reward;                          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B7A[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_1;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_1;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B7B[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B7C[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void(EResultCode _rcode, struct FACK_MissionBookmark& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgressValue__target_value_ImplicitCast; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgressValue__cur_value_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass) == 0x000008, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass) == 0x0000D0, "Wrong size on UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, EntryPoint) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_GetIdx_ReturnValue) == 0x000008, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_GetIdx_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_GetTaskID_ReturnValue) == 0x000010, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_GetTaskID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_GetMissionID_ReturnValue) == 0x000020, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_GetMissionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_ToBattlePassID_ReturnValue) == 0x000030, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_ToBattlePassID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__text_1) == 0x000040, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__text_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__text) == 0x000058, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__text' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__progress_type) == 0x000070, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__progress_type' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__count) == 0x000074, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__count' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__target_count) == 0x000078, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__target_count' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000088, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__bookmark) == 0x000090, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__bookmark' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__locked) == 0x000091, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__locked' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__show) == 0x000092, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__show' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_Event__can_reward) == 0x000093, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_Event__can_reward' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_ComponentBoundEvent__widget_1) == 0x000098, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_ComponentBoundEvent__widget_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_ComponentBoundEvent__select_1) == 0x0000A0, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_ComponentBoundEvent__select_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_ComponentBoundEvent__widget) == 0x0000A8, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_ComponentBoundEvent__select) == 0x0000B0, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_SetProgressValue__target_value_ImplicitCast) == 0x0000C4, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_SetProgressValue__target_value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass, CallFunc_SetProgressValue__cur_value_ImplicitCast) == 0x0000C8, "Member 'UI_MissionPopupSlot_BattlePass_C_ExecuteUbergraph_UI_MissionPopupSlot_BattlePass::CallFunc_SetProgressValue__cur_value_ImplicitCast' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.OnBookmarked
// 0x0320 (0x0320 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_OnBookmarked final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FACK_MissionBookmark                   _ack;                                              // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3B7D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B7E[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID_Mission                        CallFunc_GetMissionID_ReturnValue;                 // 0x0030(0x0010)(HasGetValueTypeHash)
	struct FNetReply                              CallFunc_NetReplyFromCode_ReturnValue;             // 0x0040(0x0020)()
	struct FMissionDefine                         CallFunc_GetMissionDefineByID_ReturnValue;         // 0x0060(0x01A0)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0200(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0250(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0260(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02E8(0x0018)()
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B7F[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue_1;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked) == 0x000008, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_OnBookmarked");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked) == 0x000320, "Wrong size on UI_MissionPopupSlot_BattlePass_C_OnBookmarked");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, _rcode) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::_rcode' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, _ack) == 0x000001, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::_ack' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, ReturnValue) == 0x000008, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_GetMissionID_ReturnValue) == 0x000030, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_GetMissionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_NetReplyFromCode_ReturnValue) == 0x000040, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_NetReplyFromCode_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_GetMissionDefineByID_ReturnValue) == 0x000060, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_GetMissionDefineByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, K2Node_MakeStruct_FormatArgumentData) == 0x000200, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, K2Node_MakeArray_Array) == 0x000250, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, K2Node_MakeStruct_FormatArgumentData_1) == 0x000260, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_Format_ReturnValue) == 0x0002B0, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, K2Node_MakeArray_Array_1) == 0x0002C8, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_Conv_TextToString_ReturnValue) == 0x0002D8, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_Format_ReturnValue_1) == 0x0002E8, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_AddToastMessage_ReturnValue) == 0x000300, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000308, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_OnBookmarked, CallFunc_AddToastMessage_ReturnValue_1) == 0x000318, "Member 'UI_MissionPopupSlot_BattlePass_C_OnBookmarked::CallFunc_AddToastMessage_ReturnValue_1' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.Set Progresss Type
// 0x0002 (0x0002 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type final
{
public:
	EMissionProgressType                          ProgressType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type) == 0x000001, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type) == 0x000002, "Wrong size on UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type, ProgressType) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type::ProgressType' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_MissionPopupSlot_BattlePass_C_Set_Progresss_Type::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.SetBookmark
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_SetBookmark final
{
public:
	bool                                          _bookmark;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_SetBookmark) == 0x000001, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_SetBookmark");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_SetBookmark) == 0x000001, "Wrong size on UI_MissionPopupSlot_BattlePass_C_SetBookmark");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetBookmark, _bookmark) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_SetBookmark::_bookmark' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.SetCanReward
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_SetCanReward final
{
public:
	bool                                          _can_reward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_SetCanReward) == 0x000001, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_SetCanReward");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_SetCanReward) == 0x000001, "Wrong size on UI_MissionPopupSlot_BattlePass_C_SetCanReward");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetCanReward, _can_reward) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_SetCanReward::_can_reward' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.SetDesc
// 0x0018 (0x0018 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_SetDesc final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_SetDesc) == 0x000008, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_SetDesc");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_SetDesc) == 0x000018, "Wrong size on UI_MissionPopupSlot_BattlePass_C_SetDesc");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetDesc, _text) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_SetDesc::_text' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_SetLocked final
{
public:
	bool                                          _locked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_SetLocked) == 0x000001, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_SetLocked");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_SetLocked) == 0x000001, "Wrong size on UI_MissionPopupSlot_BattlePass_C_SetLocked");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetLocked, _locked) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_SetLocked::_locked' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.SetProgress
// 0x000C (0x000C - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_SetProgress final
{
public:
	EMissionProgressType                          _progress_type;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B80[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         _count;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _target_count;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_SetProgress) == 0x000004, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_SetProgress");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_SetProgress) == 0x00000C, "Wrong size on UI_MissionPopupSlot_BattlePass_C_SetProgress");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetProgress, _progress_type) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_SetProgress::_progress_type' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetProgress, _count) == 0x000004, "Member 'UI_MissionPopupSlot_BattlePass_C_SetProgress::_count' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetProgress, _target_count) == 0x000008, "Member 'UI_MissionPopupSlot_BattlePass_C_SetProgress::_target_count' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.SetTitle
// 0x0018 (0x0018 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_SetTitle final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_SetTitle) == 0x000008, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_SetTitle");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_SetTitle) == 0x000018, "Wrong size on UI_MissionPopupSlot_BattlePass_C_SetTitle");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_SetTitle, _text) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_SetTitle::_text' has a wrong offset!");

// Function UI_MissionPopupSlot_BattlePass.UI_MissionPopupSlot_BattlePass_C.ShowBookmarkBtn
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn final
{
public:
	bool                                          _show;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn) == 0x000001, "Wrong alignment on UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn");
static_assert(sizeof(UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn) == 0x000001, "Wrong size on UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn");
static_assert(offsetof(UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn, _show) == 0x000000, "Member 'UI_MissionPopupSlot_BattlePass_C_ShowBookmarkBtn::_show' has a wrong offset!");

}

