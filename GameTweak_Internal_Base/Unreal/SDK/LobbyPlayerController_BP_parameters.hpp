#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LobbyPlayerController_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.UpdatePreviewActorRotation
// 0x00F0 (0x00F0 - 0x0000)
struct LobbyPlayerController_BP_C_UpdatePreviewActorRotation final
{
public:
	float                                         Mouse_y;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Mouse_x;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rot_roll;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rot_yaw;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        RotationSpeed;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMannequin*                             K2Node_DynamicCast_AsMannequin;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAE[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMouseDelta_DeltaX;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputMouseDelta_DeltaY;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAF[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB0[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB1[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_UpdatePreviewActorRotation");
static_assert(sizeof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation) == 0x0000F0, "Wrong size on LobbyPlayerController_BP_C_UpdatePreviewActorRotation");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, Mouse_y) == 0x000000, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::Mouse_y' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, Mouse_x) == 0x000004, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::Mouse_x' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, Rot_roll) == 0x000008, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::Rot_roll' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, Rot_yaw) == 0x000010, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::Rot_yaw' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, TargetActor) == 0x000018, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::TargetActor' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, RotationSpeed) == 0x000020, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::RotationSpeed' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, K2Node_DynamicCast_AsMannequin) == 0x000028, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::K2Node_DynamicCast_AsMannequin' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_GetInputMouseDelta_DeltaX) == 0x000040, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_GetInputMouseDelta_DeltaX' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_GetInputMouseDelta_DeltaY) == 0x000044, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_GetInputMouseDelta_DeltaY' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000058, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000B0, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_FClamp_ReturnValue_1) == 0x0000B8, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C1, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000D0, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000D8, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000E8, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_UpdatePreviewActorRotation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0000EC, "Member 'LobbyPlayerController_BP_C_UpdatePreviewActorRotation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.SkipCutScene
// 0x0001 (0x0001 - 0x0000)
struct LobbyPlayerController_BP_C_SkipCutScene final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_SkipCutScene) == 0x000001, "Wrong alignment on LobbyPlayerController_BP_C_SkipCutScene");
static_assert(sizeof(LobbyPlayerController_BP_C_SkipCutScene) == 0x000001, "Wrong size on LobbyPlayerController_BP_C_SkipCutScene");
static_assert(offsetof(LobbyPlayerController_BP_C_SkipCutScene, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LobbyPlayerController_BP_C_SkipCutScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.ResetPreviewActorRotation
// 0x0068 (0x0068 - 0x0000)
struct LobbyPlayerController_BP_C_ResetPreviewActorRotation final
{
public:
	double                                        Delta;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB2[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB4[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_ResetPreviewActorRotation) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_ResetPreviewActorRotation");
static_assert(sizeof(LobbyPlayerController_BP_C_ResetPreviewActorRotation) == 0x000068, "Wrong size on LobbyPlayerController_BP_C_ResetPreviewActorRotation");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, Delta) == 0x000000, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::Delta' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000009, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000028, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000040, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_RInterpTo_ReturnValue) == 0x000048, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000060, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ResetPreviewActorRotation, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000064, "Member 'LobbyPlayerController_BP_C_ResetPreviewActorRotation::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct LobbyPlayerController_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on LobbyPlayerController_BP_C_ReceiveTick");
static_assert(sizeof(LobbyPlayerController_BP_C_ReceiveTick) == 0x000004, "Wrong size on LobbyPlayerController_BP_C_ReceiveTick");
static_assert(offsetof(LobbyPlayerController_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'LobbyPlayerController_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.On Begin Play
// 0x0002 (0x0002 - 0x0000)
struct LobbyPlayerController_BP_C_On_Begin_Play final
{
public:
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_On_Begin_Play) == 0x000001, "Wrong alignment on LobbyPlayerController_BP_C_On_Begin_Play");
static_assert(sizeof(LobbyPlayerController_BP_C_On_Begin_Play) == 0x000002, "Wrong size on LobbyPlayerController_BP_C_On_Begin_Play");
static_assert(offsetof(LobbyPlayerController_BP_C_On_Begin_Play, CallFunc_IsLocalController_ReturnValue) == 0x000000, "Member 'LobbyPlayerController_BP_C_On_Begin_Play::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_On_Begin_Play, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'LobbyPlayerController_BP_C_On_Begin_Play::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_Two_K2Node_InputDebugKeyEvent_2
// 0x0038 (0x0038 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2) == 0x000038, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2::Key' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2, ActionValue) == 0x000018, "Member 'LobbyPlayerController_BP_C_InpActEvt_Two_K2Node_InputDebugKeyEvent_2::ActionValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_Three_K2Node_InputDebugKeyEvent_1
// 0x0038 (0x0038 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1) == 0x000038, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1::Key' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1, ActionValue) == 0x000018, "Member 'LobbyPlayerController_BP_C_InpActEvt_Three_K2Node_InputDebugKeyEvent_1::ActionValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_T_K2Node_InputDebugKeyEvent_0
// 0x0038 (0x0038 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0) == 0x000038, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0::Key' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0, ActionValue) == 0x000018, "Member 'LobbyPlayerController_BP_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0::ActionValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_One_K2Node_InputDebugKeyEvent_3
// 0x0038 (0x0038 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3) == 0x000038, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3::Key' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3, ActionValue) == 0x000018, "Member 'LobbyPlayerController_BP_C_InpActEvt_One_K2Node_InputDebugKeyEvent_3::ActionValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.OnDEBUG_ToggleUI
// 0x0002 (0x0002 - 0x0000)
struct LobbyPlayerController_BP_C_OnDEBUG_ToggleUI final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_OnDEBUG_ToggleUI) == 0x000001, "Wrong alignment on LobbyPlayerController_BP_C_OnDEBUG_ToggleUI");
static_assert(sizeof(LobbyPlayerController_BP_C_OnDEBUG_ToggleUI) == 0x000002, "Wrong size on LobbyPlayerController_BP_C_OnDEBUG_ToggleUI");
static_assert(offsetof(LobbyPlayerController_BP_C_OnDEBUG_ToggleUI, ReturnValue) == 0x000000, "Member 'LobbyPlayerController_BP_C_OnDEBUG_ToggleUI::ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_OnDEBUG_ToggleUI, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'LobbyPlayerController_BP_C_OnDEBUG_ToggleUI::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.ExecuteUbergraph_LobbyPlayerController_BP
// 0x0190 (0x0190 - 0x0000)
struct LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_2;                   // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_2;           // 0x0038(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_1;                   // 0x0058(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_1;           // 0x0070(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key;                     // 0x0090(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue;             // 0x00A8(0x0020)(NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB6[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_3;                   // 0x00D0(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_3;           // 0x00E8(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0108(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0120(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB7[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0158(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingCutScene_ReturnValue;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB8[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UPreviewableWidget*                     CallFunc_FindUMGWidgetByID_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB9[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_ResetPreviewActorRotation_delta_ImplicitCast; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP");
static_assert(sizeof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP) == 0x000190, "Wrong size on LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, EntryPoint) == 0x000000, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputKeyEvent_Key_3) == 0x000008, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_Key_2) == 0x000020, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_2) == 0x000038, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_Key_1) == 0x000058, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_1) == 0x000070, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_Key) == 0x000090, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue) == 0x0000A8, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_Event_DeltaSeconds) == 0x0000C8, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_Key_3) == 0x0000D0, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_3) == 0x0000E8, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputKeyEvent_Key) == 0x000108, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputKeyEvent_Key_1) == 0x000120, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, Temp_struct_Variable) == 0x000140, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, K2Node_InputKeyEvent_Key_2) == 0x000158, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, CallFunc_IsPlayingCutScene_ReturnValue) == 0x000170, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::CallFunc_IsPlayingCutScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, CallFunc_FindUMGWidgetByID_ReturnValue) == 0x000178, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::CallFunc_FindUMGWidgetByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP, CallFunc_ResetPreviewActorRotation_delta_ImplicitCast) == 0x000188, "Member 'LobbyPlayerController_BP_C_ExecuteUbergraph_LobbyPlayerController_BP::CallFunc_ResetPreviewActorRotation_delta_ImplicitCast' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.ChangeCameraZoom
// 0x0038 (0x0038 - 0x0000)
struct LobbyPlayerController_BP_C_ChangeCameraZoom final
{
public:
	double                                        Additive_velocity;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AFollowCameraActor*                     K2Node_DynamicCast_AsFollow_Camera_Actor;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMannequin*                             K2Node_DynamicCast_AsMannequin;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBC[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_AddDistance__dist_ImplicitCast;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_ChangeCameraZoom) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_ChangeCameraZoom");
static_assert(sizeof(LobbyPlayerController_BP_C_ChangeCameraZoom) == 0x000038, "Wrong size on LobbyPlayerController_BP_C_ChangeCameraZoom");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, Additive_velocity) == 0x000000, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::Additive_velocity' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, K2Node_DynamicCast_AsFollow_Camera_Actor) == 0x000018, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::K2Node_DynamicCast_AsFollow_Camera_Actor' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, K2Node_DynamicCast_AsMannequin) == 0x000028, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::K2Node_DynamicCast_AsMannequin' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, CallFunc_IsVisible_ReturnValue) == 0x000031, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(LobbyPlayerController_BP_C_ChangeCameraZoom, CallFunc_AddDistance__dist_ImplicitCast) == 0x000034, "Member 'LobbyPlayerController_BP_C_ChangeCameraZoom::CallFunc_AddDistance__dist_ImplicitCast' has a wrong offset!");

// Function LobbyPlayerController_BP.LobbyPlayerController_BP_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(sizeof(LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(offsetof(LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'LobbyPlayerController_BP_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

}

