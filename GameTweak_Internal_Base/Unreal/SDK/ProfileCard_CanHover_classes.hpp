#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: ProfileCard_CanHover

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "ProfileCard_Common_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ProfileCard_CanHover.ProfileCard_CanHover_C
// 0x0060 (0x05E0 - 0x0580)
class UProfileCard_CanHover_C final : public UProfileCard_Common_C
{
public:
	class UCtrl_CommonButtonBase_C*               Ctrl_CommonButtonBase;                             // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FUserID                                UserID;                                            // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUserName                              Nickname;                                          // 0x0590(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	ETier                                         Tier;                                              // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C69[0x3];                                     // 0x05A9(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Level;                                             // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                ProfileCard;                                       // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FItemID                                Emblem;                                            // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnAck_AboutFriend;                                 // 0x05D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	class UWidget* GetTooltipWidget();
	void IsActive(bool* _is_active);
	void OnAck_AboutFriend__DelegateSignature(const class FString& _toast_msg);
	struct FNetReply OnACK_AskedFriend(EResultCode _rcode, const struct FACK_FriendUpdate& _ack);
	struct FNetReply OnAck_AskFriend(EResultCode _rcode, const struct FACK_Friend& _ack);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnProcAskFriendClick();
	void OnProcShowProfile();
	void SetTooltipInfo(const struct FUserID& _user_id, const struct FUserName& _nickname, ETier _tier, int32 _level, const struct FItemID& _profile_card, const struct FItemID& Param_Emblem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProfileCard_CanHover_C">();
	}
	static class UProfileCard_CanHover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProfileCard_CanHover_C>();
	}
};
static_assert(alignof(UProfileCard_CanHover_C) == 0x000008, "Wrong alignment on UProfileCard_CanHover_C");
static_assert(sizeof(UProfileCard_CanHover_C) == 0x0005E0, "Wrong size on UProfileCard_CanHover_C");
static_assert(offsetof(UProfileCard_CanHover_C, Ctrl_CommonButtonBase) == 0x000580, "Member 'UProfileCard_CanHover_C::Ctrl_CommonButtonBase' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, UserID) == 0x000588, "Member 'UProfileCard_CanHover_C::UserID' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, Nickname) == 0x000590, "Member 'UProfileCard_CanHover_C::Nickname' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, Tier) == 0x0005A8, "Member 'UProfileCard_CanHover_C::Tier' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, Level) == 0x0005AC, "Member 'UProfileCard_CanHover_C::Level' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, ProfileCard) == 0x0005B0, "Member 'UProfileCard_CanHover_C::ProfileCard' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, Emblem) == 0x0005C0, "Member 'UProfileCard_CanHover_C::Emblem' has a wrong offset!");
static_assert(offsetof(UProfileCard_CanHover_C, OnAck_AboutFriend) == 0x0005D0, "Member 'UProfileCard_CanHover_C::OnAck_AboutFriend' has a wrong offset!");

}

