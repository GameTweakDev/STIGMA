#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Panel_Armory

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "BPGLib_structs.hpp"


namespace SDK::Params
{

// Function Panel_Armory.Panel_Armory_C.ChangeBooster
// 0x0030 (0x0030 - 0x0000)
struct Panel_Armory_C_ChangeBooster final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FItemID                                Item_id;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FItemID_Booster                        CallFunc_ToBoosterID_ReturnValue;                  // 0x0020(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_ChangeBooster) == 0x000008, "Wrong alignment on Panel_Armory_C_ChangeBooster");
static_assert(sizeof(Panel_Armory_C_ChangeBooster) == 0x000030, "Wrong size on Panel_Armory_C_ChangeBooster");
static_assert(offsetof(Panel_Armory_C_ChangeBooster, _item_id) == 0x000000, "Member 'Panel_Armory_C_ChangeBooster::_item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangeBooster, Item_id) == 0x000010, "Member 'Panel_Armory_C_ChangeBooster::Item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangeBooster, CallFunc_ToBoosterID_ReturnValue) == 0x000020, "Member 'Panel_Armory_C_ChangeBooster::CallFunc_ToBoosterID_ReturnValue' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.ChangePassiveSkill
// 0x0058 (0x0058 - 0x0000)
struct Panel_Armory_C_ChangePassiveSkill final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPassiveSkillID                        Skill_id;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FPassiveSkillID                        CallFunc_ToPassiveSkillID_ReturnValue;             // 0x0028(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_GetUserPassiveSkillLevel_ReturnValue;     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFB[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPassiveSkill                          K2Node_MakeStruct_PassiveSkill;                    // 0x0040(0x0018)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(Panel_Armory_C_ChangePassiveSkill) == 0x000008, "Wrong alignment on Panel_Armory_C_ChangePassiveSkill");
static_assert(sizeof(Panel_Armory_C_ChangePassiveSkill) == 0x000058, "Wrong size on Panel_Armory_C_ChangePassiveSkill");
static_assert(offsetof(Panel_Armory_C_ChangePassiveSkill, _item_id) == 0x000000, "Member 'Panel_Armory_C_ChangePassiveSkill::_item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangePassiveSkill, Level) == 0x000010, "Member 'Panel_Armory_C_ChangePassiveSkill::Level' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangePassiveSkill, Skill_id) == 0x000018, "Member 'Panel_Armory_C_ChangePassiveSkill::Skill_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangePassiveSkill, CallFunc_ToPassiveSkillID_ReturnValue) == 0x000028, "Member 'Panel_Armory_C_ChangePassiveSkill::CallFunc_ToPassiveSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangePassiveSkill, CallFunc_GetUserPassiveSkillLevel_ReturnValue) == 0x000038, "Member 'Panel_Armory_C_ChangePassiveSkill::CallFunc_GetUserPassiveSkillLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_ChangePassiveSkill, K2Node_MakeStruct_PassiveSkill) == 0x000040, "Member 'Panel_Armory_C_ChangePassiveSkill::K2Node_MakeStruct_PassiveSkill' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.Config Armory
// 0x0AD8 (0x0AD8 - 0x0000)
struct Panel_Armory_C_Config_Armory final
{
public:
	struct FCharacterInfo                         _chara_info;                                       // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	ECharaType                                    Chara_type;                                        // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFC[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FItemID_Booster>                CallFunc_GetBoosters_ReturnValue;                  // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FPassiveSkill>                  CallFunc_GetPassiveSkills_ReturnValue;             // 0x0070(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFD[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0088(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFE[0x7];                                     // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FOrganizationDefine                    CallFunc_GetOrganizationDefine_ReturnValue;        // 0x0A70(0x0068)(ConstParm)
};
static_assert(alignof(Panel_Armory_C_Config_Armory) == 0x000008, "Wrong alignment on Panel_Armory_C_Config_Armory");
static_assert(sizeof(Panel_Armory_C_Config_Armory) == 0x000AD8, "Wrong size on Panel_Armory_C_Config_Armory");
static_assert(offsetof(Panel_Armory_C_Config_Armory, _chara_info) == 0x000000, "Member 'Panel_Armory_C_Config_Armory::_chara_info' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, Chara_type) == 0x000058, "Member 'Panel_Armory_C_Config_Armory::Chara_type' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, CallFunc_GetBoosters_ReturnValue) == 0x000060, "Member 'Panel_Armory_C_Config_Armory::CallFunc_GetBoosters_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, CallFunc_GetPassiveSkills_ReturnValue) == 0x000070, "Member 'Panel_Armory_C_Config_Armory::CallFunc_GetPassiveSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000080, "Member 'Panel_Armory_C_Config_Armory::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, CallFunc_GetCharacterDefByType__out_data) == 0x000088, "Member 'Panel_Armory_C_Config_Armory::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, CallFunc_GetCharacterDefByType_ReturnValue) == 0x000A68, "Member 'Panel_Armory_C_Config_Armory::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Config_Armory, CallFunc_GetOrganizationDefine_ReturnValue) == 0x000A70, "Member 'Panel_Armory_C_Config_Armory::CallFunc_GetOrganizationDefine_ReturnValue' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.CreateTooltip
// 0x0078 (0x0078 - 0x0000)
struct Panel_Armory_C_CreateTooltip final
{
public:
	EHoverGraphArea                               _area;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BFF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         _idx_axis;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        booster_value;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Passive_value;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base_value;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Default_text_character;                            // 0x0028(0x0018)(Edit, BlueprintVisible)
	struct FPolyGraphSetting                      Graph_setting;                                     // 0x0040(0x0038)(Edit, BlueprintVisible)
};
static_assert(alignof(Panel_Armory_C_CreateTooltip) == 0x000008, "Wrong alignment on Panel_Armory_C_CreateTooltip");
static_assert(sizeof(Panel_Armory_C_CreateTooltip) == 0x000078, "Wrong size on Panel_Armory_C_CreateTooltip");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, _area) == 0x000000, "Member 'Panel_Armory_C_CreateTooltip::_area' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, _idx_axis) == 0x000004, "Member 'Panel_Armory_C_CreateTooltip::_idx_axis' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, ReturnValue) == 0x000008, "Member 'Panel_Armory_C_CreateTooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, booster_value) == 0x000010, "Member 'Panel_Armory_C_CreateTooltip::booster_value' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, Passive_value) == 0x000018, "Member 'Panel_Armory_C_CreateTooltip::Passive_value' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, base_value) == 0x000020, "Member 'Panel_Armory_C_CreateTooltip::base_value' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, Default_text_character) == 0x000028, "Member 'Panel_Armory_C_CreateTooltip::Default_text_character' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_CreateTooltip, Graph_setting) == 0x000040, "Member 'Panel_Armory_C_CreateTooltip::Graph_setting' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.ExecuteUbergraph_Panel_Armory
// 0x0004 (0x0004 - 0x0000)
struct Panel_Armory_C_ExecuteUbergraph_Panel_Armory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_ExecuteUbergraph_Panel_Armory) == 0x000004, "Wrong alignment on Panel_Armory_C_ExecuteUbergraph_Panel_Armory");
static_assert(sizeof(Panel_Armory_C_ExecuteUbergraph_Panel_Armory) == 0x000004, "Wrong size on Panel_Armory_C_ExecuteUbergraph_Panel_Armory");
static_assert(offsetof(Panel_Armory_C_ExecuteUbergraph_Panel_Armory, EntryPoint) == 0x000000, "Member 'Panel_Armory_C_ExecuteUbergraph_Panel_Armory::EntryPoint' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.OnEndOfItemHovering
// 0x0020 (0x0020 - 0x0000)
struct Panel_Armory_C_OnEndOfItemHovering final
{
public:
	TArray<struct FPassiveSkill>                  CallFunc_GetPassiveSkills_ReturnValue;             // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FItemID_Booster>                CallFunc_GetBoosters_ReturnValue;                  // 0x0010(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(Panel_Armory_C_OnEndOfItemHovering) == 0x000008, "Wrong alignment on Panel_Armory_C_OnEndOfItemHovering");
static_assert(sizeof(Panel_Armory_C_OnEndOfItemHovering) == 0x000020, "Wrong size on Panel_Armory_C_OnEndOfItemHovering");
static_assert(offsetof(Panel_Armory_C_OnEndOfItemHovering, CallFunc_GetPassiveSkills_ReturnValue) == 0x000000, "Member 'Panel_Armory_C_OnEndOfItemHovering::CallFunc_GetPassiveSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_OnEndOfItemHovering, CallFunc_GetBoosters_ReturnValue) == 0x000010, "Member 'Panel_Armory_C_OnEndOfItemHovering::CallFunc_GetBoosters_ReturnValue' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.OnEquipItem__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Panel_Armory_C_OnEquipItem__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C00[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                _item_id;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _idx_slot;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_OnEquipItem__DelegateSignature) == 0x000008, "Wrong alignment on Panel_Armory_C_OnEquipItem__DelegateSignature");
static_assert(sizeof(Panel_Armory_C_OnEquipItem__DelegateSignature) == 0x000020, "Wrong size on Panel_Armory_C_OnEquipItem__DelegateSignature");
static_assert(offsetof(Panel_Armory_C_OnEquipItem__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_Armory_C_OnEquipItem__DelegateSignature::_chara_type' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_OnEquipItem__DelegateSignature, _item_id) == 0x000008, "Member 'Panel_Armory_C_OnEquipItem__DelegateSignature::_item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_OnEquipItem__DelegateSignature, _idx_slot) == 0x000018, "Member 'Panel_Armory_C_OnEquipItem__DelegateSignature::_idx_slot' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.OnItemHover
// 0x0020 (0x0020 - 0x0000)
struct Panel_Armory_C_OnItemHover final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FItemID                                Item_id;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_OnItemHover) == 0x000008, "Wrong alignment on Panel_Armory_C_OnItemHover");
static_assert(sizeof(Panel_Armory_C_OnItemHover) == 0x000020, "Wrong size on Panel_Armory_C_OnItemHover");
static_assert(offsetof(Panel_Armory_C_OnItemHover, _item_id) == 0x000000, "Member 'Panel_Armory_C_OnItemHover::_item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_OnItemHover, Item_id) == 0x000010, "Member 'Panel_Armory_C_OnItemHover::Item_id' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.OnItemSelected
// 0x0028 (0x0028 - 0x0000)
struct Panel_Armory_C_OnItemSelected final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FItemID                                Item_id;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCharaType__chara_type;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_OnItemSelected) == 0x000008, "Wrong alignment on Panel_Armory_C_OnItemSelected");
static_assert(sizeof(Panel_Armory_C_OnItemSelected) == 0x000028, "Wrong size on Panel_Armory_C_OnItemSelected");
static_assert(offsetof(Panel_Armory_C_OnItemSelected, _item_id) == 0x000000, "Member 'Panel_Armory_C_OnItemSelected::_item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_OnItemSelected, Item_id) == 0x000010, "Member 'Panel_Armory_C_OnItemSelected::Item_id' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_OnItemSelected, CallFunc_GetCharaType__chara_type) == 0x000020, "Member 'Panel_Armory_C_OnItemSelected::CallFunc_GetCharaType__chara_type' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.RefreshCurrentItemID
// 0x0030 (0x0030 - 0x0000)
struct Panel_Armory_C_RefreshCurrentItemID final
{
public:
	class ULocalPlayerContext*                    CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPassiveSkill>                  CallFunc_GetPassiveSkills_ReturnValue;             // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FItemID_Booster                        CallFunc_GetBooster_ReturnValue;                   // 0x0018(0x0010)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_RefreshCurrentItemID) == 0x000008, "Wrong alignment on Panel_Armory_C_RefreshCurrentItemID");
static_assert(sizeof(Panel_Armory_C_RefreshCurrentItemID) == 0x000030, "Wrong size on Panel_Armory_C_RefreshCurrentItemID");
static_assert(offsetof(Panel_Armory_C_RefreshCurrentItemID, CallFunc_Get_ReturnValue) == 0x000000, "Member 'Panel_Armory_C_RefreshCurrentItemID::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_RefreshCurrentItemID, CallFunc_GetPassiveSkills_ReturnValue) == 0x000008, "Member 'Panel_Armory_C_RefreshCurrentItemID::CallFunc_GetPassiveSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_RefreshCurrentItemID, CallFunc_GetBooster_ReturnValue) == 0x000018, "Member 'Panel_Armory_C_RefreshCurrentItemID::CallFunc_GetBooster_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_RefreshCurrentItemID, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'Panel_Armory_C_RefreshCurrentItemID::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.SetGraphValue
// 0x0060 (0x0060 - 0x0000)
struct Panel_Armory_C_SetGraphValue final
{
public:
	int32                                         _idx_axis;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C01[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        _base;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _add1;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _add2;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base_add_booster_value;                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base_add_passive_value;                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base_value;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Idx_axis;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C02[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAxisValue__value_ImplicitCast;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAxisValue__value_ImplicitCast_1;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAxisValue__value_ImplicitCast_2;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_SetGraphValue) == 0x000008, "Wrong alignment on Panel_Armory_C_SetGraphValue");
static_assert(sizeof(Panel_Armory_C_SetGraphValue) == 0x000060, "Wrong size on Panel_Armory_C_SetGraphValue");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, _idx_axis) == 0x000000, "Member 'Panel_Armory_C_SetGraphValue::_idx_axis' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, _base) == 0x000008, "Member 'Panel_Armory_C_SetGraphValue::_base' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, _add1) == 0x000010, "Member 'Panel_Armory_C_SetGraphValue::_add1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, _add2) == 0x000018, "Member 'Panel_Armory_C_SetGraphValue::_add2' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, base_add_booster_value) == 0x000020, "Member 'Panel_Armory_C_SetGraphValue::base_add_booster_value' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, base_add_passive_value) == 0x000028, "Member 'Panel_Armory_C_SetGraphValue::base_add_passive_value' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, base_value) == 0x000030, "Member 'Panel_Armory_C_SetGraphValue::base_value' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, Idx_axis) == 0x000038, "Member 'Panel_Armory_C_SetGraphValue::Idx_axis' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Panel_Armory_C_SetGraphValue::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Panel_Armory_C_SetGraphValue::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, CallFunc_SetAxisValue__value_ImplicitCast) == 0x000050, "Member 'Panel_Armory_C_SetGraphValue::CallFunc_SetAxisValue__value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, CallFunc_SetAxisValue__value_ImplicitCast_1) == 0x000054, "Member 'Panel_Armory_C_SetGraphValue::CallFunc_SetAxisValue__value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_SetGraphValue, CallFunc_SetAxisValue__value_ImplicitCast_2) == 0x000058, "Member 'Panel_Armory_C_SetGraphValue::CallFunc_SetAxisValue__value_ImplicitCast_2' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.Start Selecting
// 0x0018 (0x0018 - 0x0000)
struct Panel_Armory_C_Start_Selecting final
{
public:
	EItemCategory                                 _item_category;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C03[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         _index;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                _item_id;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_Start_Selecting) == 0x000008, "Wrong alignment on Panel_Armory_C_Start_Selecting");
static_assert(sizeof(Panel_Armory_C_Start_Selecting) == 0x000018, "Wrong size on Panel_Armory_C_Start_Selecting");
static_assert(offsetof(Panel_Armory_C_Start_Selecting, _item_category) == 0x000000, "Member 'Panel_Armory_C_Start_Selecting::_item_category' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Start_Selecting, _index) == 0x000004, "Member 'Panel_Armory_C_Start_Selecting::_index' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_Start_Selecting, _item_id) == 0x000008, "Member 'Panel_Armory_C_Start_Selecting::_item_id' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.StartSelectingEx
// 0x0018 (0x0018 - 0x0000)
struct Panel_Armory_C_StartSelectingEx final
{
public:
	EItemCategory                                 _category;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C04[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                Item_id;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_StartSelectingEx) == 0x000008, "Wrong alignment on Panel_Armory_C_StartSelectingEx");
static_assert(sizeof(Panel_Armory_C_StartSelectingEx) == 0x000018, "Wrong size on Panel_Armory_C_StartSelectingEx");
static_assert(offsetof(Panel_Armory_C_StartSelectingEx, _category) == 0x000000, "Member 'Panel_Armory_C_StartSelectingEx::_category' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_StartSelectingEx, Item_id) == 0x000008, "Member 'Panel_Armory_C_StartSelectingEx::Item_id' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.UpdateBaseGun
// 0x0001 (0x0001 - 0x0000)
struct Panel_Armory_C_UpdateBaseGun final
{
public:
	ECharaType                                    CallFunc_GetCharaType__chara_type;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_UpdateBaseGun) == 0x000001, "Wrong alignment on Panel_Armory_C_UpdateBaseGun");
static_assert(sizeof(Panel_Armory_C_UpdateBaseGun) == 0x000001, "Wrong size on Panel_Armory_C_UpdateBaseGun");
static_assert(offsetof(Panel_Armory_C_UpdateBaseGun, CallFunc_GetCharaType__chara_type) == 0x000000, "Member 'Panel_Armory_C_UpdateBaseGun::CallFunc_GetCharaType__chara_type' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.UpdateGraph
// 0x14E8 (0x14E8 - 0x0000)
struct Panel_Armory_C_UpdateGraph final
{
public:
	struct FCharaGraphValue                       booster_graph_v;                                   // 0x0000(0x0014)(Edit, BlueprintVisible, NoDestructor)
	struct FCharaGraphValue                       Passive_graph_v;                                   // 0x0014(0x0014)(Edit, BlueprintVisible, NoDestructor)
	struct FCharaGraphValue                       base_graph_v;                                      // 0x0028(0x0014)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_3C05[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       Chara_def;                                         // 0x0040(0x09E0)(Edit, BlueprintVisible)
	struct FCharaGraphValue                       CallFunc_GetGraphValue_ReturnValue;                // 0x0A20(0x0014)(NoDestructor)
	struct FCharaBuffEffect                       CallFunc_GetCharaBuffEffectOfBoosters_ReturnValue; // 0x0A34(0x0014)(NoDestructor)
	struct FCharaGraphValue                       CallFunc_GetCharaBuffedGraphValue_ReturnValue;     // 0x0A48(0x0014)(NoDestructor)
	struct FCharaBuffEffect                       CallFunc_GetCharaBuffEffectOfPassiveSkills_ReturnValue; // 0x0A5C(0x0014)(NoDestructor)
	ECharaType                                    CallFunc_GetCharaType__chara_type;                 // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C06[0x3];                                     // 0x0A71(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharaGraphValue                       CallFunc_GetCharaBuffedGraphValue_ReturnValue_1;   // 0x0A74(0x0014)(NoDestructor)
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0A88(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x1468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C07[0x7];                                     // 0x1469(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_SetGraphValue__add2_ImplicitCast;         // 0x1470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add2_ImplicitCast_1;       // 0x1478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add2_ImplicitCast_2;       // 0x1480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add2_ImplicitCast_3;       // 0x1488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add2_ImplicitCast_4;       // 0x1490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add1_ImplicitCast;         // 0x1498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add1_ImplicitCast_1;       // 0x14A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add1_ImplicitCast_2;       // 0x14A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add1_ImplicitCast_3;       // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__add1_ImplicitCast_4;       // 0x14B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__base_ImplicitCast;         // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__base_ImplicitCast_1;       // 0x14C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__base_ImplicitCast_2;       // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__base_ImplicitCast_3;       // 0x14D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetGraphValue__base_ImplicitCast_4;       // 0x14E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_UpdateGraph) == 0x000008, "Wrong alignment on Panel_Armory_C_UpdateGraph");
static_assert(sizeof(Panel_Armory_C_UpdateGraph) == 0x0014E8, "Wrong size on Panel_Armory_C_UpdateGraph");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, booster_graph_v) == 0x000000, "Member 'Panel_Armory_C_UpdateGraph::booster_graph_v' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, Passive_graph_v) == 0x000014, "Member 'Panel_Armory_C_UpdateGraph::Passive_graph_v' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, base_graph_v) == 0x000028, "Member 'Panel_Armory_C_UpdateGraph::base_graph_v' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, Chara_def) == 0x000040, "Member 'Panel_Armory_C_UpdateGraph::Chara_def' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetGraphValue_ReturnValue) == 0x000A20, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetGraphValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharaBuffEffectOfBoosters_ReturnValue) == 0x000A34, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharaBuffEffectOfBoosters_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharaBuffedGraphValue_ReturnValue) == 0x000A48, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharaBuffedGraphValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharaBuffEffectOfPassiveSkills_ReturnValue) == 0x000A5C, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharaBuffEffectOfPassiveSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharaType__chara_type) == 0x000A70, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharaType__chara_type' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharaBuffedGraphValue_ReturnValue_1) == 0x000A74, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharaBuffedGraphValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharacterDefByType__out_data) == 0x000A88, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_GetCharacterDefByType_ReturnValue) == 0x001468, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add2_ImplicitCast) == 0x001470, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add2_ImplicitCast_1) == 0x001478, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add2_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add2_ImplicitCast_2) == 0x001480, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add2_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add2_ImplicitCast_3) == 0x001488, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add2_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add2_ImplicitCast_4) == 0x001490, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add2_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add1_ImplicitCast) == 0x001498, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add1_ImplicitCast_1) == 0x0014A0, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add1_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add1_ImplicitCast_2) == 0x0014A8, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add1_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add1_ImplicitCast_3) == 0x0014B0, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add1_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__add1_ImplicitCast_4) == 0x0014B8, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__add1_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__base_ImplicitCast) == 0x0014C0, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__base_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__base_ImplicitCast_1) == 0x0014C8, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__base_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__base_ImplicitCast_2) == 0x0014D0, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__base_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__base_ImplicitCast_3) == 0x0014D8, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__base_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdateGraph, CallFunc_SetGraphValue__base_ImplicitCast_4) == 0x0014E0, "Member 'Panel_Armory_C_UpdateGraph::CallFunc_SetGraphValue__base_ImplicitCast_4' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.UpdatePalette
// 0x0010 (0x0010 - 0x0000)
struct Panel_Armory_C_UpdatePalette final
{
public:
	struct FItemID                                Current_item_id;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_UpdatePalette) == 0x000008, "Wrong alignment on Panel_Armory_C_UpdatePalette");
static_assert(sizeof(Panel_Armory_C_UpdatePalette) == 0x000010, "Wrong size on Panel_Armory_C_UpdatePalette");
static_assert(offsetof(Panel_Armory_C_UpdatePalette, Current_item_id) == 0x000000, "Member 'Panel_Armory_C_UpdatePalette::Current_item_id' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.UpdatePassiveAndBooster
// 0x0004 (0x0004 - 0x0000)
struct Panel_Armory_C_UpdatePassiveAndBooster final
{
public:
	bool                                          _update_passive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _update_booster;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_booster;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_passive;                                    // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_UpdatePassiveAndBooster) == 0x000001, "Wrong alignment on Panel_Armory_C_UpdatePassiveAndBooster");
static_assert(sizeof(Panel_Armory_C_UpdatePassiveAndBooster) == 0x000004, "Wrong size on Panel_Armory_C_UpdatePassiveAndBooster");
static_assert(offsetof(Panel_Armory_C_UpdatePassiveAndBooster, _update_passive) == 0x000000, "Member 'Panel_Armory_C_UpdatePassiveAndBooster::_update_passive' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdatePassiveAndBooster, _update_booster) == 0x000001, "Member 'Panel_Armory_C_UpdatePassiveAndBooster::_update_booster' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdatePassiveAndBooster, Update_booster) == 0x000002, "Member 'Panel_Armory_C_UpdatePassiveAndBooster::Update_booster' has a wrong offset!");
static_assert(offsetof(Panel_Armory_C_UpdatePassiveAndBooster, Update_passive) == 0x000003, "Member 'Panel_Armory_C_UpdatePassiveAndBooster::Update_passive' has a wrong offset!");

// Function Panel_Armory.Panel_Armory_C.GetCharaType
// 0x0001 (0x0001 - 0x0000)
struct Panel_Armory_C_GetCharaType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Armory_C_GetCharaType) == 0x000001, "Wrong alignment on Panel_Armory_C_GetCharaType");
static_assert(sizeof(Panel_Armory_C_GetCharaType) == 0x000001, "Wrong size on Panel_Armory_C_GetCharaType");
static_assert(offsetof(Panel_Armory_C_GetCharaType, _chara_type) == 0x000000, "Member 'Panel_Armory_C_GetCharaType::_chara_type' has a wrong offset!");

}

