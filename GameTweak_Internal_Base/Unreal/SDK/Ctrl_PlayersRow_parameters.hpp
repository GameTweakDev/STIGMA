#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_PlayersRow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.BindChara
// 0x0028 (0x0028 - 0x0000)
struct Ctrl_PlayersRow_C_BindChara final
{
public:
	class APlayerState*                           _player_state;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3818[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_BindChara) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_BindChara");
static_assert(sizeof(Ctrl_PlayersRow_C_BindChara) == 0x000028, "Wrong size on Ctrl_PlayersRow_C_BindChara");
static_assert(offsetof(Ctrl_PlayersRow_C_BindChara, _player_state) == 0x000000, "Member 'Ctrl_PlayersRow_C_BindChara::_player_state' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_BindChara, K2Node_DynamicCast_AsBattle_Player_State) == 0x000008, "Member 'Ctrl_PlayersRow_C_BindChara::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_BindChara, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ctrl_PlayersRow_C_BindChara::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_BindChara, K2Node_DynamicCast_AsChara_Base) == 0x000018, "Member 'Ctrl_PlayersRow_C_BindChara::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_BindChara, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'Ctrl_PlayersRow_C_BindChara::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.ExecuteUbergraph_Ctrl_PlayersRow
// 0x0048 (0x0048 - 0x0000)
struct Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow");
static_assert(sizeof(Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow) == 0x000048, "Wrong size on Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow");
static_assert(offsetof(Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow, EntryPoint) == 0x000000, "Member 'Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow, K2Node_Event_MyGeometry) == 0x000004, "Member 'Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow, CallFunc_OnTick__delta_ImplicitCast) == 0x000040, "Member 'Ctrl_PlayersRow_C_ExecuteUbergraph_Ctrl_PlayersRow::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.Get TXT Revive Visibility
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3819[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAnnihilation_GameState*                K2Node_DynamicCast_AsAnnihilation_Game_State;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility");
static_assert(sizeof(Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility) == 0x000020, "Wrong size on Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility, ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility, K2Node_DynamicCast_AsAnnihilation_Game_State) == 0x000010, "Member 'Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility::K2Node_DynamicCast_AsAnnihilation_Game_State' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ctrl_PlayersRow_C_Get_TXT_Revive_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.Get_TXT_Transfer_Text
// 0x00C8 (0x00C8 - 0x0000)
struct Ctrl_PlayersRow_C_Get_TXT_Transfer_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class ABountyTDM_PlayerState*                 K2Node_DynamicCast_AsBounty_TDM_Player_State;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
};
static_assert(alignof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_Get_TXT_Transfer_Text");
static_assert(sizeof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text) == 0x0000C8, "Wrong size on Ctrl_PlayersRow_C_Get_TXT_Transfer_Text");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, K2Node_DynamicCast_AsBounty_TDM_Player_State) == 0x000018, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::K2Node_DynamicCast_AsBounty_TDM_Player_State' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000038, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, K2Node_MakeArray_Array) == 0x0000A0, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Text, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.Get_TXT_Transfer_Visibility
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABountyTDM_GameState_BP_C*              K2Node_DynamicCast_AsBounty_TDM_Game_State_BP;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility");
static_assert(sizeof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility) == 0x000020, "Wrong size on Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility, ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility, K2Node_DynamicCast_AsBounty_TDM_Game_State_BP) == 0x000010, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility::K2Node_DynamicCast_AsBounty_TDM_Game_State_BP' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ctrl_PlayersRow_C_Get_TXT_Transfer_Visibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_PlayersRow_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_PlayersRow_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_PlayersRow_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_PlayersRow_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_PlayersRow_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.OnTick
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_PlayersRow_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_OnTick) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_OnTick");
static_assert(sizeof(Ctrl_PlayersRow_C_OnTick) == 0x000018, "Wrong size on Ctrl_PlayersRow_C_OnTick");
static_assert(offsetof(Ctrl_PlayersRow_C_OnTick, _delta) == 0x000000, "Member 'Ctrl_PlayersRow_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_OnTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ctrl_PlayersRow_C_OnTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_OnTick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ctrl_PlayersRow_C_OnTick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_PlayersRow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_Tick) == 0x000004, "Wrong alignment on Ctrl_PlayersRow_C_Tick");
static_assert(sizeof(Ctrl_PlayersRow_C_Tick) == 0x00003C, "Wrong size on Ctrl_PlayersRow_C_Tick");
static_assert(offsetof(Ctrl_PlayersRow_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_PlayersRow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_PlayersRow_C_Tick::InDeltaTime' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.UpdateBackground
// 0x0028 (0x0028 - 0x0000)
struct Ctrl_PlayersRow_C_UpdateBackground final
{
public:
	bool                                          Is_my_team;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLinearColor                           CallFunc_GetTeamColor_color;                       // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetMyColor_ReturnValue;                   // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocal_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_UpdateBackground) == 0x000004, "Wrong alignment on Ctrl_PlayersRow_C_UpdateBackground");
static_assert(sizeof(Ctrl_PlayersRow_C_UpdateBackground) == 0x000028, "Wrong size on Ctrl_PlayersRow_C_UpdateBackground");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateBackground, Is_my_team) == 0x000000, "Member 'Ctrl_PlayersRow_C_UpdateBackground::Is_my_team' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateBackground, CallFunc_GetTeamColor_color) == 0x000004, "Member 'Ctrl_PlayersRow_C_UpdateBackground::CallFunc_GetTeamColor_color' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateBackground, CallFunc_GetMyColor_ReturnValue) == 0x000014, "Member 'Ctrl_PlayersRow_C_UpdateBackground::CallFunc_GetMyColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateBackground, CallFunc_IsLocal_ReturnValue) == 0x000024, "Member 'Ctrl_PlayersRow_C_UpdateBackground::CallFunc_IsLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateBackground, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'Ctrl_PlayersRow_C_UpdateBackground::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.UpdateEquips
// 0x0370 (0x0370 - 0x0000)
struct Ctrl_PlayersRow_C_UpdateEquips final
{
public:
	class AGunBase*                               Gun;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunEntry_Main                         CallFunc_GetGunMainEntry_ReturnValue;              // 0x0010(0x0350)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381F[0x7];                                     // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGunBase*                               CallFunc_GetGunInCurHand_ReturnValue;              // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_UpdateEquips) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_UpdateEquips");
static_assert(sizeof(Ctrl_PlayersRow_C_UpdateEquips) == 0x000370, "Wrong size on Ctrl_PlayersRow_C_UpdateEquips");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateEquips, Gun) == 0x000000, "Member 'Ctrl_PlayersRow_C_UpdateEquips::Gun' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateEquips, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ctrl_PlayersRow_C_UpdateEquips::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateEquips, CallFunc_GetGunMainEntry_ReturnValue) == 0x000010, "Member 'Ctrl_PlayersRow_C_UpdateEquips::CallFunc_GetGunMainEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateEquips, CallFunc_IsValid_ReturnValue_1) == 0x000360, "Member 'Ctrl_PlayersRow_C_UpdateEquips::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateEquips, CallFunc_GetGunInCurHand_ReturnValue) == 0x000368, "Member 'Ctrl_PlayersRow_C_UpdateEquips::CallFunc_GetGunInCurHand_ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.UpdateKDA
// 0x0080 (0x0080 - 0x0000)
struct Ctrl_PlayersRow_C_UpdateKDA final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3820[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetKillCount_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	int32                                         CallFunc_GetAssistCount_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDeathCount_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0040(0x0018)()
	class AAnnihilation_PlayerState*              K2Node_DynamicCast_AsAnnihilation_Player_State;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3821[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetReviveCount_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0068(0x0018)()
};
static_assert(alignof(Ctrl_PlayersRow_C_UpdateKDA) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_UpdateKDA");
static_assert(sizeof(Ctrl_PlayersRow_C_UpdateKDA) == 0x000080, "Wrong size on Ctrl_PlayersRow_C_UpdateKDA");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_GetKillCount_ReturnValue) == 0x000004, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_GetKillCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_GetAssistCount_ReturnValue) == 0x000020, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_GetAssistCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_GetDeathCount_ReturnValue) == 0x000024, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_GetDeathCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000040, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, K2Node_DynamicCast_AsAnnihilation_Player_State) == 0x000058, "Member 'Ctrl_PlayersRow_C_UpdateKDA::K2Node_DynamicCast_AsAnnihilation_Player_State' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Ctrl_PlayersRow_C_UpdateKDA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_GetReviveCount_ReturnValue) == 0x000064, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_GetReviveCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateKDA, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000068, "Member 'Ctrl_PlayersRow_C_UpdateKDA::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.UpdateNameAndIcon
// 0x0178 (0x0178 - 0x0000)
struct Ctrl_PlayersRow_C_UpdateNameAndIcon final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedGameState*                K2Node_DynamicCast_AsMatch_Serviced_Game_State;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3822[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetEmblem_ReturnValue;                    // 0x0018(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxPlayableCharacterCount_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETier                                         CallFunc_GetTier_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3823[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetProfileCard_ReturnValue;               // 0x0030(0x0010)(HasGetValueTypeHash)
	struct FConfig_Tier                           CallFunc_GetTierDefine_ReturnValue;                // 0x0040(0x00D8)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3824[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetCharacterIcon_ReturnValue;             // 0x0120(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FUserName                              CallFunc_GetNickname_ReturnValue;                  // 0x0148(0x0018)(ConstParm, HasGetValueTypeHash)
	class FText                                   CallFunc_ToText_ReturnValue;                       // 0x0160(0x0018)()
};
static_assert(alignof(Ctrl_PlayersRow_C_UpdateNameAndIcon) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_UpdateNameAndIcon");
static_assert(sizeof(Ctrl_PlayersRow_C_UpdateNameAndIcon) == 0x000178, "Wrong size on Ctrl_PlayersRow_C_UpdateNameAndIcon");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, K2Node_DynamicCast_AsMatch_Serviced_Game_State) == 0x000008, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::K2Node_DynamicCast_AsMatch_Serviced_Game_State' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetEmblem_ReturnValue) == 0x000018, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetEmblem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetMaxPlayableCharacterCount_ReturnValue) == 0x000028, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetMaxPlayableCharacterCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetTier_ReturnValue) == 0x00002D, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetProfileCard_ReturnValue) == 0x000030, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetProfileCard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetTierDefine_ReturnValue) == 0x000040, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetTierDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_IsValid_ReturnValue) == 0x000118, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetCharacterIcon_ReturnValue) == 0x000120, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetCharacterIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_GetNickname_ReturnValue) == 0x000148, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_GetNickname_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdateNameAndIcon, CallFunc_ToText_ReturnValue) == 0x000160, "Member 'Ctrl_PlayersRow_C_UpdateNameAndIcon::CallFunc_ToText_ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.UpdatePing
// 0x0028 (0x0028 - 0x0000)
struct Ctrl_PlayersRow_C_UpdatePing final
{
public:
	double                                        Mask;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPingQuality                                  Ping_quality;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPingQuality                                  CallFunc_GetPingQuality_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3825[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_UpdatePing) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_UpdatePing");
static_assert(sizeof(Ctrl_PlayersRow_C_UpdatePing) == 0x000028, "Wrong size on Ctrl_PlayersRow_C_UpdatePing");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, Mask) == 0x000000, "Member 'Ctrl_PlayersRow_C_UpdatePing::Mask' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, Color) == 0x000008, "Member 'Ctrl_PlayersRow_C_UpdatePing::Color' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, Ping_quality) == 0x000018, "Member 'Ctrl_PlayersRow_C_UpdatePing::Ping_quality' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, CallFunc_GetPingQuality_ReturnValue) == 0x000019, "Member 'Ctrl_PlayersRow_C_UpdatePing::CallFunc_GetPingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'Ctrl_PlayersRow_C_UpdatePing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, K2Node_SwitchEnum_CmpSuccess) == 0x00001B, "Member 'Ctrl_PlayersRow_C_UpdatePing::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'Ctrl_PlayersRow_C_UpdatePing::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_UpdatePing, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'Ctrl_PlayersRow_C_UpdatePing::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.ValidatePingMaterial
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_PlayersRow_C_ValidatePingMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_ValidatePingMaterial) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_ValidatePingMaterial");
static_assert(sizeof(Ctrl_PlayersRow_C_ValidatePingMaterial) == 0x000010, "Wrong size on Ctrl_PlayersRow_C_ValidatePingMaterial");
static_assert(offsetof(Ctrl_PlayersRow_C_ValidatePingMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'Ctrl_PlayersRow_C_ValidatePingMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_ValidatePingMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ctrl_PlayersRow_C_ValidatePingMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ctrl_PlayersRow.Ctrl_PlayersRow_C.GetTeamColor
// 0x0598 (0x0598 - 0x0000)
struct Ctrl_PlayersRow_C_GetTeamColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeamColorByPlayerState_ReturnValue;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3826[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Game                           CallFunc_GetGameConfig_ReturnValue;                // 0x0030(0x0560)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PlayersRow_C_GetTeamColor) == 0x000008, "Wrong alignment on Ctrl_PlayersRow_C_GetTeamColor");
static_assert(sizeof(Ctrl_PlayersRow_C_GetTeamColor) == 0x000598, "Wrong size on Ctrl_PlayersRow_C_GetTeamColor");
static_assert(offsetof(Ctrl_PlayersRow_C_GetTeamColor, Color) == 0x000000, "Member 'Ctrl_PlayersRow_C_GetTeamColor::Color' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_GetTeamColor, CallFunc_GetTeamColorByPlayerState_ReturnValue) == 0x000010, "Member 'Ctrl_PlayersRow_C_GetTeamColor::CallFunc_GetTeamColorByPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_GetTeamColor, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000020, "Member 'Ctrl_PlayersRow_C_GetTeamColor::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_GetTeamColor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'Ctrl_PlayersRow_C_GetTeamColor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_GetTeamColor, CallFunc_GetGameConfig_ReturnValue) == 0x000030, "Member 'Ctrl_PlayersRow_C_GetTeamColor::CallFunc_GetGameConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PlayersRow_C_GetTeamColor, CallFunc_IsValid_ReturnValue) == 0x000590, "Member 'Ctrl_PlayersRow_C_GetTeamColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

