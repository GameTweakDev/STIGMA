#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_ItemID_Default

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "UI_TooltipBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Tooltip_ItemID_Default.UI_Tooltip_ItemID_Default_C
// 0x0178 (0x0768 - 0x05F0)
class UUI_Tooltip_ItemID_Default_C : public UUI_TooltipBase_C
{
public:
	class UHorizontalBox*                         HB_ItemTypeInfo;                                   // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_ItemCategory;                                  // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Grade;                                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_ItemCategory;                                  // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EItemCategory                                 _ItemCategory;                                     // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3545[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                _ItemID;                                           // 0x0618(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          _ShowItemCategory;                                 // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _ShowGrade;                                        // 0x0629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3546[0x6];                                     // 0x062A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemEntry                             _ItemEntry;                                        // 0x0630(0x0130)(Edit, BlueprintVisible, Transient, DisableEditOnInstance)
	bool                                          _CanBuyFast;                                       // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitWidget(const struct FItemID& _item_id);
	bool OnSynchronizeProperties();
	void UpdateCanBuyFast();
	void UpdateCategory();
	void UpdateGrade();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Tooltip_ItemID_Default_C">();
	}
	static class UUI_Tooltip_ItemID_Default_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Tooltip_ItemID_Default_C>();
	}
};
static_assert(alignof(UUI_Tooltip_ItemID_Default_C) == 0x000008, "Wrong alignment on UUI_Tooltip_ItemID_Default_C");
static_assert(sizeof(UUI_Tooltip_ItemID_Default_C) == 0x000768, "Wrong size on UUI_Tooltip_ItemID_Default_C");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, HB_ItemTypeInfo) == 0x0005F0, "Member 'UUI_Tooltip_ItemID_Default_C::HB_ItemTypeInfo' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, Img_ItemCategory) == 0x0005F8, "Member 'UUI_Tooltip_ItemID_Default_C::Img_ItemCategory' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, Txt_Grade) == 0x000600, "Member 'UUI_Tooltip_ItemID_Default_C::Txt_Grade' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, Txt_ItemCategory) == 0x000608, "Member 'UUI_Tooltip_ItemID_Default_C::Txt_ItemCategory' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, _ItemCategory) == 0x000610, "Member 'UUI_Tooltip_ItemID_Default_C::_ItemCategory' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, _ItemID) == 0x000618, "Member 'UUI_Tooltip_ItemID_Default_C::_ItemID' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, _ShowItemCategory) == 0x000628, "Member 'UUI_Tooltip_ItemID_Default_C::_ShowItemCategory' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, _ShowGrade) == 0x000629, "Member 'UUI_Tooltip_ItemID_Default_C::_ShowGrade' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, _ItemEntry) == 0x000630, "Member 'UUI_Tooltip_ItemID_Default_C::_ItemEntry' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_ItemID_Default_C, _CanBuyFast) == 0x000760, "Member 'UUI_Tooltip_ItemID_Default_C::_CanBuyFast' has a wrong offset!");

}

