#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_ChatBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ChatBox.UI_ChatBox_C
// 0x0020 (0x0698 - 0x0678)
class UUI_ChatBox_C final : public UUI_ChatBox
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0678(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_KeyIcon_C*                        Ctrl_KeyIcon_1;                                    // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         H_Radio;                                           // 0x0688(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyMapping_C*                       UI_KeyMapping;                                     // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BndEvt__UI_ChatBox_ChatInputBox_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__UI_ChatBox_ChatInputBox_K2Node_ComponentBoundEvent_2_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void Construct();
	void ExecuteUbergraph_UI_ChatBox(int32 EntryPoint);
	ESlateVisibility Get_H_Radio_Visibility();
	bool OnSynchronizeProperties();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ChatBox_C">();
	}
	static class UUI_ChatBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ChatBox_C>();
	}
};
static_assert(alignof(UUI_ChatBox_C) == 0x000008, "Wrong alignment on UUI_ChatBox_C");
static_assert(sizeof(UUI_ChatBox_C) == 0x000698, "Wrong size on UUI_ChatBox_C");
static_assert(offsetof(UUI_ChatBox_C, UberGraphFrame) == 0x000678, "Member 'UUI_ChatBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ChatBox_C, Ctrl_KeyIcon_1) == 0x000680, "Member 'UUI_ChatBox_C::Ctrl_KeyIcon_1' has a wrong offset!");
static_assert(offsetof(UUI_ChatBox_C, H_Radio) == 0x000688, "Member 'UUI_ChatBox_C::H_Radio' has a wrong offset!");
static_assert(offsetof(UUI_ChatBox_C, UI_KeyMapping) == 0x000690, "Member 'UUI_ChatBox_C::UI_KeyMapping' has a wrong offset!");

}

