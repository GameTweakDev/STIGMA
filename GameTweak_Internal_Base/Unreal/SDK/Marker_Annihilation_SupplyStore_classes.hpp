#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Marker_Annihilation_SupplyStore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Minimap_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Marker_Annihilation_SupplyStore.Marker_Annihilation_SupplyStore_C
// 0x0030 (0x0558 - 0x0528)
class UMarker_Annihilation_SupplyStore_C final : public UMinimapMarker
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0528(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 IMG_CircleBackground;                              // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_CircleProgress;                                // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_SupplyStore;                                   // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ASupplyStore*                           SupplyStore;                                       // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CircleProgressMaterial;                            // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void DriveProgress();
	void ExecuteUbergraph_Marker_Annihilation_SupplyStore(int32 EntryPoint);
	void InitializeMaterial();
	bool OnBindActor(class AActor* _Actor);
	bool OnTick(const struct FGeometry& MyGeometry, float _delta);

	bool IsRotatingEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Marker_Annihilation_SupplyStore_C">();
	}
	static class UMarker_Annihilation_SupplyStore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMarker_Annihilation_SupplyStore_C>();
	}
};
static_assert(alignof(UMarker_Annihilation_SupplyStore_C) == 0x000008, "Wrong alignment on UMarker_Annihilation_SupplyStore_C");
static_assert(sizeof(UMarker_Annihilation_SupplyStore_C) == 0x000558, "Wrong size on UMarker_Annihilation_SupplyStore_C");
static_assert(offsetof(UMarker_Annihilation_SupplyStore_C, UberGraphFrame) == 0x000528, "Member 'UMarker_Annihilation_SupplyStore_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMarker_Annihilation_SupplyStore_C, IMG_CircleBackground) == 0x000530, "Member 'UMarker_Annihilation_SupplyStore_C::IMG_CircleBackground' has a wrong offset!");
static_assert(offsetof(UMarker_Annihilation_SupplyStore_C, Img_CircleProgress) == 0x000538, "Member 'UMarker_Annihilation_SupplyStore_C::Img_CircleProgress' has a wrong offset!");
static_assert(offsetof(UMarker_Annihilation_SupplyStore_C, IMG_SupplyStore) == 0x000540, "Member 'UMarker_Annihilation_SupplyStore_C::IMG_SupplyStore' has a wrong offset!");
static_assert(offsetof(UMarker_Annihilation_SupplyStore_C, SupplyStore) == 0x000548, "Member 'UMarker_Annihilation_SupplyStore_C::SupplyStore' has a wrong offset!");
static_assert(offsetof(UMarker_Annihilation_SupplyStore_C, CircleProgressMaterial) == 0x000550, "Member 'UMarker_Annihilation_SupplyStore_C::CircleProgressMaterial' has a wrong offset!");

}

