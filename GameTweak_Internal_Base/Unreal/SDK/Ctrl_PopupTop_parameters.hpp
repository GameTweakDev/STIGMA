#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_PopupTop

#include "Basic.hpp"

#include "PopupTopEntry_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.ExecuteUbergraph_Ctrl_PopupTop
// 0x0004 (0x0004 - 0x0000)
struct Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop) == 0x000004, "Wrong alignment on Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop");
static_assert(sizeof(Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop) == 0x000004, "Wrong size on Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop");
static_assert(offsetof(Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop, EntryPoint) == 0x000000, "Member 'Ctrl_PopupTop_C_ExecuteUbergraph_Ctrl_PopupTop::EntryPoint' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.OnClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_PopupTop_C_OnClick__DelegateSignature final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_OnClick__DelegateSignature) == 0x000004, "Wrong alignment on Ctrl_PopupTop_C_OnClick__DelegateSignature");
static_assert(sizeof(Ctrl_PopupTop_C_OnClick__DelegateSignature) == 0x000008, "Wrong size on Ctrl_PopupTop_C_OnClick__DelegateSignature");
static_assert(offsetof(Ctrl_PopupTop_C_OnClick__DelegateSignature, _id) == 0x000000, "Member 'Ctrl_PopupTop_C_OnClick__DelegateSignature::_id' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.OnClickEntry
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_PopupTop_C_OnClickEntry final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_OnClickEntry) == 0x000004, "Wrong alignment on Ctrl_PopupTop_C_OnClickEntry");
static_assert(sizeof(Ctrl_PopupTop_C_OnClickEntry) == 0x000008, "Wrong size on Ctrl_PopupTop_C_OnClickEntry");
static_assert(offsetof(Ctrl_PopupTop_C_OnClickEntry, _id) == 0x000000, "Member 'Ctrl_PopupTop_C_OnClickEntry::_id' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_PopupTop_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_PopupTop_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_PopupTop_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_PopupTop_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_PopupTop_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_PopupTop_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.Set Selected
// 0x000C (0x000C - 0x0000)
struct Ctrl_PopupTop_C_Set_Selected final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Idx;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_Set_Selected) == 0x000004, "Wrong alignment on Ctrl_PopupTop_C_Set_Selected");
static_assert(sizeof(Ctrl_PopupTop_C_Set_Selected) == 0x00000C, "Wrong size on Ctrl_PopupTop_C_Set_Selected");
static_assert(offsetof(Ctrl_PopupTop_C_Set_Selected, _id) == 0x000000, "Member 'Ctrl_PopupTop_C_Set_Selected::_id' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_Set_Selected, Idx) == 0x000008, "Member 'Ctrl_PopupTop_C_Set_Selected::Idx' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.SetMenuEntries
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_PopupTop_C_SetMenuEntries final
{
public:
	TArray<struct FPopupTopEntry>                 _entries;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ctrl_PopupTop_C_SetMenuEntries) == 0x000008, "Wrong alignment on Ctrl_PopupTop_C_SetMenuEntries");
static_assert(sizeof(Ctrl_PopupTop_C_SetMenuEntries) == 0x000010, "Wrong size on Ctrl_PopupTop_C_SetMenuEntries");
static_assert(offsetof(Ctrl_PopupTop_C_SetMenuEntries, _entries) == 0x000000, "Member 'Ctrl_PopupTop_C_SetMenuEntries::_entries' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.UpdateMargin
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_PopupTop_C_UpdateMargin final
{
public:
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_As________;                     // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_UpdateMargin) == 0x000008, "Wrong alignment on Ctrl_PopupTop_C_UpdateMargin");
static_assert(sizeof(Ctrl_PopupTop_C_UpdateMargin) == 0x000010, "Wrong size on Ctrl_PopupTop_C_UpdateMargin");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMargin, K2Node_DynamicCast_As________) == 0x000000, "Member 'Ctrl_PopupTop_C_UpdateMargin::K2Node_DynamicCast_As________' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMargin, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'Ctrl_PopupTop_C_UpdateMargin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.UpdateMenuEntries
// 0x00B8 (0x00B8 - 0x0000)
struct Ctrl_PopupTop_C_UpdateMenuEntries final
{
public:
	class UHorizontalBoxSlot*                     Hslot;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_PopupTopButton_C*                 Ctrl;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPopupTopEntry                         Entry;                                             // 0x0010(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A5[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName _id)>              K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A6[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_PopupTopButton_C*                 CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A7[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPopupTopEntry                         CallFunc_Array_Get_Item;                           // 0x0078(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A8[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A9[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_PopupTopButton_C*                 CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_UpdateMenuEntries) == 0x000008, "Wrong alignment on Ctrl_PopupTop_C_UpdateMenuEntries");
static_assert(sizeof(Ctrl_PopupTop_C_UpdateMenuEntries) == 0x0000B8, "Wrong size on Ctrl_PopupTop_C_UpdateMenuEntries");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Hslot) == 0x000000, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Hslot' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Ctrl) == 0x000008, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Ctrl' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Entry) == 0x000010, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Entry' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000060, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Create_ReturnValue) == 0x000068, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Array_Get_Item) == 0x000078, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateMenuEntries, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'Ctrl_PopupTop_C_UpdateMenuEntries::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.UpdateSelection
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_PopupTop_C_UpdateSelection final
{
public:
	class UCtrl_PopupTopButton_C*                 Ctrl;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetID__id;                                // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_PopupTopButton_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_UpdateSelection) == 0x000008, "Wrong alignment on Ctrl_PopupTop_C_UpdateSelection");
static_assert(sizeof(Ctrl_PopupTop_C_UpdateSelection) == 0x000030, "Wrong size on Ctrl_PopupTop_C_UpdateSelection");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, Ctrl) == 0x000000, "Member 'Ctrl_PopupTop_C_UpdateSelection::Ctrl' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ctrl_PopupTop_C_UpdateSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Ctrl_PopupTop_C_UpdateSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ctrl_PopupTop_C_UpdateSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, CallFunc_GetID__id) == 0x000014, "Member 'Ctrl_PopupTop_C_UpdateSelection::CallFunc_GetID__id' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00001C, "Member 'Ctrl_PopupTop_C_UpdateSelection::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ctrl_PopupTop_C_UpdateSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ctrl_PopupTop_C_UpdateSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_UpdateSelection, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Ctrl_PopupTop_C_UpdateSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ctrl_PopupTop.Ctrl_PopupTop_C.FindByID
// 0x0050 (0x0050 - 0x0000)
struct Ctrl_PopupTop_C_FindByID final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _idx;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ID;                                                // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPopupTopEntry                         CallFunc_Array_Get_Item;                           // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTop_C_FindByID) == 0x000008, "Wrong alignment on Ctrl_PopupTop_C_FindByID");
static_assert(sizeof(Ctrl_PopupTop_C_FindByID) == 0x000050, "Wrong size on Ctrl_PopupTop_C_FindByID");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, _id) == 0x000000, "Member 'Ctrl_PopupTop_C_FindByID::_id' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, _idx) == 0x000008, "Member 'Ctrl_PopupTop_C_FindByID::_idx' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, ID) == 0x00000C, "Member 'Ctrl_PopupTop_C_FindByID::ID' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Ctrl_PopupTop_C_FindByID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Ctrl_PopupTop_C_FindByID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Ctrl_PopupTop_C_FindByID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Ctrl_PopupTop_C_FindByID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ctrl_PopupTop_C_FindByID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Ctrl_PopupTop_C_FindByID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTop_C_FindByID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000049, "Member 'Ctrl_PopupTop_C_FindByID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

