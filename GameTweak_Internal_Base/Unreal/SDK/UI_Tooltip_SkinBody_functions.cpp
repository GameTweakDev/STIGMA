#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_SkinBody

#include "Basic.hpp"

#include "UI_Tooltip_SkinBody_classes.hpp"
#include "UI_Tooltip_SkinBody_parameters.hpp"


namespace SDK
{

// Function UI_Tooltip_SkinBody.UI_Tooltip_SkinBody_C.OnShowTooltip
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Tooltip_SkinBody_C::OnShowTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_SkinBody_C", "OnShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Tooltip_SkinBody.UI_Tooltip_SkinBody_C.SetArmorStat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FDisplayStat>             _display_stats                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Tooltip_SkinBody_C::SetArmorStat(TArray<struct FDisplayStat>& _display_stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_SkinBody_C", "SetArmorStat");

	Params::UI_Tooltip_SkinBody_C_SetArmorStat Parms{};

	Parms._display_stats = std::move(_display_stats);

	UObject::ProcessEvent(Func, &Parms);

	_display_stats = std::move(Parms._display_stats);
}


// Function UI_Tooltip_SkinBody.UI_Tooltip_SkinBody_C.SetBodyArmor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EArmorType                              _armor_type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Tooltip_SkinBody_C::SetBodyArmor(EArmorType _armor_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_SkinBody_C", "SetBodyArmor");

	Params::UI_Tooltip_SkinBody_C_SetBodyArmor Parms{};

	Parms._armor_type = _armor_type;

	UObject::ProcessEvent(Func, &Parms);
}

}

