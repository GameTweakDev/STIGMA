#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_WeaponChange

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "BPGLib_structs.hpp"


namespace SDK::Params
{

// Function Popup_WeaponChange.Popup_WeaponChange_C.BuildMasterList
// 0x0A20 (0x0A20 - 0x0000)
struct Popup_WeaponChange_C_BuildMasterList final
{
public:
	class UItem_Character_CheckBox_C*             Item;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FCharacterDefine>               CallFunc_GetAllCharacterDefineSortedByFightingStyle_ReturnValue; // 0x0018(0x0010)(ReferenceParm)
	struct FCharacterDefine                       CallFunc_Array_Get_Item;                           // 0x0028(0x09E0)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x0A0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCharaType_ReturnValue;                 // 0x0A0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405D[0x1];                                     // 0x0A0F(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0A10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UItem_Character_CheckBox_C*             CallFunc_Create_ReturnValue;                       // 0x0A18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_BuildMasterList) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_BuildMasterList");
static_assert(sizeof(Popup_WeaponChange_C_BuildMasterList) == 0x000A20, "Wrong size on Popup_WeaponChange_C_BuildMasterList");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, Item) == 0x000000, "Member 'Popup_WeaponChange_C_BuildMasterList::Item' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Popup_WeaponChange_C_BuildMasterList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Popup_WeaponChange_C_BuildMasterList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_GetAllCharacterDefineSortedByFightingStyle_ReturnValue) == 0x000018, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_GetAllCharacterDefineSortedByFightingStyle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_Array_Get_Item) == 0x000028, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_Array_Length_ReturnValue) == 0x000A08, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_Less_IntInt_ReturnValue) == 0x000A0C, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_HasItem_ReturnValue) == 0x000A0D, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_GetCharaType_ReturnValue) == 0x000A0E, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_GetCharaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_AddChild_ReturnValue) == 0x000A10, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BuildMasterList, CallFunc_Create_ReturnValue) == 0x000A18, "Member 'Popup_WeaponChange_C_BuildMasterList::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'Popup_WeaponChange_C_BndEvt__Popup_WeaponChange_Btn_Confirm_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.Ack_OnUpdateCharaSetting
// 0x0050 (0x0050 - 0x0000)
struct Popup_WeaponChange_C_Ack_OnUpdateCharaSetting final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FApiResult                             _ack;                                              // 0x0004(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_405F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FNetReply                              ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm)
	struct FNetReply                              CallFunc_NetReplyFromCode_ReturnValue;             // 0x0030(0x0020)()
};
static_assert(alignof(Popup_WeaponChange_C_Ack_OnUpdateCharaSetting) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_Ack_OnUpdateCharaSetting");
static_assert(sizeof(Popup_WeaponChange_C_Ack_OnUpdateCharaSetting) == 0x000050, "Wrong size on Popup_WeaponChange_C_Ack_OnUpdateCharaSetting");
static_assert(offsetof(Popup_WeaponChange_C_Ack_OnUpdateCharaSetting, _rcode) == 0x000000, "Member 'Popup_WeaponChange_C_Ack_OnUpdateCharaSetting::_rcode' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Ack_OnUpdateCharaSetting, _ack) == 0x000004, "Member 'Popup_WeaponChange_C_Ack_OnUpdateCharaSetting::_ack' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Ack_OnUpdateCharaSetting, ReturnValue) == 0x000010, "Member 'Popup_WeaponChange_C_Ack_OnUpdateCharaSetting::ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Ack_OnUpdateCharaSetting, CallFunc_NetReplyFromCode_ReturnValue) == 0x000030, "Member 'Popup_WeaponChange_C_Ack_OnUpdateCharaSetting::CallFunc_NetReplyFromCode_ReturnValue' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.SetMasterEquips
// 0x00B0 (0x00B0 - 0x0000)
struct Popup_WeaponChange_C_SetMasterEquips final
{
public:
	bool                                          Has_changed;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4060[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UGunObject*                             Changed_gun;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4061[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunPreset                             CallFunc_GetGunPreset_ReturnValue;                 // 0x0020(0x0010)(ConstParm, HasGetValueTypeHash)
	class ULocalPlayerContext*                    CallFunc_GetLocalPlayerContext_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0038(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4062[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4063[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<ECharaType>                            CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	struct FUserID                                CallFunc_GetUserID_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_Array_Get_Item;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4064[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBuffCalculatedResultStat_ReturnValue;  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4065[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class UGunObject*                             CallFunc_GetOptimalGunByControlPower_ReturnValue;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_SetMasterEquips) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_SetMasterEquips");
static_assert(sizeof(Popup_WeaponChange_C_SetMasterEquips) == 0x0000B0, "Wrong size on Popup_WeaponChange_C_SetMasterEquips");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, Has_changed) == 0x000000, "Member 'Popup_WeaponChange_C_SetMasterEquips::Has_changed' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, Changed_gun) == 0x000008, "Member 'Popup_WeaponChange_C_SetMasterEquips::Changed_gun' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Popup_WeaponChange_C_SetMasterEquips::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Popup_WeaponChange_C_SetMasterEquips::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_GetGunPreset_ReturnValue) == 0x000020, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_GetGunPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_GetLocalPlayerContext_ReturnValue) == 0x000030, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_GetLocalPlayerContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_MakeLiteralText_ReturnValue) == 0x000038, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_AddToastMessage_ReturnValue) == 0x000060, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'Popup_WeaponChange_C_SetMasterEquips::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_GetUserID_ReturnValue) == 0x000088, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_GetUserID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Array_Get_Item) == 0x000090, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_GetBuffCalculatedResultStat_ReturnValue) == 0x000098, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_GetBuffCalculatedResultStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_GetOptimalGunByControlPower_ReturnValue) == 0x0000A0, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_GetOptimalGunByControlPower_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Map_Find_Value) == 0x0000A8, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Map_Find_ReturnValue) == 0x0000A9, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Map_Find_Value_1) == 0x0000AA, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_Map_Find_ReturnValue_1) == 0x0000AB, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_SetMasterEquips, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000AC, "Member 'Popup_WeaponChange_C_SetMasterEquips::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.OnUpdateTooltip
// 0x00B0 (0x00B0 - 0x0000)
struct Popup_WeaponChange_C_OnUpdateTooltip final
{
public:
	class UCtrl_Character_CheckBox*               _item;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTooltipKeyInfo                        Tooltip_key_info;                                  // 0x0008(0x0030)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4066[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip_Character_C*                K2Node_DynamicCast_AsUI_Tooltip_Character;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4067[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo;                  // 0x0050(0x0030)()
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo_1;                // 0x0080(0x0030)()
};
static_assert(alignof(Popup_WeaponChange_C_OnUpdateTooltip) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_OnUpdateTooltip");
static_assert(sizeof(Popup_WeaponChange_C_OnUpdateTooltip) == 0x0000B0, "Wrong size on Popup_WeaponChange_C_OnUpdateTooltip");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, _item) == 0x000000, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::_item' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, Tooltip_key_info) == 0x000008, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::Tooltip_key_info' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, K2Node_DynamicCast_AsUI_Tooltip_Character) == 0x000040, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::K2Node_DynamicCast_AsUI_Tooltip_Character' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, K2Node_MakeStruct_TooltipKeyInfo) == 0x000050, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::K2Node_MakeStruct_TooltipKeyInfo' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnUpdateTooltip, K2Node_MakeStruct_TooltipKeyInfo_1) == 0x000080, "Member 'Popup_WeaponChange_C_OnUpdateTooltip::K2Node_MakeStruct_TooltipKeyInfo_1' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.OnSynchronizeProperties
// 0x0020 (0x0020 - 0x0000)
struct Popup_WeaponChange_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4068[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(Popup_WeaponChange_C_OnSynchronizeProperties) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_OnSynchronizeProperties");
static_assert(sizeof(Popup_WeaponChange_C_OnSynchronizeProperties) == 0x000020, "Wrong size on Popup_WeaponChange_C_OnSynchronizeProperties");
static_assert(offsetof(Popup_WeaponChange_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Popup_WeaponChange_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSynchronizeProperties, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'Popup_WeaponChange_C_OnSynchronizeProperties::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.OnSelect_ItemMaster2
// 0x0038 (0x0038 - 0x0000)
struct Popup_WeaponChange_C_OnSelect_ItemMaster2 final
{
public:
	bool                                          _is_selected;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    _chara_type;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4069[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         _selected_master_idx;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItem_Character_CheckBox_C*             CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406A[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_OnSelect_ItemMaster2) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_OnSelect_ItemMaster2");
static_assert(sizeof(Popup_WeaponChange_C_OnSelect_ItemMaster2) == 0x000038, "Wrong size on Popup_WeaponChange_C_OnSelect_ItemMaster2");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, _is_selected) == 0x000000, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::_is_selected' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, _chara_type) == 0x000001, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::_chara_type' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, _selected_master_idx) == 0x000004, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::_selected_master_idx' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, CallFunc_Map_Find_Value) == 0x000008, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_OnSelect_ItemMaster2, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Popup_WeaponChange_C_OnSelect_ItemMaster2::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.OnCreatedMasterItemTooltip
// 0x0008 (0x0008 - 0x0000)
struct Popup_WeaponChange_C_OnCreatedMasterItemTooltip final
{
public:
	class UItem_Character_CheckBox_C*             _item;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_OnCreatedMasterItemTooltip) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_OnCreatedMasterItemTooltip");
static_assert(sizeof(Popup_WeaponChange_C_OnCreatedMasterItemTooltip) == 0x000008, "Wrong size on Popup_WeaponChange_C_OnCreatedMasterItemTooltip");
static_assert(offsetof(Popup_WeaponChange_C_OnCreatedMasterItemTooltip, _item) == 0x000000, "Member 'Popup_WeaponChange_C_OnCreatedMasterItemTooltip::_item' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.InitMasterItem
// 0x0070 (0x0070 - 0x0000)
struct Popup_WeaponChange_C_InitMasterItem final
{
public:
	class UItem_Character_CheckBox_C*             _item;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    _chara_type;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void(bool _is_selected, ECharaType _chara_type, int32 _selected_master_idx)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UItem_Character_CheckBox_C* _item)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool _is_select, class UCtrl_Character_CheckBox* _item)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406C[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    CallFunc_GetLocalPlayerContext_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGunPreset                             CallFunc_GetGunPreset_ReturnValue;                 // 0x0048(0x0010)(ConstParm, HasGetValueTypeHash)
	struct FGunPreset                             CallFunc_GetGunPreset_ReturnValue_1;               // 0x0058(0x0010)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsEqualGunPreset_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_InitMasterItem) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_InitMasterItem");
static_assert(sizeof(Popup_WeaponChange_C_InitMasterItem) == 0x000070, "Wrong size on Popup_WeaponChange_C_InitMasterItem");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, _item) == 0x000000, "Member 'Popup_WeaponChange_C_InitMasterItem::_item' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, _chara_type) == 0x000008, "Member 'Popup_WeaponChange_C_InitMasterItem::_chara_type' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Popup_WeaponChange_C_InitMasterItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'Popup_WeaponChange_C_InitMasterItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'Popup_WeaponChange_C_InitMasterItem::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, CallFunc_GetLocalPlayerContext_ReturnValue) == 0x000040, "Member 'Popup_WeaponChange_C_InitMasterItem::CallFunc_GetLocalPlayerContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, CallFunc_GetGunPreset_ReturnValue) == 0x000048, "Member 'Popup_WeaponChange_C_InitMasterItem::CallFunc_GetGunPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, CallFunc_GetGunPreset_ReturnValue_1) == 0x000058, "Member 'Popup_WeaponChange_C_InitMasterItem::CallFunc_GetGunPreset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_InitMasterItem, CallFunc_IsEqualGunPreset_ReturnValue) == 0x000068, "Member 'Popup_WeaponChange_C_InitMasterItem::CallFunc_IsEqualGunPreset_ReturnValue' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.ExecuteUbergraph_Popup_WeaponChange
// 0x0018 (0x0018 - 0x0000)
struct Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange");
static_assert(sizeof(Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange) == 0x000018, "Wrong size on Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange");
static_assert(offsetof(Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange, EntryPoint) == 0x000000, "Member 'Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange::EntryPoint' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'Popup_WeaponChange_C_ExecuteUbergraph_Popup_WeaponChange::K2Node_ComponentBoundEvent__select' has a wrong offset!");

// Function Popup_WeaponChange.Popup_WeaponChange_C.Delegate_IsSelectedMaster
// 0x0678 (0x0678 - 0x0000)
struct Popup_WeaponChange_C_Delegate_IsSelectedMaster final
{
public:
	bool                                          _is_select;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_Character_CheckBox*               _item;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Gun_preset_name;                                   // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   Gun_display_name;                                  // 0x0030(0x0018)(Edit, BlueprintVisible)
	bool                                          Result_is_select;                                  // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4070[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4071[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0180(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4072[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0200(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue_1;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4073[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0268(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue_2;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4074[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetPresetName_ReturnValue;                // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0308(0x0018)()
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4075[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunEntry_Main                         CallFunc_GetGunMainEntry_ReturnValue;              // 0x0328(0x0350)(ConstParm)
};
static_assert(alignof(Popup_WeaponChange_C_Delegate_IsSelectedMaster) == 0x000008, "Wrong alignment on Popup_WeaponChange_C_Delegate_IsSelectedMaster");
static_assert(sizeof(Popup_WeaponChange_C_Delegate_IsSelectedMaster) == 0x000678, "Wrong size on Popup_WeaponChange_C_Delegate_IsSelectedMaster");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, _is_select) == 0x000000, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::_is_select' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, _item) == 0x000008, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::_item' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, ReturnValue) == 0x000010, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, Gun_preset_name) == 0x000018, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::Gun_preset_name' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, Gun_display_name) == 0x000030, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::Gun_display_name' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, Result_is_select) == 0x000048, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::Result_is_select' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeArray_Array) == 0x0000F8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Format_ReturnValue) == 0x000158, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Conv_TextToString_ReturnValue) == 0x000170, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeStruct_FormatArgumentData_3) == 0x000180, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_AddToastMessage_ReturnValue) == 0x0001D0, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeArray_Array_1) == 0x0001D8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Format_ReturnValue_1) == 0x0001E8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeStruct_FormatArgumentData_4) == 0x000200, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000250, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_AddToastMessage_ReturnValue_1) == 0x000260, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_AddToastMessage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeStruct_FormatArgumentData_5) == 0x000268, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, K2Node_MakeArray_Array_2) == 0x0002B8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Format_ReturnValue_2) == 0x0002C8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0002E0, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_AddToastMessage_ReturnValue_2) == 0x0002F0, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_AddToastMessage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_IsValid_ReturnValue_1) == 0x0002F1, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_GetPresetName_ReturnValue) == 0x0002F8, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_GetPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_Conv_StringToText_ReturnValue) == 0x000308, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_GetGunType_ReturnValue) == 0x000320, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_WeaponChange_C_Delegate_IsSelectedMaster, CallFunc_GetGunMainEntry_ReturnValue) == 0x000328, "Member 'Popup_WeaponChange_C_Delegate_IsSelectedMaster::CallFunc_GetGunMainEntry_ReturnValue' has a wrong offset!");

}

