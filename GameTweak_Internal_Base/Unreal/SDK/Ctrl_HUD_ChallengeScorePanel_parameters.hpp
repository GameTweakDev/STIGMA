#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HUD_ChallengeScorePanel

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel
// 0x0040 (0x0040 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel) == 0x000004, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel) == 0x000040, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel, EntryPoint) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel, K2Node_Event_MyGeometry) == 0x000004, "Member 'Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Ctrl_HUD_ChallengeScorePanel_C_ExecuteUbergraph_Ctrl_HUD_ChallengeScorePanel::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.Get_TXT_Round_Text_0
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetRoundText_Text;                        // 0x0018(0x0018)()
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0) == 0x000030, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0, ReturnValue) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0, CallFunc_GetRoundText_Text) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Round_Text_0::CallFunc_GetRoundText_Text' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.Get_TXT_Time_Text_0
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetTimeText_Text;                         // 0x0018(0x0018)()
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0) == 0x000030, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0, ReturnValue) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0, CallFunc_GetTimeText_Text) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_Get_TXT_Time_Text_0::CallFunc_GetTimeText_Text' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.GetTimeText
// 0x0158 (0x0158 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_GetTimeText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   TimeText;                                          // 0x0018(0x0018)(Edit, BlueprintVisible)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281A[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattleGameStateBase*                   K2Node_DynamicCast_AsBattle_Game_State_Base;       // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleModePhase                              CallFunc_GetBattlePhase_ReturnValue;               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281B[0x2];                                     // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetBattlePhaseRemainSec_ReturnValue;      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_GetTimeText");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText) == 0x000158, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_GetTimeText");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, Text) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::Text' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, TimeText) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::TimeText' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_Percent_IntInt_ReturnValue) == 0x000030, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_Divide_IntInt_ReturnValue) == 0x000034, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000050, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, K2Node_MakeArray_Array) == 0x000108, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_Format_ReturnValue) == 0x000120, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_GetGameState_ReturnValue) == 0x000138, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, K2Node_DynamicCast_AsBattle_Game_State_Base) == 0x000140, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::K2Node_DynamicCast_AsBattle_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_GetBattlePhase_ReturnValue) == 0x000149, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_GetBattlePhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, CallFunc_GetBattlePhaseRemainSec_ReturnValue) == 0x00014C, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::CallFunc_GetBattlePhaseRemainSec_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetTimeText, K2Node_SwitchEnum_CmpSuccess) == 0x000150, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetTimeText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_Tick) == 0x000004, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_Tick");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_Tick) == 0x00003C, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_Tick");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_HUD_ChallengeScorePanel_C_Tick::InDeltaTime' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.UdpateVariable
// 0x0080 (0x0080 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable final
{
public:
	EBattleModePhase                              battle_phase;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AChallenge_GameState*                   Game_state;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Curr_index;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleModePhase                              CallFunc_GetBattlePhase_ReturnValue;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281D[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AChallenge_GameState*                   K2Node_DynamicCast_AsChallenge_Game_State;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AChallenge_GameMode*                    K2Node_DynamicCast_AsChallenge_Game_Mode;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281F[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetCurrentWaveIndex_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2820[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FChallengeWaves                        CallFunc_GetCurrentWaves_ReturnValue;              // 0x0068(0x0010)()
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable) == 0x000080, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, battle_phase) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::battle_phase' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, Game_state) == 0x000008, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::Game_state' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, Curr_index) == 0x000010, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::Curr_index' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, K2Node_SwitchEnum_CmpSuccess_1) == 0x000015, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_GetBattlePhase_ReturnValue) == 0x000016, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_GetBattlePhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, K2Node_DynamicCast_AsChallenge_Game_State) == 0x000028, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::K2Node_DynamicCast_AsChallenge_Game_State' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000040, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_GetGameMode_ReturnValue) == 0x000048, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, K2Node_DynamicCast_AsChallenge_Game_Mode) == 0x000050, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::K2Node_DynamicCast_AsChallenge_Game_Mode' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_GetCurrentWaveIndex_ReturnValue) == 0x00005C, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_GetCurrentWaveIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000061, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_GetCurrentWaves_ReturnValue) == 0x000068, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_GetCurrentWaves_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_Array_IsEmpty_ReturnValue) == 0x000078, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable, CallFunc_BooleanAND_ReturnValue_1) == 0x00007A, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UdpateVariable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.UpdateNextWaves
// 0x00C0 (0x00C0 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2821[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2822[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_HUD_PlayerSlot_C*                 CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2823[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AChallenge_GameMode*                    K2Node_DynamicCast_AsChallenge_Game_Mode;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2824[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FChallengeWaves                        CallFunc_GetNextWaves_ReturnValue;                 // 0x0050(0x0010)()
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2825[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FChallengeWave                         CallFunc_Array_Get_Item;                           // 0x0070(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2826[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2827[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves) == 0x0000C0, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Create_ReturnValue) == 0x000028, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_GetGameMode_ReturnValue) == 0x000038, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, K2Node_DynamicCast_AsChallenge_Game_Mode) == 0x000040, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::K2Node_DynamicCast_AsChallenge_Game_Mode' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_GetNextWaves_ReturnValue) == 0x000050, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_GetNextWaves_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000060, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Array_Get_Item) == 0x000070, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, K2Node_DynamicCast_AsBattle_Player_State) == 0x0000B0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B9, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdateNextWaves::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.UpdatePlayer
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer final
{
public:
	TArray<class APlayerState*>                   Player_array;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABattlePlayerState*                     Player_state;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer) == 0x000018, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer, Player_array) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer::Player_array' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer, Player_state) == 0x000010, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer::Player_state' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.UpdatePlayer to Team Panel
// 0x00E8 (0x00E8 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2828[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerState*                     My_player_state;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_blue_team;                                      // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2829[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerState*                     Player_state;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     Horizontal_box_slot;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCtrl_HUD_PlayerSlot_C*                 CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AChallenge_GameMode*                    K2Node_DynamicCast_AsChallenge_Game_Mode;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282B[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FChallengeWaves                        CallFunc_GetCurrentWaves_ReturnValue;              // 0x0068(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FChallengeWave                         CallFunc_Array_Get_Item;                           // 0x0080(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282D[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282E[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsABot_ReturnValue;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282F[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2830[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x00E0(0x0008)(NoDestructor)
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel) == 0x0000E8, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, NewLocalVar_0) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, My_player_state) == 0x000008, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::My_player_state' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Array_index) == 0x000010, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Array_index' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Is_blue_team) == 0x000014, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Is_blue_team' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Player_state) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Player_state' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Horizontal_box_slot) == 0x000020, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Horizontal_box_slot' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Create_ReturnValue) == 0x000040, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_GetGameMode_ReturnValue) == 0x000048, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, K2Node_DynamicCast_AsChallenge_Game_Mode) == 0x000058, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::K2Node_DynamicCast_AsChallenge_Game_Mode' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_GetCurrentWaves_ReturnValue) == 0x000068, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_GetCurrentWaves_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Array_Get_Item) == 0x000080, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, K2Node_DynamicCast_AsBattle_Player_State) == 0x0000B8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_IsABot_ReturnValue) == 0x0000C8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_IsABot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C9, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_IsValid_ReturnValue_1) == 0x0000CA, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_BooleanAND_ReturnValue) == 0x0000CB, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000D8, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel, K2Node_MakeStruct_SlateChildSize) == 0x0000E0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_UpdatePlayer_to_Team_Panel::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");

// Function Ctrl_HUD_ChallengeScorePanel.Ctrl_HUD_ChallengeScorePanel_C.GetRoundText
// 0x00C8 (0x00C8 - 0x0000)
struct Ctrl_HUD_ChallengeScorePanel_C_GetRoundText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   Round_text;                                        // 0x0018(0x0018)(Edit, BlueprintVisible)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AChallenge_GameState*                   K2Node_DynamicCast_AsChallenge_Game_State;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2831[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetCurrentRound_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
};
static_assert(alignof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText) == 0x000008, "Wrong alignment on Ctrl_HUD_ChallengeScorePanel_C_GetRoundText");
static_assert(sizeof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText) == 0x0000C8, "Wrong size on Ctrl_HUD_ChallengeScorePanel_C_GetRoundText");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, Text) == 0x000000, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::Text' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, Round_text) == 0x000018, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::Round_text' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, K2Node_DynamicCast_AsChallenge_Game_State) == 0x000038, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::K2Node_DynamicCast_AsChallenge_Game_State' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, CallFunc_GetCurrentRound_ReturnValue) == 0x000044, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::CallFunc_GetCurrentRound_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000048, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, K2Node_MakeArray_Array) == 0x0000A0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_ChallengeScorePanel_C_GetRoundText, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'Ctrl_HUD_ChallengeScorePanel_C_GetRoundText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

