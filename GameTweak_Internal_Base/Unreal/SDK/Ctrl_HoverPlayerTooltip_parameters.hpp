#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HoverPlayerTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.ExecuteUbergraph_Ctrl_HoverPlayerTooltip
// 0x0004 (0x0004 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip) == 0x000004, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip) == 0x000004, "Wrong size on Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip, EntryPoint) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_ExecuteUbergraph_Ctrl_HoverPlayerTooltip::EntryPoint' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.SetLevel
// 0x0004 (0x0004 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_SetLevel final
{
public:
	int32                                         _level;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_SetLevel) == 0x000004, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_SetLevel");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_SetLevel) == 0x000004, "Wrong size on Ctrl_HoverPlayerTooltip_C_SetLevel");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_SetLevel, _level) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_SetLevel::_level' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.SetMenuEntries
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_SetMenuEntries final
{
public:
	TArray<struct FHoverMenuEntry>                _entries;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_SetMenuEntries) == 0x000008, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_SetMenuEntries");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_SetMenuEntries) == 0x000010, "Wrong size on Ctrl_HoverPlayerTooltip_C_SetMenuEntries");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_SetMenuEntries, _entries) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_SetMenuEntries::_entries' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.SetMenuVisibility
// 0x000C (0x000C - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_SetMenuVisibility final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _enable;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_SetMenuVisibility) == 0x000004, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_SetMenuVisibility");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_SetMenuVisibility) == 0x00000C, "Wrong size on Ctrl_HoverPlayerTooltip_C_SetMenuVisibility");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_SetMenuVisibility, _id) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_SetMenuVisibility::_id' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_SetMenuVisibility, _enable) == 0x000008, "Member 'Ctrl_HoverPlayerTooltip_C_SetMenuVisibility::_enable' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.SetNickname
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_SetNickname final
{
public:
	struct FUserName                              _Name;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_SetNickname) == 0x000008, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_SetNickname");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_SetNickname) == 0x000018, "Wrong size on Ctrl_HoverPlayerTooltip_C_SetNickname");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_SetNickname, _Name) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_SetNickname::_Name' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.SetTier
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_SetTier final
{
public:
	ETier                                         _tier;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_SetTier) == 0x000001, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_SetTier");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_SetTier) == 0x000001, "Wrong size on Ctrl_HoverPlayerTooltip_C_SetTier");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_SetTier, _tier) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_SetTier::_tier' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.UpdateLevel
// 0x0080 (0x0080 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_UpdateLevel final
{
public:
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_UpdateLevel) == 0x000008, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_UpdateLevel");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_UpdateLevel) == 0x000080, "Wrong size on Ctrl_HoverPlayerTooltip_C_UpdateLevel");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateLevel, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateLevel::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateLevel, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateLevel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateLevel, K2Node_MakeArray_Array) == 0x000058, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateLevel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateLevel, CallFunc_Format_ReturnValue) == 0x000068, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateLevel::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.UpdateNickname
// 0x00B0 (0x00B0 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_UpdateNickname final
{
public:
	int32                                         CallFunc_GetTag_ReturnValue;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_ToText_ReturnValue;                       // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_UpdateNickname) == 0x000008, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_UpdateNickname");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_UpdateNickname) == 0x0000B0, "Wrong size on Ctrl_HoverPlayerTooltip_C_UpdateNickname");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateNickname, CallFunc_GetTag_ReturnValue) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateNickname::CallFunc_GetTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateNickname, CallFunc_ToText_ReturnValue) == 0x000008, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateNickname::CallFunc_ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateNickname, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateNickname::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateNickname, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateNickname::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateNickname, K2Node_MakeArray_Array) == 0x000088, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateNickname::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateNickname, CallFunc_Format_ReturnValue) == 0x000098, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateNickname::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C.UpdateTier
// 0x01B0 (0x01B0 - 0x0000)
struct Ctrl_HoverPlayerTooltip_C_UpdateTier final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Tier                           CallFunc_GetTierDefine_ReturnValue;                // 0x0008(0x00D8)(ConstParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0138(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0198(0x0018)()
};
static_assert(alignof(Ctrl_HoverPlayerTooltip_C_UpdateTier) == 0x000008, "Wrong alignment on Ctrl_HoverPlayerTooltip_C_UpdateTier");
static_assert(sizeof(Ctrl_HoverPlayerTooltip_C_UpdateTier) == 0x0001B0, "Wrong size on Ctrl_HoverPlayerTooltip_C_UpdateTier");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, CallFunc_GetTierDefine_ReturnValue) == 0x000008, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::CallFunc_GetTierDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000E0, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, K2Node_MakeStruct_FormatArgumentData_1) == 0x000138, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, K2Node_MakeArray_Array) == 0x000188, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverPlayerTooltip_C_UpdateTier, CallFunc_Format_ReturnValue) == 0x000198, "Member 'Ctrl_HoverPlayerTooltip_C_UpdateTier::CallFunc_Format_ReturnValue' has a wrong offset!");

}

