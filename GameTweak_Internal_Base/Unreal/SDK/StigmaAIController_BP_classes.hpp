#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: StigmaAIController_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass StigmaAIController_BP.StigmaAIController_BP_C
// 0x0018 (0x06E0 - 0x06C8)
class AStigmaAIController_BP_C final : public AStigmaAIController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIPerceptionComponent*                 AIPerception;                                      // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRunningBT;                                       // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void BndEvt__AIPerception_K2Node_ComponentBoundEvent_1_PerceptionUpdatedDelegate__DelegateSignature(const TArray<class AActor*>& UpdatedActors);
	void ExecuteRunBehaviorTree();
	void ExecuteUbergraph_StigmaAIController_BP(int32 EntryPoint);
	void OnPossessed(class APawn* _pawn);
	void ReceiveBeginPlay();
	void ReceivePossess(class APawn* PossessedPawn);
	void SetImmediatlyMoveToEnemy();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StigmaAIController_BP_C">();
	}
	static class AStigmaAIController_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStigmaAIController_BP_C>();
	}
};
static_assert(alignof(AStigmaAIController_BP_C) == 0x000008, "Wrong alignment on AStigmaAIController_BP_C");
static_assert(sizeof(AStigmaAIController_BP_C) == 0x0006E0, "Wrong size on AStigmaAIController_BP_C");
static_assert(offsetof(AStigmaAIController_BP_C, UberGraphFrame) == 0x0006C8, "Member 'AStigmaAIController_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AStigmaAIController_BP_C, AIPerception) == 0x0006D0, "Member 'AStigmaAIController_BP_C::AIPerception' has a wrong offset!");
static_assert(offsetof(AStigmaAIController_BP_C, IsRunningBT) == 0x0006D8, "Member 'AStigmaAIController_BP_C::IsRunningBT' has a wrong offset!");

}

