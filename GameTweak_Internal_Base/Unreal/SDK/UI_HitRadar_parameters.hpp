#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_HitRadar

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_HitRadar.UI_HitRadar_C.AddHit
// 0x01B8 (0x01B8 - 0x0000)
struct UI_HitRadar_C_AddHit final
{
public:
	struct FHitData                               _hit;                                              // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ACharaBase*                             Attacker;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             Victim;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UUI_HitRadar_Part_C*                    Ctrl;                                              // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitData                               Hit;                                               // 0x00C0(0x00A8)(Edit, BlueprintVisible, NoDestructor)
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3934[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base_1;                 // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3935[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3936[0x2];                                     // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUI_HitRadar_Part_C*>            CallFunc_GetCtrls__ctrls;                          // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3937[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_HitRadar_Part_C*                    CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_ReturnValue;                      // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_AddHit) == 0x000008, "Wrong alignment on UI_HitRadar_C_AddHit");
static_assert(sizeof(UI_HitRadar_C_AddHit) == 0x0001B8, "Wrong size on UI_HitRadar_C_AddHit");
static_assert(offsetof(UI_HitRadar_C_AddHit, _hit) == 0x000000, "Member 'UI_HitRadar_C_AddHit::_hit' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, Attacker) == 0x0000A8, "Member 'UI_HitRadar_C_AddHit::Attacker' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, Victim) == 0x0000B0, "Member 'UI_HitRadar_C_AddHit::Victim' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, Ctrl) == 0x0000B8, "Member 'UI_HitRadar_C_AddHit::Ctrl' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, Hit) == 0x0000C0, "Member 'UI_HitRadar_C_AddHit::Hit' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, K2Node_DynamicCast_AsChara_Base) == 0x000168, "Member 'UI_HitRadar_C_AddHit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'UI_HitRadar_C_AddHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, K2Node_DynamicCast_AsChara_Base_1) == 0x000178, "Member 'UI_HitRadar_C_AddHit::K2Node_DynamicCast_AsChara_Base_1' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'UI_HitRadar_C_AddHit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, Temp_int_Array_Index_Variable) == 0x000184, "Member 'UI_HitRadar_C_AddHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'UI_HitRadar_C_AddHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_IsAlive_ReturnValue) == 0x000189, "Member 'UI_HitRadar_C_AddHit::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, Temp_int_Loop_Counter_Variable) == 0x00018C, "Member 'UI_HitRadar_C_AddHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_GetCtrls__ctrls) == 0x000190, "Member 'UI_HitRadar_C_AddHit::CallFunc_GetCtrls__ctrls' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_Add_IntInt_ReturnValue) == 0x0001A0, "Member 'UI_HitRadar_C_AddHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'UI_HitRadar_C_AddHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'UI_HitRadar_C_AddHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_Less_IntInt_ReturnValue) == 0x0001B4, "Member 'UI_HitRadar_C_AddHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_IsEnemy_ReturnValue) == 0x0001B5, "Member 'UI_HitRadar_C_AddHit::CallFunc_IsEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_BooleanAND_ReturnValue) == 0x0001B6, "Member 'UI_HitRadar_C_AddHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_AddHit, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001B7, "Member 'UI_HitRadar_C_AddHit::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.EnableShow
// 0x0001 (0x0001 - 0x0000)
struct UI_HitRadar_C_EnableShow final
{
public:
	bool                                          _show;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_EnableShow) == 0x000001, "Wrong alignment on UI_HitRadar_C_EnableShow");
static_assert(sizeof(UI_HitRadar_C_EnableShow) == 0x000001, "Wrong size on UI_HitRadar_C_EnableShow");
static_assert(offsetof(UI_HitRadar_C_EnableShow, _show) == 0x000000, "Member 'UI_HitRadar_C_EnableShow::_show' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.ExecuteUbergraph_UI_HitRadar
// 0x0048 (0x0048 - 0x0000)
struct UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar) == 0x000008, "Wrong alignment on UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar");
static_assert(sizeof(UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar) == 0x000048, "Wrong size on UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar");
static_assert(offsetof(UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar, EntryPoint) == 0x000000, "Member 'UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar, CallFunc_OnTick__delta_ImplicitCast) == 0x000040, "Member 'UI_HitRadar_C_ExecuteUbergraph_UI_HitRadar::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct UI_HitRadar_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on UI_HitRadar_C_OnSynchronizeProperties");
static_assert(sizeof(UI_HitRadar_C_OnSynchronizeProperties) == 0x000001, "Wrong size on UI_HitRadar_C_OnSynchronizeProperties");
static_assert(offsetof(UI_HitRadar_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'UI_HitRadar_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.OnTick
// 0x0030 (0x0030 - 0x0000)
struct UI_HitRadar_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3938[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3939[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_OnTick) == 0x000008, "Wrong alignment on UI_HitRadar_C_OnTick");
static_assert(sizeof(UI_HitRadar_C_OnTick) == 0x000030, "Wrong size on UI_HitRadar_C_OnTick");
static_assert(offsetof(UI_HitRadar_C_OnTick, _delta) == 0x000000, "Member 'UI_HitRadar_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_OnTick, Delta) == 0x000008, "Member 'UI_HitRadar_C_OnTick::Delta' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_OnTick, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'UI_HitRadar_C_OnTick::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'UI_HitRadar_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_OnTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'UI_HitRadar_C_OnTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_OnTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'UI_HitRadar_C_OnTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_OnTick, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x00002C, "Member 'UI_HitRadar_C_OnTick::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_HitRadar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_Tick) == 0x000004, "Wrong alignment on UI_HitRadar_C_Tick");
static_assert(sizeof(UI_HitRadar_C_Tick) == 0x00003C, "Wrong size on UI_HitRadar_C_Tick");
static_assert(offsetof(UI_HitRadar_C_Tick, MyGeometry) == 0x000000, "Member 'UI_HitRadar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_HitRadar_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.GetCtrls
// 0x0100 (0x0100 - 0x0000)
struct UI_HitRadar_C_GetCtrls final
{
public:
	struct FHitData                               _hit;                                              // 0x0000(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TArray<class UUI_HitRadar_Part_C*>            _ctrls;                                            // 0x00A8(0x0010)(Parm, OutParm, ContainsInstancedReference)
	struct FDamageDef                             CallFunc_GetDamage_ReturnValue;                    // 0x00B8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_393A[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_HitRadar_Part_C*                    CallFunc_GetPart__ui;                              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUI_HitRadar_Part_C*>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393B[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class UUI_HitRadar_Part_C*>            K2Node_MakeArray_Array_1;                          // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(UI_HitRadar_C_GetCtrls) == 0x000008, "Wrong alignment on UI_HitRadar_C_GetCtrls");
static_assert(sizeof(UI_HitRadar_C_GetCtrls) == 0x000100, "Wrong size on UI_HitRadar_C_GetCtrls");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, _hit) == 0x000000, "Member 'UI_HitRadar_C_GetCtrls::_hit' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, _ctrls) == 0x0000A8, "Member 'UI_HitRadar_C_GetCtrls::_ctrls' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, CallFunc_GetDamage_ReturnValue) == 0x0000B8, "Member 'UI_HitRadar_C_GetCtrls::CallFunc_GetDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, CallFunc_GetPart__ui) == 0x0000D0, "Member 'UI_HitRadar_C_GetCtrls::CallFunc_GetPart__ui' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, K2Node_MakeArray_Array) == 0x0000D8, "Member 'UI_HitRadar_C_GetCtrls::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, K2Node_SwitchEnum_CmpSuccess) == 0x0000E8, "Member 'UI_HitRadar_C_GetCtrls::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetCtrls, K2Node_MakeArray_Array_1) == 0x0000F0, "Member 'UI_HitRadar_C_GetCtrls::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function UI_HitRadar.UI_HitRadar_C.GetPart
// 0x0018 (0x0018 - 0x0000)
struct UI_HitRadar_C_GetPart final
{
public:
	EBones                                        _bones;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_HitRadar_Part_C*                    _ui;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_C_GetPart) == 0x000008, "Wrong alignment on UI_HitRadar_C_GetPart");
static_assert(sizeof(UI_HitRadar_C_GetPart) == 0x000018, "Wrong size on UI_HitRadar_C_GetPart");
static_assert(offsetof(UI_HitRadar_C_GetPart, _bones) == 0x000000, "Member 'UI_HitRadar_C_GetPart::_bones' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetPart, _ui) == 0x000008, "Member 'UI_HitRadar_C_GetPart::_ui' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_C_GetPart, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'UI_HitRadar_C_GetPart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

