#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: ShopGoodsHelper

#include "Basic.hpp"

#include "ShopGoodsHelper_classes.hpp"
#include "ShopGoodsHelper_parameters.hpp"


namespace SDK
{

// Function ShopGoodsHelper.ShopGoodsHelper_C.GetFilterText_Currency
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Currency                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Out_text                                               (Parm, OutParm)

void UShopGoodsHelper_C::GetFilterText_Currency(uint8 Currency, class UObject* __WorldContext, class FText* Out_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopGoodsHelper_C", "GetFilterText_Currency");

	Params::ShopGoodsHelper_C_GetFilterText_Currency Parms{};

	Parms.Currency = Currency;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_text != nullptr)
		*Out_text = std::move(Parms.Out_text);
}


// Function ShopGoodsHelper.ShopGoodsHelper_C.GetFilterText_Misc
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Misc                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Out_text                                               (Parm, OutParm)

void UShopGoodsHelper_C::GetFilterText_Misc(uint8 Misc, class UObject* __WorldContext, class FText* Out_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopGoodsHelper_C", "GetFilterText_Misc");

	Params::ShopGoodsHelper_C_GetFilterText_Misc Parms{};

	Parms.Misc = Misc;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_text != nullptr)
		*Out_text = std::move(Parms.Out_text);
}


// Function ShopGoodsHelper.ShopGoodsHelper_C.GetFilterText_Tag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Out_text                                               (Parm, OutParm)

void UShopGoodsHelper_C::GetFilterText_Tag(uint8 Tag, class UObject* __WorldContext, class FText* Out_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopGoodsHelper_C", "GetFilterText_Tag");

	Params::ShopGoodsHelper_C_GetFilterText_Tag Parms{};

	Parms.Tag = Tag;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out_text != nullptr)
		*Out_text = std::move(Parms.Out_text);
}


// Function ShopGoodsHelper.ShopGoodsHelper_C.GetLimitTypeText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBuyLimitType                           LimitType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Out                                                    (Parm, OutParm)

void UShopGoodsHelper_C::GetLimitTypeText(EBuyLimitType LimitType, class UObject* __WorldContext, class FText* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopGoodsHelper_C", "GetLimitTypeText");

	Params::ShopGoodsHelper_C_GetLimitTypeText Parms{};

	Parms.LimitType = LimitType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function ShopGoodsHelper.ShopGoodsHelper_C.IsEqualGoodsFilter
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGoodsFilterInfo                 Ref1                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FGoodsFilterInfo                 Ref2                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShopGoodsHelper_C::IsEqualGoodsFilter(struct FGoodsFilterInfo& Ref1, struct FGoodsFilterInfo& Ref2, class UObject* __WorldContext, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopGoodsHelper_C", "IsEqualGoodsFilter");

	Params::ShopGoodsHelper_C_IsEqualGoodsFilter Parms{};

	Parms.Ref1 = std::move(Ref1);
	Parms.Ref2 = std::move(Ref2);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Ref1 = std::move(Parms.Ref1);
	Ref2 = std::move(Parms.Ref2);

	if (Value != nullptr)
		*Value = Parms.Value;
}

}

