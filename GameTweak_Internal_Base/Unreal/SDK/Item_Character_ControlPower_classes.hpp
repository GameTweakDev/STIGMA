#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Item_Character_ControlPower

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Item_Character_ControlPower.Item_Character_ControlPower_C
// 0x0048 (0x0538 - 0x04F0)
class UItem_Character_ControlPower_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_OnSpotlight;                                    // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCtrl_StatUpdate_C*                     Ctrl_StatUpdate;                                   // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Equip;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Selected_Border;                               // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Tooltip;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULVROW_Character_C*                     LVROW_Character;                                   // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OVL_Equip;                                         // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULVData_ControlPowerMaster*             Item;                                              // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	class UWidget* GetTooltipWidget();
	void ExecuteUbergraph_Item_Character_ControlPower(int32 EntryPoint);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void UpdateUI();
	void UpdateChara(ECharaType _chara_type);
	void OnListItemObjectSet(class UObject* ListItemObject);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Item_Character_ControlPower_C">();
	}
	static class UItem_Character_ControlPower_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItem_Character_ControlPower_C>();
	}
};
static_assert(alignof(UItem_Character_ControlPower_C) == 0x000008, "Wrong alignment on UItem_Character_ControlPower_C");
static_assert(sizeof(UItem_Character_ControlPower_C) == 0x000538, "Wrong size on UItem_Character_ControlPower_C");
static_assert(offsetof(UItem_Character_ControlPower_C, UberGraphFrame) == 0x0004F0, "Member 'UItem_Character_ControlPower_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, UI_OnSpotlight) == 0x0004F8, "Member 'UItem_Character_ControlPower_C::UI_OnSpotlight' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, Ctrl_StatUpdate) == 0x000500, "Member 'UItem_Character_ControlPower_C::Ctrl_StatUpdate' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, Icon_Equip) == 0x000508, "Member 'UItem_Character_ControlPower_C::Icon_Equip' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, IMG_Selected_Border) == 0x000510, "Member 'UItem_Character_ControlPower_C::IMG_Selected_Border' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, Img_Tooltip) == 0x000518, "Member 'UItem_Character_ControlPower_C::Img_Tooltip' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, LVROW_Character) == 0x000520, "Member 'UItem_Character_ControlPower_C::LVROW_Character' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, OVL_Equip) == 0x000528, "Member 'UItem_Character_ControlPower_C::OVL_Equip' has a wrong offset!");
static_assert(offsetof(UItem_Character_ControlPower_C, Item) == 0x000530, "Member 'UItem_Character_ControlPower_C::Item' has a wrong offset!");

}

