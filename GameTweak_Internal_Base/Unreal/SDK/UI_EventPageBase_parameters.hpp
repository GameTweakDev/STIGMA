#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_EventPageBase

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_EventPageBase.UI_EventPageBase_C.BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'UI_EventPageBase_C_BndEvt__UI_EventPageBase_Btn_Reward_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.EnableRewardButton
// 0x0001 (0x0001 - 0x0000)
struct UI_EventPageBase_C_EnableRewardButton final
{
public:
	bool                                          _is_enable;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_EnableRewardButton) == 0x000001, "Wrong alignment on UI_EventPageBase_C_EnableRewardButton");
static_assert(sizeof(UI_EventPageBase_C_EnableRewardButton) == 0x000001, "Wrong size on UI_EventPageBase_C_EnableRewardButton");
static_assert(offsetof(UI_EventPageBase_C_EnableRewardButton, _is_enable) == 0x000000, "Member 'UI_EventPageBase_C_EnableRewardButton::_is_enable' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.ExecuteUbergraph_UI_EventPageBase
// 0x0380 (0x0380 - 0x0000)
struct UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3592[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3593[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_Event__text_1;                              // 0x0018(0x0018)(ConstParm)
	class FString                                 K2Node_Event__start_at_str;                        // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event__end_at_str;                          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RefindDateTime__refined_date_str;         // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RefindDateTime__refined_date_str_1;       // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	struct FDateTime                              K2Node_Event__end_at_1;                            // 0x0168(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__alert_hour_1;                        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3594[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_Event__text;                                // 0x0178(0x0018)(ConstParm)
	struct FItemID_Currency                       K2Node_Event__currency_id;                         // 0x0190(0x0010)(ConstParm, HasGetValueTypeHash)
	int32                                         K2Node_Event__count;                               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__reward_count;                        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRewardItem                            K2Node_Event__reward_item;                         // 0x01A8(0x0018)(ConstParm)
	int32                                         K2Node_Event__repeat_count;                        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__repeat_reward_count;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemState                              K2Node_Event__reward_state;                        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__is_enable;                           // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3595[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              K2Node_Event__end_at;                              // 0x01D0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__alert_hour;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3596[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateBrush                            K2Node_Event__bubble_image;                        // 0x01E0(0x00D0)(ConstParm)
	struct FSlateBrush                            K2Node_Event__speecher_image;                      // 0x02B0(0x00D0)(ConstParm)
};
static_assert(alignof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase) == 0x000010, "Wrong alignment on UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase");
static_assert(sizeof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase) == 0x000380, "Wrong size on UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, EntryPoint) == 0x000000, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__text_1) == 0x000018, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__text_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__start_at_str) == 0x000030, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__start_at_str' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__end_at_str) == 0x000040, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__end_at_str' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, CallFunc_RefindDateTime__refined_date_str) == 0x000050, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::CallFunc_RefindDateTime__refined_date_str' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, CallFunc_RefindDateTime__refined_date_str_1) == 0x000060, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::CallFunc_RefindDateTime__refined_date_str_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000088, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_MakeArray_Array) == 0x000140, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, CallFunc_Format_ReturnValue) == 0x000150, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__end_at_1) == 0x000168, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__end_at_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__alert_hour_1) == 0x000170, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__alert_hour_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__text) == 0x000178, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__text' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__currency_id) == 0x000190, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__currency_id' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__count) == 0x0001A0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__reward_count) == 0x0001A4, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__reward_count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__reward_item) == 0x0001A8, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__reward_item' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__repeat_count) == 0x0001C0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__repeat_count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__repeat_reward_count) == 0x0001C4, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__repeat_reward_count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__reward_state) == 0x0001C8, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__reward_state' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__is_enable) == 0x0001C9, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__is_enable' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__end_at) == 0x0001D0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__end_at' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__alert_hour) == 0x0001D8, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__alert_hour' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__bubble_image) == 0x0001E0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__bubble_image' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase, K2Node_Event__speecher_image) == 0x0002B0, "Member 'UI_EventPageBase_C_ExecuteUbergraph_UI_EventPageBase::K2Node_Event__speecher_image' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.Get Txt Info Total Reward Visibility
// 0x0002 (0x0002 - 0x0000)
struct UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility) == 0x000001, "Wrong alignment on UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility");
static_assert(sizeof(UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility) == 0x000002, "Wrong size on UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility, ReturnValue) == 0x000000, "Member 'UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'UI_EventPageBase_C_Get_Txt_Info_Total_Reward_Visibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.Get_Txt_Info_Attendance_Visibility
// 0x0003 (0x0003 - 0x0000)
struct UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPageType                                CallFunc_GetEventPageType_type;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility) == 0x000001, "Wrong alignment on UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility");
static_assert(sizeof(UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility) == 0x000003, "Wrong size on UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility, ReturnValue) == 0x000000, "Member 'UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility, CallFunc_GetEventPageType_type) == 0x000001, "Member 'UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility::CallFunc_GetEventPageType_type' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UI_EventPageBase_C_Get_Txt_Info_Attendance_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.Get_Txt_Info_KeepConnect_Visibility
// 0x0003 (0x0003 - 0x0000)
struct UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPageType                                CallFunc_GetEventPageType_type;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility) == 0x000001, "Wrong alignment on UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility");
static_assert(sizeof(UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility) == 0x000003, "Wrong size on UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility, ReturnValue) == 0x000000, "Member 'UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility, CallFunc_GetEventPageType_type) == 0x000001, "Member 'UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility::CallFunc_GetEventPageType_type' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UI_EventPageBase_C_Get_Txt_Info_KeepConnect_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.Get_Txt_Info_Mission_Visibility
// 0x0004 (0x0004 - 0x0000)
struct UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEventPageType                                CallFunc_GetEventPageType_type;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility) == 0x000001, "Wrong alignment on UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility");
static_assert(sizeof(UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility) == 0x000004, "Wrong size on UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility, ReturnValue) == 0x000000, "Member 'UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility, CallFunc_GetEventPageType_type) == 0x000002, "Member 'UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility::CallFunc_GetEventPageType_type' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'UI_EventPageBase_C_Get_Txt_Info_Mission_Visibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.Get_Txt_Info_RepeatReward_Visibility
// 0x0002 (0x0002 - 0x0000)
struct UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility) == 0x000001, "Wrong alignment on UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility");
static_assert(sizeof(UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility) == 0x000002, "Wrong size on UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility, ReturnValue) == 0x000000, "Member 'UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'UI_EventPageBase_C_Get_Txt_Info_RepeatReward_Visibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.GetEventPageType
// 0x000C (0x000C - 0x0000)
struct UI_EventPageBase_C_GetEventPageType final
{
public:
	EEventPageType                                Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3597[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetSubCategoryByItemID_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_GetEventPageType) == 0x000004, "Wrong alignment on UI_EventPageBase_C_GetEventPageType");
static_assert(sizeof(UI_EventPageBase_C_GetEventPageType) == 0x00000C, "Wrong size on UI_EventPageBase_C_GetEventPageType");
static_assert(offsetof(UI_EventPageBase_C_GetEventPageType, Type) == 0x000000, "Member 'UI_EventPageBase_C_GetEventPageType::Type' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_GetEventPageType, CallFunc_GetSubCategoryByItemID_ReturnValue) == 0x000004, "Member 'UI_EventPageBase_C_GetEventPageType::CallFunc_GetSubCategoryByItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_GetEventPageType, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'UI_EventPageBase_C_GetEventPageType::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_GetEventPageType, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'UI_EventPageBase_C_GetEventPageType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct UI_EventPageBase_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on UI_EventPageBase_C_OnSynchronizeProperties");
static_assert(sizeof(UI_EventPageBase_C_OnSynchronizeProperties) == 0x000001, "Wrong size on UI_EventPageBase_C_OnSynchronizeProperties");
static_assert(offsetof(UI_EventPageBase_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'UI_EventPageBase_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.RefindDateTime
// 0x00A0 (0x00A0 - 0x0000)
struct UI_EventPageBase_C_RefindDateTime final
{
public:
	class FString                                 _raw_date_str;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 _refined_date_str;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3598[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3599[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_RefindDateTime) == 0x000008, "Wrong alignment on UI_EventPageBase_C_RefindDateTime");
static_assert(sizeof(UI_EventPageBase_C_RefindDateTime) == 0x0000A0, "Wrong size on UI_EventPageBase_C_RefindDateTime");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, _raw_date_str) == 0x000000, "Member 'UI_EventPageBase_C_RefindDateTime::_raw_date_str' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, _refined_date_str) == 0x000010, "Member 'UI_EventPageBase_C_RefindDateTime::_refined_date_str' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Split_LeftS) == 0x000020, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Split_RightS) == 0x000030, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Split_ReturnValue) == 0x000040, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Split_LeftS_1) == 0x000048, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Split_RightS_1) == 0x000058, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Split_ReturnValue_1) == 0x000068, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Replace_ReturnValue) == 0x000080, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_RefindDateTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'UI_EventPageBase_C_RefindDateTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetCompleteCountRewardItems
// 0x0008 (0x0008 - 0x0000)
struct UI_EventPageBase_C_SetCompleteCountRewardItems final
{
public:
	int32                                         _count;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _reward_count;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_SetCompleteCountRewardItems) == 0x000004, "Wrong alignment on UI_EventPageBase_C_SetCompleteCountRewardItems");
static_assert(sizeof(UI_EventPageBase_C_SetCompleteCountRewardItems) == 0x000008, "Wrong size on UI_EventPageBase_C_SetCompleteCountRewardItems");
static_assert(offsetof(UI_EventPageBase_C_SetCompleteCountRewardItems, _count) == 0x000000, "Member 'UI_EventPageBase_C_SetCompleteCountRewardItems::_count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetCompleteCountRewardItems, _reward_count) == 0x000004, "Member 'UI_EventPageBase_C_SetCompleteCountRewardItems::_reward_count' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetDailyResetTimer
// 0x0010 (0x0010 - 0x0000)
struct UI_EventPageBase_C_SetDailyResetTimer final
{
public:
	struct FDateTime                              _end_at;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         _alert_hour;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_SetDailyResetTimer) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetDailyResetTimer");
static_assert(sizeof(UI_EventPageBase_C_SetDailyResetTimer) == 0x000010, "Wrong size on UI_EventPageBase_C_SetDailyResetTimer");
static_assert(offsetof(UI_EventPageBase_C_SetDailyResetTimer, _end_at) == 0x000000, "Member 'UI_EventPageBase_C_SetDailyResetTimer::_end_at' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetDailyResetTimer, _alert_hour) == 0x000008, "Member 'UI_EventPageBase_C_SetDailyResetTimer::_alert_hour' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetDate
// 0x0020 (0x0020 - 0x0000)
struct UI_EventPageBase_C_SetDate final
{
public:
	class FString                                 _start_at_str;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 _end_at_str;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_SetDate) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetDate");
static_assert(sizeof(UI_EventPageBase_C_SetDate) == 0x000020, "Wrong size on UI_EventPageBase_C_SetDate");
static_assert(offsetof(UI_EventPageBase_C_SetDate, _start_at_str) == 0x000000, "Member 'UI_EventPageBase_C_SetDate::_start_at_str' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetDate, _end_at_str) == 0x000010, "Member 'UI_EventPageBase_C_SetDate::_end_at_str' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetDesc
// 0x0018 (0x0018 - 0x0000)
struct UI_EventPageBase_C_SetDesc final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_EventPageBase_C_SetDesc) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetDesc");
static_assert(sizeof(UI_EventPageBase_C_SetDesc) == 0x000018, "Wrong size on UI_EventPageBase_C_SetDesc");
static_assert(offsetof(UI_EventPageBase_C_SetDesc, _text) == 0x000000, "Member 'UI_EventPageBase_C_SetDesc::_text' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetEventCurrency
// 0x0010 (0x0010 - 0x0000)
struct UI_EventPageBase_C_SetEventCurrency final
{
public:
	struct FItemID_Currency                       _currency_id;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_SetEventCurrency) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetEventCurrency");
static_assert(sizeof(UI_EventPageBase_C_SetEventCurrency) == 0x000010, "Wrong size on UI_EventPageBase_C_SetEventCurrency");
static_assert(offsetof(UI_EventPageBase_C_SetEventCurrency, _currency_id) == 0x000000, "Member 'UI_EventPageBase_C_SetEventCurrency::_currency_id' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetRemainTimer
// 0x0010 (0x0010 - 0x0000)
struct UI_EventPageBase_C_SetRemainTimer final
{
public:
	struct FDateTime                              _end_at;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         _alert_hour;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_SetRemainTimer) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetRemainTimer");
static_assert(sizeof(UI_EventPageBase_C_SetRemainTimer) == 0x000010, "Wrong size on UI_EventPageBase_C_SetRemainTimer");
static_assert(offsetof(UI_EventPageBase_C_SetRemainTimer, _end_at) == 0x000000, "Member 'UI_EventPageBase_C_SetRemainTimer::_end_at' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetRemainTimer, _alert_hour) == 0x000008, "Member 'UI_EventPageBase_C_SetRemainTimer::_alert_hour' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetRepeatRewardItem
// 0x0028 (0x0028 - 0x0000)
struct UI_EventPageBase_C_SetRepeatRewardItem final
{
public:
	struct FRewardItem                            _reward_item;                                      // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         _repeat_count;                                     // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _repeat_reward_count;                              // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERewardItemState                              _reward_state;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EventPageBase_C_SetRepeatRewardItem) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetRepeatRewardItem");
static_assert(sizeof(UI_EventPageBase_C_SetRepeatRewardItem) == 0x000028, "Wrong size on UI_EventPageBase_C_SetRepeatRewardItem");
static_assert(offsetof(UI_EventPageBase_C_SetRepeatRewardItem, _reward_item) == 0x000000, "Member 'UI_EventPageBase_C_SetRepeatRewardItem::_reward_item' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetRepeatRewardItem, _repeat_count) == 0x000018, "Member 'UI_EventPageBase_C_SetRepeatRewardItem::_repeat_count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetRepeatRewardItem, _repeat_reward_count) == 0x00001C, "Member 'UI_EventPageBase_C_SetRepeatRewardItem::_repeat_reward_count' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetRepeatRewardItem, _reward_state) == 0x000020, "Member 'UI_EventPageBase_C_SetRepeatRewardItem::_reward_state' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetTextures
// 0x01A0 (0x01A0 - 0x0000)
struct UI_EventPageBase_C_SetTextures final
{
public:
	struct FSlateBrush                            _bubble_image;                                     // 0x0000(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FSlateBrush                            _speecher_image;                                   // 0x00D0(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_EventPageBase_C_SetTextures) == 0x000010, "Wrong alignment on UI_EventPageBase_C_SetTextures");
static_assert(sizeof(UI_EventPageBase_C_SetTextures) == 0x0001A0, "Wrong size on UI_EventPageBase_C_SetTextures");
static_assert(offsetof(UI_EventPageBase_C_SetTextures, _bubble_image) == 0x000000, "Member 'UI_EventPageBase_C_SetTextures::_bubble_image' has a wrong offset!");
static_assert(offsetof(UI_EventPageBase_C_SetTextures, _speecher_image) == 0x0000D0, "Member 'UI_EventPageBase_C_SetTextures::_speecher_image' has a wrong offset!");

// Function UI_EventPageBase.UI_EventPageBase_C.SetTitle
// 0x0018 (0x0018 - 0x0000)
struct UI_EventPageBase_C_SetTitle final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_EventPageBase_C_SetTitle) == 0x000008, "Wrong alignment on UI_EventPageBase_C_SetTitle");
static_assert(sizeof(UI_EventPageBase_C_SetTitle) == 0x000018, "Wrong size on UI_EventPageBase_C_SetTitle");
static_assert(offsetof(UI_EventPageBase_C_SetTitle, _text) == 0x000000, "Member 'UI_EventPageBase_C_SetTitle::_text' has a wrong offset!");

}

