#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Inven

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Inven.Inven_C.ExecuteUbergraph_Inven
// 0x0038 (0x0038 - 0x0000)
struct Inven_C_ExecuteUbergraph_Inven final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UPreviewableWidget*                     K2Node_Event__target_widget;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPOPUP_Inventory_C*                     K2Node_DynamicCast_AsPOPUP_Inventory;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetItemID__id;                            // 0x0020(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Inven_C_ExecuteUbergraph_Inven) == 0x000008, "Wrong alignment on Inven_C_ExecuteUbergraph_Inven");
static_assert(sizeof(Inven_C_ExecuteUbergraph_Inven) == 0x000038, "Wrong size on Inven_C_ExecuteUbergraph_Inven");
static_assert(offsetof(Inven_C_ExecuteUbergraph_Inven, EntryPoint) == 0x000000, "Member 'Inven_C_ExecuteUbergraph_Inven::EntryPoint' has a wrong offset!");
static_assert(offsetof(Inven_C_ExecuteUbergraph_Inven, K2Node_Event__target_widget) == 0x000008, "Member 'Inven_C_ExecuteUbergraph_Inven::K2Node_Event__target_widget' has a wrong offset!");
static_assert(offsetof(Inven_C_ExecuteUbergraph_Inven, K2Node_DynamicCast_AsPOPUP_Inventory) == 0x000010, "Member 'Inven_C_ExecuteUbergraph_Inven::K2Node_DynamicCast_AsPOPUP_Inventory' has a wrong offset!");
static_assert(offsetof(Inven_C_ExecuteUbergraph_Inven, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Inven_C_ExecuteUbergraph_Inven::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Inven_C_ExecuteUbergraph_Inven, CallFunc_GetItemID__id) == 0x000020, "Member 'Inven_C_ExecuteUbergraph_Inven::CallFunc_GetItemID__id' has a wrong offset!");
static_assert(offsetof(Inven_C_ExecuteUbergraph_Inven, CallFunc_IsValidItemID_ReturnValue) == 0x000030, "Member 'Inven_C_ExecuteUbergraph_Inven::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");

// Function Inven.Inven_C.GetItemID
// 0x0048 (0x0048 - 0x0000)
struct Inven_C_GetItemID final
{
public:
	struct FItemID                                _id;                                               // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	struct FItemID                                CallFunc_MakeItemID_ReturnValue;                   // 0x0010(0x0010)(HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F60[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                CallFunc_MakeItemID_ReturnValue_1;                 // 0x0038(0x0010)(HasGetValueTypeHash)
};
static_assert(alignof(Inven_C_GetItemID) == 0x000008, "Wrong alignment on Inven_C_GetItemID");
static_assert(sizeof(Inven_C_GetItemID) == 0x000048, "Wrong size on Inven_C_GetItemID");
static_assert(offsetof(Inven_C_GetItemID, _id) == 0x000000, "Member 'Inven_C_GetItemID::_id' has a wrong offset!");
static_assert(offsetof(Inven_C_GetItemID, CallFunc_MakeItemID_ReturnValue) == 0x000010, "Member 'Inven_C_GetItemID::CallFunc_MakeItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_GetItemID, CallFunc_Array_Get_Item) == 0x000020, "Member 'Inven_C_GetItemID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Inven_C_GetItemID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'Inven_C_GetItemID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_GetItemID, CallFunc_Conv_StringToInt_ReturnValue) == 0x000034, "Member 'Inven_C_GetItemID::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_GetItemID, CallFunc_MakeItemID_ReturnValue_1) == 0x000038, "Member 'Inven_C_GetItemID::CallFunc_MakeItemID_ReturnValue_1' has a wrong offset!");

// Function Inven.Inven_C.PlayDetailer
// 0x0008 (0x0008 - 0x0000)
struct Inven_C_PlayDetailer final
{
public:
	class UPreviewableWidget*                     _target_widget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Inven_C_PlayDetailer) == 0x000008, "Wrong alignment on Inven_C_PlayDetailer");
static_assert(sizeof(Inven_C_PlayDetailer) == 0x000008, "Wrong size on Inven_C_PlayDetailer");
static_assert(offsetof(Inven_C_PlayDetailer, _target_widget) == 0x000000, "Member 'Inven_C_PlayDetailer::_target_widget' has a wrong offset!");

// Function Inven.Inven_C.SelectItem
// 0x0068 (0x0068 - 0x0000)
struct Inven_C_SelectItem final
{
public:
	TArray<class UInvenItem*>                     Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UInvenItem*                             Item;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F61[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F62[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetItemID_ReturnValue;                    // 0x0028(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwned_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F63[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class UInvenItem*                             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F64[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetItemID__id;                            // 0x0050(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_IsEqualItemID_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Inven_C_SelectItem) == 0x000008, "Wrong alignment on Inven_C_SelectItem");
static_assert(sizeof(Inven_C_SelectItem) == 0x000068, "Wrong size on Inven_C_SelectItem");
static_assert(offsetof(Inven_C_SelectItem, Items) == 0x000000, "Member 'Inven_C_SelectItem::Items' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, Item) == 0x000010, "Member 'Inven_C_SelectItem::Item' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Inven_C_SelectItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Inven_C_SelectItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Inven_C_SelectItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_GetItemID_ReturnValue) == 0x000028, "Member 'Inven_C_SelectItem::CallFunc_GetItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Inven_C_SelectItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_IsOwned_ReturnValue) == 0x00003C, "Member 'Inven_C_SelectItem::CallFunc_IsOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_IsValid_ReturnValue_1) == 0x00003D, "Member 'Inven_C_SelectItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_Array_Get_Item) == 0x000040, "Member 'Inven_C_SelectItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Inven_C_SelectItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Inven_C_SelectItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_GetItemID__id) == 0x000050, "Member 'Inven_C_SelectItem::CallFunc_GetItemID__id' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_IsEqualItemID_ReturnValue) == 0x000060, "Member 'Inven_C_SelectItem::CallFunc_IsEqualItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Inven_C_SelectItem, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'Inven_C_SelectItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

