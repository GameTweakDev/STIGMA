#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Indicator_GoldReviver

#include "Basic.hpp"

#include "UI_Indicator_GoldReviver_classes.hpp"
#include "UI_Indicator_GoldReviver_parameters.hpp"


namespace SDK
{

// Function UI_Indicator_GoldReviver.UI_Indicator_GoldReviver_C.ExecuteUbergraph_UI_Indicator_GoldReviver
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Indicator_GoldReviver_C::ExecuteUbergraph_UI_Indicator_GoldReviver(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_GoldReviver_C", "ExecuteUbergraph_UI_Indicator_GoldReviver");

	Params::UI_Indicator_GoldReviver_C_ExecuteUbergraph_UI_Indicator_GoldReviver Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Indicator_GoldReviver.UI_Indicator_GoldReviver_C.OnInitIndicator
// (Event, Protected, BlueprintEvent)

void UUI_Indicator_GoldReviver_C::OnInitIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_GoldReviver_C", "OnInitIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_GoldReviver.UI_Indicator_GoldReviver_C.TEST
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_GoldReviver_C::TEST()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_GoldReviver_C", "TEST");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_GoldReviver.UI_Indicator_GoldReviver_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Indicator_GoldReviver_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_GoldReviver_C", "Tick");

	Params::UI_Indicator_GoldReviver_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Indicator_GoldReviver.UI_Indicator_GoldReviver_C.UpdateDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_GoldReviver_C::UpdateDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_GoldReviver_C", "UpdateDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_GoldReviver.UI_Indicator_GoldReviver_C.UpdateNickname
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_GoldReviver_C::UpdateNickname()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_GoldReviver_C", "UpdateNickname");

	UObject::ProcessEvent(Func, nullptr);
}

}

