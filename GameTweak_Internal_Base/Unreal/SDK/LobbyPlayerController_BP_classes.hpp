#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LobbyPlayerController_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LobbyPlayerController_BP.LobbyPlayerController_BP_C
// 0x0010 (0x0B38 - 0x0B28)
class ALobbyPlayerController_BP_C final : public ALobbyControllerBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          ActivateRotationMode;                              // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetPreviewRotation;                              // 0x0B31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnResetRot;                                        // 0x0B32(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdatePreviewActorRotation();
	void SkipCutScene();
	void ResetPreviewActorRotation(double Delta);
	void ReceiveTick(float DeltaSeconds);
	void On_Begin_Play();
	void InpActEvt_Two_K2Node_InputDebugKeyEvent_2(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void InpActEvt_Three_K2Node_InputDebugKeyEvent_1(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void InpActEvt_T_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void InpActEvt_One_K2Node_InputDebugKeyEvent_3(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	bool OnDEBUG_ToggleUI();
	void OnBeginGamePlay();
	void InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void ExecuteUbergraph_LobbyPlayerController_BP(int32 EntryPoint);
	void ChangeCameraZoom(double Additive_velocity);
	void InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LobbyPlayerController_BP_C">();
	}
	static class ALobbyPlayerController_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALobbyPlayerController_BP_C>();
	}
};
static_assert(alignof(ALobbyPlayerController_BP_C) == 0x000008, "Wrong alignment on ALobbyPlayerController_BP_C");
static_assert(sizeof(ALobbyPlayerController_BP_C) == 0x000B38, "Wrong size on ALobbyPlayerController_BP_C");
static_assert(offsetof(ALobbyPlayerController_BP_C, UberGraphFrame) == 0x000B28, "Member 'ALobbyPlayerController_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALobbyPlayerController_BP_C, ActivateRotationMode) == 0x000B30, "Member 'ALobbyPlayerController_BP_C::ActivateRotationMode' has a wrong offset!");
static_assert(offsetof(ALobbyPlayerController_BP_C, ResetPreviewRotation) == 0x000B31, "Member 'ALobbyPlayerController_BP_C::ResetPreviewRotation' has a wrong offset!");
static_assert(offsetof(ALobbyPlayerController_BP_C, OnResetRot) == 0x000B32, "Member 'ALobbyPlayerController_BP_C::OnResetRot' has a wrong offset!");

}

