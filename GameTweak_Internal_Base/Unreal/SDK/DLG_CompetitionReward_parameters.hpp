#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: DLG_CompetitionReward

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function DLG_CompetitionReward.DLG_CompetitionReward_C.SetValue
// 0x0080 (0x0080 - 0x0000)
struct DLG_CompetitionReward_C_SetValue final
{
public:
	struct FBC_CompetitionEnd                     _packet;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBD[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_GroupCompetition               CallFunc_GetCompetitionGroupDefine_ReturnValue;    // 0x0038(0x0040)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_CompetitionReward_C_SetValue) == 0x000008, "Wrong alignment on DLG_CompetitionReward_C_SetValue");
static_assert(sizeof(DLG_CompetitionReward_C_SetValue) == 0x000080, "Wrong size on DLG_CompetitionReward_C_SetValue");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, _packet) == 0x000000, "Member 'DLG_CompetitionReward_C_SetValue::_packet' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, K2Node_SwitchInteger_CmpSuccess) == 0x000030, "Member 'DLG_CompetitionReward_C_SetValue::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, CallFunc_Array_IsEmpty_ReturnValue) == 0x000031, "Member 'DLG_CompetitionReward_C_SetValue::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000032, "Member 'DLG_CompetitionReward_C_SetValue::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, CallFunc_GetCompetitionGroupDefine_ReturnValue) == 0x000038, "Member 'DLG_CompetitionReward_C_SetValue::CallFunc_GetCompetitionGroupDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'DLG_CompetitionReward_C_SetValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_SetValue, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'DLG_CompetitionReward_C_SetValue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function DLG_CompetitionReward.DLG_CompetitionReward_C.ExecuteUbergraph_DLG_CompetitionReward
// 0x0018 (0x0018 - 0x0000)
struct DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward) == 0x000008, "Wrong alignment on DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward");
static_assert(sizeof(DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward) == 0x000018, "Wrong size on DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward");
static_assert(offsetof(DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward, EntryPoint) == 0x000000, "Member 'DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward::EntryPoint' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'DLG_CompetitionReward_C_ExecuteUbergraph_DLG_CompetitionReward::K2Node_ComponentBoundEvent__select' has a wrong offset!");

// Function DLG_CompetitionReward.DLG_CompetitionReward_C.BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'DLG_CompetitionReward_C_BndEvt__DLG_CompetitionReward_Btn_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

}

