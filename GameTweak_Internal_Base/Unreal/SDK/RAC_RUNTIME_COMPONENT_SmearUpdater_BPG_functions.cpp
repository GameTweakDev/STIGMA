#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: RAC_RUNTIME_COMPONENT_SmearUpdater_BPG

#include "Basic.hpp"

#include "RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_classes.hpp"
#include "RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_parameters.hpp"


namespace SDK
{

// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.ExecuteUbergraph_RAC_RUNTIME_COMPONENT_SmearUpdater_BPG
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::ExecuteUbergraph_RAC_RUNTIME_COMPONENT_SmearUpdater_BPG(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "ExecuteUbergraph_RAC_RUNTIME_COMPONENT_SmearUpdater_BPG");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_ExecuteUbergraph_RAC_RUNTIME_COMPONENT_SmearUpdater_BPG Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.Fade out
// (BlueprintCallable, BlueprintEvent)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::Fade_out()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "Fade out");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.GetBonePoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  Points                                                 (Parm, OutParm)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::GetBonePoints(class FName BoneName, TArray<struct FVector>* Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "GetBonePoints");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_GetBonePoints Parms{};

	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (Points != nullptr)
		*Points = std::move(Parms.Points);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_DynamicSmears_BPG_C*          MasterSmearComponent_BPG                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimNotifyState*                 Param_Owning_ANS                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstanceDynamic*> Param_MaterialInstances                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class USkinnedMeshComponent*            Param_SkinnedMesh                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           Param_SmearRenderTarget                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FST_BoneSmearData                Param_SmearData                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TMap<class FName, int32>                Param_PointsPerBone                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<class FName, double>               Param_BoneLengths                                      (BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<class FName, class FName>          Param_BoneChildName                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// class URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C*Smear                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::Initialize(class UAC_DynamicSmears_BPG_C* MasterSmearComponent_BPG, const class UAnimNotifyState*& Param_Owning_ANS, TArray<class UMaterialInstanceDynamic*>& Param_MaterialInstances, class USkinnedMeshComponent* Param_SkinnedMesh, class UTextureRenderTarget2D* Param_SmearRenderTarget, const struct FST_BoneSmearData& Param_SmearData, const TMap<class FName, int32>& Param_PointsPerBone, const TMap<class FName, double>& Param_BoneLengths, const TMap<class FName, class FName>& Param_BoneChildName, class URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C** Smear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "Initialize");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_Initialize Parms{};

	Parms.MasterSmearComponent_BPG = MasterSmearComponent_BPG;
	Parms.Param_Owning_ANS = Param_Owning_ANS;
	Parms.Param_MaterialInstances = std::move(Param_MaterialInstances);
	Parms.Param_SkinnedMesh = Param_SkinnedMesh;
	Parms.Param_SmearRenderTarget = Param_SmearRenderTarget;
	Parms.Param_SmearData = std::move(Param_SmearData);
	Parms.Param_PointsPerBone = std::move(Param_PointsPerBone);
	Parms.Param_BoneLengths = std::move(Param_BoneLengths);
	Parms.Param_BoneChildName = std::move(Param_BoneChildName);

	UObject::ProcessEvent(Func, &Parms);

	Param_MaterialInstances = std::move(Parms.Param_MaterialInstances);

	if (Smear != nullptr)
		*Smear = Parms.Smear;
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.MoveSmearEndTorwardsPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Smear_end                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone_name                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Bone_point_index                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Current_bone_point                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::MoveSmearEndTorwardsPoint(const struct FVector& Smear_end, const class FName& Bone_name, int32 Bone_point_index, const struct FVector& Current_bone_point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "MoveSmearEndTorwardsPoint");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_MoveSmearEndTorwardsPoint Parms{};

	Parms.Smear_end = std::move(Smear_end);
	Parms.Bone_name = Bone_name;
	Parms.Bone_point_index = Bone_point_index;
	Parms.Current_bone_point = std::move(Current_bone_point);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.RecordSmearEndDistances
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::RecordSmearEndDistances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "RecordSmearEndDistances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.Save to shared
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Bone_name                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  UpdatedSmearEndLocations                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FVector>                  UpdatedPreviousLocations                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::Save_to_shared(const class FName& Bone_name, TArray<struct FVector>& UpdatedSmearEndLocations, TArray<struct FVector>& UpdatedPreviousLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "Save to shared");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_Save_to_shared Parms{};

	Parms.Bone_name = Bone_name;
	Parms.UpdatedSmearEndLocations = std::move(UpdatedSmearEndLocations);
	Parms.UpdatedPreviousLocations = std::move(UpdatedPreviousLocations);

	UObject::ProcessEvent(Func, &Parms);

	UpdatedSmearEndLocations = std::move(Parms.UpdatedSmearEndLocations);
	UpdatedPreviousLocations = std::move(Parms.UpdatedPreviousLocations);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.SaveDataToRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Pixel_X                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Pixel_Y                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::SaveDataToRenderTarget(class UCanvas* Canvas, int32 Pixel_X, int32 Pixel_Y, const struct FLinearColor& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "SaveDataToRenderTarget");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_SaveDataToRenderTarget Parms{};

	Parms.Canvas = Canvas;
	Parms.Pixel_X = Pixel_X;
	Parms.Pixel_Y = Pixel_Y;
	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.SendSettingsToRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          Canvas                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::SendSettingsToRenderTarget(class UCanvas* Canvas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "SendSettingsToRenderTarget");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_SendSettingsToRenderTarget Parms{};

	Parms.Canvas = Canvas;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.Turn off
// (BlueprintCallable, BlueprintEvent)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::Turn_off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "Turn off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.Update
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          RenderTargetCanvas                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::Update(class UCanvas* RenderTargetCanvas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "Update");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_Update Parms{};

	Parms.RenderTargetCanvas = RenderTargetCanvas;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RAC_RUNTIME_COMPONENT_SmearUpdater_BPG.RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C.UpdateBoneSmearVectors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCanvas*                          RenderTargetCanvas                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   SmearCatchupSpeedToUse                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C::UpdateBoneSmearVectors(class UCanvas* RenderTargetCanvas, float SmearCatchupSpeedToUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C", "UpdateBoneSmearVectors");

	Params::RAC_RUNTIME_COMPONENT_SmearUpdater_BPG_C_UpdateBoneSmearVectors Parms{};

	Parms.RenderTargetCanvas = RenderTargetCanvas;
	Parms.SmearCatchupSpeedToUse = SmearCatchupSpeedToUse;

	UObject::ProcessEvent(Func, &Parms);
}

}

