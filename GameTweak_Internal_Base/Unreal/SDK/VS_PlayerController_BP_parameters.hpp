#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: VS_PlayerController_BP

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function VS_PlayerController_BP.VS_PlayerController_BP_C.ExecuteUbergraph_VS_PlayerController_BP
// 0x00D0 (0x00D0 - 0x0000)
struct VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetSmallestTeam_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_1;                   // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_1;           // 0x0020(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key;                     // 0x0040(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue;             // 0x0058(0x0020)(NoDestructor)
	struct FInputActionValue                      Temp_struct_Variable;                              // 0x0078(0x0020)(NoDestructor)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0098(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0C[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FRoundStartNotify                      K2Node_Event__notify;                              // 0x00B4(0x000C)(ConstParm, NoDestructor)
	struct FAI_Characteristic                     CallFunc_MakeCharacteristic_ReturnValue;           // 0x00C0(0x000C)(NoDestructor)
};
static_assert(alignof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP) == 0x000008, "Wrong alignment on VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP");
static_assert(sizeof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP) == 0x0000D0, "Wrong size on VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, EntryPoint) == 0x000000, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, CallFunc_GetSmallestTeam_ReturnValue) == 0x000004, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::CallFunc_GetSmallestTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, K2Node_InputDebugKeyEvent_Key_1) == 0x000008, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::K2Node_InputDebugKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_1) == 0x000020, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, K2Node_InputDebugKeyEvent_Key) == 0x000040, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::K2Node_InputDebugKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue) == 0x000058, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, Temp_struct_Variable) == 0x000078, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, Temp_struct_Variable_1) == 0x000098, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, Temp_bool_Has_Been_Initd_Variable) == 0x0000B0, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, Temp_bool_IsClosed_Variable) == 0x0000B1, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, K2Node_Event__notify) == 0x0000B4, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::K2Node_Event__notify' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP, CallFunc_MakeCharacteristic_ReturnValue) == 0x0000C0, "Member 'VS_PlayerController_BP_C_ExecuteUbergraph_VS_PlayerController_BP::CallFunc_MakeCharacteristic_ReturnValue' has a wrong offset!");

// Function VS_PlayerController_BP.VS_PlayerController_BP_C.InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0
// 0x0038 (0x0038 - 0x0000)
struct VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0) == 0x000008, "Wrong alignment on VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0");
static_assert(sizeof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0) == 0x000038, "Wrong size on VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0");
static_assert(offsetof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0, Key) == 0x000000, "Member 'VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0::Key' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0, ActionValue) == 0x000018, "Member 'VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0::ActionValue' has a wrong offset!");

// Function VS_PlayerController_BP.VS_PlayerController_BP_C.InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1
// 0x0038 (0x0038 - 0x0000)
struct VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1) == 0x000008, "Wrong alignment on VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1");
static_assert(sizeof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1) == 0x000038, "Wrong size on VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1");
static_assert(offsetof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1, Key) == 0x000000, "Member 'VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1::Key' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1, ActionValue) == 0x000018, "Member 'VS_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1::ActionValue' has a wrong offset!");

// Function VS_PlayerController_BP.VS_PlayerController_BP_C.OnRoundStart
// 0x0020 (0x0020 - 0x0000)
struct VS_PlayerController_BP_C_OnRoundStart final
{
public:
	struct FRoundStartNotify                      Notify;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_3B0D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnnihilation_Reward_C*                 CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VS_PlayerController_BP_C_OnRoundStart) == 0x000008, "Wrong alignment on VS_PlayerController_BP_C_OnRoundStart");
static_assert(sizeof(VS_PlayerController_BP_C_OnRoundStart) == 0x000020, "Wrong size on VS_PlayerController_BP_C_OnRoundStart");
static_assert(offsetof(VS_PlayerController_BP_C_OnRoundStart, Notify) == 0x000000, "Member 'VS_PlayerController_BP_C_OnRoundStart::Notify' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_OnRoundStart, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000010, "Member 'VS_PlayerController_BP_C_OnRoundStart::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(VS_PlayerController_BP_C_OnRoundStart, CallFunc_Create_ReturnValue) == 0x000018, "Member 'VS_PlayerController_BP_C_OnRoundStart::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function VS_PlayerController_BP.VS_PlayerController_BP_C.OnShowRoundStart
// 0x000C (0x000C - 0x0000)
struct VS_PlayerController_BP_C_OnShowRoundStart final
{
public:
	struct FRoundStartNotify                      _notify;                                           // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(VS_PlayerController_BP_C_OnShowRoundStart) == 0x000004, "Wrong alignment on VS_PlayerController_BP_C_OnShowRoundStart");
static_assert(sizeof(VS_PlayerController_BP_C_OnShowRoundStart) == 0x00000C, "Wrong size on VS_PlayerController_BP_C_OnShowRoundStart");
static_assert(offsetof(VS_PlayerController_BP_C_OnShowRoundStart, _notify) == 0x000000, "Member 'VS_PlayerController_BP_C_OnShowRoundStart::_notify' has a wrong offset!");

}

