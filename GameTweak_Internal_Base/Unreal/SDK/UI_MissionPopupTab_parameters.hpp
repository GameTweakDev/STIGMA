#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_MissionPopupTab

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'UI_MissionPopupTab_C_BndEvt__UI_MissionPopupTab_Btn_Main_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.ExecuteUbergraph_UI_MissionPopupTab
// 0x0048 (0x0048 - 0x0000)
struct UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_Event__text;                                // 0x0008(0x0018)(ConstParm)
	bool                                          K2Node_Event__completed;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__red_dot;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__locked;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__imminent;                            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTimespan                              K2Node_Event__remain_time_span;                    // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__selected;                            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA1[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__activate;                            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab) == 0x000008, "Wrong alignment on UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab");
static_assert(sizeof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab) == 0x000048, "Wrong size on UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, EntryPoint) == 0x000000, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__text) == 0x000008, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__text' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__completed) == 0x000020, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__completed' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__red_dot) == 0x000021, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__red_dot' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__locked) == 0x000022, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__locked' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__imminent) == 0x000023, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__imminent' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__remain_time_span) == 0x000028, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__remain_time_span' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__selected) == 0x000030, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__selected' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_ComponentBoundEvent__widget) == 0x000038, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_ComponentBoundEvent__select) == 0x000040, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab, K2Node_Event__activate) == 0x000041, "Member 'UI_MissionPopupTab_C_ExecuteUbergraph_UI_MissionPopupTab::K2Node_Event__activate' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.OnEVENT_Select_End
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupTab_C_OnEVENT_Select_End final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_OnEVENT_Select_End) == 0x000001, "Wrong alignment on UI_MissionPopupTab_C_OnEVENT_Select_End");
static_assert(sizeof(UI_MissionPopupTab_C_OnEVENT_Select_End) == 0x000001, "Wrong size on UI_MissionPopupTab_C_OnEVENT_Select_End");
static_assert(offsetof(UI_MissionPopupTab_C_OnEVENT_Select_End, _selected) == 0x000000, "Member 'UI_MissionPopupTab_C_OnEVENT_Select_End::_selected' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetCompleted
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupTab_C_SetCompleted final
{
public:
	bool                                          _completed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_SetCompleted) == 0x000001, "Wrong alignment on UI_MissionPopupTab_C_SetCompleted");
static_assert(sizeof(UI_MissionPopupTab_C_SetCompleted) == 0x000001, "Wrong size on UI_MissionPopupTab_C_SetCompleted");
static_assert(offsetof(UI_MissionPopupTab_C_SetCompleted, _completed) == 0x000000, "Member 'UI_MissionPopupTab_C_SetCompleted::_completed' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetImminent
// 0x0010 (0x0010 - 0x0000)
struct UI_MissionPopupTab_C_SetImminent final
{
public:
	bool                                          _imminent;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTimespan                              _remain_time_span;                                 // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_SetImminent) == 0x000008, "Wrong alignment on UI_MissionPopupTab_C_SetImminent");
static_assert(sizeof(UI_MissionPopupTab_C_SetImminent) == 0x000010, "Wrong size on UI_MissionPopupTab_C_SetImminent");
static_assert(offsetof(UI_MissionPopupTab_C_SetImminent, _imminent) == 0x000000, "Member 'UI_MissionPopupTab_C_SetImminent::_imminent' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_SetImminent, _remain_time_span) == 0x000008, "Member 'UI_MissionPopupTab_C_SetImminent::_remain_time_span' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetLocked
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupTab_C_SetLocked final
{
public:
	bool                                          _locked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_SetLocked) == 0x000001, "Wrong alignment on UI_MissionPopupTab_C_SetLocked");
static_assert(sizeof(UI_MissionPopupTab_C_SetLocked) == 0x000001, "Wrong size on UI_MissionPopupTab_C_SetLocked");
static_assert(offsetof(UI_MissionPopupTab_C_SetLocked, _locked) == 0x000000, "Member 'UI_MissionPopupTab_C_SetLocked::_locked' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetPassActivate
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupTab_C_SetPassActivate final
{
public:
	bool                                          _activate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_SetPassActivate) == 0x000001, "Wrong alignment on UI_MissionPopupTab_C_SetPassActivate");
static_assert(sizeof(UI_MissionPopupTab_C_SetPassActivate) == 0x000001, "Wrong size on UI_MissionPopupTab_C_SetPassActivate");
static_assert(offsetof(UI_MissionPopupTab_C_SetPassActivate, _activate) == 0x000000, "Member 'UI_MissionPopupTab_C_SetPassActivate::_activate' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetRedDot
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionPopupTab_C_SetRedDot final
{
public:
	bool                                          _red_dot;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_SetRedDot) == 0x000001, "Wrong alignment on UI_MissionPopupTab_C_SetRedDot");
static_assert(sizeof(UI_MissionPopupTab_C_SetRedDot) == 0x000001, "Wrong size on UI_MissionPopupTab_C_SetRedDot");
static_assert(offsetof(UI_MissionPopupTab_C_SetRedDot, _red_dot) == 0x000000, "Member 'UI_MissionPopupTab_C_SetRedDot::_red_dot' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetRemainTimeText
// 0x0010 (0x0010 - 0x0000)
struct UI_MissionPopupTab_C_SetRemainTimeText final
{
public:
	struct FTimespan                              RemainTimeSpan;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Hours;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Days;                                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionPopupTab_C_SetRemainTimeText) == 0x000008, "Wrong alignment on UI_MissionPopupTab_C_SetRemainTimeText");
static_assert(sizeof(UI_MissionPopupTab_C_SetRemainTimeText) == 0x000010, "Wrong size on UI_MissionPopupTab_C_SetRemainTimeText");
static_assert(offsetof(UI_MissionPopupTab_C_SetRemainTimeText, RemainTimeSpan) == 0x000000, "Member 'UI_MissionPopupTab_C_SetRemainTimeText::RemainTimeSpan' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_SetRemainTimeText, Hours) == 0x000008, "Member 'UI_MissionPopupTab_C_SetRemainTimeText::Hours' has a wrong offset!");
static_assert(offsetof(UI_MissionPopupTab_C_SetRemainTimeText, Days) == 0x00000C, "Member 'UI_MissionPopupTab_C_SetRemainTimeText::Days' has a wrong offset!");

// Function UI_MissionPopupTab.UI_MissionPopupTab_C.SetTitle
// 0x0018 (0x0018 - 0x0000)
struct UI_MissionPopupTab_C_SetTitle final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_MissionPopupTab_C_SetTitle) == 0x000008, "Wrong alignment on UI_MissionPopupTab_C_SetTitle");
static_assert(sizeof(UI_MissionPopupTab_C_SetTitle) == 0x000018, "Wrong size on UI_MissionPopupTab_C_SetTitle");
static_assert(offsetof(UI_MissionPopupTab_C_SetTitle, _text) == 0x000000, "Member 'UI_MissionPopupTab_C_SetTitle::_text' has a wrong offset!");

}

