#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Region_Row

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_Region_Row.Ctrl_Region_Row_C
// 0x0038 (0x0528 - 0x04F0)
class UCtrl_Region_Row_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_CommonButtonBase_C*               Button;                                            // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_TextCheckBox_C*                   CHK_Picked;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_Region_C*                         Ctrl_Region;                                       // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_98;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 RegionCode;                                        // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UpdateSelection();
	void SetRegionSelection(bool _picked);
	bool OnSynchronizeProperties();
	void ExecuteUbergraph_Ctrl_Region_Row(int32 EntryPoint);
	void BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature(bool IsChecked);
	void BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void UpdateRegion();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_Region_Row_C">();
	}
	static class UCtrl_Region_Row_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_Region_Row_C>();
	}
};
static_assert(alignof(UCtrl_Region_Row_C) == 0x000008, "Wrong alignment on UCtrl_Region_Row_C");
static_assert(sizeof(UCtrl_Region_Row_C) == 0x000528, "Wrong size on UCtrl_Region_Row_C");
static_assert(offsetof(UCtrl_Region_Row_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_Region_Row_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_Region_Row_C, Button) == 0x0004F8, "Member 'UCtrl_Region_Row_C::Button' has a wrong offset!");
static_assert(offsetof(UCtrl_Region_Row_C, CHK_Picked) == 0x000500, "Member 'UCtrl_Region_Row_C::CHK_Picked' has a wrong offset!");
static_assert(offsetof(UCtrl_Region_Row_C, Ctrl_Region) == 0x000508, "Member 'UCtrl_Region_Row_C::Ctrl_Region' has a wrong offset!");
static_assert(offsetof(UCtrl_Region_Row_C, Image_98) == 0x000510, "Member 'UCtrl_Region_Row_C::Image_98' has a wrong offset!");
static_assert(offsetof(UCtrl_Region_Row_C, RegionCode) == 0x000518, "Member 'UCtrl_Region_Row_C::RegionCode' has a wrong offset!");

}

