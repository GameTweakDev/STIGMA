#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Player

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_Player.Ctrl_Player_C.BindPlayer
// 0x0070 (0x0070 - 0x0000)
struct Ctrl_Player_C_BindPlayer final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          _should_be_hidden;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D98[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedGameState*                K2Node_DynamicCast_AsMatch_Serviced_Game_State;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D99[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGameSetting                           CallFunc_GetGameSetting_ReturnValue;               // 0x0028(0x0040)(ConstParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Player_C_BindPlayer) == 0x000008, "Wrong alignment on Ctrl_Player_C_BindPlayer");
static_assert(sizeof(Ctrl_Player_C_BindPlayer) == 0x000070, "Wrong size on Ctrl_Player_C_BindPlayer");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, _ps) == 0x000000, "Member 'Ctrl_Player_C_BindPlayer::_ps' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, _should_be_hidden) == 0x000008, "Member 'Ctrl_Player_C_BindPlayer::_should_be_hidden' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Ctrl_Player_C_BindPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, K2Node_DynamicCast_AsMatch_Serviced_Game_State) == 0x000018, "Member 'Ctrl_Player_C_BindPlayer::K2Node_DynamicCast_AsMatch_Serviced_Game_State' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ctrl_Player_C_BindPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, CallFunc_GetGameSetting_ReturnValue) == 0x000028, "Member 'Ctrl_Player_C_BindPlayer::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_BindPlayer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000068, "Member 'Ctrl_Player_C_BindPlayer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ctrl_Player.Ctrl_Player_C.UpdateCharacter
// 0x01C8 (0x01C8 - 0x0000)
struct Ctrl_Player_C_UpdateCharacter final
{
public:
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0000(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	ECharaType                                    Chara_type;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidValue_ReturnValue;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9A[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetEmblem_ReturnValue;                    // 0x0030(0x0010)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetCharacterIcon_ReturnValue;             // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FConfig_Emblem                         CallFunc_GetEmblemDefine_ReturnValue;              // 0x0068(0x0158)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Player_C_UpdateCharacter) == 0x000008, "Wrong alignment on Ctrl_Player_C_UpdateCharacter");
static_assert(sizeof(Ctrl_Player_C_UpdateCharacter) == 0x0001C8, "Wrong size on Ctrl_Player_C_UpdateCharacter");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, Icon) == 0x000000, "Member 'Ctrl_Player_C_UpdateCharacter::Icon' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, Chara_type) == 0x000028, "Member 'Ctrl_Player_C_UpdateCharacter::Chara_type' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000029, "Member 'Ctrl_Player_C_UpdateCharacter::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, CallFunc_HasValidValue_ReturnValue) == 0x00002A, "Member 'Ctrl_Player_C_UpdateCharacter::CallFunc_HasValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, CallFunc_GetEmblem_ReturnValue) == 0x000030, "Member 'Ctrl_Player_C_UpdateCharacter::CallFunc_GetEmblem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, CallFunc_GetCharacterIcon_ReturnValue) == 0x000040, "Member 'Ctrl_Player_C_UpdateCharacter::CallFunc_GetCharacterIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, CallFunc_GetEmblemDefine_ReturnValue) == 0x000068, "Member 'Ctrl_Player_C_UpdateCharacter::CallFunc_GetEmblemDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateCharacter, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'Ctrl_Player_C_UpdateCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ctrl_Player.Ctrl_Player_C.UpdatePlayer
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Player_C_UpdatePlayer final
{
public:
	bool                                          CallFunc_HasValidValue_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Player_C_UpdatePlayer) == 0x000008, "Wrong alignment on Ctrl_Player_C_UpdatePlayer");
static_assert(sizeof(Ctrl_Player_C_UpdatePlayer) == 0x000018, "Wrong size on Ctrl_Player_C_UpdatePlayer");
static_assert(offsetof(Ctrl_Player_C_UpdatePlayer, CallFunc_HasValidValue_ReturnValue) == 0x000000, "Member 'Ctrl_Player_C_UpdatePlayer::CallFunc_HasValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdatePlayer, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'Ctrl_Player_C_UpdatePlayer::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdatePlayer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ctrl_Player_C_UpdatePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdatePlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'Ctrl_Player_C_UpdatePlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Ctrl_Player.Ctrl_Player_C.UpdateState
// 0x001C (0x001C - 0x0000)
struct Ctrl_Player_C_UpdateState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJoinType                                     CallFunc_GetJoinType_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9C[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          CallFunc_HasValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Player_C_UpdateState) == 0x000004, "Wrong alignment on Ctrl_Player_C_UpdateState");
static_assert(sizeof(Ctrl_Player_C_UpdateState) == 0x00001C, "Wrong size on Ctrl_Player_C_UpdateState");
static_assert(offsetof(Ctrl_Player_C_UpdateState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ctrl_Player_C_UpdateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateState, CallFunc_GetJoinType_ReturnValue) == 0x000001, "Member 'Ctrl_Player_C_UpdateState::CallFunc_GetJoinType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ctrl_Player_C_UpdateState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateState, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'Ctrl_Player_C_UpdateState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateState, CallFunc_HasValidValue_ReturnValue) == 0x000018, "Member 'Ctrl_Player_C_UpdateState::CallFunc_HasValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Player_C_UpdateState, CallFunc_IsReadyToFight_ReturnValue) == 0x000019, "Member 'Ctrl_Player_C_UpdateState::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");

}

