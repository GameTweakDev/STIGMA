#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HUD_FlyBullet

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_HUD_FlyBullet.Ctrl_HUD_FlyBullet_C.ExecuteUbergraph_Ctrl_HUD_FlyBullet
// 0x0048 (0x0048 - 0x0000)
struct Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateFlyBullet__delta_ImplicitCast;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet) == 0x000008, "Wrong alignment on Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet");
static_assert(sizeof(Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet) == 0x000048, "Wrong size on Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet, EntryPoint) == 0x000000, "Member 'Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet, K2Node_Event_MyGeometry) == 0x000004, "Member 'Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet, CallFunc_UpdateFlyBullet__delta_ImplicitCast) == 0x000040, "Member 'Ctrl_HUD_FlyBullet_C_ExecuteUbergraph_Ctrl_HUD_FlyBullet::CallFunc_UpdateFlyBullet__delta_ImplicitCast' has a wrong offset!");

// Function Ctrl_HUD_FlyBullet.Ctrl_HUD_FlyBullet_C.StartFly
// 0x0038 (0x0038 - 0x0000)
struct Ctrl_HUD_FlyBullet_C_StartFly final
{
public:
	double                                        _fly_angle;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _fly_power;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _rotation_power;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cos_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_FlyBullet_C_StartFly) == 0x000008, "Wrong alignment on Ctrl_HUD_FlyBullet_C_StartFly");
static_assert(sizeof(Ctrl_HUD_FlyBullet_C_StartFly) == 0x000038, "Wrong size on Ctrl_HUD_FlyBullet_C_StartFly");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, _fly_angle) == 0x000000, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::_fly_angle' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, _fly_power) == 0x000008, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::_fly_power' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, _rotation_power) == 0x000010, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::_rotation_power' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, CallFunc_DegreesToRadians_ReturnValue) == 0x000020, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, CallFunc_Sin_ReturnValue) == 0x000028, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_StartFly, CallFunc_Cos_ReturnValue) == 0x000030, "Member 'Ctrl_HUD_FlyBullet_C_StartFly::CallFunc_Cos_ReturnValue' has a wrong offset!");

// Function Ctrl_HUD_FlyBullet.Ctrl_HUD_FlyBullet_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_HUD_FlyBullet_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_FlyBullet_C_Tick) == 0x000004, "Wrong alignment on Ctrl_HUD_FlyBullet_C_Tick");
static_assert(sizeof(Ctrl_HUD_FlyBullet_C_Tick) == 0x00003C, "Wrong size on Ctrl_HUD_FlyBullet_C_Tick");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_HUD_FlyBullet_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_HUD_FlyBullet_C_Tick::InDeltaTime' has a wrong offset!");

// Function Ctrl_HUD_FlyBullet.Ctrl_HUD_FlyBullet_C.UpdateFlyBullet
// 0x0110 (0x0110 - 0x0000)
struct Ctrl_HUD_FlyBullet_C_UpdateFlyBullet final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_move_pos;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A0[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_SetRGBA_A_ImplicitCast;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet) == 0x000008, "Wrong alignment on Ctrl_HUD_FlyBullet_C_UpdateFlyBullet");
static_assert(sizeof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet) == 0x000110, "Wrong size on Ctrl_HUD_FlyBullet_C_UpdateFlyBullet");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, _delta) == 0x000000, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::_delta' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, Delta) == 0x000008, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::Delta' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, Temp_move_pos) == 0x000010, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::Temp_move_pos' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_BreakVector2D_X) == 0x000038, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000060, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000070, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_BreakColor_R) == 0x000080, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_BreakColor_G) == 0x000084, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_BreakColor_B) == 0x000088, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_BreakColor_A) == 0x00008C, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000090, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000B0, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_GetPosition_ReturnValue) == 0x0000C0, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000D0, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000F0, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x0000F8, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ctrl_HUD_FlyBullet_C_UpdateFlyBullet, CallFunc_LinearColor_SetRGBA_A_ImplicitCast) == 0x000108, "Member 'Ctrl_HUD_FlyBullet_C_UpdateFlyBullet::CallFunc_LinearColor_SetRGBA_A_ImplicitCast' has a wrong offset!");

}

