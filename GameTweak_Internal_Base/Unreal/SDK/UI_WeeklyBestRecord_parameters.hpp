#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_WeeklyBestRecord

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_WeeklyBestRecord.UI_WeeklyBestRecord_C.ExecuteUbergraph_UI_WeeklyBestRecord
// 0x0028 (0x0028 - 0x0000)
struct UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ULVData_WeeklyBestRecordEntry_C*        CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERankingType                                  K2Node_Event__ranking_Type;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeeklyBestRecordType                         K2Node_Event__record_type;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40BF[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         K2Node_Event__week;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__value;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event__score;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord) == 0x000008, "Wrong alignment on UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord");
static_assert(sizeof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord) == 0x000028, "Wrong size on UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, EntryPoint) == 0x000000, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, K2Node_Event__ranking_Type) == 0x000010, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::K2Node_Event__ranking_Type' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, K2Node_Event__record_type) == 0x000011, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::K2Node_Event__record_type' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, K2Node_Event__week) == 0x000014, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::K2Node_Event__week' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, K2Node_Event__value) == 0x000018, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::K2Node_Event__value' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, K2Node_Event__score) == 0x00001C, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::K2Node_Event__score' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x000020, "Member 'UI_WeeklyBestRecord_C_ExecuteUbergraph_UI_WeeklyBestRecord::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

// Function UI_WeeklyBestRecord.UI_WeeklyBestRecord_C.AddList
// 0x0010 (0x0010 - 0x0000)
struct UI_WeeklyBestRecord_C_AddList final
{
public:
	ERankingType                                  _ranking_type;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeeklyBestRecordType                         _record_type;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C0[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         _week;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _value;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _score;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_WeeklyBestRecord_C_AddList) == 0x000004, "Wrong alignment on UI_WeeklyBestRecord_C_AddList");
static_assert(sizeof(UI_WeeklyBestRecord_C_AddList) == 0x000010, "Wrong size on UI_WeeklyBestRecord_C_AddList");
static_assert(offsetof(UI_WeeklyBestRecord_C_AddList, _ranking_type) == 0x000000, "Member 'UI_WeeklyBestRecord_C_AddList::_ranking_type' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_AddList, _record_type) == 0x000001, "Member 'UI_WeeklyBestRecord_C_AddList::_record_type' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_AddList, _week) == 0x000004, "Member 'UI_WeeklyBestRecord_C_AddList::_week' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_AddList, _value) == 0x000008, "Member 'UI_WeeklyBestRecord_C_AddList::_value' has a wrong offset!");
static_assert(offsetof(UI_WeeklyBestRecord_C_AddList, _score) == 0x00000C, "Member 'UI_WeeklyBestRecord_C_AddList::_score' has a wrong offset!");

}

