#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_RemainDateTimer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_RemainDateTimer.UI_RemainDateTimer_C.ExecuteUbergraph_UI_RemainDateTimer
// 0x0028 (0x0028 - 0x0000)
struct UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__alert;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32CC[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayTimespan_ReturnValue;           // 0x0010(0x0018)()
};
static_assert(alignof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer) == 0x000008, "Wrong alignment on UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer");
static_assert(sizeof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer) == 0x000028, "Wrong size on UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer");
static_assert(offsetof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer, EntryPoint) == 0x000000, "Member 'UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer, K2Node_Event__alert) == 0x000005, "Member 'UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer::K2Node_Event__alert' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer, K2Node_Event_IsDesignTime) == 0x000006, "Member 'UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer, CallFunc_MakeTimespan_ReturnValue) == 0x000008, "Member 'UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer, CallFunc_GetDisplayTimespan_ReturnValue) == 0x000010, "Member 'UI_RemainDateTimer_C_ExecuteUbergraph_UI_RemainDateTimer::CallFunc_GetDisplayTimespan_ReturnValue' has a wrong offset!");

// Function UI_RemainDateTimer.UI_RemainDateTimer_C.OnAlert
// 0x0001 (0x0001 - 0x0000)
struct UI_RemainDateTimer_C_OnAlert final
{
public:
	bool                                          _alert;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RemainDateTimer_C_OnAlert) == 0x000001, "Wrong alignment on UI_RemainDateTimer_C_OnAlert");
static_assert(sizeof(UI_RemainDateTimer_C_OnAlert) == 0x000001, "Wrong size on UI_RemainDateTimer_C_OnAlert");
static_assert(offsetof(UI_RemainDateTimer_C_OnAlert, _alert) == 0x000000, "Member 'UI_RemainDateTimer_C_OnAlert::_alert' has a wrong offset!");

// Function UI_RemainDateTimer.UI_RemainDateTimer_C.OnSynchronizeProperties
// 0x0050 (0x0050 - 0x0000)
struct UI_RemainDateTimer_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32CD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayTimespan_ReturnValue;           // 0x0030(0x0018)()
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RemainDateTimer_C_OnSynchronizeProperties) == 0x000008, "Wrong alignment on UI_RemainDateTimer_C_OnSynchronizeProperties");
static_assert(sizeof(UI_RemainDateTimer_C_OnSynchronizeProperties) == 0x000050, "Wrong size on UI_RemainDateTimer_C_OnSynchronizeProperties");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, CallFunc_MakeTimespan_ReturnValue) == 0x000028, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, CallFunc_GetDisplayTimespan_ReturnValue) == 0x000030, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::CallFunc_GetDisplayTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RemainDateTimer_C_OnSynchronizeProperties, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'UI_RemainDateTimer_C_OnSynchronizeProperties::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_RemainDateTimer.UI_RemainDateTimer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_RemainDateTimer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RemainDateTimer_C_PreConstruct) == 0x000001, "Wrong alignment on UI_RemainDateTimer_C_PreConstruct");
static_assert(sizeof(UI_RemainDateTimer_C_PreConstruct) == 0x000001, "Wrong size on UI_RemainDateTimer_C_PreConstruct");
static_assert(offsetof(UI_RemainDateTimer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_RemainDateTimer_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

