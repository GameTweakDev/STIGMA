#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Challenge_PlayerControllerBP

#include "Basic.hpp"

#include "Challenge_PlayerControllerBP_classes.hpp"
#include "Challenge_PlayerControllerBP_parameters.hpp"


namespace SDK
{

// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.CleanUpBattleWidgetsAfterDelay
// (Public, BlueprintCallable, BlueprintEvent)

void AChallenge_PlayerControllerBP_C::CleanUpBattleWidgetsAfterDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "CleanUpBattleWidgetsAfterDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.CleanUpBattleWidgetsBeforeDelay
// (Public, BlueprintCallable, BlueprintEvent)

void AChallenge_PlayerControllerBP_C::CleanUpBattleWidgetsBeforeDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "CleanUpBattleWidgetsBeforeDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.ClosePopup
// (Public, BlueprintCallable, BlueprintEvent)

void AChallenge_PlayerControllerBP_C::ClosePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "ClosePopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.Determine Next Phase
// (Public, BlueprintCallable, BlueprintEvent)

void AChallenge_PlayerControllerBP_C::Determine_Next_Phase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "Determine Next Phase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.ExecuteUbergraph_Challenge_PlayerControllerBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AChallenge_PlayerControllerBP_C::ExecuteUbergraph_Challenge_PlayerControllerBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "ExecuteUbergraph_Challenge_PlayerControllerBP");

	Params::Challenge_PlayerControllerBP_C_ExecuteUbergraph_Challenge_PlayerControllerBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.OnFinishRound
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FChallengeResult                 _prev                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FChallengeResult                 _result                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void AChallenge_PlayerControllerBP_C::OnFinishRound(const struct FChallengeResult& _prev, const struct FChallengeResult& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "OnFinishRound");

	Params::Challenge_PlayerControllerBP_C_OnFinishRound Parms{};

	Parms._prev = std::move(_prev);
	Parms._result = std::move(_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.ShowChallengeResult
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FACK_ChallengeRead>       _top3                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FACK_ChallengeRead>       _rankers                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AChallenge_PlayerControllerBP_C::ShowChallengeResult(const TArray<struct FACK_ChallengeRead>& _top3, const TArray<struct FACK_ChallengeRead>& _rankers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "ShowChallengeResult");

	Params::Challenge_PlayerControllerBP_C_ShowChallengeResult Parms{};

	Parms._top3 = std::move(_top3);
	Parms._rankers = std::move(_rankers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.ShowMissionResult
// (Public, BlueprintCallable, BlueprintEvent)

void AChallenge_PlayerControllerBP_C::ShowMissionResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "ShowMissionResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_PlayerControllerBP.Challenge_PlayerControllerBP_C.ShowRoundResult
// (Public, BlueprintCallable, BlueprintEvent)

void AChallenge_PlayerControllerBP_C::ShowRoundResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerControllerBP_C", "ShowRoundResult");

	UObject::ProcessEvent(Func, nullptr);
}

}

