#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Widget_Goods

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Widget_Goods.Widget_Goods_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct Widget_Goods_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on Widget_Goods_C_BP_OnItemExpansionChanged");
static_assert(sizeof(Widget_Goods_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on Widget_Goods_C_BP_OnItemExpansionChanged");
static_assert(offsetof(Widget_Goods_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'Widget_Goods_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct Widget_Goods_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on Widget_Goods_C_BP_OnItemSelectionChanged");
static_assert(sizeof(Widget_Goods_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on Widget_Goods_C_BP_OnItemSelectionChanged");
static_assert(offsetof(Widget_Goods_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'Widget_Goods_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.Clear Widget
// 0x01F8 (0x01F8 - 0x0000)
struct Widget_Goods_C_Clear_Widget final
{
public:
	struct FGoodsTag                              K2Node_MakeStruct_GoodsTag;                        // 0x0000(0x0005)(NoDestructor)
	uint8                                         Pad_39AB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Goods                          K2Node_MakeStruct_Config_Goods;                    // 0x0008(0x01F0)()
};
static_assert(alignof(Widget_Goods_C_Clear_Widget) == 0x000008, "Wrong alignment on Widget_Goods_C_Clear_Widget");
static_assert(sizeof(Widget_Goods_C_Clear_Widget) == 0x0001F8, "Wrong size on Widget_Goods_C_Clear_Widget");
static_assert(offsetof(Widget_Goods_C_Clear_Widget, K2Node_MakeStruct_GoodsTag) == 0x000000, "Member 'Widget_Goods_C_Clear_Widget::K2Node_MakeStruct_GoodsTag' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Clear_Widget, K2Node_MakeStruct_Config_Goods) == 0x000008, "Member 'Widget_Goods_C_Clear_Widget::K2Node_MakeStruct_Config_Goods' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.ExecuteUbergraph_Widget_Goods
// 0x0110 (0x0110 - 0x0000)
struct Widget_Goods_C_ExecuteUbergraph_Widget_Goods final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBundleGoods_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x9];                                     // 0x0007(0x0009)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0010(0x00D0)()
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AD[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UGoodsObject*                           K2Node_DynamicCast_AsGoods_Object;                 // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__selected;                            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__focus;                               // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AE[0x1];                                     // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods) == 0x000010, "Wrong alignment on Widget_Goods_C_ExecuteUbergraph_Widget_Goods");
static_assert(sizeof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods) == 0x000110, "Wrong size on Widget_Goods_C_ExecuteUbergraph_Widget_Goods");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, EntryPoint) == 0x000000, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::EntryPoint' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_Event_bIsExpanded) == 0x000004, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_Event_IsDesignTime) == 0x000005, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, CallFunc_IsBundleGoods_ReturnValue) == 0x000006, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::CallFunc_IsBundleGoods_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_MakeStruct_SlateBrush) == 0x000010, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_Event_ListItemObject) == 0x0000E0, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_Event_bIsSelected) == 0x0000E8, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_DynamicCast_AsGoods_Object) == 0x0000F0, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_DynamicCast_AsGoods_Object' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_Event__selected) == 0x0000F9, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_Event__selected' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_Event__focus) == 0x0000FA, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_Event__focus' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_ExecuteUbergraph_Widget_Goods, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0000FC, "Member 'Widget_Goods_C_ExecuteUbergraph_Widget_Goods::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.Init Widget
// 0x0290 (0x0290 - 0x0000)
struct Widget_Goods_C_Init_Widget final
{
public:
	class UGoodsObject*                           Param_GoodsObj;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemIDRef_Mission>             Mission;                                           // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetGoodsDesc_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	TArray<EItemUITag>                            CallFunc_GetUITags_ReturnValue;                    // 0x0048(0x0010)(ReferenceParm)
	struct FItemID                                CallFunc_GetItemID_ReturnValue;                    // 0x0058(0x0010)(HasGetValueTypeHash)
	struct FGoodsID                               CallFunc_ToGoodsID_ReturnValue;                    // 0x0068(0x0010)(HasGetValueTypeHash)
	struct FConfig_Goods                          CallFunc_GetGoodsDefineByID_ReturnValue;           // 0x0078(0x01F0)(ConstParm)
	int32                                         CallFunc_GetBuyCount_ReturnValue;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGoodsTag                              CallFunc_GetTags_ReturnValue;                      // 0x026C(0x0005)(ConstParm, NoDestructor)
	uint8                                         Pad_39B0[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FItemIDRef_Mission>             K2Node_MakeArray_Array;                            // 0x0278(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitWidget_result;                        // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitWidget_result_1;                      // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_Init_Widget) == 0x000008, "Wrong alignment on Widget_Goods_C_Init_Widget");
static_assert(sizeof(Widget_Goods_C_Init_Widget) == 0x000290, "Wrong size on Widget_Goods_C_Init_Widget");
static_assert(offsetof(Widget_Goods_C_Init_Widget, Param_GoodsObj) == 0x000000, "Member 'Widget_Goods_C_Init_Widget::Param_GoodsObj' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, Mission) == 0x000008, "Member 'Widget_Goods_C_Init_Widget::Mission' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Widget_Goods_C_Init_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_GetGoodsDesc_ReturnValue) == 0x000020, "Member 'Widget_Goods_C_Init_Widget::CallFunc_GetGoodsDesc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'Widget_Goods_C_Init_Widget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_GetUITags_ReturnValue) == 0x000048, "Member 'Widget_Goods_C_Init_Widget::CallFunc_GetUITags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_GetItemID_ReturnValue) == 0x000058, "Member 'Widget_Goods_C_Init_Widget::CallFunc_GetItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_ToGoodsID_ReturnValue) == 0x000068, "Member 'Widget_Goods_C_Init_Widget::CallFunc_ToGoodsID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_GetGoodsDefineByID_ReturnValue) == 0x000078, "Member 'Widget_Goods_C_Init_Widget::CallFunc_GetGoodsDefineByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_GetBuyCount_ReturnValue) == 0x000268, "Member 'Widget_Goods_C_Init_Widget::CallFunc_GetBuyCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_GetTags_ReturnValue) == 0x00026C, "Member 'Widget_Goods_C_Init_Widget::CallFunc_GetTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, K2Node_MakeArray_Array) == 0x000278, "Member 'Widget_Goods_C_Init_Widget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_IsValid_ReturnValue_1) == 0x000288, "Member 'Widget_Goods_C_Init_Widget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_InitWidget_result) == 0x000289, "Member 'Widget_Goods_C_Init_Widget::CallFunc_InitWidget_result' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Init_Widget, CallFunc_InitWidget_result_1) == 0x00028A, "Member 'Widget_Goods_C_Init_Widget::CallFunc_InitWidget_result_1' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.OnEVENT_Focus
// 0x0001 (0x0001 - 0x0000)
struct Widget_Goods_C_OnEVENT_Focus final
{
public:
	bool                                          _focus;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_OnEVENT_Focus) == 0x000001, "Wrong alignment on Widget_Goods_C_OnEVENT_Focus");
static_assert(sizeof(Widget_Goods_C_OnEVENT_Focus) == 0x000001, "Wrong size on Widget_Goods_C_OnEVENT_Focus");
static_assert(offsetof(Widget_Goods_C_OnEVENT_Focus, _focus) == 0x000000, "Member 'Widget_Goods_C_OnEVENT_Focus::_focus' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.OnEVENT_Select_End
// 0x0001 (0x0001 - 0x0000)
struct Widget_Goods_C_OnEVENT_Select_End final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_OnEVENT_Select_End) == 0x000001, "Wrong alignment on Widget_Goods_C_OnEVENT_Select_End");
static_assert(sizeof(Widget_Goods_C_OnEVENT_Select_End) == 0x000001, "Wrong size on Widget_Goods_C_OnEVENT_Select_End");
static_assert(offsetof(Widget_Goods_C_OnEVENT_Select_End, _selected) == 0x000000, "Member 'Widget_Goods_C_OnEVENT_Select_End::_selected' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct Widget_Goods_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on Widget_Goods_C_OnListItemObjectSet");
static_assert(sizeof(Widget_Goods_C_OnListItemObjectSet) == 0x000008, "Wrong size on Widget_Goods_C_OnListItemObjectSet");
static_assert(offsetof(Widget_Goods_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'Widget_Goods_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.OpenBundleInfo
// 0x0018 (0x0018 - 0x0000)
struct Widget_Goods_C_OpenBundleInfo final
{
public:
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_ShopBundlePopup*                    K2Node_DynamicCast_AsUI_Shop_Bundle_Popup;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_OpenBundleInfo) == 0x000008, "Wrong alignment on Widget_Goods_C_OpenBundleInfo");
static_assert(sizeof(Widget_Goods_C_OpenBundleInfo) == 0x000018, "Wrong size on Widget_Goods_C_OpenBundleInfo");
static_assert(offsetof(Widget_Goods_C_OpenBundleInfo, CallFunc_DoModal_ReturnValue) == 0x000000, "Member 'Widget_Goods_C_OpenBundleInfo::CallFunc_DoModal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_OpenBundleInfo, K2Node_DynamicCast_AsUI_Shop_Bundle_Popup) == 0x000008, "Member 'Widget_Goods_C_OpenBundleInfo::K2Node_DynamicCast_AsUI_Shop_Bundle_Popup' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_OpenBundleInfo, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Widget_Goods_C_OpenBundleInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Widget_Goods_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_PreConstruct) == 0x000001, "Wrong alignment on Widget_Goods_C_PreConstruct");
static_assert(sizeof(Widget_Goods_C_PreConstruct) == 0x000001, "Wrong size on Widget_Goods_C_PreConstruct");
static_assert(offsetof(Widget_Goods_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Widget_Goods_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.Set Limit
// 0x0160 (0x0160 - 0x0000)
struct Widget_Goods_C_Set_Limit final
{
public:
	struct FBuyLimit                              BuyLimit;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         BuyCount;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              End_date;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              Start_date;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         User_level;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _buy_count;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBuyLimit                              _buy_limit;                                        // 0x0040(0x0020)(Edit, BlueprintVisible, NoDestructor)
	class FText                                   LimitText;                                         // 0x0060(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsPurchasableFromLevelCondition_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B2[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue_1;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B3[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetUserLevel_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGoodsOwningInfo                              CallFunc_GetGoodsOwningInfo_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B4[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_GetLimitTypeText_out;                     // 0x00A8(0x0018)()
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B5[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00D0(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B6[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00F0(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue_1;                        // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue_1;   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B7[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x0128(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B8[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AppendText_ReturnValue_1;                 // 0x0148(0x0018)()
};
static_assert(alignof(Widget_Goods_C_Set_Limit) == 0x000008, "Wrong alignment on Widget_Goods_C_Set_Limit");
static_assert(sizeof(Widget_Goods_C_Set_Limit) == 0x000160, "Wrong size on Widget_Goods_C_Set_Limit");
static_assert(offsetof(Widget_Goods_C_Set_Limit, BuyLimit) == 0x000000, "Member 'Widget_Goods_C_Set_Limit::BuyLimit' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, BuyCount) == 0x000020, "Member 'Widget_Goods_C_Set_Limit::BuyCount' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, End_date) == 0x000028, "Member 'Widget_Goods_C_Set_Limit::End_date' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, Start_date) == 0x000030, "Member 'Widget_Goods_C_Set_Limit::Start_date' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, User_level) == 0x000038, "Member 'Widget_Goods_C_Set_Limit::User_level' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, _buy_count) == 0x00003C, "Member 'Widget_Goods_C_Set_Limit::_buy_count' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, _buy_limit) == 0x000040, "Member 'Widget_Goods_C_Set_Limit::_buy_limit' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, LimitText) == 0x000060, "Member 'Widget_Goods_C_Set_Limit::LimitText' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_IsPurchasableFromLevelCondition_ReturnValue) == 0x000078, "Member 'Widget_Goods_C_Set_Limit::CallFunc_IsPurchasableFromLevelCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_MakeDateTime_ReturnValue) == 0x000080, "Member 'Widget_Goods_C_Set_Limit::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Less_DateTimeDateTime_ReturnValue) == 0x000088, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Less_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Less_DateTimeDateTime_ReturnValue_1) == 0x000089, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Less_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_BooleanAND_ReturnValue) == 0x00008A, "Member 'Widget_Goods_C_Set_Limit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_GetUserLevel_ReturnValue) == 0x00008C, "Member 'Widget_Goods_C_Set_Limit::CallFunc_GetUserLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, K2Node_CreateDelegate_OutputDelegate) == 0x000090, "Member 'Widget_Goods_C_Set_Limit::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_GetGoodsOwningInfo_ReturnValue) == 0x0000A0, "Member 'Widget_Goods_C_Set_Limit::CallFunc_GetGoodsOwningInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, K2Node_SwitchEnum_CmpSuccess) == 0x0000A1, "Member 'Widget_Goods_C_Set_Limit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A2, "Member 'Widget_Goods_C_Set_Limit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_GetLimitTypeText_out) == 0x0000A8, "Member 'Widget_Goods_C_Set_Limit::CallFunc_GetLimitTypeText_out' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Now_ReturnValue) == 0x0000C0, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x0000C8, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Conv_IntToText_ReturnValue) == 0x0000D0, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'Widget_Goods_C_Set_Limit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000F0, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, K2Node_CreateDelegate_OutputDelegate_1) == 0x000108, "Member 'Widget_Goods_C_Set_Limit::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Now_ReturnValue_1) == 0x000118, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Now_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_Greater_DateTimeDateTime_ReturnValue_1) == 0x000120, "Member 'Widget_Goods_C_Set_Limit::CallFunc_Greater_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_AppendText_ReturnValue) == 0x000128, "Member 'Widget_Goods_C_Set_Limit::CallFunc_AppendText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_BooleanAND_ReturnValue_1) == 0x000140, "Member 'Widget_Goods_C_Set_Limit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_Set_Limit, CallFunc_AppendText_ReturnValue_1) == 0x000148, "Member 'Widget_Goods_C_Set_Limit::CallFunc_AppendText_ReturnValue_1' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.SetBuyInfo
// 0x0030 (0x0030 - 0x0000)
struct Widget_Goods_C_SetBuyInfo final
{
public:
	EGoodsBuyInfo                                 Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Param;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _param;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BA[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_GetLevelConditionText_ReturnValue;        // 0x0010(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_SetBuyInfo) == 0x000008, "Wrong alignment on Widget_Goods_C_SetBuyInfo");
static_assert(sizeof(Widget_Goods_C_SetBuyInfo) == 0x000030, "Wrong size on Widget_Goods_C_SetBuyInfo");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, Reason) == 0x000000, "Member 'Widget_Goods_C_SetBuyInfo::Reason' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, Param) == 0x000004, "Member 'Widget_Goods_C_SetBuyInfo::Param' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, _param) == 0x000008, "Member 'Widget_Goods_C_SetBuyInfo::_param' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'Widget_Goods_C_SetBuyInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'Widget_Goods_C_SetBuyInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, CallFunc_GetLevelConditionText_ReturnValue) == 0x000010, "Member 'Widget_Goods_C_SetBuyInfo::CallFunc_GetLevelConditionText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'Widget_Goods_C_SetBuyInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetBuyInfo, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'Widget_Goods_C_SetBuyInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Widget_Goods.Widget_Goods_C.SetGoodsGrade
// 0x0080 (0x0080 - 0x0000)
struct Widget_Goods_C_SetGoodsGrade final
{
public:
	EItemGrade                                    Grade;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGradeDef                              CallFunc_GetGradeDefine_ReturnValue;               // 0x0008(0x0070)(ConstParm)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Widget_Goods_C_SetGoodsGrade) == 0x000008, "Wrong alignment on Widget_Goods_C_SetGoodsGrade");
static_assert(sizeof(Widget_Goods_C_SetGoodsGrade) == 0x000080, "Wrong size on Widget_Goods_C_SetGoodsGrade");
static_assert(offsetof(Widget_Goods_C_SetGoodsGrade, Grade) == 0x000000, "Member 'Widget_Goods_C_SetGoodsGrade::Grade' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetGoodsGrade, CallFunc_GetGradeDefine_ReturnValue) == 0x000008, "Member 'Widget_Goods_C_SetGoodsGrade::CallFunc_GetGradeDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Widget_Goods_C_SetGoodsGrade, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000078, "Member 'Widget_Goods_C_SetGoodsGrade::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

}

