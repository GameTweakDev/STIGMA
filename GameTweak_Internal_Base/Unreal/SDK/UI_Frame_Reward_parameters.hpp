#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Frame_Reward

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_Frame_Reward.UI_Frame_Reward_C.OnSynchronizeProperties
// 0x000C (0x000C - 0x0000)
struct UI_Frame_Reward_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B13[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_OnSynchronizeProperties) == 0x000004, "Wrong alignment on UI_Frame_Reward_C_OnSynchronizeProperties");
static_assert(sizeof(UI_Frame_Reward_C_OnSynchronizeProperties) == 0x00000C, "Wrong size on UI_Frame_Reward_C_OnSynchronizeProperties");
static_assert(offsetof(UI_Frame_Reward_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'UI_Frame_Reward_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_OnSynchronizeProperties, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'UI_Frame_Reward_C_OnSynchronizeProperties::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_OnSynchronizeProperties, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000008, "Member 'UI_Frame_Reward_C_OnSynchronizeProperties::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function UI_Frame_Reward.UI_Frame_Reward_C.ExecuteUbergraph_UI_Frame_Reward
// 0x0008 (0x0008 - 0x0000)
struct UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward) == 0x000004, "Wrong alignment on UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward");
static_assert(sizeof(UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward) == 0x000008, "Wrong size on UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward");
static_assert(offsetof(UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward, EntryPoint) == 0x000000, "Member 'UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward, K2Node_Event_bIsSelected) == 0x000004, "Member 'UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward, K2Node_Event_bIsExpanded) == 0x000005, "Member 'UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward::K2Node_Event_bIsExpanded' has a wrong offset!");

// Function UI_Frame_Reward.UI_Frame_Reward_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Frame_Reward_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on UI_Frame_Reward_C_BP_OnItemSelectionChanged");
static_assert(sizeof(UI_Frame_Reward_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on UI_Frame_Reward_C_BP_OnItemSelectionChanged");
static_assert(offsetof(UI_Frame_Reward_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'UI_Frame_Reward_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function UI_Frame_Reward.UI_Frame_Reward_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Frame_Reward_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on UI_Frame_Reward_C_BP_OnItemExpansionChanged");
static_assert(sizeof(UI_Frame_Reward_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on UI_Frame_Reward_C_BP_OnItemExpansionChanged");
static_assert(offsetof(UI_Frame_Reward_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'UI_Frame_Reward_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function UI_Frame_Reward.UI_Frame_Reward_C.BindTier
// 0x0170 (0x0170 - 0x0000)
struct UI_Frame_Reward_C_BindTier final
{
public:
	class FText                                   _tier_name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         _TRP_min;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B14[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        _top_ratio;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              _Icon;                                             // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B15[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AsPercent_Float_ReturnValue;              // 0x0058(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0150(0x0018)()
	float                                         CallFunc_AsPercent_Float_Value_ImplicitCast;       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_BindTier) == 0x000008, "Wrong alignment on UI_Frame_Reward_C_BindTier");
static_assert(sizeof(UI_Frame_Reward_C_BindTier) == 0x000170, "Wrong size on UI_Frame_Reward_C_BindTier");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, _tier_name) == 0x000000, "Member 'UI_Frame_Reward_C_BindTier::_tier_name' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, _TRP_min) == 0x000018, "Member 'UI_Frame_Reward_C_BindTier::_TRP_min' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, _top_ratio) == 0x000020, "Member 'UI_Frame_Reward_C_BindTier::_top_ratio' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, _Icon) == 0x000028, "Member 'UI_Frame_Reward_C_BindTier::_Icon' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'UI_Frame_Reward_C_BindTier::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, CallFunc_AsPercent_Float_ReturnValue) == 0x000058, "Member 'UI_Frame_Reward_C_BindTier::CallFunc_AsPercent_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000070, "Member 'UI_Frame_Reward_C_BindTier::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'UI_Frame_Reward_C_BindTier::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'UI_Frame_Reward_C_BindTier::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, K2Node_MakeArray_Array) == 0x000118, "Member 'UI_Frame_Reward_C_BindTier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, K2Node_MakeArray_Array_1) == 0x000128, "Member 'UI_Frame_Reward_C_BindTier::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, CallFunc_Format_ReturnValue) == 0x000138, "Member 'UI_Frame_Reward_C_BindTier::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, CallFunc_Format_ReturnValue_1) == 0x000150, "Member 'UI_Frame_Reward_C_BindTier::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindTier, CallFunc_AsPercent_Float_Value_ImplicitCast) == 0x000168, "Member 'UI_Frame_Reward_C_BindTier::CallFunc_AsPercent_Float_Value_ImplicitCast' has a wrong offset!");

// Function UI_Frame_Reward.UI_Frame_Reward_C.BindItem
// 0x0168 (0x0168 - 0x0000)
struct UI_Frame_Reward_C_BindItem final
{
public:
	struct FRewardItem                            _item;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	struct FItemEntry                             CallFunc_GetItemEntry_ReturnValue;                 // 0x0030(0x0130)()
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_BindItem) == 0x000008, "Wrong alignment on UI_Frame_Reward_C_BindItem");
static_assert(sizeof(UI_Frame_Reward_C_BindItem) == 0x000168, "Wrong size on UI_Frame_Reward_C_BindItem");
static_assert(offsetof(UI_Frame_Reward_C_BindItem, _item) == 0x000000, "Member 'UI_Frame_Reward_C_BindItem::_item' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindItem, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'UI_Frame_Reward_C_BindItem::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindItem, CallFunc_GetItemEntry_ReturnValue) == 0x000030, "Member 'UI_Frame_Reward_C_BindItem::CallFunc_GetItemEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindItem, CallFunc_IsValidItemID_ReturnValue) == 0x000160, "Member 'UI_Frame_Reward_C_BindItem::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_BindItem, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000161, "Member 'UI_Frame_Reward_C_BindItem::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function UI_Frame_Reward.UI_Frame_Reward_C.Bind Currency
// 0x01C0 (0x01C0 - 0x0000)
struct UI_Frame_Reward_C_Bind_Currency final
{
public:
	struct FRewardItem                            _currency;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	EItemCategory                                 CallFunc_GetCategory_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B16[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID_Currency                       CallFunc_ToCurrencyID_ReturnValue;                 // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B17[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCurrencyDef                           CallFunc_GetCurrencyDefineFromID_ReturnValue;      // 0x0050(0x0168)()
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Frame_Reward_C_Bind_Currency) == 0x000008, "Wrong alignment on UI_Frame_Reward_C_Bind_Currency");
static_assert(sizeof(UI_Frame_Reward_C_Bind_Currency) == 0x0001C0, "Wrong size on UI_Frame_Reward_C_Bind_Currency");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, _currency) == 0x000000, "Member 'UI_Frame_Reward_C_Bind_Currency::_currency' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'UI_Frame_Reward_C_Bind_Currency::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, CallFunc_GetCategory_ReturnValue) == 0x000030, "Member 'UI_Frame_Reward_C_Bind_Currency::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, CallFunc_ToCurrencyID_ReturnValue) == 0x000038, "Member 'UI_Frame_Reward_C_Bind_Currency::CallFunc_ToCurrencyID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'UI_Frame_Reward_C_Bind_Currency::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, CallFunc_GetCurrencyDefineFromID_ReturnValue) == 0x000050, "Member 'UI_Frame_Reward_C_Bind_Currency::CallFunc_GetCurrencyDefineFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Frame_Reward_C_Bind_Currency, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001B8, "Member 'UI_Frame_Reward_C_Bind_Currency::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

}

