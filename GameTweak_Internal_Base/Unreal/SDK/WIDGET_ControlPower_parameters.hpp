#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: WIDGET_ControlPower

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_ControlPower.WIDGET_ControlPower_C.HideTooltip
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_ControlPower_C_HideTooltip final
{
public:
	bool                                          _is_hide;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ControlPower_C_HideTooltip) == 0x000001, "Wrong alignment on WIDGET_ControlPower_C_HideTooltip");
static_assert(sizeof(WIDGET_ControlPower_C_HideTooltip) == 0x000001, "Wrong size on WIDGET_ControlPower_C_HideTooltip");
static_assert(offsetof(WIDGET_ControlPower_C_HideTooltip, _is_hide) == 0x000000, "Member 'WIDGET_ControlPower_C_HideTooltip::_is_hide' has a wrong offset!");

// Function WIDGET_ControlPower.WIDGET_ControlPower_C.OnGetTooltip
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_ControlPower_C_OnGetTooltip final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_NonItemEntry_C*             K2Node_DynamicCast_AsUI_Tooltip_Non_Item_Entry;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ControlPower_C_OnGetTooltip) == 0x000008, "Wrong alignment on WIDGET_ControlPower_C_OnGetTooltip");
static_assert(sizeof(WIDGET_ControlPower_C_OnGetTooltip) == 0x000020, "Wrong size on WIDGET_ControlPower_C_OnGetTooltip");
static_assert(offsetof(WIDGET_ControlPower_C_OnGetTooltip, ReturnValue) == 0x000000, "Member 'WIDGET_ControlPower_C_OnGetTooltip::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_OnGetTooltip, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000008, "Member 'WIDGET_ControlPower_C_OnGetTooltip::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_OnGetTooltip, K2Node_DynamicCast_AsUI_Tooltip_Non_Item_Entry) == 0x000010, "Member 'WIDGET_ControlPower_C_OnGetTooltip::K2Node_DynamicCast_AsUI_Tooltip_Non_Item_Entry' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_OnGetTooltip, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_ControlPower_C_OnGetTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_ControlPower.WIDGET_ControlPower_C.SetChara
// 0x0B48 (0x0B48 - 0x0000)
struct WIDGET_ControlPower_C_SetChara final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        TotalControlPower;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MainControlPower;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBuffCalculatedResultStat_ReturnValue;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_FTrunc64_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x0028(0x0018)()
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0040(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D0F[0x7];                                     // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D10[0x7];                                     // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0A40(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0A90(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0AE0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0AF0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0B00(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0B18(0x0018)()
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D11[0x7];                                     // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        K2Node_VariableSet_TotalControlPower_ImplicitCast; // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MainControlPower_ImplicitCast;  // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ControlPower_C_SetChara) == 0x000008, "Wrong alignment on WIDGET_ControlPower_C_SetChara");
static_assert(sizeof(WIDGET_ControlPower_C_SetChara) == 0x000B48, "Wrong size on WIDGET_ControlPower_C_SetChara");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, _chara_type) == 0x000000, "Member 'WIDGET_ControlPower_C_SetChara::_chara_type' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, TotalControlPower) == 0x000008, "Member 'WIDGET_ControlPower_C_SetChara::TotalControlPower' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, MainControlPower) == 0x000010, "Member 'WIDGET_ControlPower_C_SetChara::MainControlPower' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_GetBuffCalculatedResultStat_ReturnValue) == 0x000018, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_GetBuffCalculatedResultStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_FTrunc64_ReturnValue) == 0x000020, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_FTrunc64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_Conv_Int64ToText_ReturnValue) == 0x000028, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_GetCharacterDefByType__out_data) == 0x000040, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_GetCharacterDefByType_ReturnValue) == 0x000A20, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000A28, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000A30, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_Abs_ReturnValue) == 0x000A38, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, K2Node_MakeStruct_FormatArgumentData) == 0x000A40, "Member 'WIDGET_ControlPower_C_SetChara::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, K2Node_MakeStruct_FormatArgumentData_1) == 0x000A90, "Member 'WIDGET_ControlPower_C_SetChara::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, K2Node_MakeArray_Array) == 0x000AE0, "Member 'WIDGET_ControlPower_C_SetChara::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, K2Node_MakeArray_Array_1) == 0x000AF0, "Member 'WIDGET_ControlPower_C_SetChara::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_Format_ReturnValue) == 0x000B00, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_Format_ReturnValue_1) == 0x000B18, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000B30, "Member 'WIDGET_ControlPower_C_SetChara::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, K2Node_VariableSet_TotalControlPower_ImplicitCast) == 0x000B38, "Member 'WIDGET_ControlPower_C_SetChara::K2Node_VariableSet_TotalControlPower_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetChara, K2Node_VariableSet_MainControlPower_ImplicitCast) == 0x000B40, "Member 'WIDGET_ControlPower_C_SetChara::K2Node_VariableSet_MainControlPower_ImplicitCast' has a wrong offset!");

// Function WIDGET_ControlPower.WIDGET_ControlPower_C.SetGunObject
// 0x0170 (0x0170 - 0x0000)
struct WIDGET_ControlPower_C_SetGunObject final
{
public:
	class UGunObject*                             Param_GunObject;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          _is_init;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D12[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        TotalControlPower;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MainControlPower;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D13[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D14[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0038(0x0018)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D15[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0140(0x0018)()
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D16[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        K2Node_VariableSet_TotalControlPower_ImplicitCast; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MainControlPower_ImplicitCast;  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ControlPower_C_SetGunObject) == 0x000008, "Wrong alignment on WIDGET_ControlPower_C_SetGunObject");
static_assert(sizeof(WIDGET_ControlPower_C_SetGunObject) == 0x000170, "Wrong size on WIDGET_ControlPower_C_SetGunObject");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, Param_GunObject) == 0x000000, "Member 'WIDGET_ControlPower_C_SetGunObject::Param_GunObject' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, _is_init) == 0x000008, "Member 'WIDGET_ControlPower_C_SetGunObject::_is_init' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, TotalControlPower) == 0x000010, "Member 'WIDGET_ControlPower_C_SetGunObject::TotalControlPower' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, MainControlPower) == 0x000018, "Member 'WIDGET_ControlPower_C_SetGunObject::MainControlPower' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000038, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WIDGET_ControlPower_C_SetGunObject::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'WIDGET_ControlPower_C_SetGunObject::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, K2Node_MakeArray_Array) == 0x000108, "Member 'WIDGET_ControlPower_C_SetGunObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, K2Node_MakeArray_Array_1) == 0x000118, "Member 'WIDGET_ControlPower_C_SetGunObject::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Format_ReturnValue) == 0x000128, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_Format_ReturnValue_1) == 0x000140, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000158, "Member 'WIDGET_ControlPower_C_SetGunObject::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, K2Node_VariableSet_TotalControlPower_ImplicitCast) == 0x000160, "Member 'WIDGET_ControlPower_C_SetGunObject::K2Node_VariableSet_TotalControlPower_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WIDGET_ControlPower_C_SetGunObject, K2Node_VariableSet_MainControlPower_ImplicitCast) == 0x000168, "Member 'WIDGET_ControlPower_C_SetGunObject::K2Node_VariableSet_MainControlPower_ImplicitCast' has a wrong offset!");

}

