#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_MissionSuccessSlot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_MissionSuccessSlot.UI_MissionSuccessSlot_C.ExecuteUbergraph_UI_MissionSuccessSlot
// 0x0038 (0x0038 - 0x0000)
struct UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_Event__text;                                // 0x0008(0x0018)(ConstParm)
	struct FLinearColor                           K2Node_Event__color;                               // 0x0020(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionType                                  K2Node_Event__mission_type;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot) == 0x000008, "Wrong alignment on UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot");
static_assert(sizeof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot) == 0x000038, "Wrong size on UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot");
static_assert(offsetof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot, EntryPoint) == 0x000000, "Member 'UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot, K2Node_Event__text) == 0x000008, "Member 'UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot::K2Node_Event__text' has a wrong offset!");
static_assert(offsetof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot, K2Node_Event__color) == 0x000020, "Member 'UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot::K2Node_Event__color' has a wrong offset!");
static_assert(offsetof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot, K2Node_Event__mission_type) == 0x000030, "Member 'UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot::K2Node_Event__mission_type' has a wrong offset!");
static_assert(offsetof(UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'UI_MissionSuccessSlot_C_ExecuteUbergraph_UI_MissionSuccessSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_MissionSuccessSlot.UI_MissionSuccessSlot_C.SetColor
// 0x0010 (0x0010 - 0x0000)
struct UI_MissionSuccessSlot_C_SetColor final
{
public:
	struct FLinearColor                           _color;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionSuccessSlot_C_SetColor) == 0x000004, "Wrong alignment on UI_MissionSuccessSlot_C_SetColor");
static_assert(sizeof(UI_MissionSuccessSlot_C_SetColor) == 0x000010, "Wrong size on UI_MissionSuccessSlot_C_SetColor");
static_assert(offsetof(UI_MissionSuccessSlot_C_SetColor, _color) == 0x000000, "Member 'UI_MissionSuccessSlot_C_SetColor::_color' has a wrong offset!");

// Function UI_MissionSuccessSlot.UI_MissionSuccessSlot_C.SetTitle
// 0x0018 (0x0018 - 0x0000)
struct UI_MissionSuccessSlot_C_SetTitle final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_MissionSuccessSlot_C_SetTitle) == 0x000008, "Wrong alignment on UI_MissionSuccessSlot_C_SetTitle");
static_assert(sizeof(UI_MissionSuccessSlot_C_SetTitle) == 0x000018, "Wrong size on UI_MissionSuccessSlot_C_SetTitle");
static_assert(offsetof(UI_MissionSuccessSlot_C_SetTitle, _text) == 0x000000, "Member 'UI_MissionSuccessSlot_C_SetTitle::_text' has a wrong offset!");

// Function UI_MissionSuccessSlot.UI_MissionSuccessSlot_C.SetType
// 0x0001 (0x0001 - 0x0000)
struct UI_MissionSuccessSlot_C_SetType final
{
public:
	EMissionType                                  _mission_type;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MissionSuccessSlot_C_SetType) == 0x000001, "Wrong alignment on UI_MissionSuccessSlot_C_SetType");
static_assert(sizeof(UI_MissionSuccessSlot_C_SetType) == 0x000001, "Wrong size on UI_MissionSuccessSlot_C_SetType");
static_assert(offsetof(UI_MissionSuccessSlot_C_SetType, _mission_type) == 0x000000, "Member 'UI_MissionSuccessSlot_C_SetType::_mission_type' has a wrong offset!");

}

