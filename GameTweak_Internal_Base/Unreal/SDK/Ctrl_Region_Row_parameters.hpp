#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Region_Row

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_Region_Row.Ctrl_Region_Row_C.UpdateSelection
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_Region_Row_C_UpdateSelection final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStigmaGameInstance*                    K2Node_DynamicCast_AsStigma_Game_Instance;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FRegion                                CallFunc_GetRegionData_ReturnValue;                // 0x0018(0x0018)(ConstParm)
};
static_assert(alignof(Ctrl_Region_Row_C_UpdateSelection) == 0x000008, "Wrong alignment on Ctrl_Region_Row_C_UpdateSelection");
static_assert(sizeof(Ctrl_Region_Row_C_UpdateSelection) == 0x000030, "Wrong size on Ctrl_Region_Row_C_UpdateSelection");
static_assert(offsetof(Ctrl_Region_Row_C_UpdateSelection, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'Ctrl_Region_Row_C_UpdateSelection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_UpdateSelection, K2Node_DynamicCast_AsStigma_Game_Instance) == 0x000008, "Member 'Ctrl_Region_Row_C_UpdateSelection::K2Node_DynamicCast_AsStigma_Game_Instance' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_UpdateSelection, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ctrl_Region_Row_C_UpdateSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_UpdateSelection, CallFunc_GetRegionData_ReturnValue) == 0x000018, "Member 'Ctrl_Region_Row_C_UpdateSelection::CallFunc_GetRegionData_ReturnValue' has a wrong offset!");

// Function Ctrl_Region_Row.Ctrl_Region_Row_C.SetRegionSelection
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_Region_Row_C_SetRegionSelection final
{
public:
	bool                                          _picked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStigmaGameInstance*                    K2Node_DynamicCast_AsStigma_Game_Instance;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_Row_C_SetRegionSelection) == 0x000008, "Wrong alignment on Ctrl_Region_Row_C_SetRegionSelection");
static_assert(sizeof(Ctrl_Region_Row_C_SetRegionSelection) == 0x000020, "Wrong size on Ctrl_Region_Row_C_SetRegionSelection");
static_assert(offsetof(Ctrl_Region_Row_C_SetRegionSelection, _picked) == 0x000000, "Member 'Ctrl_Region_Row_C_SetRegionSelection::_picked' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_SetRegionSelection, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'Ctrl_Region_Row_C_SetRegionSelection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_SetRegionSelection, K2Node_DynamicCast_AsStigma_Game_Instance) == 0x000010, "Member 'Ctrl_Region_Row_C_SetRegionSelection::K2Node_DynamicCast_AsStigma_Game_Instance' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_SetRegionSelection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ctrl_Region_Row_C_SetRegionSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_Region_Row.Ctrl_Region_Row_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Region_Row_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_Row_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_Region_Row_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_Region_Row_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_Region_Row_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_Region_Row_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_Region_Row_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_Region_Row.Ctrl_Region_Row_C.ExecuteUbergraph_Ctrl_Region_Row
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40E8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row) == 0x000008, "Wrong alignment on Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row");
static_assert(sizeof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row) == 0x000018, "Wrong size on Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row");
static_assert(offsetof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row, EntryPoint) == 0x000000, "Member 'Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row, K2Node_ComponentBoundEvent_IsChecked) == 0x000004, "Member 'Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row, CallFunc_IsChecked_ReturnValue) == 0x000011, "Member 'Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'Ctrl_Region_Row_C_ExecuteUbergraph_Ctrl_Region_Row::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ctrl_Region_Row.Ctrl_Region_Row_C.BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000000, "Member 'Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_CHK_Picked_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function Ctrl_Region_Row.Ctrl_Region_Row_C.BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'Ctrl_Region_Row_C_BndEvt__Ctrl_Region_Row_Button_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

}

