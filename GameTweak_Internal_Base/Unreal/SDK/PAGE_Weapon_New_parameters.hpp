#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: PAGE_Weapon_New

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "InputCore_structs.hpp"
#include "BPGLib_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.TryGunSave
// 0x0050 (0x0050 - 0x0000)
struct PAGE_Weapon_New_C_TryGunSave final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4032[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<EGunPartsSlot>                         CallFunc_GetUnownedGunParts_ReturnValue;           // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4033[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EResultCode _rcode, struct FACK_UpdateGunSpec& _ack)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4034[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UPopup_Alert_WeaponCustomNotOwn_C*      CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_TryGunSave) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_TryGunSave");
static_assert(sizeof(PAGE_Weapon_New_C_TryGunSave) == 0x000050, "Wrong size on PAGE_Weapon_New_C_TryGunSave");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_TryGunSave::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, CallFunc_GetUnownedGunParts_ReturnValue) == 0x000008, "Member 'PAGE_Weapon_New_C_TryGunSave::CallFunc_GetUnownedGunParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, CallFunc_Array_IsEmpty_ReturnValue) == 0x000018, "Member 'PAGE_Weapon_New_C_TryGunSave::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'PAGE_Weapon_New_C_TryGunSave::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'PAGE_Weapon_New_C_TryGunSave::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, CallFunc_Create_ReturnValue) == 0x000040, "Member 'PAGE_Weapon_New_C_TryGunSave::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_TryGunSave, CallFunc_DoModal_ReturnValue) == 0x000048, "Member 'PAGE_Weapon_New_C_TryGunSave::CallFunc_DoModal_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.ShowPopup_WeaponChange
// 0x0020 (0x0020 - 0x0000)
struct PAGE_Weapon_New_C_ShowPopup_WeaponChange final
{
public:
	class UPopup_WeaponChange_C*                  CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_ShowPopup_WeaponChange) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_ShowPopup_WeaponChange");
static_assert(sizeof(PAGE_Weapon_New_C_ShowPopup_WeaponChange) == 0x000020, "Wrong size on PAGE_Weapon_New_C_ShowPopup_WeaponChange");
static_assert(offsetof(PAGE_Weapon_New_C_ShowPopup_WeaponChange, CallFunc_Create_ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_ShowPopup_WeaponChange::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ShowPopup_WeaponChange, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PAGE_Weapon_New_C_ShowPopup_WeaponChange::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ShowPopup_WeaponChange, CallFunc_DoModal_ReturnValue) == 0x000018, "Member 'PAGE_Weapon_New_C_ShowPopup_WeaponChange::CallFunc_DoModal_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.SetBookmark
// 0x0018 (0x0018 - 0x0000)
struct PAGE_Weapon_New_C_SetBookmark final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4035[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void(EResultCode _rcode, struct FACK_UpdateGunSpec& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGun_ReturnValue;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_SetBookmark) == 0x000004, "Wrong alignment on PAGE_Weapon_New_C_SetBookmark");
static_assert(sizeof(PAGE_Weapon_New_C_SetBookmark) == 0x000018, "Wrong size on PAGE_Weapon_New_C_SetBookmark");
static_assert(offsetof(PAGE_Weapon_New_C_SetBookmark, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_SetBookmark::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_SetBookmark, CallFunc_GetGunType_ReturnValue) == 0x000001, "Member 'PAGE_Weapon_New_C_SetBookmark::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_SetBookmark, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PAGE_Weapon_New_C_SetBookmark::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_SetBookmark, CallFunc_HasGun_ReturnValue) == 0x000014, "Member 'PAGE_Weapon_New_C_SetBookmark::CallFunc_HasGun_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Set Expired BP
// 0x0020 (0x0020 - 0x0000)
struct PAGE_Weapon_New_C_Set_Expired_BP final
{
public:
	bool                                          Is_main_parts_expired;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGun_ReturnValue;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4036[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<EGunPartsSlot>                         CallFunc_GetUnownedGunParts_ReturnValue;           // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_Set_Expired_BP) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_Set_Expired_BP");
static_assert(sizeof(PAGE_Weapon_New_C_Set_Expired_BP) == 0x000020, "Wrong size on PAGE_Weapon_New_C_Set_Expired_BP");
static_assert(offsetof(PAGE_Weapon_New_C_Set_Expired_BP, Is_main_parts_expired) == 0x000000, "Member 'PAGE_Weapon_New_C_Set_Expired_BP::Is_main_parts_expired' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Set_Expired_BP, CallFunc_GetGunType_ReturnValue) == 0x000001, "Member 'PAGE_Weapon_New_C_Set_Expired_BP::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Set_Expired_BP, CallFunc_HasGun_ReturnValue) == 0x000002, "Member 'PAGE_Weapon_New_C_Set_Expired_BP::CallFunc_HasGun_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Set_Expired_BP, CallFunc_GetUnownedGunParts_ReturnValue) == 0x000008, "Member 'PAGE_Weapon_New_C_Set_Expired_BP::CallFunc_GetUnownedGunParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Set_Expired_BP, CallFunc_Array_IsEmpty_ReturnValue) == 0x000018, "Member 'PAGE_Weapon_New_C_Set_Expired_BP::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.OnUpdateGun
// 0x0520 (0x0520 - 0x0000)
struct PAGE_Weapon_New_C_OnUpdateGun final
{
public:
	bool                                          _is_init;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4037[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Gun_name;                                          // 0x0008(0x0018)(Edit, BlueprintVisible)
	class UPanel_GunPresetEditor_C*               K2Node_DynamicCast_AsPanel_Gun_Preset_Editor;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4038[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetPresetName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4039[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	struct FGunEntry_Main                         CallFunc_GetGunMainEntry_ReturnValue;              // 0x0060(0x0350)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03B0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0400(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0410(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0428(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0478(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0488(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x04A0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x04F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0500(0x0018)()
	EGunType                                      CallFunc_GetGunType_ReturnValue_1;                 // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExpiredGun_ReturnValue;                 // 0x0519(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGun_ReturnValue;                       // 0x051A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentCharacterType_ReturnValue;      // 0x051B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_OnUpdateGun) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_OnUpdateGun");
static_assert(sizeof(PAGE_Weapon_New_C_OnUpdateGun) == 0x000520, "Wrong size on PAGE_Weapon_New_C_OnUpdateGun");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, _is_init) == 0x000000, "Member 'PAGE_Weapon_New_C_OnUpdateGun::_is_init' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, Gun_name) == 0x000008, "Member 'PAGE_Weapon_New_C_OnUpdateGun::Gun_name' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_DynamicCast_AsPanel_Gun_Preset_Editor) == 0x000020, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_DynamicCast_AsPanel_Gun_Preset_Editor' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_GetPresetName_ReturnValue) == 0x000030, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_GetPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_GetGunType_ReturnValue) == 0x000040, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_GetGunMainEntry_ReturnValue) == 0x000060, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_GetGunMainEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_MakeStruct_FormatArgumentData) == 0x0003B0, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_MakeArray_Array) == 0x000400, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_Format_ReturnValue) == 0x000410, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_MakeStruct_FormatArgumentData_1) == 0x000428, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_MakeArray_Array_1) == 0x000478, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_Format_ReturnValue_1) == 0x000488, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_MakeStruct_FormatArgumentData_2) == 0x0004A0, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, K2Node_MakeArray_Array_2) == 0x0004F0, "Member 'PAGE_Weapon_New_C_OnUpdateGun::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_Format_ReturnValue_2) == 0x000500, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_GetGunType_ReturnValue_1) == 0x000518, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_GetGunType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_IsExpiredGun_ReturnValue) == 0x000519, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_IsExpiredGun_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_HasGun_ReturnValue) == 0x00051A, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_HasGun_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnUpdateGun, CallFunc_GetCurrentCharacterType_ReturnValue) == 0x00051B, "Member 'PAGE_Weapon_New_C_OnUpdateGun::CallFunc_GetCurrentCharacterType_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.OnKeyDown
// 0x0220 (0x0220 - 0x0000)
struct PAGE_Weapon_New_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403A[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALobbyControllerBase*                   K2Node_DynamicCast_AsLobby_Controller_Base;        // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_OnKeyDown) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_OnKeyDown");
static_assert(sizeof(PAGE_Weapon_New_C_OnKeyDown) == 0x000220, "Wrong size on PAGE_Weapon_New_C_OnKeyDown");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'PAGE_Weapon_New_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'PAGE_Weapon_New_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'PAGE_Weapon_New_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'PAGE_Weapon_New_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'PAGE_Weapon_New_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'PAGE_Weapon_New_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, CallFunc_GetPlayerController_ReturnValue) == 0x000208, "Member 'PAGE_Weapon_New_C_OnKeyDown::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, K2Node_DynamicCast_AsLobby_Controller_Base) == 0x000210, "Member 'PAGE_Weapon_New_C_OnKeyDown::K2Node_DynamicCast_AsLobby_Controller_Base' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_OnKeyDown, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'PAGE_Weapon_New_C_OnKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.GetVisibility_TxtCantEquip
// 0x0003 (0x0003 - 0x0000)
struct PAGE_Weapon_New_C_GetVisibility_TxtCantEquip final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_BTNConfirm_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_GetVisibility_TxtCantEquip) == 0x000001, "Wrong alignment on PAGE_Weapon_New_C_GetVisibility_TxtCantEquip");
static_assert(sizeof(PAGE_Weapon_New_C_GetVisibility_TxtCantEquip) == 0x000003, "Wrong size on PAGE_Weapon_New_C_GetVisibility_TxtCantEquip");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_TxtCantEquip, ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_GetVisibility_TxtCantEquip::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_TxtCantEquip, CallFunc_GetVisibility_BTNConfirm_ReturnValue) == 0x000001, "Member 'PAGE_Weapon_New_C_GetVisibility_TxtCantEquip::CallFunc_GetVisibility_BTNConfirm_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_TxtCantEquip, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'PAGE_Weapon_New_C_GetVisibility_TxtCantEquip::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.GetVisibility_BTNReplaceEquip
// 0x0006 (0x0006 - 0x0000)
struct PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGun_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEqual_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip) == 0x000001, "Wrong alignment on PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip");
static_assert(sizeof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip) == 0x000006, "Wrong size on PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip, ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip, CallFunc_GetGunType_ReturnValue) == 0x000003, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip, CallFunc_HasGun_ReturnValue) == 0x000004, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip::CallFunc_HasGun_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip, CallFunc_IsEqual_ReturnValue) == 0x000005, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNReplaceEquip::CallFunc_IsEqual_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.GetVisibility_BTNConfirm
// 0x0008 (0x0008 - 0x0000)
struct PAGE_Weapon_New_C_GetVisibility_BTNConfirm final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSelectPartsOnlyOwnedParts_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGun_ReturnValue;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectingParts_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEqual_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm) == 0x000001, "Wrong alignment on PAGE_Weapon_New_C_GetVisibility_BTNConfirm");
static_assert(sizeof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm) == 0x000008, "Wrong size on PAGE_Weapon_New_C_GetVisibility_BTNConfirm");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_HasSelectPartsOnlyOwnedParts_ReturnValue) == 0x000001, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_HasSelectPartsOnlyOwnedParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_GetGunType_ReturnValue) == 0x000003, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_HasGun_ReturnValue) == 0x000004, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_HasGun_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_IsSelectingParts_ReturnValue) == 0x000005, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_IsSelectingParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetVisibility_BTNConfirm, CallFunc_IsEqual_ReturnValue) == 0x000007, "Member 'PAGE_Weapon_New_C_GetVisibility_BTNConfirm::CallFunc_IsEqual_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.GetTooltipWidget
// 0x0010 (0x0010 - 0x0000)
struct PAGE_Weapon_New_C_GetTooltipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_GetTooltipWidget) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_GetTooltipWidget");
static_assert(sizeof(PAGE_Weapon_New_C_GetTooltipWidget) == 0x000010, "Wrong size on PAGE_Weapon_New_C_GetTooltipWidget");
static_assert(offsetof(PAGE_Weapon_New_C_GetTooltipWidget, ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_GetTooltipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_GetTooltipWidget, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000008, "Member 'PAGE_Weapon_New_C_GetTooltipWidget::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.ExecuteUbergraph_PAGE_Weapon_New
// 0x00F0 (0x00F0 - 0x0000)
struct PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403B[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_2;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_2;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_1;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_1;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ULVData_Gun*                            K2Node_ComponentBoundEvent__item_1;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULVData_GunParts*                       K2Node_ComponentBoundEvent__item;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403E[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UInvenItem*                             CallFunc_GetInvenItem_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunPreset                             CallFunc_MakeGunPreset_ReturnValue;                // 0x0060(0x0010)(HasGetValueTypeHash)
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4040[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         K2Node_ComponentBoundEvent__slot;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue_2;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4041[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunPreset                             CallFunc_MakeGunPreset_ReturnValue_1;              // 0x0088(0x0010)(HasGetValueTypeHash)
	TDelegate<void(const struct FACK_UpdateGunSpec& _ack)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInvenItem*                             K2Node_ComponentBoundEvent__inven_item;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPopup_NamingPreset_C*                  CallFunc_Create_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      CallFunc_GetGunType_ReturnValue_3;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4042[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPopupBase*                             CallFunc_DoModal_ReturnValue_1;                    // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_ShopQuickPurchase*                  K2Node_DynamicCast_AsUI_Shop_Quick_Purchase;       // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4043[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FGoodsID>                       CallFunc_GetGunTypeGoodsList_ReturnValue;          // 0x00E0(0x0010)(ReferenceParm)
};
static_assert(alignof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New");
static_assert(sizeof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New) == 0x0000F0, "Wrong size on PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, EntryPoint) == 0x000000, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_GetGunType_ReturnValue) == 0x000015, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_GetGunType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__widget_2) == 0x000018, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__widget_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__select_2) == 0x000020, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__select_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__widget_1) == 0x000028, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__widget_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__select_1) == 0x000030, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__select_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__item_1) == 0x000038, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__item_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__item) == 0x000040, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__item' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_GetInvenItem_ReturnValue) == 0x000050, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_GetInvenItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_GetGunType_ReturnValue_1) == 0x000058, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_GetGunType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_MakeGunPreset_ReturnValue) == 0x000060, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_MakeGunPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__widget) == 0x000070, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__select) == 0x000078, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__slot) == 0x00007C, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__slot' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_GetGunType_ReturnValue_2) == 0x000081, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_GetGunType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_MakeGunPreset_ReturnValue_1) == 0x000088, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_MakeGunPreset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_CreateDelegate_OutputDelegate_1) == 0x000098, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_ComponentBoundEvent__inven_item) == 0x0000A8, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_ComponentBoundEvent__inven_item' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_Create_ReturnValue) == 0x0000B0, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_IsValid_ReturnValue_4) == 0x0000B8, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_GetGunType_ReturnValue_3) == 0x0000B9, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_GetGunType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_DoModal_ReturnValue) == 0x0000C0, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_DoModal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_DoModal_ReturnValue_1) == 0x0000C8, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_DoModal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_DynamicCast_AsUI_Shop_Quick_Purchase) == 0x0000D0, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_DynamicCast_AsUI_Shop_Quick_Purchase' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New, CallFunc_GetGunTypeGoodsList_ReturnValue) == 0x0000E0, "Member 'PAGE_Weapon_New_C_ExecuteUbergraph_PAGE_Weapon_New::CallFunc_GetGunTypeGoodsList_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature final
{
public:
	int32                                         _slot;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature) == 0x000004, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature) == 0x000004, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature, _slot) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_PresetEditor_K2Node_ComponentBoundEvent_7_OnClick_Slot__DelegateSignature::_slot' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature final
{
public:
	class ULVData_GunParts*                       _item;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature) == 0x000008, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature, _item) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_12_OnPartsSelect__DelegateSignature::_item' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature final
{
public:
	class ULVData_Gun*                            _item;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature) == 0x000008, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature, _item) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_GunNPartsListViews_K2Node_ComponentBoundEvent_0_OnGunSelect__DelegateSignature::_item' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New_BTN_Equip_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature final
{
public:
	class UInvenItem*                             _inven_item;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature) == 0x000008, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature, _inven_item) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Weapon_New__GunNPartsListViews_K2Node_ComponentBoundEvent_3_OnBuy_Parts__DelegateSignature::_inven_item' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Shop_K2Node_ComponentBoundEvent_5_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'PAGE_Weapon_New_C_BndEvt__PAGE_Armory_Gun_BTN_Custom_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Ack_OnUpdatePresetName
// 0x0048 (0x0048 - 0x0000)
struct PAGE_Weapon_New_C_Ack_OnUpdatePresetName final
{
public:
	struct FACK_UpdateGunSpec                     _ack;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UPanel_GunPresetEditor_C*               K2Node_DynamicCast_AsPanel_Gun_Preset_Editor;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4044[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetPresetName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_Ack_OnUpdatePresetName");
static_assert(sizeof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName) == 0x000048, "Wrong size on PAGE_Weapon_New_C_Ack_OnUpdatePresetName");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName, _ack) == 0x000000, "Member 'PAGE_Weapon_New_C_Ack_OnUpdatePresetName::_ack' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName, K2Node_DynamicCast_AsPanel_Gun_Preset_Editor) == 0x000010, "Member 'PAGE_Weapon_New_C_Ack_OnUpdatePresetName::K2Node_DynamicCast_AsPanel_Gun_Preset_Editor' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAGE_Weapon_New_C_Ack_OnUpdatePresetName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName, CallFunc_GetPresetName_ReturnValue) == 0x000020, "Member 'PAGE_Weapon_New_C_Ack_OnUpdatePresetName::CallFunc_GetPresetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdatePresetName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'PAGE_Weapon_New_C_Ack_OnUpdatePresetName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Ack_OnUpdateGunSettingInBuyParts
// 0x0038 (0x0038 - 0x0000)
struct PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4045[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FACK_UpdateGunSpec                     _ack;                                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FNetReply                              ReturnValue;                                       // 0x0018(0x0020)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts");
static_assert(sizeof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts) == 0x000038, "Wrong size on PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts, _rcode) == 0x000000, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts::_rcode' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts, _ack) == 0x000008, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts::_ack' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts, ReturnValue) == 0x000018, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInBuyParts::ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Ack_OnUpdateGunSettingInAlertPopup
// 0x0030 (0x0030 - 0x0000)
struct PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup final
{
public:
	struct FACK_UpdateGunSpec                     Temp_struct_Variable;                              // 0x0000(0x0010)(ConstParm)
	struct FNetReply                              CallFunc_Ack_OnUpdateGunSetting_ReturnValue;       // 0x0010(0x0020)()
};
static_assert(alignof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup");
static_assert(sizeof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup) == 0x000030, "Wrong size on PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup, Temp_struct_Variable) == 0x000000, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup, CallFunc_Ack_OnUpdateGunSetting_ReturnValue) == 0x000010, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSettingInAlertPopup::CallFunc_Ack_OnUpdateGunSetting_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Ack_OnUpdateGunSetting
// 0x00C8 (0x00C8 - 0x0000)
struct PAGE_Weapon_New_C_Ack_OnUpdateGunSetting final
{
public:
	EResultCode                                   _rcode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4046[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FACK_UpdateGunSpec                     _ack;                                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FNetReply                              ReturnValue;                                       // 0x0018(0x0020)(Parm, OutParm, ReturnParm)
	class ULocalPlayerContext*                    Lpc;                                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0040(0x0018)()
	struct FNetReply                              CallFunc_NetReplyFromCode_ReturnValue;             // 0x0058(0x0020)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4047[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0090(0x0018)()
	bool                                          CallFunc_HasLackCPInSelectedMaster_ReturnValue;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4048[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToastMessage_ReturnValue_1;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_Ack_OnUpdateGunSetting");
static_assert(sizeof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting) == 0x0000C8, "Wrong size on PAGE_Weapon_New_C_Ack_OnUpdateGunSetting");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, _rcode) == 0x000000, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::_rcode' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, _ack) == 0x000008, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::_ack' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, ReturnValue) == 0x000018, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, Lpc) == 0x000038, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::Lpc' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_MakeLiteralText_ReturnValue) == 0x000040, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_NetReplyFromCode_ReturnValue) == 0x000058, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_NetReplyFromCode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_AddToastMessage_ReturnValue) == 0x000088, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_AddToastMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000090, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_HasLackCPInSelectedMaster_ReturnValue) == 0x0000A8, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_HasLackCPInSelectedMaster_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000B0, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnUpdateGunSetting, CallFunc_AddToastMessage_ReturnValue_1) == 0x0000C0, "Member 'PAGE_Weapon_New_C_Ack_OnUpdateGunSetting::CallFunc_AddToastMessage_ReturnValue_1' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Ack_OnCloseQuickPurchaseGun
// 0x0002 (0x0002 - 0x0000)
struct PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSubLevelActived_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun) == 0x000001, "Wrong alignment on PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun");
static_assert(sizeof(PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun) == 0x000002, "Wrong size on PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun, CallFunc_IsSubLevelActived_ReturnValue) == 0x000001, "Member 'PAGE_Weapon_New_C_Ack_OnCloseQuickPurchaseGun::CallFunc_IsSubLevelActived_ReturnValue' has a wrong offset!");

// Function PAGE_Weapon_New.PAGE_Weapon_New_C.Ack_OnBuyParts
// 0x0018 (0x0018 - 0x0000)
struct PAGE_Weapon_New_C_Ack_OnBuyParts final
{
public:
	class UInvenItem*                             _inven_item;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EResultCode _rcode, struct FACK_UpdateGunSpec& _ack)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAGE_Weapon_New_C_Ack_OnBuyParts) == 0x000008, "Wrong alignment on PAGE_Weapon_New_C_Ack_OnBuyParts");
static_assert(sizeof(PAGE_Weapon_New_C_Ack_OnBuyParts) == 0x000018, "Wrong size on PAGE_Weapon_New_C_Ack_OnBuyParts");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnBuyParts, _inven_item) == 0x000000, "Member 'PAGE_Weapon_New_C_Ack_OnBuyParts::_inven_item' has a wrong offset!");
static_assert(offsetof(PAGE_Weapon_New_C_Ack_OnBuyParts, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PAGE_Weapon_New_C_Ack_OnBuyParts::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

