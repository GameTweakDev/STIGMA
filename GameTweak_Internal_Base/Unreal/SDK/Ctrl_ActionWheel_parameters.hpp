#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_ActionWheel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_ActionWheel.Ctrl_ActionWheel_C.ExecuteUbergraph_Ctrl_ActionWheel
// 0x0040 (0x0040 - 0x0000)
struct Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel) == 0x000004, "Wrong alignment on Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel");
static_assert(sizeof(Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel) == 0x000040, "Wrong size on Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel");
static_assert(offsetof(Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel, EntryPoint) == 0x000000, "Member 'Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel, K2Node_Event_MyGeometry) == 0x000004, "Member 'Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'Ctrl_ActionWheel_C_ExecuteUbergraph_Ctrl_ActionWheel::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function Ctrl_ActionWheel.Ctrl_ActionWheel_C.OnMouseButtonDown
// 0x0438 (0x0438 - 0x0000)
struct Ctrl_ActionWheel_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FPointerEvent                          NewLocalVar;                                       // 0x0168(0x0078)(Edit, BlueprintVisible)
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x01E8(0x0018)(HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3A[0x6];                                     // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0210(0x00B8)()
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue;                 // 0x02C8(0x00B8)()
	struct FEventReply                            CallFunc_CaptureMouse_ReturnValue_1;               // 0x0380(0x00B8)()
};
static_assert(alignof(Ctrl_ActionWheel_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on Ctrl_ActionWheel_C_OnMouseButtonDown");
static_assert(sizeof(Ctrl_ActionWheel_C_OnMouseButtonDown) == 0x000438, "Wrong size on Ctrl_ActionWheel_C_OnMouseButtonDown");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, NewLocalVar) == 0x000168, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::NewLocalVar' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, CallFunc_GetLocalPlayerController_ReturnValue) == 0x0001E0, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x0001E8, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000200, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000209, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000210, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, CallFunc_CaptureMouse_ReturnValue) == 0x0002C8, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::CallFunc_CaptureMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_OnMouseButtonDown, CallFunc_CaptureMouse_ReturnValue_1) == 0x000380, "Member 'Ctrl_ActionWheel_C_OnMouseButtonDown::CallFunc_CaptureMouse_ReturnValue_1' has a wrong offset!");

// Function Ctrl_ActionWheel.Ctrl_ActionWheel_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_ActionWheel_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_ActionWheel_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_ActionWheel_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_ActionWheel_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_ActionWheel_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_ActionWheel_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_ActionWheel_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_ActionWheel.Ctrl_ActionWheel_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_ActionWheel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_ActionWheel_C_Tick) == 0x000004, "Wrong alignment on Ctrl_ActionWheel_C_Tick");
static_assert(sizeof(Ctrl_ActionWheel_C_Tick) == 0x00003C, "Wrong size on Ctrl_ActionWheel_C_Tick");
static_assert(offsetof(Ctrl_ActionWheel_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_ActionWheel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_ActionWheel_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_ActionWheel_C_Tick::InDeltaTime' has a wrong offset!");

}

