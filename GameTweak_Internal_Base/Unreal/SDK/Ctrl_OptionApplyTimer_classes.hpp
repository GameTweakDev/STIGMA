#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_OptionApplyTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_OptionApplyTimer.Ctrl_OptionApplyTimer_C
// 0x0038 (0x0528 - 0x04F0)
class UCtrl_OptionApplyTimer_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Txt_Time_Desc;                                     // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnTimerEnd;                                        // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Time;                                              // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3670[0x4];                                     // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        Timer;                                             // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTimerEnd;                                        // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Ctrl_OptionApplyTimer(int32 EntryPoint);
	bool OnSynchronizeProperties();
	void OnTimerEnd__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_OptionApplyTimer_C">();
	}
	static class UCtrl_OptionApplyTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_OptionApplyTimer_C>();
	}
};
static_assert(alignof(UCtrl_OptionApplyTimer_C) == 0x000008, "Wrong alignment on UCtrl_OptionApplyTimer_C");
static_assert(sizeof(UCtrl_OptionApplyTimer_C) == 0x000528, "Wrong size on UCtrl_OptionApplyTimer_C");
static_assert(offsetof(UCtrl_OptionApplyTimer_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_OptionApplyTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_OptionApplyTimer_C, Txt_Time_Desc) == 0x0004F8, "Member 'UCtrl_OptionApplyTimer_C::Txt_Time_Desc' has a wrong offset!");
static_assert(offsetof(UCtrl_OptionApplyTimer_C, OnTimerEnd) == 0x000500, "Member 'UCtrl_OptionApplyTimer_C::OnTimerEnd' has a wrong offset!");
static_assert(offsetof(UCtrl_OptionApplyTimer_C, Time) == 0x000510, "Member 'UCtrl_OptionApplyTimer_C::Time' has a wrong offset!");
static_assert(offsetof(UCtrl_OptionApplyTimer_C, Timer) == 0x000518, "Member 'UCtrl_OptionApplyTimer_C::Timer' has a wrong offset!");
static_assert(offsetof(UCtrl_OptionApplyTimer_C, IsTimerEnd) == 0x000520, "Member 'UCtrl_OptionApplyTimer_C::IsTimerEnd' has a wrong offset!");

}

