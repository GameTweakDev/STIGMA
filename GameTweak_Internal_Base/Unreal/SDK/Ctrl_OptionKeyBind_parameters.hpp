#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_OptionKeyBind

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "Stigma_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.ExecuteUbergraph_Ctrl_OptionKeyBind
// 0x01B8 (0x01B8 - 0x0000)
struct Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UKeyBindingSubsys*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0010(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3650[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKeyMapping                            K2Node_MakeStruct_KeyMapping;                      // 0x0020(0x0030)(HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0050(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0088(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0100(0x0078)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3651[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x017C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind");
static_assert(sizeof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind) == 0x0001B8, "Wrong size on Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, EntryPoint) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_Event_InFocusEvent) == 0x000010, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_MakeStruct_KeyMapping) == 0x000020, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_MakeStruct_KeyMapping' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_Event_MyGeometry_1) == 0x000050, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_Event_MouseEvent_1) == 0x000088, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_Event_MouseEvent) == 0x000100, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_Event_MyGeometry) == 0x00017C, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind, K2Node_Event_InDeltaTime) == 0x0001B4, "Member 'Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnFocusLost) == 0x000004, "Wrong alignment on Ctrl_OptionKeyBind_C_OnFocusLost");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnFocusLost) == 0x000008, "Wrong size on Ctrl_OptionKeyBind_C_OnFocusLost");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnGetToolTip_KeyBind
// 0x0090 (0x0090 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo;                  // 0x0008(0x0030)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3652[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo_1;                // 0x0040(0x0030)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3653[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_OnlyKeys_C*                 K2Node_DynamicCast_AsUI_Tooltip_Only_Keys;         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind) == 0x000090, "Wrong size on Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, ReturnValue) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, K2Node_MakeStruct_TooltipKeyInfo) == 0x000008, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::K2Node_MakeStruct_TooltipKeyInfo' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000038, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000039, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, K2Node_MakeStruct_TooltipKeyInfo_1) == 0x000040, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::K2Node_MakeStruct_TooltipKeyInfo_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000078, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, K2Node_DynamicCast_AsUI_Tooltip_Only_Keys) == 0x000080, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::K2Node_DynamicCast_AsUI_Tooltip_Only_Keys' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseButtonUp
// 0x0328 (0x0328 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3654[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1; // 0x0188(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3655[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01A8(0x00B8)()
	class UKeyBindingSubsys*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x0268(0x00B8)()
	bool                                          CallFunc_IsUsedInterceptor_ReturnValue;            // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_OnMouseButtonUp");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnMouseButtonUp) == 0x000328, "Wrong size on Ctrl_OptionKeyBind_C_OnMouseButtonUp");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000180, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1) == 0x000188, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0001A0, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x0001A8, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000260, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x000268, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseButtonUp, CallFunc_IsUsedInterceptor_ReturnValue) == 0x000320, "Member 'Ctrl_OptionKeyBind_C_OnMouseButtonUp::CallFunc_IsUsedInterceptor_ReturnValue' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnMouseEnter) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_OnMouseEnter");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnMouseEnter) == 0x0000B0, "Wrong size on Ctrl_OptionKeyBind_C_OnMouseEnter");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'Ctrl_OptionKeyBind_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnMouseLeave) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_OnMouseLeave");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnMouseLeave) == 0x000078, "Wrong size on Ctrl_OptionKeyBind_C_OnMouseLeave");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseMove
// 0x02D8 (0x02D8 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	struct FEventReply                            CallFunc_ReleaseMouseCapture_ReturnValue;          // 0x0220(0x00B8)()
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnMouseMove) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_OnMouseMove");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnMouseMove) == 0x0002D8, "Wrong size on Ctrl_OptionKeyBind_C_OnMouseMove");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'Ctrl_OptionKeyBind_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'Ctrl_OptionKeyBind_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'Ctrl_OptionKeyBind_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnMouseMove, CallFunc_ReleaseMouseCapture_ReturnValue) == 0x000220, "Member 'Ctrl_OptionKeyBind_C_OnMouseMove::CallFunc_ReleaseMouseCapture_ReturnValue' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_OptionKeyBind_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_OptionKeyBind_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnVisibility_Duplicate
// 0x0003 (0x0003 - 0x0000)
struct Ctrl_OptionKeyBind_C_OnVisibility_Duplicate final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_OnVisibility_Duplicate) == 0x000001, "Wrong alignment on Ctrl_OptionKeyBind_C_OnVisibility_Duplicate");
static_assert(sizeof(Ctrl_OptionKeyBind_C_OnVisibility_Duplicate) == 0x000003, "Wrong size on Ctrl_OptionKeyBind_C_OnVisibility_Duplicate");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnVisibility_Duplicate, ReturnValue) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_OnVisibility_Duplicate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnVisibility_Duplicate, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ctrl_OptionKeyBind_C_OnVisibility_Duplicate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_OnVisibility_Duplicate, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ctrl_OptionKeyBind_C_OnVisibility_Duplicate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.Popup Input Guide
// 0x0050 (0x0050 - 0x0000)
struct Ctrl_OptionKeyBind_C_Popup_Input_Guide final
{
public:
	struct FVector2D                              NewLocalVar_1;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewLocalVar_0;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               NewLocalVar;                                       // 0x0020(0x0020)(Edit, BlueprintVisible, NoDestructor)
	class UUI_InputKeyGuide_C*                    CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_Popup_Input_Guide) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_Popup_Input_Guide");
static_assert(sizeof(Ctrl_OptionKeyBind_C_Popup_Input_Guide) == 0x000050, "Wrong size on Ctrl_OptionKeyBind_C_Popup_Input_Guide");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Popup_Input_Guide, NewLocalVar_1) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_Popup_Input_Guide::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Popup_Input_Guide, NewLocalVar_0) == 0x000010, "Member 'Ctrl_OptionKeyBind_C_Popup_Input_Guide::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Popup_Input_Guide, NewLocalVar) == 0x000020, "Member 'Ctrl_OptionKeyBind_C_Popup_Input_Guide::NewLocalVar' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Popup_Input_Guide, CallFunc_Create_ReturnValue) == 0x000040, "Member 'Ctrl_OptionKeyBind_C_Popup_Input_Guide::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Popup_Input_Guide, CallFunc_DoModal_ReturnValue) == 0x000048, "Member 'Ctrl_OptionKeyBind_C_Popup_Input_Guide::CallFunc_DoModal_ReturnValue' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.Tick
// 0x003C (0x003C - 0x0000)
struct Ctrl_OptionKeyBind_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_Tick) == 0x000004, "Wrong alignment on Ctrl_OptionKeyBind_C_Tick");
static_assert(sizeof(Ctrl_OptionKeyBind_C_Tick) == 0x00003C, "Wrong size on Ctrl_OptionKeyBind_C_Tick");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Tick, MyGeometry) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_Tick, InDeltaTime) == 0x000038, "Member 'Ctrl_OptionKeyBind_C_Tick::InDeltaTime' has a wrong offset!");

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.UpdateUI
// 0x00B8 (0x00B8 - 0x0000)
struct Ctrl_OptionKeyBind_C_UpdateUI final
{
public:
	class UCtrl_OptionKeyBindBase*                _key_binder;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKeyMapping                            _mapping;                                          // 0x0008(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UCtrl_KeyIcon_C*                        Widget_default;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Multi_key;                                         // 0x0040(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   Default_key;                                       // 0x0058(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UCtrl_KeyIcon_C*                        CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3656[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UCtrl_KeyIcon_C*                        CallFunc_Create_ReturnValue_1;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3657[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_Print_Text_C*                     CallFunc_Create_ReturnValue_2;                     // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_3;                   // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_OptionKeyBind_C_UpdateUI) == 0x000008, "Wrong alignment on Ctrl_OptionKeyBind_C_UpdateUI");
static_assert(sizeof(Ctrl_OptionKeyBind_C_UpdateUI) == 0x0000B8, "Wrong size on Ctrl_OptionKeyBind_C_UpdateUI");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, _key_binder) == 0x000000, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::_key_binder' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, _mapping) == 0x000008, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::_mapping' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, Widget_default) == 0x000038, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::Widget_default' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, Multi_key) == 0x000040, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::Multi_key' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, Default_key) == 0x000058, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::Default_key' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_Create_ReturnValue) == 0x000070, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_AddChild_ReturnValue_1) == 0x000080, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_Create_ReturnValue_1) == 0x000090, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_Key_IsValid_ReturnValue) == 0x000098, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000099, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_AddChild_ReturnValue_2) == 0x0000A0, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_Create_ReturnValue_2) == 0x0000A8, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_OptionKeyBind_C_UpdateUI, CallFunc_AddChild_ReturnValue_3) == 0x0000B0, "Member 'Ctrl_OptionKeyBind_C_UpdateUI::CallFunc_AddChild_ReturnValue_3' has a wrong offset!");

}

