#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_Armory

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Popup_Armory.Popup_Armory_C.BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                _item_id;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _idx_slot;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature) == 0x000008, "Wrong alignment on Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature");
static_assert(sizeof(Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature) == 0x000020, "Wrong size on Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature");
static_assert(offsetof(Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature, _chara_type) == 0x000000, "Member 'Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature::_chara_type' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature, _item_id) == 0x000008, "Member 'Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature::_item_id' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature, _idx_slot) == 0x000018, "Member 'Popup_Armory_C_BndEvt__Popup_Armory_Panel_Armory_K2Node_ComponentBoundEvent_0_OnEquipItem__DelegateSignature::_idx_slot' has a wrong offset!");

// Function Popup_Armory.Popup_Armory_C.ConfigArmory
// 0x0188 (0x0188 - 0x0000)
struct Popup_Armory_C_ConfigArmory final
{
public:
	class AMatchServicedPlayerState*              _ps;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 _start_category;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TDelegate<void(ECharaType _chara_type, const struct FItemID& _item_id, int32 _idx_slot)> _on_equip_item;                                    // 0x000C(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             _on_close;                                         // 0x001C(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterSetting                      CallFunc_GetCharacter_ReturnValue;                 // 0x0040(0x0140)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Armory_C_ConfigArmory) == 0x000008, "Wrong alignment on Popup_Armory_C_ConfigArmory");
static_assert(sizeof(Popup_Armory_C_ConfigArmory) == 0x000188, "Wrong size on Popup_Armory_C_ConfigArmory");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, _ps) == 0x000000, "Member 'Popup_Armory_C_ConfigArmory::_ps' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, _start_category) == 0x000008, "Member 'Popup_Armory_C_ConfigArmory::_start_category' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, _on_equip_item) == 0x00000C, "Member 'Popup_Armory_C_ConfigArmory::_on_equip_item' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, _on_close) == 0x00001C, "Member 'Popup_Armory_C_ConfigArmory::_on_close' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'Popup_Armory_C_ConfigArmory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, CallFunc_GetCharacter_ReturnValue) == 0x000040, "Member 'Popup_Armory_C_ConfigArmory::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ConfigArmory, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'Popup_Armory_C_ConfigArmory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Popup_Armory.Popup_Armory_C.ExecuteUbergraph_Popup_Armory
// 0x0020 (0x0020 - 0x0000)
struct Popup_Armory_C_ExecuteUbergraph_Popup_Armory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    K2Node_ComponentBoundEvent__chara_type;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                K2Node_ComponentBoundEvent__item_id;               // 0x0008(0x0010)(HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent__idx_slot;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory) == 0x000008, "Wrong alignment on Popup_Armory_C_ExecuteUbergraph_Popup_Armory");
static_assert(sizeof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory) == 0x000020, "Wrong size on Popup_Armory_C_ExecuteUbergraph_Popup_Armory");
static_assert(offsetof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory, EntryPoint) == 0x000000, "Member 'Popup_Armory_C_ExecuteUbergraph_Popup_Armory::EntryPoint' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory, K2Node_ComponentBoundEvent__chara_type) == 0x000004, "Member 'Popup_Armory_C_ExecuteUbergraph_Popup_Armory::K2Node_ComponentBoundEvent__chara_type' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory, K2Node_ComponentBoundEvent__item_id) == 0x000008, "Member 'Popup_Armory_C_ExecuteUbergraph_Popup_Armory::K2Node_ComponentBoundEvent__item_id' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory, K2Node_ComponentBoundEvent__idx_slot) == 0x000018, "Member 'Popup_Armory_C_ExecuteUbergraph_Popup_Armory::K2Node_ComponentBoundEvent__idx_slot' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_ExecuteUbergraph_Popup_Armory, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'Popup_Armory_C_ExecuteUbergraph_Popup_Armory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Popup_Armory.Popup_Armory_C.OnEquipItem__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Popup_Armory_C_OnEquipItem__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3590[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                _item_id;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _idx_slot;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Armory_C_OnEquipItem__DelegateSignature) == 0x000008, "Wrong alignment on Popup_Armory_C_OnEquipItem__DelegateSignature");
static_assert(sizeof(Popup_Armory_C_OnEquipItem__DelegateSignature) == 0x000020, "Wrong size on Popup_Armory_C_OnEquipItem__DelegateSignature");
static_assert(offsetof(Popup_Armory_C_OnEquipItem__DelegateSignature, _chara_type) == 0x000000, "Member 'Popup_Armory_C_OnEquipItem__DelegateSignature::_chara_type' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_OnEquipItem__DelegateSignature, _item_id) == 0x000008, "Member 'Popup_Armory_C_OnEquipItem__DelegateSignature::_item_id' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_OnEquipItem__DelegateSignature, _idx_slot) == 0x000018, "Member 'Popup_Armory_C_OnEquipItem__DelegateSignature::_idx_slot' has a wrong offset!");

// Function Popup_Armory.Popup_Armory_C.OnHidePopup
// 0x0001 (0x0001 - 0x0000)
struct Popup_Armory_C_OnHidePopup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Armory_C_OnHidePopup) == 0x000001, "Wrong alignment on Popup_Armory_C_OnHidePopup");
static_assert(sizeof(Popup_Armory_C_OnHidePopup) == 0x000001, "Wrong size on Popup_Armory_C_OnHidePopup");
static_assert(offsetof(Popup_Armory_C_OnHidePopup, ReturnValue) == 0x000000, "Member 'Popup_Armory_C_OnHidePopup::ReturnValue' has a wrong offset!");

// Function Popup_Armory.Popup_Armory_C.OnPlayerStateChanged
// 0x0158 (0x0158 - 0x0000)
struct Popup_Armory_C_OnPlayerStateChanged final
{
public:
	EChangedPlayerState                           _reason;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3591[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              _ps;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCharacterSetting                      CallFunc_GetCharacter_ReturnValue;                 // 0x0010(0x0140)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Armory_C_OnPlayerStateChanged) == 0x000008, "Wrong alignment on Popup_Armory_C_OnPlayerStateChanged");
static_assert(sizeof(Popup_Armory_C_OnPlayerStateChanged) == 0x000158, "Wrong size on Popup_Armory_C_OnPlayerStateChanged");
static_assert(offsetof(Popup_Armory_C_OnPlayerStateChanged, _reason) == 0x000000, "Member 'Popup_Armory_C_OnPlayerStateChanged::_reason' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_OnPlayerStateChanged, _ps) == 0x000008, "Member 'Popup_Armory_C_OnPlayerStateChanged::_ps' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_OnPlayerStateChanged, CallFunc_GetCharacter_ReturnValue) == 0x000010, "Member 'Popup_Armory_C_OnPlayerStateChanged::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Armory_C_OnPlayerStateChanged, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'Popup_Armory_C_OnPlayerStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Popup_Armory.Popup_Armory_C.Update
// 0x0058 (0x0058 - 0x0000)
struct Popup_Armory_C_Update final
{
public:
	struct FCharacterInfo                         _chara_info;                                       // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Popup_Armory_C_Update) == 0x000008, "Wrong alignment on Popup_Armory_C_Update");
static_assert(sizeof(Popup_Armory_C_Update) == 0x000058, "Wrong size on Popup_Armory_C_Update");
static_assert(offsetof(Popup_Armory_C_Update, _chara_info) == 0x000000, "Member 'Popup_Armory_C_Update::_chara_info' has a wrong offset!");

}

