#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Comp_Indicator_HP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.ExecuteUbergraph_UI_Comp_Indicator_HP
// 0x00E8 (0x00E8 - 0x0000)
struct UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Event__icon;                                // 0x0008(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C5[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         K2Node_Event__distance;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Convert_CM_To_M_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event__hp_percent_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0040(0x0018)()
	float                                         K2Node_Event__armor_percent_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C6[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	float                                         K2Node_Event__hp_percent;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event__armor_percent;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP) == 0x000008, "Wrong alignment on UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP");
static_assert(sizeof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP) == 0x0000E8, "Wrong size on UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, EntryPoint) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_Event__icon) == 0x000008, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_Event__icon' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_Event__distance) == 0x000034, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_Event__distance' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, CallFunc_Convert_CM_To_M_ReturnValue) == 0x000038, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::CallFunc_Convert_CM_To_M_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_Event__hp_percent_1) == 0x00003C, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_Event__hp_percent_1' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000040, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_Event__armor_percent_1) == 0x000058, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_Event__armor_percent_1' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_MakeArray_Array) == 0x0000B0, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_Event__hp_percent) == 0x0000D8, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_Event__hp_percent' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, K2Node_Event__armor_percent) == 0x0000DC, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::K2Node_Event__armor_percent' has a wrong offset!");
static_assert(offsetof(UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0000E0, "Member 'UI_Comp_Indicator_HP_C_ExecuteUbergraph_UI_Comp_Indicator_HP::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.SetArmor
// 0x0004 (0x0004 - 0x0000)
struct UI_Comp_Indicator_HP_C_SetArmor final
{
public:
	float                                         _armor_percent;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_SetArmor) == 0x000004, "Wrong alignment on UI_Comp_Indicator_HP_C_SetArmor");
static_assert(sizeof(UI_Comp_Indicator_HP_C_SetArmor) == 0x000004, "Wrong size on UI_Comp_Indicator_HP_C_SetArmor");
static_assert(offsetof(UI_Comp_Indicator_HP_C_SetArmor, _armor_percent) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_SetArmor::_armor_percent' has a wrong offset!");

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.SetArmor_Interp
// 0x0004 (0x0004 - 0x0000)
struct UI_Comp_Indicator_HP_C_SetArmor_Interp final
{
public:
	float                                         _armor_percent;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_SetArmor_Interp) == 0x000004, "Wrong alignment on UI_Comp_Indicator_HP_C_SetArmor_Interp");
static_assert(sizeof(UI_Comp_Indicator_HP_C_SetArmor_Interp) == 0x000004, "Wrong size on UI_Comp_Indicator_HP_C_SetArmor_Interp");
static_assert(offsetof(UI_Comp_Indicator_HP_C_SetArmor_Interp, _armor_percent) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_SetArmor_Interp::_armor_percent' has a wrong offset!");

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.SetArmorTypeIcon
// 0x0028 (0x0028 - 0x0000)
struct UI_Comp_Indicator_HP_C_SetArmorTypeIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              _Icon;                                             // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_SetArmorTypeIcon) == 0x000008, "Wrong alignment on UI_Comp_Indicator_HP_C_SetArmorTypeIcon");
static_assert(sizeof(UI_Comp_Indicator_HP_C_SetArmorTypeIcon) == 0x000028, "Wrong size on UI_Comp_Indicator_HP_C_SetArmorTypeIcon");
static_assert(offsetof(UI_Comp_Indicator_HP_C_SetArmorTypeIcon, _Icon) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_SetArmorTypeIcon::_Icon' has a wrong offset!");

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.SetHP
// 0x0004 (0x0004 - 0x0000)
struct UI_Comp_Indicator_HP_C_SetHP final
{
public:
	float                                         _hp_percent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_SetHP) == 0x000004, "Wrong alignment on UI_Comp_Indicator_HP_C_SetHP");
static_assert(sizeof(UI_Comp_Indicator_HP_C_SetHP) == 0x000004, "Wrong size on UI_Comp_Indicator_HP_C_SetHP");
static_assert(offsetof(UI_Comp_Indicator_HP_C_SetHP, _hp_percent) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_SetHP::_hp_percent' has a wrong offset!");

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.SetHP_Interp
// 0x0004 (0x0004 - 0x0000)
struct UI_Comp_Indicator_HP_C_SetHP_Interp final
{
public:
	float                                         _hp_percent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_SetHP_Interp) == 0x000004, "Wrong alignment on UI_Comp_Indicator_HP_C_SetHP_Interp");
static_assert(sizeof(UI_Comp_Indicator_HP_C_SetHP_Interp) == 0x000004, "Wrong size on UI_Comp_Indicator_HP_C_SetHP_Interp");
static_assert(offsetof(UI_Comp_Indicator_HP_C_SetHP_Interp, _hp_percent) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_SetHP_Interp::_hp_percent' has a wrong offset!");

// Function UI_Comp_Indicator_HP.UI_Comp_Indicator_HP_C.UpdateDistance
// 0x0004 (0x0004 - 0x0000)
struct UI_Comp_Indicator_HP_C_UpdateDistance final
{
public:
	float                                         _distance;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Comp_Indicator_HP_C_UpdateDistance) == 0x000004, "Wrong alignment on UI_Comp_Indicator_HP_C_UpdateDistance");
static_assert(sizeof(UI_Comp_Indicator_HP_C_UpdateDistance) == 0x000004, "Wrong size on UI_Comp_Indicator_HP_C_UpdateDistance");
static_assert(offsetof(UI_Comp_Indicator_HP_C_UpdateDistance, _distance) == 0x000000, "Member 'UI_Comp_Indicator_HP_C_UpdateDistance::_distance' has a wrong offset!");

}

