#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_Buy

#include "Basic.hpp"

#include "Popup_Buy_classes.hpp"
#include "Popup_Buy_parameters.hpp"


namespace SDK
{

// Function Popup_Buy.Popup_Buy_C.BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UAnimatableWidget*                _widget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    _select                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPopup_Buy_C::BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature");

	Params::Popup_Buy_C_BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_Buy.Popup_Buy_C.BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UPopup_Buy_C::BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "BndEvt__Popup_Buy_Button_Close_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_Buy.Popup_Buy_C.BndEvt__Popup_Buy_R_Btn_Background_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UPopup_Buy_C::BndEvt__Popup_Buy_R_Btn_Background_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "BndEvt__Popup_Buy_R_Btn_Background_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_Buy.Popup_Buy_C.BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EResultCode                             _code                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FACK_BuyGoods                    _ack                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UPopup_Buy_C::BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature(EResultCode _code, const struct FACK_BuyGoods& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature");

	Params::Popup_Buy_C_BndEvt__Popup_Buy_UI_Button_Buy_K2Node_ComponentBoundEvent_4_OnAckBuy__DelegateSignature Parms{};

	Parms._code = _code;
	Parms._ack = std::move(_ack);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_Buy.Popup_Buy_C.ExecuteUbergraph_Popup_Buy
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPopup_Buy_C::ExecuteUbergraph_Popup_Buy(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "ExecuteUbergraph_Popup_Buy");

	Params::Popup_Buy_C_ExecuteUbergraph_Popup_Buy Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_Buy.Popup_Buy_C.InitWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FConfig_Goods                    GoodsDefine                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UGoodsObject*                     GoodsObj                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UPopup_Buy_C::InitWidget(struct FConfig_Goods& GoodsDefine, class UGoodsObject*& GoodsObj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "InitWidget");

	Params::Popup_Buy_C_InitWidget Parms{};

	Parms.GoodsDefine = std::move(GoodsDefine);
	Parms.GoodsObj = GoodsObj;

	UObject::ProcessEvent(Func, &Parms);

	GoodsDefine = std::move(Parms.GoodsDefine);
	GoodsObj = Parms.GoodsObj;
}


// Function Popup_Buy.Popup_Buy_C.OnSliderChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCtrl_OptionSliderBase*           Slider                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             _id                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _value                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPopup_Buy_C::OnSliderChanged(const class UCtrl_OptionSliderBase* Slider, const class FName& _id, float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "OnSliderChanged");

	Params::Popup_Buy_C_OnSliderChanged Parms{};

	Parms.Slider = Slider;
	Parms._id = _id;
	Parms._value = _value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_Buy.Popup_Buy_C.SetDescPanelVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UPopup_Buy_C::SetDescPanelVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "SetDescPanelVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_Buy.Popup_Buy_C.SetLimitDateTxt
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDateTime                        StartDate                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        EndDate                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UPopup_Buy_C::SetLimitDateTxt(struct FDateTime& StartDate, struct FDateTime& EndDate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "SetLimitDateTxt");

	Params::Popup_Buy_C_SetLimitDateTxt Parms{};

	Parms.StartDate = std::move(StartDate);
	Parms.EndDate = std::move(EndDate);

	UObject::ProcessEvent(Func, &Parms);

	StartDate = std::move(Parms.StartDate);
	EndDate = std::move(Parms.EndDate);
}


// Function Popup_Buy.Popup_Buy_C.SetSlider
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBuyLimit                        BuyLimit                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPopup_Buy_C::SetSlider(struct FBuyLimit& BuyLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Buy_C", "SetSlider");

	Params::Popup_Buy_C_SetSlider Parms{};

	Parms.BuyLimit = std::move(BuyLimit);

	UObject::ProcessEvent(Func, &Parms);

	BuyLimit = std::move(Parms.BuyLimit);
}

}

