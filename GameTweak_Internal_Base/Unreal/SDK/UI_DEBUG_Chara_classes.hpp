#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_DEBUG_Chara

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_DEBUG_Chara.UI_DEBUG_Chara_C
// 0x0030 (0x0530 - 0x0500)
class UUI_DEBUG_Chara_C final : public UUI_Debug_CharaBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_74;                                          // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainPanel;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_DEBUG_Chara_Body_C*                 UI_DEBUG_Chara_Body;                               // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_DEBUG_Chara_Movement_C*             UI_DEBUG_Chara_Movement;                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_DEBUG_Chara(int32 EntryPoint);
	void OnChangeSwitchIndex(int32 _index);
	void OnChangeTarget(class ACharaBase* _chara);
	void SetActivePage(class ACharaBase_BP_C* Param__target, int32 _idx);

	void GetNextPage(int32* _idx_next) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_DEBUG_Chara_C">();
	}
	static class UUI_DEBUG_Chara_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_DEBUG_Chara_C>();
	}
};
static_assert(alignof(UUI_DEBUG_Chara_C) == 0x000008, "Wrong alignment on UUI_DEBUG_Chara_C");
static_assert(sizeof(UUI_DEBUG_Chara_C) == 0x000530, "Wrong size on UUI_DEBUG_Chara_C");
static_assert(offsetof(UUI_DEBUG_Chara_C, UberGraphFrame) == 0x000500, "Member 'UUI_DEBUG_Chara_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_DEBUG_Chara_C, Image_74) == 0x000508, "Member 'UUI_DEBUG_Chara_C::Image_74' has a wrong offset!");
static_assert(offsetof(UUI_DEBUG_Chara_C, MainPanel) == 0x000510, "Member 'UUI_DEBUG_Chara_C::MainPanel' has a wrong offset!");
static_assert(offsetof(UUI_DEBUG_Chara_C, Switcher) == 0x000518, "Member 'UUI_DEBUG_Chara_C::Switcher' has a wrong offset!");
static_assert(offsetof(UUI_DEBUG_Chara_C, UI_DEBUG_Chara_Body) == 0x000520, "Member 'UUI_DEBUG_Chara_C::UI_DEBUG_Chara_Body' has a wrong offset!");
static_assert(offsetof(UUI_DEBUG_Chara_C, UI_DEBUG_Chara_Movement) == 0x000528, "Member 'UUI_DEBUG_Chara_C::UI_DEBUG_Chara_Movement' has a wrong offset!");

}

