#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: DLG_User

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "BPGLib_structs.hpp"


namespace SDK::Params
{

// Function DLG_User.DLG_User_C.BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'DLG_User_C_BndEvt__DLG_User_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function DLG_User.DLG_User_C.ExecuteUbergraph_DLG_User
// 0x00B0 (0x00B0 - 0x0000)
struct DLG_User_C_ExecuteUbergraph_DLG_User final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0030(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0068(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENicknameTestResult                           CallFunc_CheckNickname_ReturnValue;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D9[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_ExecuteUbergraph_DLG_User) == 0x000008, "Wrong alignment on DLG_User_C_ExecuteUbergraph_DLG_User");
static_assert(sizeof(DLG_User_C_ExecuteUbergraph_DLG_User) == 0x0000B0, "Wrong size on DLG_User_C_ExecuteUbergraph_DLG_User");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, EntryPoint) == 0x000000, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::EntryPoint' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, CallFunc_GetText_ReturnValue_1) == 0x000030, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000058, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, K2Node_Event_MyGeometry) == 0x000068, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, K2Node_Event_InDeltaTime) == 0x0000A0, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, CallFunc_CheckNickname_ReturnValue) == 0x0000A4, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::CallFunc_CheckNickname_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, K2Node_SwitchEnum_CmpSuccess) == 0x0000A5, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ExecuteUbergraph_DLG_User, CallFunc_OnTick__delta_ImplicitCast) == 0x0000A8, "Member 'DLG_User_C_ExecuteUbergraph_DLG_User::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

// Function DLG_User.DLG_User_C.GetFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct DLG_User_C_GetFocusWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_GetFocusWidget) == 0x000008, "Wrong alignment on DLG_User_C_GetFocusWidget");
static_assert(sizeof(DLG_User_C_GetFocusWidget) == 0x000008, "Wrong size on DLG_User_C_GetFocusWidget");
static_assert(offsetof(DLG_User_C_GetFocusWidget, ReturnValue) == 0x000000, "Member 'DLG_User_C_GetFocusWidget::ReturnValue' has a wrong offset!");

// Function DLG_User.DLG_User_C.OnChangeWaiting
// 0x0003 (0x0003 - 0x0000)
struct DLG_User_C_OnChangeWaiting final
{
public:
	EWaitingType                                  _waiting_type;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_OnChangeWaiting) == 0x000001, "Wrong alignment on DLG_User_C_OnChangeWaiting");
static_assert(sizeof(DLG_User_C_OnChangeWaiting) == 0x000003, "Wrong size on DLG_User_C_OnChangeWaiting");
static_assert(offsetof(DLG_User_C_OnChangeWaiting, _waiting_type) == 0x000000, "Member 'DLG_User_C_OnChangeWaiting::_waiting_type' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnChangeWaiting, ReturnValue) == 0x000001, "Member 'DLG_User_C_OnChangeWaiting::ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnChangeWaiting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'DLG_User_C_OnChangeWaiting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function DLG_User.DLG_User_C.OnError
// 0x0040 (0x0040 - 0x0000)
struct DLG_User_C_OnError final
{
public:
	EResultCode                                   _code;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DA[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Txt;                                               // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_GetErrorMessage__txt;                     // 0x0020(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_OnError) == 0x000008, "Wrong alignment on DLG_User_C_OnError");
static_assert(sizeof(DLG_User_C_OnError) == 0x000040, "Wrong size on DLG_User_C_OnError");
static_assert(offsetof(DLG_User_C_OnError, _code) == 0x000000, "Member 'DLG_User_C_OnError::_code' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnError, ReturnValue) == 0x000001, "Member 'DLG_User_C_OnError::ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnError, Txt) == 0x000008, "Member 'DLG_User_C_OnError::Txt' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnError, CallFunc_GetErrorMessage__txt) == 0x000020, "Member 'DLG_User_C_OnError::CallFunc_GetErrorMessage__txt' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnError, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'DLG_User_C_OnError::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function DLG_User.DLG_User_C.OnOK__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct DLG_User_C_OnOK__DelegateSignature final
{
public:
	class FText                                   Param__nickname;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDLG_User_C*                            _ctrl;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_OnOK__DelegateSignature) == 0x000008, "Wrong alignment on DLG_User_C_OnOK__DelegateSignature");
static_assert(sizeof(DLG_User_C_OnOK__DelegateSignature) == 0x000020, "Wrong size on DLG_User_C_OnOK__DelegateSignature");
static_assert(offsetof(DLG_User_C_OnOK__DelegateSignature, Param__nickname) == 0x000000, "Member 'DLG_User_C_OnOK__DelegateSignature::Param__nickname' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnOK__DelegateSignature, _ctrl) == 0x000018, "Member 'DLG_User_C_OnOK__DelegateSignature::_ctrl' has a wrong offset!");

// Function DLG_User.DLG_User_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct DLG_User_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on DLG_User_C_OnSynchronizeProperties");
static_assert(sizeof(DLG_User_C_OnSynchronizeProperties) == 0x000001, "Wrong size on DLG_User_C_OnSynchronizeProperties");
static_assert(offsetof(DLG_User_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'DLG_User_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function DLG_User.DLG_User_C.OnTick
// 0x0040 (0x0040 - 0x0000)
struct DLG_User_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DB[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_OnTick) == 0x000008, "Wrong alignment on DLG_User_C_OnTick");
static_assert(sizeof(DLG_User_C_OnTick) == 0x000040, "Wrong size on DLG_User_C_OnTick");
static_assert(offsetof(DLG_User_C_OnTick, _delta) == 0x000000, "Member 'DLG_User_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, Alpha) == 0x000008, "Member 'DLG_User_C_OnTick::Alpha' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, Delta) == 0x000010, "Member 'DLG_User_C_OnTick::Delta' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'DLG_User_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000019, "Member 'DLG_User_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'DLG_User_C_OnTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'DLG_User_C_OnTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'DLG_User_C_OnTick::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_OnTick, CallFunc_SetOpacity_InOpacity_ImplicitCast) == 0x000038, "Member 'DLG_User_C_OnTick::CallFunc_SetOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function DLG_User.DLG_User_C.ShowError
// 0x0020 (0x0020 - 0x0000)
struct DLG_User_C_ShowError final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        _duration;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_ShowError) == 0x000008, "Wrong alignment on DLG_User_C_ShowError");
static_assert(sizeof(DLG_User_C_ShowError) == 0x000020, "Wrong size on DLG_User_C_ShowError");
static_assert(offsetof(DLG_User_C_ShowError, _text) == 0x000000, "Member 'DLG_User_C_ShowError::_text' has a wrong offset!");
static_assert(offsetof(DLG_User_C_ShowError, _duration) == 0x000018, "Member 'DLG_User_C_ShowError::_duration' has a wrong offset!");

// Function DLG_User.DLG_User_C.Tick
// 0x003C (0x003C - 0x0000)
struct DLG_User_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_Tick) == 0x000004, "Wrong alignment on DLG_User_C_Tick");
static_assert(sizeof(DLG_User_C_Tick) == 0x00003C, "Wrong size on DLG_User_C_Tick");
static_assert(offsetof(DLG_User_C_Tick, MyGeometry) == 0x000000, "Member 'DLG_User_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(DLG_User_C_Tick, InDeltaTime) == 0x000038, "Member 'DLG_User_C_Tick::InDeltaTime' has a wrong offset!");

// Function DLG_User.DLG_User_C.GetErrorMessage
// 0x0058 (0x0058 - 0x0000)
struct DLG_User_C_GetErrorMessage final
{
public:
	EResultCode                                   _code;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   _txt;                                              // 0x0008(0x0018)(Parm, OutParm)
	EResultCode                                   Code;                                              // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DE[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0038(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_User_C_GetErrorMessage) == 0x000008, "Wrong alignment on DLG_User_C_GetErrorMessage");
static_assert(sizeof(DLG_User_C_GetErrorMessage) == 0x000058, "Wrong size on DLG_User_C_GetErrorMessage");
static_assert(offsetof(DLG_User_C_GetErrorMessage, _code) == 0x000000, "Member 'DLG_User_C_GetErrorMessage::_code' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, _txt) == 0x000008, "Member 'DLG_User_C_GetErrorMessage::_txt' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, Code) == 0x000020, "Member 'DLG_User_C_GetErrorMessage::Code' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'DLG_User_C_GetErrorMessage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000022, "Member 'DLG_User_C_GetErrorMessage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, K2Node_MakeArray_Array) == 0x000028, "Member 'DLG_User_C_GetErrorMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, CallFunc_Format_ReturnValue) == 0x000038, "Member 'DLG_User_C_GetErrorMessage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000050, "Member 'DLG_User_C_GetErrorMessage::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DLG_User_C_GetErrorMessage, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000051, "Member 'DLG_User_C_GetErrorMessage::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

}

