#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HoverMenuButton

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_HoverMenuButton.Ctrl_HoverMenuButton_C.ExecuteUbergraph_Ctrl_HoverMenuButton
// 0x0004 (0x0004 - 0x0000)
struct Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton) == 0x000004, "Wrong alignment on Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton");
static_assert(sizeof(Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton) == 0x000004, "Wrong size on Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton");
static_assert(offsetof(Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton, EntryPoint) == 0x000000, "Member 'Ctrl_HoverMenuButton_C_ExecuteUbergraph_Ctrl_HoverMenuButton::EntryPoint' has a wrong offset!");

// Function Ctrl_HoverMenuButton.Ctrl_HoverMenuButton_C.Init
// 0x0060 (0x0060 - 0x0000)
struct Ctrl_HoverMenuButton_C_Init final
{
public:
	struct FHoverMenuEntry                        _menu_entry;                                       // 0x0000(0x0058)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          _is_odd;                                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0059(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Init_ReturnValue;                         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverMenuButton_C_Init) == 0x000008, "Wrong alignment on Ctrl_HoverMenuButton_C_Init");
static_assert(sizeof(Ctrl_HoverMenuButton_C_Init) == 0x000060, "Wrong size on Ctrl_HoverMenuButton_C_Init");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Init, _menu_entry) == 0x000000, "Member 'Ctrl_HoverMenuButton_C_Init::_menu_entry' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Init, _is_odd) == 0x000058, "Member 'Ctrl_HoverMenuButton_C_Init::_is_odd' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Init, ReturnValue) == 0x000059, "Member 'Ctrl_HoverMenuButton_C_Init::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Init, CallFunc_Init_ReturnValue) == 0x00005A, "Member 'Ctrl_HoverMenuButton_C_Init::CallFunc_Init_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Init, K2Node_SwitchEnum_CmpSuccess) == 0x00005B, "Member 'Ctrl_HoverMenuButton_C_Init::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ctrl_HoverMenuButton.Ctrl_HoverMenuButton_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_HoverMenuButton_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_HoverMenuButton_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_HoverMenuButton_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_HoverMenuButton_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_HoverMenuButton_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_HoverMenuButton_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_HoverMenuButton_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_HoverMenuButton.Ctrl_HoverMenuButton_C.Update
// 0x0040 (0x0040 - 0x0000)
struct Ctrl_HoverMenuButton_C_Update final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x002C(0x0014)()
};
static_assert(alignof(Ctrl_HoverMenuButton_C_Update) == 0x000004, "Wrong alignment on Ctrl_HoverMenuButton_C_Update");
static_assert(sizeof(Ctrl_HoverMenuButton_C_Update) == 0x000040, "Wrong size on Ctrl_HoverMenuButton_C_Update");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Update, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'Ctrl_HoverMenuButton_C_Update::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Update, CallFunc_IsHovered_ReturnValue) == 0x000014, "Member 'Ctrl_HoverMenuButton_C_Update::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Update, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'Ctrl_HoverMenuButton_C_Update::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Ctrl_HoverMenuButton_C_Update, K2Node_MakeStruct_SlateColor_2) == 0x00002C, "Member 'Ctrl_HoverMenuButton_C_Update::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

}

