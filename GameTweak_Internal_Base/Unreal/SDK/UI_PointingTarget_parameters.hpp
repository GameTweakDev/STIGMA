#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_PointingTarget

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_PointingTarget.UI_PointingTarget_C.ExecuteUbergraph_UI_PointingTarget
// 0x0040 (0x0040 - 0x0000)
struct UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget) == 0x000004, "Wrong alignment on UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget");
static_assert(sizeof(UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget) == 0x000040, "Wrong size on UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget");
static_assert(offsetof(UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget, EntryPoint) == 0x000000, "Member 'UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_PointingTarget_C_ExecuteUbergraph_UI_PointingTarget::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_PointingTarget.UI_PointingTarget_C.OnPointingActor
// 0x0018 (0x0018 - 0x0000)
struct UI_PointingTarget_C_OnPointingActor final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PointingTarget_C_OnPointingActor) == 0x000008, "Wrong alignment on UI_PointingTarget_C_OnPointingActor");
static_assert(sizeof(UI_PointingTarget_C_OnPointingActor) == 0x000018, "Wrong size on UI_PointingTarget_C_OnPointingActor");
static_assert(offsetof(UI_PointingTarget_C_OnPointingActor, _Actor) == 0x000000, "Member 'UI_PointingTarget_C_OnPointingActor::_Actor' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_OnPointingActor, K2Node_DynamicCast_AsChara_Base) == 0x000008, "Member 'UI_PointingTarget_C_OnPointingActor::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_OnPointingActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UI_PointingTarget_C_OnPointingActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_PointingTarget.UI_PointingTarget_C.Show
// 0x0020 (0x0020 - 0x0000)
struct UI_PointingTarget_C_Show final
{
public:
	class ACharaBase*                             _chara;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  My_pawn;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             Chara;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UUI_FloatingGuide*                      CallFunc_ShowFloatingGuide_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PointingTarget_C_Show) == 0x000008, "Wrong alignment on UI_PointingTarget_C_Show");
static_assert(sizeof(UI_PointingTarget_C_Show) == 0x000020, "Wrong size on UI_PointingTarget_C_Show");
static_assert(offsetof(UI_PointingTarget_C_Show, _chara) == 0x000000, "Member 'UI_PointingTarget_C_Show::_chara' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_Show, My_pawn) == 0x000008, "Member 'UI_PointingTarget_C_Show::My_pawn' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_Show, Chara) == 0x000010, "Member 'UI_PointingTarget_C_Show::Chara' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_Show, CallFunc_ShowFloatingGuide_ReturnValue) == 0x000018, "Member 'UI_PointingTarget_C_Show::CallFunc_ShowFloatingGuide_ReturnValue' has a wrong offset!");

// Function UI_PointingTarget.UI_PointingTarget_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_PointingTarget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PointingTarget_C_Tick) == 0x000004, "Wrong alignment on UI_PointingTarget_C_Tick");
static_assert(sizeof(UI_PointingTarget_C_Tick) == 0x00003C, "Wrong size on UI_PointingTarget_C_Tick");
static_assert(offsetof(UI_PointingTarget_C_Tick, MyGeometry) == 0x000000, "Member 'UI_PointingTarget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_PointingTarget_C_Tick::InDeltaTime' has a wrong offset!");

// Function UI_PointingTarget.UI_PointingTarget_C.UpdateDistance
// 0x0100 (0x0100 - 0x0000)
struct UI_PointingTarget_C_UpdateDistance final
{
public:
	class APawn*                                  My_pawn;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3917[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3918[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
};
static_assert(alignof(UI_PointingTarget_C_UpdateDistance) == 0x000008, "Wrong alignment on UI_PointingTarget_C_UpdateDistance");
static_assert(sizeof(UI_PointingTarget_C_UpdateDistance) == 0x000100, "Wrong size on UI_PointingTarget_C_UpdateDistance");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, My_pawn) == 0x000000, "Member 'UI_PointingTarget_C_UpdateDistance::My_pawn' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_Vector_Distance2D_ReturnValue) == 0x000048, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_K2_GetPawn_ReturnValue) == 0x000068, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000070, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'UI_PointingTarget_C_UpdateDistance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, K2Node_MakeArray_Array) == 0x0000D8, "Member 'UI_PointingTarget_C_UpdateDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateDistance, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'UI_PointingTarget_C_UpdateDistance::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UI_PointingTarget.UI_PointingTarget_C.UpdateTargetInfo
// 0x0248 (0x0248 - 0x0000)
struct UI_PointingTarget_C_UpdateTargetInfo final
{
public:
	float                                         CallFunc_GetHP_ReturnValue;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3919[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0018)()
	float                                         CallFunc_GetArmor_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0028(0x0018)()
	float                                         CallFunc_GetConfig_Armor_MaxArmor_ReturnValue;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0048(0x0018)()
	float                                         CallFunc_GetConfig_MaxHP_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391C[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0068(0x0018)()
	struct FConfig_Armor                          CallFunc_GetConfig_Armor_ReturnValue;              // 0x0080(0x01A8)(ConstParm)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_1;   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_2;   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_3;   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PointingTarget_C_UpdateTargetInfo) == 0x000008, "Wrong alignment on UI_PointingTarget_C_UpdateTargetInfo");
static_assert(sizeof(UI_PointingTarget_C_UpdateTargetInfo) == 0x000248, "Wrong size on UI_PointingTarget_C_UpdateTargetInfo");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_GetHP_ReturnValue) == 0x000000, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_GetHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_GetArmor_ReturnValue) == 0x000020, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_GetArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000028, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_GetConfig_Armor_MaxArmor_ReturnValue) == 0x000040, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_GetConfig_Armor_MaxArmor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000048, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_GetConfig_MaxHP_ReturnValue) == 0x000060, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_GetConfig_MaxHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000068, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_GetConfig_Armor_ReturnValue) == 0x000080, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_GetConfig_Armor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000228, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_Value_ImplicitCast_1) == 0x000230, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_Value_ImplicitCast_2) == 0x000238, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(UI_PointingTarget_C_UpdateTargetInfo, CallFunc_Conv_DoubleToText_Value_ImplicitCast_3) == 0x000240, "Member 'UI_PointingTarget_C_UpdateTargetInfo::CallFunc_Conv_DoubleToText_Value_ImplicitCast_3' has a wrong offset!");

}

