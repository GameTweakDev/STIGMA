#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: CTRL_PassiveSkillDetail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.ShowLevelLock
// 0x0001 (0x0001 - 0x0000)
struct CTRL_PassiveSkillDetail_C_ShowLevelLock final
{
public:
	bool                                          _show;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_ShowLevelLock) == 0x000001, "Wrong alignment on CTRL_PassiveSkillDetail_C_ShowLevelLock");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_ShowLevelLock) == 0x000001, "Wrong size on CTRL_PassiveSkillDetail_C_ShowLevelLock");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ShowLevelLock, _show) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_ShowLevelLock::_show' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.SetLevelLockText
// 0x0004 (0x0004 - 0x0000)
struct CTRL_PassiveSkillDetail_C_SetLevelLockText final
{
public:
	int32                                         _lock_level;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_SetLevelLockText) == 0x000004, "Wrong alignment on CTRL_PassiveSkillDetail_C_SetLevelLockText");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_SetLevelLockText) == 0x000004, "Wrong size on CTRL_PassiveSkillDetail_C_SetLevelLockText");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_SetLevelLockText, _lock_level) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_SetLevelLockText::_lock_level' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.SetLearned
// 0x0001 (0x0001 - 0x0000)
struct CTRL_PassiveSkillDetail_C_SetLearned final
{
public:
	bool                                          _learned;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_SetLearned) == 0x000001, "Wrong alignment on CTRL_PassiveSkillDetail_C_SetLearned");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_SetLearned) == 0x000001, "Wrong size on CTRL_PassiveSkillDetail_C_SetLearned");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_SetLearned, _learned) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_SetLearned::_learned' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.SetIsMaxCanLevelUp
// 0x0001 (0x0001 - 0x0000)
struct CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp final
{
public:
	bool                                          _is_max;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp) == 0x000001, "Wrong alignment on CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp) == 0x000001, "Wrong size on CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp, _is_max) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_SetIsMaxCanLevelUp::_is_max' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.SetIsCurrent
// 0x0001 (0x0001 - 0x0000)
struct CTRL_PassiveSkillDetail_C_SetIsCurrent final
{
public:
	bool                                          _is_current;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_SetIsCurrent) == 0x000001, "Wrong alignment on CTRL_PassiveSkillDetail_C_SetIsCurrent");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_SetIsCurrent) == 0x000001, "Wrong size on CTRL_PassiveSkillDetail_C_SetIsCurrent");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_SetIsCurrent, _is_current) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_SetIsCurrent::_is_current' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.SetIsBuffed
// 0x0001 (0x0001 - 0x0000)
struct CTRL_PassiveSkillDetail_C_SetIsBuffed final
{
public:
	bool                                          _is_buffed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_SetIsBuffed) == 0x000001, "Wrong alignment on CTRL_PassiveSkillDetail_C_SetIsBuffed");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_SetIsBuffed) == 0x000001, "Wrong size on CTRL_PassiveSkillDetail_C_SetIsBuffed");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_SetIsBuffed, _is_buffed) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_SetIsBuffed::_is_buffed' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.SetDesc
// 0x0018 (0x0018 - 0x0000)
struct CTRL_PassiveSkillDetail_C_SetDesc final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_SetDesc) == 0x000008, "Wrong alignment on CTRL_PassiveSkillDetail_C_SetDesc");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_SetDesc) == 0x000018, "Wrong size on CTRL_PassiveSkillDetail_C_SetDesc");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_SetDesc, _text) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_SetDesc::_text' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.Set Image State
// 0x00D0 (0x00D0 - 0x0000)
struct CTRL_PassiveSkillDetail_C_Set_Image_State final
{
public:
	struct FSlateBrush                            InBrush;                                           // 0x0000(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_Set_Image_State) == 0x000010, "Wrong alignment on CTRL_PassiveSkillDetail_C_Set_Image_State");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_Set_Image_State) == 0x0000D0, "Wrong size on CTRL_PassiveSkillDetail_C_Set_Image_State");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_Set_Image_State, InBrush) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_Set_Image_State::InBrush' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.Set Image Outline
// 0x0014 (0x0014 - 0x0000)
struct CTRL_PassiveSkillDetail_C_Set_Image_Outline final
{
public:
	struct FSlateColor                            TintColor;                                         // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_Set_Image_Outline) == 0x000004, "Wrong alignment on CTRL_PassiveSkillDetail_C_Set_Image_Outline");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_Set_Image_Outline) == 0x000014, "Wrong size on CTRL_PassiveSkillDetail_C_Set_Image_Outline");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_Set_Image_Outline, TintColor) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_Set_Image_Outline::TintColor' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct CTRL_PassiveSkillDetail_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on CTRL_PassiveSkillDetail_C_OnSynchronizeProperties");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_OnSynchronizeProperties) == 0x000001, "Wrong size on CTRL_PassiveSkillDetail_C_OnSynchronizeProperties");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.InitLevelText
// 0x00C0 (0x00C0 - 0x0000)
struct CTRL_PassiveSkillDetail_C_InitLevelText final
{
public:
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4160[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0090(0x0018)()
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x00A8(0x0018)()
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_InitLevelText) == 0x000008, "Wrong alignment on CTRL_PassiveSkillDetail_C_InitLevelText");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_InitLevelText) == 0x0000C0, "Wrong size on CTRL_PassiveSkillDetail_C_InitLevelText");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, CallFunc_Divide_IntInt_ReturnValue) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, K2Node_MakeArray_Array) == 0x000068, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, CallFunc_Format_ReturnValue) == 0x000078, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, CallFunc_MakeLiteralText_ReturnValue) == 0x000090, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_InitLevelText, CallFunc_AppendText_ReturnValue) == 0x0000A8, "Member 'CTRL_PassiveSkillDetail_C_InitLevelText::CallFunc_AppendText_ReturnValue' has a wrong offset!");

// Function CTRL_PassiveSkillDetail.CTRL_PassiveSkillDetail_C.ExecuteUbergraph_CTRL_PassiveSkillDetail
// 0x0048 (0x0048 - 0x0000)
struct CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__learned;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4161[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         K2Node_Event__lock_level;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4162[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	bool                                          K2Node_Event__show;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__is_buffed;                           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__is_current;                          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__is_max;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4163[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_Event__text;                                // 0x0030(0x0018)(ConstParm)
};
static_assert(alignof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail) == 0x000008, "Wrong alignment on CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail");
static_assert(sizeof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail) == 0x000048, "Wrong size on CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, EntryPoint) == 0x000000, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::EntryPoint' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__learned) == 0x000004, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__learned' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__lock_level) == 0x000008, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__lock_level' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__show) == 0x000028, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__show' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__is_buffed) == 0x000029, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__is_buffed' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__is_current) == 0x00002A, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__is_current' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__is_max) == 0x00002B, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__is_max' has a wrong offset!");
static_assert(offsetof(CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail, K2Node_Event__text) == 0x000030, "Member 'CTRL_PassiveSkillDetail_C_ExecuteUbergraph_CTRL_PassiveSkillDetail::K2Node_Event__text' has a wrong offset!");

}

