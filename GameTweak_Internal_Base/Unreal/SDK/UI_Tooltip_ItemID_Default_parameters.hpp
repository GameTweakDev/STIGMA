#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_ItemID_Default

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Tooltip_ItemID_Default.UI_Tooltip_ItemID_Default_C.InitWidget
// 0x0150 (0x0150 - 0x0000)
struct UI_Tooltip_ItemID_Default_C_InitWidget final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 CallFunc_GetCategory_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 CallFunc_GetCategory_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3547[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemEntry                             CallFunc_GetItemEntry_ReturnValue;                 // 0x0018(0x0130)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_ItemID_Default_C_InitWidget) == 0x000008, "Wrong alignment on UI_Tooltip_ItemID_Default_C_InitWidget");
static_assert(sizeof(UI_Tooltip_ItemID_Default_C_InitWidget) == 0x000150, "Wrong size on UI_Tooltip_ItemID_Default_C_InitWidget");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, _item_id) == 0x000000, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::_item_id' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, CallFunc_IsValidItemID_ReturnValue) == 0x000010, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, CallFunc_GetCategory_ReturnValue) == 0x000011, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, CallFunc_GetCategory_ReturnValue_1) == 0x000012, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::CallFunc_GetCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, CallFunc_GetItemEntry_ReturnValue) == 0x000018, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::CallFunc_GetItemEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000148, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_InitWidget, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000149, "Member 'UI_Tooltip_ItemID_Default_C_InitWidget::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function UI_Tooltip_ItemID_Default.UI_Tooltip_ItemID_Default_C.OnSynchronizeProperties
// 0x0004 (0x0004 - 0x0000)
struct UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnSynchronizeProperties_ReturnValue;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties");
static_assert(sizeof(UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties) == 0x000004, "Wrong size on UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties, CallFunc_IsValidItemID_ReturnValue) == 0x000001, "Member 'UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties, CallFunc_OnSynchronizeProperties_ReturnValue) == 0x000003, "Member 'UI_Tooltip_ItemID_Default_C_OnSynchronizeProperties::CallFunc_OnSynchronizeProperties_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_ItemID_Default.UI_Tooltip_ItemID_Default_C.UpdateCanBuyFast
// 0x00B0 (0x00B0 - 0x0000)
struct UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast final
{
public:
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo;                  // 0x0000(0x0030)()
	struct FGoodsID                               CallFunc_ToGoodsID_ReturnValue;                    // 0x0030(0x0010)(HasGetValueTypeHash)
	class ULocalPlayerContext*                    CallFunc_Get_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 CallFunc_GetCategory_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGoodsCategory                                CallFunc_GetGoodsCategoryFromItemCategory_ReturnValue; // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3548[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCategoryGoodsMap                      CallFunc_GetCategoryGoods_ReturnValue;             // 0x0050(0x0050)()
	class UGoodsObject*                           CallFunc_Map_Find_Value;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast) == 0x000008, "Wrong alignment on UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast");
static_assert(sizeof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast) == 0x0000B0, "Wrong size on UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, K2Node_MakeStruct_TooltipKeyInfo) == 0x000000, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::K2Node_MakeStruct_TooltipKeyInfo' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_ToGoodsID_ReturnValue) == 0x000030, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_ToGoodsID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_Get_ReturnValue) == 0x000040, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_GetCategory_ReturnValue) == 0x000049, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_GetCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_GetGoodsCategoryFromItemCategory_ReturnValue) == 0x00004A, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_GetGoodsCategoryFromItemCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_GetCategoryGoods_ReturnValue) == 0x000050, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_GetCategoryGoods_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast, CallFunc_Map_Find_ReturnValue) == 0x0000A8, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCanBuyFast::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_ItemID_Default.UI_Tooltip_ItemID_Default_C.UpdateCategory
// 0x01F8 (0x01F8 - 0x0000)
struct UI_Tooltip_ItemID_Default_C_UpdateCategory final
{
public:
	struct FConfig_ItemCategory                   Category_def;                                      // 0x0000(0x00A0)(Edit, BlueprintVisible)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3549[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_ItemCategory                   CallFunc_GetItemCategoryDefine_ReturnValue;        // 0x00A8(0x00A0)(ConstParm)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDevelopping_ReturnValue;                // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354A[0x5];                                     // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0160(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0178(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_ItemID_Default_C_UpdateCategory) == 0x000008, "Wrong alignment on UI_Tooltip_ItemID_Default_C_UpdateCategory");
static_assert(sizeof(UI_Tooltip_ItemID_Default_C_UpdateCategory) == 0x0001F8, "Wrong size on UI_Tooltip_ItemID_Default_C_UpdateCategory");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, Category_def) == 0x000000, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::Category_def' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_TextIsEmpty_ReturnValue) == 0x0000A0, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_GetItemCategoryDefine_ReturnValue) == 0x0000A8, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_GetItemCategoryDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000148, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000149, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_IsDevelopping_ReturnValue) == 0x00014A, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_IsDevelopping_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000150, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_Conv_StringToText_ReturnValue) == 0x000160, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, K2Node_MakeStruct_FormatArgumentData) == 0x000178, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, K2Node_MakeArray_Array) == 0x0001C8, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateCategory, CallFunc_BooleanAND_ReturnValue) == 0x0001F0, "Member 'UI_Tooltip_ItemID_Default_C_UpdateCategory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_ItemID_Default.UI_Tooltip_ItemID_Default_C.UpdateGrade
// 0x0090 (0x0090 - 0x0000)
struct UI_Tooltip_ItemID_Default_C_UpdateGrade final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGradeDef                              CallFunc_GetGradeDefine_ReturnValue;               // 0x0008(0x0070)(ConstParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0014)()
};
static_assert(alignof(UI_Tooltip_ItemID_Default_C_UpdateGrade) == 0x000008, "Wrong alignment on UI_Tooltip_ItemID_Default_C_UpdateGrade");
static_assert(sizeof(UI_Tooltip_ItemID_Default_C_UpdateGrade) == 0x000090, "Wrong size on UI_Tooltip_ItemID_Default_C_UpdateGrade");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateGrade, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'UI_Tooltip_ItemID_Default_C_UpdateGrade::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateGrade, CallFunc_GetGradeDefine_ReturnValue) == 0x000008, "Member 'UI_Tooltip_ItemID_Default_C_UpdateGrade::CallFunc_GetGradeDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_ItemID_Default_C_UpdateGrade, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'UI_Tooltip_ItemID_Default_C_UpdateGrade::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

