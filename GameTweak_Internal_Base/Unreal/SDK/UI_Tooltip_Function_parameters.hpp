#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_Function

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Tooltip_Function.UI_Tooltip_Function_C.OnShowTooltip
// 0x0398 (0x0398 - 0x0000)
struct UI_Tooltip_Function_C_OnShowTooltip final
{
public:
	struct FConfig_Function                       Function_def;                                      // 0x0000(0x01A8)(Edit, BlueprintVisible)
	struct FAppliedFunction                       CallFunc_FindAppliedFunctionsByID__out_function;   // 0x01A8(0x0030)()
	bool                                          CallFunc_FindAppliedFunctionsByID_ReturnValue;     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0D[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class FText>                           CallFunc_GetFunctionEffectText_ReturnValue;        // 0x01E0(0x0010)(ReferenceParm)
	struct FConfig_Function                       CallFunc_GetFunctionDefine_ReturnValue;            // 0x01F0(0x01A8)(ConstParm)
};
static_assert(alignof(UI_Tooltip_Function_C_OnShowTooltip) == 0x000008, "Wrong alignment on UI_Tooltip_Function_C_OnShowTooltip");
static_assert(sizeof(UI_Tooltip_Function_C_OnShowTooltip) == 0x000398, "Wrong size on UI_Tooltip_Function_C_OnShowTooltip");
static_assert(offsetof(UI_Tooltip_Function_C_OnShowTooltip, Function_def) == 0x000000, "Member 'UI_Tooltip_Function_C_OnShowTooltip::Function_def' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_OnShowTooltip, CallFunc_FindAppliedFunctionsByID__out_function) == 0x0001A8, "Member 'UI_Tooltip_Function_C_OnShowTooltip::CallFunc_FindAppliedFunctionsByID__out_function' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_OnShowTooltip, CallFunc_FindAppliedFunctionsByID_ReturnValue) == 0x0001D8, "Member 'UI_Tooltip_Function_C_OnShowTooltip::CallFunc_FindAppliedFunctionsByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_OnShowTooltip, CallFunc_GetFunctionEffectText_ReturnValue) == 0x0001E0, "Member 'UI_Tooltip_Function_C_OnShowTooltip::CallFunc_GetFunctionEffectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_OnShowTooltip, CallFunc_GetFunctionDefine_ReturnValue) == 0x0001F0, "Member 'UI_Tooltip_Function_C_OnShowTooltip::CallFunc_GetFunctionDefine_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_Function.UI_Tooltip_Function_C.SetEffects
// 0x0078 (0x0078 - 0x0000)
struct UI_Tooltip_Function_C_SetEffects final
{
public:
	TArray<class FText>                           Func_effect_texts;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Effect_text;                                       // 0x0010(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A10[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x0060(0x0018)()
};
static_assert(alignof(UI_Tooltip_Function_C_SetEffects) == 0x000008, "Wrong alignment on UI_Tooltip_Function_C_SetEffects");
static_assert(sizeof(UI_Tooltip_Function_C_SetEffects) == 0x000078, "Wrong size on UI_Tooltip_Function_C_SetEffects");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, Func_effect_texts) == 0x000000, "Member 'UI_Tooltip_Function_C_SetEffects::Func_effect_texts' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, Effect_text) == 0x000010, "Member 'UI_Tooltip_Function_C_SetEffects::Effect_text' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000028, "Member 'UI_Tooltip_Function_C_SetEffects::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'UI_Tooltip_Function_C_SetEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'UI_Tooltip_Function_C_SetEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'UI_Tooltip_Function_C_SetEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'UI_Tooltip_Function_C_SetEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, CallFunc_Array_Get_Item) == 0x000040, "Member 'UI_Tooltip_Function_C_SetEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'UI_Tooltip_Function_C_SetEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetEffects, CallFunc_AppendText_ReturnValue) == 0x000060, "Member 'UI_Tooltip_Function_C_SetEffects::CallFunc_AppendText_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_Function.UI_Tooltip_Function_C.SetModes
// 0x03D0 (0x03D0 - 0x0000)
struct UI_Tooltip_Function_C_SetModes final
{
public:
	TArray<EGameMode>                             Modes;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Mode_text;                                         // 0x0010(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A11[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     CallFunc_Array_Get_Item;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A12[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FMode                                  CallFunc_GetGameModeEntry_ReturnValue;             // 0x0040(0x0370)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A13[0x3];                                     // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x03B8(0x0018)()
};
static_assert(alignof(UI_Tooltip_Function_C_SetModes) == 0x000008, "Wrong alignment on UI_Tooltip_Function_C_SetModes");
static_assert(sizeof(UI_Tooltip_Function_C_SetModes) == 0x0003D0, "Wrong size on UI_Tooltip_Function_C_SetModes");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, Modes) == 0x000000, "Member 'UI_Tooltip_Function_C_SetModes::Modes' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, Mode_text) == 0x000010, "Member 'UI_Tooltip_Function_C_SetModes::Mode_text' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000028, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'UI_Tooltip_Function_C_SetModes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'UI_Tooltip_Function_C_SetModes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_GetGameModeEntry_ReturnValue) == 0x000040, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_GetGameModeEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_Array_Length_ReturnValue) == 0x0003B0, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_Less_IntInt_ReturnValue) == 0x0003B4, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetModes, CallFunc_AppendText_ReturnValue) == 0x0003B8, "Member 'UI_Tooltip_Function_C_SetModes::CallFunc_AppendText_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_Function.UI_Tooltip_Function_C.SetRemainTime
// 0x0018 (0x0018 - 0x0000)
struct UI_Tooltip_Function_C_SetRemainTime final
{
public:
	struct FDateTime                              _expired_at;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_Function_C_SetRemainTime) == 0x000008, "Wrong alignment on UI_Tooltip_Function_C_SetRemainTime");
static_assert(sizeof(UI_Tooltip_Function_C_SetRemainTime) == 0x000018, "Wrong size on UI_Tooltip_Function_C_SetRemainTime");
static_assert(offsetof(UI_Tooltip_Function_C_SetRemainTime, _expired_at) == 0x000000, "Member 'UI_Tooltip_Function_C_SetRemainTime::_expired_at' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetRemainTime, CallFunc_MakeDateTime_ReturnValue) == 0x000008, "Member 'UI_Tooltip_Function_C_SetRemainTime::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_Function_C_SetRemainTime, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'UI_Tooltip_Function_C_SetRemainTime::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_Function.UI_Tooltip_Function_C.SetShowRemainTime
// 0x0001 (0x0001 - 0x0000)
struct UI_Tooltip_Function_C_SetShowRemainTime final
{
public:
	bool                                          _show_remain_time;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_Function_C_SetShowRemainTime) == 0x000001, "Wrong alignment on UI_Tooltip_Function_C_SetShowRemainTime");
static_assert(sizeof(UI_Tooltip_Function_C_SetShowRemainTime) == 0x000001, "Wrong size on UI_Tooltip_Function_C_SetShowRemainTime");
static_assert(offsetof(UI_Tooltip_Function_C_SetShowRemainTime, _show_remain_time) == 0x000000, "Member 'UI_Tooltip_Function_C_SetShowRemainTime::_show_remain_time' has a wrong offset!");

}

