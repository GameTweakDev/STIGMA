#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_ItemCombo

#include "Basic.hpp"

#include "Ctrl_ItemCombo_classes.hpp"
#include "Ctrl_ItemCombo_parameters.hpp"


namespace SDK
{

// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FString                           SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_ItemCombo_C::BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");

	Params::Ctrl_ItemCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCtrl_ItemCombo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.ExecuteUbergraph_Ctrl_ItemCombo
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_ItemCombo_C::ExecuteUbergraph_Ctrl_ItemCombo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "ExecuteUbergraph_Ctrl_ItemCombo");

	Params::Ctrl_ItemCombo_C_ExecuteUbergraph_Ctrl_ItemCombo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.OnChangeSelection__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemID                          _selected_id                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   _slot                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_ItemCombo_C::OnChangeSelection__DelegateSignature(const struct FItemID& _selected_id, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "OnChangeSelection__DelegateSignature");

	Params::Ctrl_ItemCombo_C_OnChangeSelection__DelegateSignature Parms{};

	Parms._selected_id = std::move(_selected_id);
	Parms._slot = _slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.OnSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           _str                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UCtrl_ItemCombo_C::OnSelected(const class FString& _str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "OnSelected");

	Params::Ctrl_ItemCombo_C_OnSelected Parms{};

	Parms._str = std::move(_str);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.OnSynchronizeProperties
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UCtrl_ItemCombo_C::OnSynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "OnSynchronizeProperties");

	Params::Ctrl_ItemCombo_C_OnSynchronizeProperties Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.SetItemID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemID                          _item_id                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UCtrl_ItemCombo_C::SetItemID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "SetItemID");

	Params::Ctrl_ItemCombo_C_SetItemID Parms{};

	Parms._item_id = std::move(_item_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.UpdateFont
// (Public, BlueprintCallable, BlueprintEvent)

void UCtrl_ItemCombo_C::UpdateFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "UpdateFont");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.UpdateTitle
// (Public, BlueprintCallable, BlueprintEvent)

void UCtrl_ItemCombo_C::UpdateTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "UpdateTitle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.ValidateComboMenu
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCtrl_ItemCombo_C::ValidateComboMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "ValidateComboMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_ItemCombo.Ctrl_ItemCombo_C.FindEntryByItemID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _item_id                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   _index                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_ItemCombo_C::FindEntryByItemID(const struct FItemID& _item_id, int32* _index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemCombo_C", "FindEntryByItemID");

	Params::Ctrl_ItemCombo_C_FindEntryByItemID Parms{};

	Parms._item_id = std::move(_item_id);

	UObject::ProcessEvent(Func, &Parms);

	if (_index != nullptr)
		*_index = Parms._index;
}

}

