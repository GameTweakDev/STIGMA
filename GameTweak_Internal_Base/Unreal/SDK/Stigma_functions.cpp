#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Stigma

#include "Basic.hpp"

#include "Stigma_classes.hpp"
#include "Stigma_parameters.hpp"


namespace SDK
{

// Function Stigma.StigmaPlayerController.AddChara2DVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _voice_id                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     _player_state                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _speak_chara_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_radio                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::AddChara2DVoice(const class FString& _voice_id, class APlayerState* _player_state, ECharaType _speak_chara_type, bool _is_radio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "AddChara2DVoice");

	Params::StigmaPlayerController_AddChara2DVoice Parms{};

	Parms._voice_id = std::move(_voice_id);
	Parms._player_state = _player_state;
	Parms._speak_chara_type = _speak_chara_type;
	Parms._is_radio = _is_radio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.AddGameNotify
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _notify_name                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   _time                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::AddGameNotify(const class FName& _notify_name, const class FText& _text, float _time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "AddGameNotify");

	Params::StigmaPlayerController_AddGameNotify Parms{};

	Parms._notify_name = _notify_name;
	Parms._text = std::move(_text);
	Parms._time = _time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.AddTickTask
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _duration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(float _delta, float _elaped, ETickTaskState _state)>_task                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::AddTickTask(float _duration, const TDelegate<void(float _delta, float _elaped, ETickTaskState _state)>& _task)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "AddTickTask");

	Params::StigmaPlayerController_AddTickTask Parms{};

	Parms._duration = _duration;
	Parms._task = _task;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.AddVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _voice_id                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _speak_chara                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_3d_voice                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::AddVoice(const class FString& _voice_id, class ACharaBase* _speak_chara, bool _is_3d_voice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "AddVoice");

	Params::StigmaPlayerController_AddVoice Parms{};

	Parms._voice_id = std::move(_voice_id);
	Parms._speak_chara = _speak_chara;
	Parms._is_3d_voice = _is_3d_voice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.ClearAllGameNotifies
// (Final, Native, Public, BlueprintCallable)

void AStigmaPlayerController::ClearAllGameNotifies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "ClearAllGameNotifies");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.HideAllGameNotifies
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _hide                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::HideAllGameNotifies(bool _hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "HideAllGameNotifies");

	Params::StigmaPlayerController_HideAllGameNotifies Parms{};

	Parms._hide = _hide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.MapJump
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _level_name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _fadeout_time                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::MapJump(class FName _level_name, float _fadeout_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "MapJump");

	Params::StigmaPlayerController_MapJump Parms{};

	Parms._level_name = _level_name;
	Parms._fadeout_time = _fadeout_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.OnEnterChatAction
// (Native, Protected, BlueprintCallable)

void AStigmaPlayerController::OnEnterChatAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "OnEnterChatAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.PlayVoice
// (Final, Native, Public, BlueprintCallable)

void AStigmaPlayerController::PlayVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "PlayVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.RemoveGameNotify
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _notify_name                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _force_remove                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::RemoveGameNotify(const class FName& _notify_name, bool _force_remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "RemoveGameNotify");

	Params::StigmaPlayerController_RemoveGameNotify Parms{};

	Parms._notify_name = _notify_name;
	Parms._force_remove = _force_remove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPlayerController.ShowQuickPurchaseCurrencyPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaPlayerController::ShowQuickPurchaseCurrencyPopup(const struct FItemID_Currency& _currency_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPlayerController", "ShowQuickPurchaseCurrencyPopup");

	Params::StigmaPlayerController_ShowQuickPurchaseCurrencyPopup Parms{};

	Parms._currency_id = std::move(_currency_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.ExitToLobby
// (Final, Native, Public, BlueprintCallable)

void AMatchServicedPlayerController::ExitToLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "ExitToLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.OnChangeServerState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EServerStatus                           _server_state                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerController::OnChangeServerState(EServerStatus _server_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "OnChangeServerState");

	Params::MatchServicedPlayerController_OnChangeServerState Parms{};

	Parms._server_state = _server_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerController.OnClient_UpdateSharedPlayerState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMatchServicedPlayerState*        _player_state                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::OnClient_UpdateSharedPlayerState(class AMatchServicedPlayerState* _player_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "OnClient_UpdateSharedPlayerState");

	Params::MatchServicedPlayerController_OnClient_UpdateSharedPlayerState Parms{};

	Parms._player_state = _player_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.OnRep_NetID
// (Final, Native, Protected)
// Parameters:
// struct FNetID                           _old_id                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::OnRep_NetID(const struct FNetID& _old_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "OnRep_NetID");

	Params::MatchServicedPlayerController_OnRep_NetID Parms{};

	Parms._old_id = std::move(_old_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.QuitToLobby
// (Final, Native, Public, BlueprintCallable)

void AMatchServicedPlayerController::QuitToLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "QuitToLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_CLI_SendChat
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FChatMsg                         _msg                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_CLI_SendChat(const struct FChatMsg& _msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_CLI_SendChat");

	Params::MatchServicedPlayerController_RPC_CLI_SendChat Parms{};

	Parms._msg = std::move(_msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_CLIENT_Quit_ACK
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void AMatchServicedPlayerController::RPC_CLIENT_Quit_ACK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_CLIENT_Quit_ACK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_CLIENT_TryReady_ACK
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FConfirmResponse                 _response                                              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_CLIENT_TryReady_ACK(const struct FConfirmResponse& _response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_CLIENT_TryReady_ACK");

	Params::MatchServicedPlayerController_RPC_CLIENT_TryReady_ACK Parms{};

	Parms._response = std::move(_response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_CLIENT_WarnChangingGun
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_CLIENT_WarnChangingGun(ECharaType _chara_type, const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_CLIENT_WarnChangingGun");

	Params::MatchServicedPlayerController_RPC_CLIENT_WarnChangingGun Parms{};

	Parms._chara_type = _chara_type;
	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_DEBUG_FinishBattle
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMatchServicedPlayerController::RPC_DEBUG_FinishBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_DEBUG_FinishBattle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_ConfirmEndSession
// (Net, NetReliable, Native, Event, Public, NetServer)

void AMatchServicedPlayerController::RPC_SERVER_ConfirmEndSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_ConfirmEndSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_Quit
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMatchServicedPlayerController::RPC_SERVER_Quit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_Quit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_SendChat
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FChatMsg                         _msg                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_SERVER_SendChat(const struct FChatMsg& _msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_SendChat");

	Params::MatchServicedPlayerController_RPC_SERVER_SendChat Parms{};

	Parms._msg = std::move(_msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_SetCharacterSetting
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_SERVER_SetCharacterSetting(int32 _zidx_chara, const struct FItemID& _item_id, int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_SetCharacterSetting");

	Params::MatchServicedPlayerController_RPC_SERVER_SetCharacterSetting Parms{};

	Parms._zidx_chara = _zidx_chara;
	Parms._item_id = std::move(_item_id);
	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_SetCostume
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TArray<struct FLocalCharacterSet>       _local_picked_charas                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_SERVER_SetCostume(const TArray<struct FLocalCharacterSet>& _local_picked_charas, int32 _zidx_chara, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_SetCostume");

	Params::MatchServicedPlayerController_RPC_SERVER_SetCostume Parms{};

	Parms._local_picked_charas = std::move(_local_picked_charas);
	Parms._zidx_chara = _zidx_chara;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_SetGunPreset
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TArray<struct FLocalCharacterSet>       _local_picked_charas                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_SERVER_SetGunPreset(const TArray<struct FLocalCharacterSet>& _local_picked_charas, int32 _zidx_chara, const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_SetGunPreset");

	Params::MatchServicedPlayerController_RPC_SERVER_SetGunPreset Parms{};

	Parms._local_picked_charas = std::move(_local_picked_charas);
	Parms._zidx_chara = _zidx_chara;
	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_TryReady
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TArray<struct FLocalCharacterSet>       _local_picked_charas                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _i_am_ready                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _forced                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_SERVER_TryReady(const TArray<struct FLocalCharacterSet>& _local_picked_charas, bool _i_am_ready, bool _forced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_TryReady");

	Params::MatchServicedPlayerController_RPC_SERVER_TryReady Parms{};

	Parms._local_picked_charas = std::move(_local_picked_charas);
	Parms._i_am_ready = _i_am_ready;
	Parms._forced = _forced;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_UpdateBooster
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                                   _slot_index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::RPC_SERVER_UpdateBooster(int32 _slot_index, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_UpdateBooster");

	Params::MatchServicedPlayerController_RPC_SERVER_UpdateBooster Parms{};

	Parms._slot_index = _slot_index;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.RPC_SERVER_UpdateInvenByItems
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AMatchServicedPlayerController::RPC_SERVER_UpdateInvenByItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "RPC_SERVER_UpdateInvenByItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.SERVER_SetNetID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FNetID                           _net_id                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::SERVER_SetNetID(const struct FNetID& _net_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "SERVER_SetNetID");

	Params::MatchServicedPlayerController_SERVER_SetNetID Parms{};

	Parms._net_id = std::move(_net_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.Setter_NetID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FNetID                           _new_id                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::Setter_NetID(const struct FNetID& _new_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "Setter_NetID");

	Params::MatchServicedPlayerController_Setter_NetID Parms{};

	Parms._new_id = std::move(_new_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.ShowRewardedPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRewardPlain                     _reward_plain                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedPlayerController::ShowRewardedPopup(const struct FRewardPlain& _reward_plain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "ShowRewardedPopup");

	Params::MatchServicedPlayerController_ShowRewardedPopup Parms{};

	Parms._reward_plain = std::move(_reward_plain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerController.GetCurrentCharacterInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCharacterInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterInfo AMatchServicedPlayerController::GetCurrentCharacterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "GetCurrentCharacterInfo");

	Params::MatchServicedPlayerController_GetCurrentCharacterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerController.GetNetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FNetID                           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FNetID AMatchServicedPlayerController::GetNetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "GetNetID");

	Params::MatchServicedPlayerController_GetNetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerController.GetOwnCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* AMatchServicedPlayerController::GetOwnCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "GetOwnCharacter");

	Params::MatchServicedPlayerController_GetOwnCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerController.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams AMatchServicedPlayerController::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerController", "GetTeam");

	Params::MatchServicedPlayerController_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.AddChatActiveFunctions
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::AddChatActiveFunctions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "AddChatActiveFunctions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.AddChatIfCanToggleSight
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::AddChatIfCanToggleSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "AddChatIfCanToggleSight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.AddFullScreenWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::AddFullScreenWidget(class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "AddFullScreenWidget");

	Params::BattlePlayerControllerBase_AddFullScreenWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.AddToastAndChatIfCanToggleSight
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::AddToastAndChatIfCanToggleSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "AddToastAndChatIfCanToggleSight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.AddToastIfCanToggleSight
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::AddToastIfCanToggleSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "AddToastIfCanToggleSight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.AddToastIfLackControlPower
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::AddToastIfLackControlPower(class AGunBase* _gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "AddToastIfLackControlPower");

	Params::BattlePlayerControllerBase_AddToastIfLackControlPower Parms{};

	Parms._gun = _gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.CloseBattleStorePopup
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::CloseBattleStorePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "CloseBattleStorePopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.DEBUG_CreateNewCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* ABattlePlayerControllerBase::DEBUG_CreateNewCharacter(ECharaType _type, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "DEBUG_CreateNewCharacter");

	Params::BattlePlayerControllerBase_DEBUG_CreateNewCharacter Parms{};

	Parms._type = _type;
	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.DEBUG_PlaceOverlappedLocation
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::DEBUG_PlaceOverlappedLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "DEBUG_PlaceOverlappedLocation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.DEBUG_SetShowAimDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_showed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::DEBUG_SetShowAimDistance(bool _is_showed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "DEBUG_SetShowAimDistance");

	Params::BattlePlayerControllerBase_DEBUG_SetShowAimDistance Parms{};

	Parms._is_showed = _is_showed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.GetLastPurchaseHistory
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattleStoreHistory              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FBattleStoreHistory ABattlePlayerControllerBase::GetLastPurchaseHistory(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetLastPurchaseHistory");

	Params::BattlePlayerControllerBase_GetLastPurchaseHistory Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetMinimapRenderTarget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* ABattlePlayerControllerBase::GetMinimapRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetMinimapRenderTarget");

	Params::BattlePlayerControllerBase_GetMinimapRenderTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetNextAllySpectator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class AActor*                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class AActor* ABattlePlayerControllerBase::GetNextAllySpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetNextAllySpectator");

	Params::BattlePlayerControllerBase_GetNextAllySpectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.IsChangeMasterUIOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::IsChangeMasterUIOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "IsChangeMasterUIOpened");

	Params::BattlePlayerControllerBase_IsChangeMasterUIOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnActionWheelCanceled
// (Native, Protected, BlueprintCallable)

void ABattlePlayerControllerBase::OnActionWheelCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnActionWheelCanceled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.OnALL_ChangeActionSetting
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnALL_ChangeActionSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnALL_ChangeActionSetting");

	Params::BattlePlayerControllerBase_OnALL_ChangeActionSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnALL_Damaged
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDamagedData                     _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnALL_Damaged(const struct FDamagedData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnALL_Damaged");

	Params::BattlePlayerControllerBase_OnALL_Damaged Parms{};

	Parms._data = std::move(_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnALL_Respawn
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          _loc                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _Rot                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::OnALL_Respawn(const struct FVector& _loc, const struct FRotator& _Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnALL_Respawn");

	Params::BattlePlayerControllerBase_OnALL_Respawn Parms{};

	Parms._loc = std::move(_loc);
	Parms._Rot = std::move(_Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.OnCLIENT_BattleResult
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBattleDecisionDetail            _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnCLIENT_BattleResult(const struct FBattleDecisionDetail& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnCLIENT_BattleResult");

	Params::BattlePlayerControllerBase_OnCLIENT_BattleResult Parms{};

	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnCLIENT_ChangeBattlePhase
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EBattleModePhase                        _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::OnCLIENT_ChangeBattlePhase(EBattleModePhase _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnCLIENT_ChangeBattlePhase");

	Params::BattlePlayerControllerBase_OnCLIENT_ChangeBattlePhase Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.OnCLIENT_Hit
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnCLIENT_Hit(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnCLIENT_Hit");

	Params::BattlePlayerControllerBase_OnCLIENT_Hit Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnCLIENT_ShowResult
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnCLIENT_ShowResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnCLIENT_ShowResult");

	Params::BattlePlayerControllerBase_OnCLIENT_ShowResult Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnCloseCharacterPick
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerControllerBase::OnCloseCharacterPick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnCloseCharacterPick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.OnKillLog
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKillLog                         _log                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnKillLog(const struct FKillLog& _log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnKillLog");

	Params::BattlePlayerControllerBase_OnKillLog Parms{};

	Parms._log = std::move(_log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnSERVER_Died
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitData                         _last_hit_data                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnSERVER_Died(const struct FHitData& _last_hit_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnSERVER_Died");

	Params::BattlePlayerControllerBase_OnSERVER_Died Parms{};

	Parms._last_hit_data = std::move(_last_hit_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnShowResult
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::OnShowResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnShowResult");

	Params::BattlePlayerControllerBase_OnShowResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.OnShowRoundResult
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRoundResult                     _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::OnShowRoundResult(const struct FRoundResult& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnShowRoundResult");

	Params::BattlePlayerControllerBase_OnShowRoundResult Parms{};

	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.OnShowRoundStart
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRoundStartNotify                _notify                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::OnShowRoundStart(const struct FRoundStartNotify& _notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "OnShowRoundStart");

	Params::BattlePlayerControllerBase_OnShowRoundStart Parms{};

	Parms._notify = std::move(_notify);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.PlayKillcam
// (Final, Native, Protected, BlueprintCallable)

void ABattlePlayerControllerBase::PlayKillcam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "PlayKillcam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RemoveFullScreenWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RemoveFullScreenWidget(class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RemoveFullScreenWidget");

	Params::BattlePlayerControllerBase_RemoveFullScreenWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_ALL_DEBUG_Slomo
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// int32                                   _slomo                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_ALL_DEBUG_Slomo(int32 _slomo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_ALL_DEBUG_Slomo");

	Params::BattlePlayerControllerBase_RPC_ALL_DEBUG_Slomo Parms{};

	Parms._slomo = _slomo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_BattleResult
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FBattleDecisionDetail            _result                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_BattleResult(const struct FBattleDecisionDetail& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_BattleResult");

	Params::BattlePlayerControllerBase_RPC_CLIENT_BattleResult Parms{};

	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_ChangeMasterMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    _is_enable_change                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _change_chara_type                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_ChangeMasterMessage(bool _is_enable_change, ECharaType _change_chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_ChangeMasterMessage");

	Params::BattlePlayerControllerBase_RPC_CLIENT_ChangeMasterMessage Parms{};

	Parms._is_enable_change = _is_enable_change;
	Parms._change_chara_type = _change_chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_Command_Stat_Startfile_ACK
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void ABattlePlayerControllerBase::RPC_CLIENT_Command_Stat_Startfile_ACK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_Command_Stat_Startfile_ACK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_Command_Stat_Stopfile_ACK
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void ABattlePlayerControllerBase::RPC_CLIENT_Command_Stat_Stopfile_ACK()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_Command_Stat_Stopfile_ACK");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_DEBUG_MissionProgress
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FItemID                          _task_id                                               (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_DEBUG_MissionProgress(const struct FItemID& _task_id, const struct FItemID_Mission& _mission_id, int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_DEBUG_MissionProgress");

	Params::BattlePlayerControllerBase_RPC_CLIENT_DEBUG_MissionProgress Parms{};

	Parms._task_id = std::move(_task_id);
	Parms._mission_id = std::move(_mission_id);
	Parms._count = _count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_Emoticon
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FEmoticonData                    _emoticon                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_Emoticon(const struct FEmoticonData& _emoticon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_Emoticon");

	Params::BattlePlayerControllerBase_RPC_CLIENT_Emoticon Parms{};

	Parms._emoticon = std::move(_emoticon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_KillerInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ACharaBase*                       _killer                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _victim                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_KillerInfo(const class ACharaBase* _killer, const class ACharaBase* _victim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_KillerInfo");

	Params::BattlePlayerControllerBase_RPC_CLIENT_KillerInfo Parms{};

	Parms._killer = _killer;
	Parms._victim = _victim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_KillLog
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FNetKillLog                      _log                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_KillLog(const struct FNetKillLog& _log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_KillLog");

	Params::BattlePlayerControllerBase_RPC_CLIENT_KillLog Parms{};

	Parms._log = std::move(_log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_KillStreak
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<EKillStreak>                     _streaks                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_KillStreak(const TArray<EKillStreak>& _streaks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_KillStreak");

	Params::BattlePlayerControllerBase_RPC_CLIENT_KillStreak Parms{};

	Parms._streaks = std::move(_streaks);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_MissionSuccess
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_MissionSuccess(const struct FItemID_Mission& _mission_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_MissionSuccess");

	Params::BattlePlayerControllerBase_RPC_CLIENT_MissionSuccess Parms{};

	Parms._mission_id = std::move(_mission_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_OnGetIngameMoney
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// int32                                   _inc_money                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoldRewardType                         _reward_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_OnGetIngameMoney(int32 _inc_money, EGoldRewardType _reward_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_OnGetIngameMoney");

	Params::BattlePlayerControllerBase_RPC_CLIENT_OnGetIngameMoney Parms{};

	Parms._inc_money = _inc_money;
	Parms._reward_type = _reward_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_Ping
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FPingData                        _ping                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_Ping(const struct FPingData& _ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_Ping");

	Params::BattlePlayerControllerBase_RPC_CLIENT_Ping Parms{};

	Parms._ping = std::move(_ping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_RechargeArmor
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                                   _inc_armor_rate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_RechargeArmor(float _inc_armor_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_RechargeArmor");

	Params::BattlePlayerControllerBase_RPC_CLIENT_RechargeArmor Parms{};

	Parms._inc_armor_rate = _inc_armor_rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_Refund_Item_ACK
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// bool                                    _is_success                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattleStoreHistory              _history                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_Refund_Item_ACK(bool _is_success, const struct FBattleStoreHistory& _history)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_Refund_Item_ACK");

	Params::BattlePlayerControllerBase_RPC_CLIENT_Refund_Item_ACK Parms{};

	Parms._is_success = _is_success;
	Parms._history = std::move(_history);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_RequestClearBattleStoreHistory
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)

void ABattlePlayerControllerBase::RPC_CLIENT_RequestClearBattleStoreHistory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_RequestClearBattleStoreHistory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_RequestPurchase_BattleStore_ACK
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// bool                                    _is_success                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattleStoreHistory              _history                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_RequestPurchase_BattleStore_ACK(bool _is_success, const struct FItemID& _item_id, const struct FBattleStoreHistory& _history)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_RequestPurchase_BattleStore_ACK");

	Params::BattlePlayerControllerBase_RPC_CLIENT_RequestPurchase_BattleStore_ACK Parms{};

	Parms._is_success = _is_success;
	Parms._item_id = std::move(_item_id);
	Parms._history = std::move(_history);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_Client_Revive_Alert
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _revived_chara                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _saver_chara                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_Client_Revive_Alert(class ACharaBase* _revived_chara, class ACharaBase* _saver_chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_Client_Revive_Alert");

	Params::BattlePlayerControllerBase_RPC_Client_Revive_Alert Parms{};

	Parms._revived_chara = _revived_chara;
	Parms._saver_chara = _saver_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_RoundStart
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FRoundStartNotify                _notify                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_RoundStart(const struct FRoundStartNotify& _notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_RoundStart");

	Params::BattlePlayerControllerBase_RPC_CLIENT_RoundStart Parms{};

	Parms._notify = std::move(_notify);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_SendRadioChat
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUserID                          _speacker_user_id                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRadioChatID                     _radio_chat_id                                         (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_CLIENT_SendRadioChat(const struct FUserID& _speacker_user_id, const struct FRadioChatID& _radio_chat_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_SendRadioChat");

	Params::BattlePlayerControllerBase_RPC_CLIENT_SendRadioChat Parms{};

	Parms._speacker_user_id = std::move(_speacker_user_id);
	Parms._radio_chat_id = std::move(_radio_chat_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_CLIENT_StartChangeMaster
// (Net, NetReliable, Native, Event, Protected, NetClient)

void ABattlePlayerControllerBase::RPC_CLIENT_StartChangeMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_CLIENT_StartChangeMaster");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_ChangeSpectator
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ABattlePlayerControllerBase::RPC_SERVER_ChangeSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_ChangeSpectator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_Command_Stat_Startfile
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ABattlePlayerControllerBase::RPC_SERVER_Command_Stat_Startfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_Command_Stat_Startfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_Command_Stat_Stopfile
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ABattlePlayerControllerBase::RPC_SERVER_Command_Stat_Stopfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_Command_Stat_Stopfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_DEBUG_AddAI
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class FString                           _nickname                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EArmorType                              _armor_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAI_Characteristic               _characteristic                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_DEBUG_AddAI(const class FString& _nickname, ETeams _Team, ECharaType _chara_type, EArmorType _armor_type, EGunType _gun_type, const struct FAI_Characteristic& _characteristic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_DEBUG_AddAI");

	Params::BattlePlayerControllerBase_RPC_SERVER_DEBUG_AddAI Parms{};

	Parms._nickname = std::move(_nickname);
	Parms._Team = _Team;
	Parms._chara_type = _chara_type;
	Parms._armor_type = _armor_type;
	Parms._gun_type = _gun_type;
	Parms._characteristic = std::move(_characteristic);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_DEBUG_Change_Gun
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ABattlePlayerControllerBase::RPC_SERVER_DEBUG_Change_Gun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_DEBUG_Change_Gun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_DEBUG_ChangeCharacterType
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_DEBUG_ChangeCharacterType(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_DEBUG_ChangeCharacterType");

	Params::BattlePlayerControllerBase_RPC_SERVER_DEBUG_ChangeCharacterType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_DEBUG_MakeSpectator
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ABattlePlayerControllerBase::RPC_SERVER_DEBUG_MakeSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_DEBUG_MakeSpectator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_DEBUG_Slomo
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   _slomo                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_DEBUG_Slomo(int32 _slomo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_DEBUG_Slomo");

	Params::BattlePlayerControllerBase_RPC_SERVER_DEBUG_Slomo Parms{};

	Parms._slomo = _slomo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_PleaseChangeMaster
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// ECharaType                              _new_chara_type                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_PleaseChangeMaster(ECharaType _new_chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_PleaseChangeMaster");

	Params::BattlePlayerControllerBase_RPC_SERVER_PleaseChangeMaster Parms{};

	Parms._new_chara_type = _new_chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_Refund_Item
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FBattleStoreHistory              _history                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_Refund_Item(const struct FBattleStoreHistory& _history)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_Refund_Item");

	Params::BattlePlayerControllerBase_RPC_SERVER_Refund_Item Parms{};

	Parms._history = std::move(_history);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RequestChangeMaster
// (Net, NetReliable, Native, Event, Protected, NetServer)

void ABattlePlayerControllerBase::RPC_SERVER_RequestChangeMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RequestChangeMaster");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RequestClearBattleStoreHistory
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ABattlePlayerControllerBase::RPC_SERVER_RequestClearBattleStoreHistory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RequestClearBattleStoreHistory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RequestEmoticon
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct FEmoticonData                    _emoticon                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_RequestEmoticon(const struct FEmoticonData& _emoticon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RequestEmoticon");

	Params::BattlePlayerControllerBase_RPC_SERVER_RequestEmoticon Parms{};

	Parms._emoticon = std::move(_emoticon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RequestPing
// (Net, NetReliable, Native, Event, Protected, NetServer)
// Parameters:
// struct FPingData                        _ping                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_RequestPing(const struct FPingData& _ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RequestPing");

	Params::BattlePlayerControllerBase_RPC_SERVER_RequestPing Parms{};

	Parms._ping = std::move(_ping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RequestPurchase_BattleStore
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _params                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_RequestPurchase_BattleStore(const struct FItemID& _item_id, int32 _params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RequestPurchase_BattleStore");

	Params::BattlePlayerControllerBase_RPC_SERVER_RequestPurchase_BattleStore Parms{};

	Parms._item_id = std::move(_item_id);
	Parms._params = _params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RequestRadioChat
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FRadioChatID                     _radio_chat_id                                         (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_RequestRadioChat(const struct FRadioChatID& _radio_chat_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RequestRadioChat");

	Params::BattlePlayerControllerBase_RPC_SERVER_RequestRadioChat Parms{};

	Parms._radio_chat_id = std::move(_radio_chat_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_RespawnInPlace
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ABattlePlayerControllerBase::RPC_SERVER_RespawnInPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_RespawnInPlace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_ResumeRespawn
// (Net, NetReliable, Native, Event, Protected, NetServer)

void ABattlePlayerControllerBase::RPC_SERVER_ResumeRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_ResumeRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_SpectateCCTV
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_SpectateCCTV(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_SpectateCCTV");

	Params::BattlePlayerControllerBase_RPC_SERVER_SpectateCCTV Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_SpectatePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_SpectatePlayer(ETeams _Team, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_SpectatePlayer");

	Params::BattlePlayerControllerBase_RPC_SERVER_SpectatePlayer Parms{};

	Parms._Team = _Team;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.RPC_SERVER_UpdatePlayerFPS
// (Net, Native, Event, Protected, NetServer)
// Parameters:
// uint8                                   _fps                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::RPC_SERVER_UpdatePlayerFPS(uint8 _fps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "RPC_SERVER_UpdatePlayerFPS");

	Params::BattlePlayerControllerBase_RPC_SERVER_UpdatePlayerFPS Parms{};

	Parms._fps = _fps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.SetInteractionProgressBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _visible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _duration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::SetInteractionProgressBar(bool _visible, float _duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "SetInteractionProgressBar");

	Params::BattlePlayerControllerBase_SetInteractionProgressBar Parms{};

	Parms._visible = _visible;
	Parms._duration = _duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.ShowHelpUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::ShowHelpUI(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "ShowHelpUI");

	Params::BattlePlayerControllerBase_ShowHelpUI Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.ShowHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_visible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _caller                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::ShowHUD(bool _is_visible, class UObject* _caller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "ShowHUD");

	Params::BattlePlayerControllerBase_ShowHUD Parms{};

	Parms._is_visible = _is_visible;
	Parms._caller = _caller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.ShowMissionArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _area_name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::ShowMissionArea(const class FString& _area_name, bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "ShowMissionArea");

	Params::BattlePlayerControllerBase_ShowMissionArea Parms{};

	Parms._area_name = std::move(_area_name);
	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.ShowTabUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::ShowTabUI(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "ShowTabUI");

	Params::BattlePlayerControllerBase_ShowTabUI Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.StopKillcam
// (Final, Native, Protected, BlueprintCallable)

void ABattlePlayerControllerBase::StopKillcam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "StopKillcam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerControllerBase.CLIENT_GetDeviationAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   _deviation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABattlePlayerControllerBase::CLIENT_GetDeviationAngle(float _deviation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "CLIENT_GetDeviationAngle");

	Params::BattlePlayerControllerBase_CLIENT_GetDeviationAngle Parms{};

	Parms._deviation = _deviation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.DEBUG_GetShowAimDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::DEBUG_GetShowAimDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "DEBUG_GetShowAimDistance");

	Params::BattlePlayerControllerBase_DEBUG_GetShowAimDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetChara
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* ABattlePlayerControllerBase::GetChara() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetChara");

	Params::BattlePlayerControllerBase_GetChara Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetCharacterType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType ABattlePlayerControllerBase::GetCharacterType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetCharacterType");

	Params::BattlePlayerControllerBase_GetCharacterType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetCurrentTargetChara
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* ABattlePlayerControllerBase::GetCurrentTargetChara() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetCurrentTargetChara");

	Params::BattlePlayerControllerBase_GetCurrentTargetChara Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetLastRoundResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRoundResult               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FRoundResult ABattlePlayerControllerBase::GetLastRoundResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetLastRoundResult");

	Params::BattlePlayerControllerBase_GetLastRoundResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetLookAtRay
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   _distance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _start                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _end                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerControllerBase::GetLookAtRay(float _distance, struct FVector* _start, struct FVector* _end) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetLookAtRay");

	Params::BattlePlayerControllerBase_GetLookAtRay Parms{};

	Parms._distance = _distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_start != nullptr)
		*_start = std::move(Parms._start);

	if (_end != nullptr)
		*_end = std::move(Parms._end);
}


// Function Stigma.BattlePlayerControllerBase.GetRadioChatCooltime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABattlePlayerControllerBase::GetRadioChatCooltime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetRadioChatCooltime");

	Params::BattlePlayerControllerBase_GetRadioChatCooltime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.GetRadioChatStock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerControllerBase::GetRadioChatStock() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "GetRadioChatStock");

	Params::BattlePlayerControllerBase_GetRadioChatStock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerControllerBase.IsBattleStoreOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerControllerBase::IsBattleStoreOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerControllerBase", "IsBattleStoreOpened");

	Params::BattlePlayerControllerBase_IsBattleStoreOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TrainingRoomPlayerController.OnMatchChanged
// (Final, Native, Protected)

void ATrainingRoomPlayerController::OnMatchChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainingRoomPlayerController", "OnMatchChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TrainingRoomPlayerController.OnPointingActor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _Actor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATrainingRoomPlayerController::OnPointingActor(class AActor* _Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainingRoomPlayerController", "OnPointingActor");

	Params::TrainingRoomPlayerController_OnPointingActor Parms{};

	Parms._Actor = _Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TrainingRoomPlayerController.OpenBattleStore_ChangeGunPopup
// (Final, Native, Protected, BlueprintCallable)

void ATrainingRoomPlayerController::OpenBattleStore_ChangeGunPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainingRoomPlayerController", "OpenBattleStore_ChangeGunPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TrainingRoomPlayerController.RPC_CLIENT_ResetStockAndCooltime
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATrainingRoomPlayerController::RPC_CLIENT_ResetStockAndCooltime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainingRoomPlayerController", "RPC_CLIENT_ResetStockAndCooltime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TrainingRoomPlayerController.RPC_SERVER_ResetStockAndCooltime
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ATrainingRoomPlayerController::RPC_SERVER_ResetStockAndCooltime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainingRoomPlayerController", "RPC_SERVER_ResetStockAndCooltime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TrainingRoomPlayerController.GetPointingTargetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATrainingRoomPlayerController::GetPointingTargetActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TrainingRoomPlayerController", "GetPointingTargetActor");

	Params::TrainingRoomPlayerController_GetPointingTargetActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AbnormalsBlueprintLibrary.IsNone
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAbnormals                       _Flags                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbnormalsBlueprintLibrary::IsNone(const struct FAbnormals& _Flags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AbnormalsBlueprintLibrary", "IsNone");

	Params::AbnormalsBlueprintLibrary_IsNone Parms{};

	Parms._Flags = std::move(_Flags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AbnormalsBlueprintLibrary.IsSet
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAbnormals                       _Flags                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// EAbnormal                               _abnormal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAbnormalsBlueprintLibrary::IsSet(const struct FAbnormals& _Flags, EAbnormal _abnormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AbnormalsBlueprintLibrary", "IsSet");

	Params::AbnormalsBlueprintLibrary_IsSet Parms{};

	Parms._Flags = std::move(_Flags);
	Parms._abnormal = _abnormal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AISpawnVolume.GetRandomLocationInVolume
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AAISpawnVolume::GetRandomLocationInVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawnVolume", "GetRandomLocationInVolume");

	Params::AISpawnVolume_GetRandomLocationInVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AISpawnVolume.GetRandomRoamingPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AAISpawnVolume::GetRandomRoamingPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawnVolume", "GetRandomRoamingPoint");

	Params::AISpawnVolume_GetRandomRoamingPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BattlePassLevelUpPopup.InitWidget
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _Title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassLevelUpPopup::InitWidget(const class FText& _Title, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassLevelUpPopup", "InitWidget");

	Params::UI_BattlePassLevelUpPopup_InitWidget Parms{};

	Parms._Title = std::move(_Title);
	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.StigmaAIControllerBase.OnSERVER_Died
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitData                         _last_hit_data                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStigmaAIControllerBase::OnSERVER_Died(const struct FHitData& _last_hit_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIControllerBase", "OnSERVER_Died");

	Params::StigmaAIControllerBase_OnSERVER_Died Parms{};

	Parms._last_hit_data = std::move(_last_hit_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AdvancedAIController.MakeCharacteristic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _elo                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _coward                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _shooting_oriented                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAI_Characteristic               ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAI_Characteristic AAdvancedAIController::MakeCharacteristic(int32 _elo, float _coward, float _shooting_oriented)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AdvancedAIController", "MakeCharacteristic");

	Params::AdvancedAIController_MakeCharacteristic Parms{};

	Parms._elo = _elo;
	Parms._coward = _coward;
	Parms._shooting_oriented = _shooting_oriented;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AdvancedAIController.BoostTargetEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _enemy                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedAIController::BoostTargetEnemy(class ACharaBase* _enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedAIController", "BoostTargetEnemy");

	Params::AdvancedAIController_BoostTargetEnemy Parms{};

	Parms._enemy = _enemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AdvancedAIController.OnTargetPerceptionForgotten
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedAIController::OnTargetPerceptionForgotten(class AActor* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedAIController", "OnTargetPerceptionForgotten");

	Params::AdvancedAIController_OnTargetPerceptionForgotten Parms{};

	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AdvancedAIController.OnTargetPerceptionUpdated
// (Final, Native, Protected)
// Parameters:
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus                      _stimulus                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AAdvancedAIController::OnTargetPerceptionUpdated(class AActor* _target, const struct FAIStimulus& _stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedAIController", "OnTargetPerceptionUpdated");

	Params::AdvancedAIController_OnTargetPerceptionUpdated Parms{};

	Parms._target = _target;
	Parms._stimulus = std::move(_stimulus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AdvancedAIController.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAIRole                                 _role                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _elo                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _coward                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _shooting_oriented                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAdvancedAIController::Setup(EAIRole _role, int32 _elo, float _coward, float _shooting_oriented)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AdvancedAIController", "Setup");

	Params::AdvancedAIController_Setup Parms{};

	Parms._role = _role;
	Parms._elo = _elo;
	Parms._coward = _coward;
	Parms._shooting_oriented = _shooting_oriented;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AdvancedBlueprintMapLibrary.Map_KeyValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<int32, int32>                      _target_map                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _index                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_Key                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_value                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAdvancedBlueprintMapLibrary::Map_KeyValue(const TMap<int32, int32>& _target_map, const int32 _index, int32* _out_Key, int32* _out_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AdvancedBlueprintMapLibrary", "Map_KeyValue");

	Params::AdvancedBlueprintMapLibrary_Map_KeyValue Parms{};

	Parms._target_map = std::move(_target_map);
	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_Key != nullptr)
		*_out_Key = Parms._out_Key;

	if (_out_value != nullptr)
		*_out_value = Parms._out_value;
}


// Function Stigma.UI_CompetitionRewardPopup.SetValue
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBC_CompetitionEnd               _packet                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_CompetitionRewardPopup::SetValue(const struct FBC_CompetitionEnd& _packet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CompetitionRewardPopup", "SetValue");

	Params::UI_CompetitionRewardPopup_SetValue Parms{};

	Parms._packet = std::move(_packet);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.GameContext.GetEmptyPlayerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameContext::GetEmptyPlayerCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameContext", "GetEmptyPlayerCount");

	Params::GameContext_GetEmptyPlayerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GameContext.GetMaxPlayerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameContext::GetMaxPlayerCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameContext", "GetMaxPlayerCount");

	Params::GameContext_GetMaxPlayerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GameContext.GetMaxTeamCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGameContext::GetMaxTeamCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GameContext", "GetMaxTeamCount");

	Params::GameContext_GetMaxTeamCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.NetSyncBase.FinishSync
// (Final, Native, Public, BlueprintCallable)

void ANetSyncBase::FinishSync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "FinishSync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NetSyncBase.RPC_ALL_SyncTx
// (Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FSyncTransform                   Tx                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ANetSyncBase::RPC_ALL_SyncTx(const struct FSyncTransform& Tx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "RPC_ALL_SyncTx");

	Params::NetSyncBase_RPC_ALL_SyncTx Parms{};

	Parms.Tx = std::move(Tx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NetSyncBase.RPC_SERVER_SyncTx
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FSyncTransform                   Tx                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ANetSyncBase::RPC_SERVER_SyncTx(const struct FSyncTransform& Tx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "RPC_SERVER_SyncTx");

	Params::NetSyncBase_RPC_SERVER_SyncTx Parms{};

	Parms.Tx = std::move(Tx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NetSyncBase.StartToSync
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Source                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Initial_velocity                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    As_author                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANetSyncBase::StartToSync(class UPrimitiveComponent* Source, const struct FVector& Initial_velocity, bool As_author)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "StartToSync");

	Params::NetSyncBase_StartToSync Parms{};

	Parms.Source = Source;
	Parms.Initial_velocity = std::move(Initial_velocity);
	Parms.As_author = As_author;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NetSyncBase.UpdateSyncRole
// (Final, Native, Public, BlueprintCallable)

void ANetSyncBase::UpdateSyncRole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "UpdateSyncRole");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NetSyncBase.IsAuthor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANetSyncBase::IsAuthor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "IsAuthor");

	Params::NetSyncBase_IsAuthor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.NetSyncBase.IsSyncing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANetSyncBase::IsSyncing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "IsSyncing");

	Params::NetSyncBase_IsSyncing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.NetSyncBase.IsSyncingAndValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANetSyncBase::IsSyncingAndValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NetSyncBase", "IsSyncingAndValid");

	Params::NetSyncBase_IsSyncingAndValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ObjectBase.EndThrowTrail
// (Final, Native, Public, BlueprintCallable)

void AObjectBase::EndThrowTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "EndThrowTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.NotifyAttachmentChanged
// (Final, Native, Protected, BlueprintCallable)

void AObjectBase::NotifyAttachmentChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "NotifyAttachmentChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.OnAttachmentReplicated
// (Event, Protected, BlueprintEvent)

void AObjectBase::OnAttachmentReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "OnAttachmentReplicated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.ObjectBase.OnChangeDurability
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _new_durability                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AObjectBase::OnChangeDurability(float _new_durability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "OnChangeDurability");

	Params::ObjectBase_OnChangeDurability Parms{};

	Parms._new_durability = _new_durability;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.ObjectBase.OnChangeLife
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EObjectLife                             _new_life                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AObjectBase::OnChangeLife(EObjectLife _new_life)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "OnChangeLife");

	Params::ObjectBase_OnChangeLife Parms{};

	Parms._new_life = _new_life;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ObjectBase.OnRep_Durability
// (Final, Native, Protected)
// Parameters:
// float                                   _old_durability                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AObjectBase::OnRep_Durability(float _old_durability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "OnRep_Durability");

	Params::ObjectBase_OnRep_Durability Parms{};

	Parms._old_durability = _old_durability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.OnRep_State
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EObjectState                            _old_state                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AObjectBase::OnRep_State(EObjectState _old_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "OnRep_State");

	Params::ObjectBase_OnRep_State Parms{};

	Parms._old_state = _old_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.SetObjectState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EObjectState                            _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AObjectBase::SetObjectState(EObjectState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "SetObjectState");

	Params::ObjectBase_SetObjectState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.Setter_Durability
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _new_durability                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AObjectBase::Setter_Durability(float _new_durability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "Setter_Durability");

	Params::ObjectBase_Setter_Durability Parms{};

	Parms._new_durability = _new_durability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.Setter_State
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EObjectState                            _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AObjectBase::Setter_State(EObjectState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "Setter_State");

	Params::ObjectBase_Setter_State Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.StartThrowTrail
// (Final, Native, Public, BlueprintCallable)

void AObjectBase::StartThrowTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "StartThrowTrail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectBase.GetDisplayNameText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AObjectBase::GetDisplayNameText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "GetDisplayNameText");

	Params::ObjectBase_GetDisplayNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ObjectBase.IsPossessed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AObjectBase::IsPossessed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectBase", "IsPossessed");

	Params::ObjectBase_IsPossessed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AntidoteArea.OnBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AAntidoteArea::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntidoteArea", "OnBeginOverlap");

	Params::AntidoteArea_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AntidoteArea.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAntidoteArea::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntidoteArea", "OnEndOverlap");

	Params::AntidoteArea_OnEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AntidoteArea.OnLoadSettings
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FConfig_AntidoteArea             _settings                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void AAntidoteArea::OnLoadSettings(struct FConfig_AntidoteArea* _settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntidoteArea", "OnLoadSettings");

	Params::AntidoteArea_OnLoadSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_settings != nullptr)
		*_settings = std::move(Parms._settings);
}


// Function Stigma.AntidoteArea.Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _thrower                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectBase*                      _weapon_obj                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionGraphOperatorID           _op_id                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AAntidoteArea::Start(class ACharaBase* _thrower, class AObjectBase* _weapon_obj, const struct FActionGraphOperatorID& _op_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AntidoteArea", "Start");

	Params::AntidoteArea_Start Parms{};

	Parms._thrower = _thrower;
	Parms._weapon_obj = _weapon_obj;
	Parms._op_id = std::move(_op_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSlot.OnClickSlot
// (Final, Native, Protected)

void UUI_BoosterSlot::OnClickSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlot", "OnClickSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSlot.OnRightClickSlot
// (Final, Native, Protected)

void UUI_BoosterSlot::OnRightClickSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlot", "OnRightClickSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSlot.GetBoosterID
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUI_BoosterSlot::GetBoosterID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlot", "GetBoosterID");

	Params::UI_BoosterSlot_GetBoosterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PlayerJoinDetectable.OnPlayerJoin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PlayerJoinDetectable::OnPlayerJoin(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "OnPlayerJoin");

	Params::UI_PlayerJoinDetectable_OnPlayerJoin Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PlayerJoinDetectable.OnPlayerLeaved
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PlayerJoinDetectable::OnPlayerLeaved(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "OnPlayerLeaved");

	Params::UI_PlayerJoinDetectable_OnPlayerLeaved Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PlayerJoinDetectable.OnPlayerUpdate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PlayerJoinDetectable::OnPlayerUpdate(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "OnPlayerUpdate");

	Params::UI_PlayerJoinDetectable_OnPlayerUpdate Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PlayerJoinDetectable.RemovePlayerWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerJoinDetectable::RemovePlayerWidget(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "RemovePlayerWidget");

	Params::UI_PlayerJoinDetectable_RemovePlayerWidget Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerJoinDetectable.SetPlayerWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerJoinDetectable::SetPlayerWidget(class AMatchServicedPlayerState* _ps, class UUserWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "SetPlayerWidget");

	Params::UI_PlayerJoinDetectable_SetPlayerWidget Parms{};

	Parms._ps = _ps;
	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerJoinDetectable.SortAllyPlayers
// (Final, Native, Protected, BlueprintCallable)

void UUI_PlayerJoinDetectable::SortAllyPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "SortAllyPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerJoinDetectable.GetPlayerWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUI_PlayerJoinDetectable::GetPlayerWidget(class AMatchServicedPlayerState* _ps) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerJoinDetectable", "GetPlayerWidget");

	Params::UI_PlayerJoinDetectable_GetPlayerWidget Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.FXCustomizable.OnQueryFX
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FCustomFX                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCustomFX IFXCustomizable::OnQueryFX(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FXCustomizable", "OnQueryFX");

	Params::FXCustomizable_OnQueryFX Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoToWidget.ChangeTargetWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPreviewableWidget*               _new_target_widget                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoToWidget::ChangeTargetWidget(class UPreviewableWidget* _new_target_widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoToWidget", "ChangeTargetWidget");

	Params::GoToWidget_ChangeTargetWidget Parms{};

	Parms._new_target_widget = _new_target_widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoToWidget.OnWidgetOpened
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoToWidget::OnWidgetOpened(class UAnimatableWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoToWidget", "OnWidgetOpened");

	Params::GoToWidget_OnWidgetOpened Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleResultBlueprintLibrary.GetReport_ExpDetails
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattleDecisionDetail            _decision                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETeams                                  _my_team                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserBattleResult                _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FMyBattleResult                  _my_result                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FUserBattleResult_ExpDetail      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUserBattleResult_ExpDetail UBattleResultBlueprintLibrary::GetReport_ExpDetails(const class UObject* _world_ctx, const struct FBattleDecisionDetail& _decision, ETeams _my_team, const struct FUserBattleResult& _result, const struct FMyBattleResult& _my_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattleResultBlueprintLibrary", "GetReport_ExpDetails");

	Params::BattleResultBlueprintLibrary_GetReport_ExpDetails Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._decision = std::move(_decision);
	Parms._my_team = _my_team;
	Parms._result = std::move(_result);
	Parms._my_result = std::move(_my_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleResultBlueprintLibrary.GetReport_LevelAndExp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserBattleResult                _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FUserBattleResult_UIValues       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FUserBattleResult_UIValues UBattleResultBlueprintLibrary::GetReport_LevelAndExp(const class UObject* _world_ctx, const struct FUserBattleResult& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattleResultBlueprintLibrary", "GetReport_LevelAndExp");

	Params::BattleResultBlueprintLibrary_GetReport_LevelAndExp Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleResultBlueprintLibrary.GetTotalExp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMyBattleResult                  _my_result                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBattleResultBlueprintLibrary::GetTotalExp(const struct FMyBattleResult& _my_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattleResultBlueprintLibrary", "GetTotalExp");

	Params::BattleResultBlueprintLibrary_GetTotalExp Parms{};

	Parms._my_result = std::move(_my_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunTypeBoxItem.OnChangedGun
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunTypeBoxItem::OnChangedGun(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunTypeBoxItem", "OnChangedGun");

	Params::UI_GunTypeBoxItem_OnChangedGun Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunTypeBoxItem.OnHoverGunPresetItem
// (Final, Native, Protected)
// Parameters:
// class UObject*                          _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_hovered                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunTypeBoxItem::OnHoverGunPresetItem(class UObject* _item, bool _is_hovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunTypeBoxItem", "OnHoverGunPresetItem");

	Params::UI_GunTypeBoxItem_OnHoverGunPresetItem Parms{};

	Parms._item = _item;
	Parms._is_hovered = _is_hovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunTypeBoxItem.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _gun_name                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_GunTypeBoxItem::SetTitle(const class FText& _gun_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunTypeBoxItem", "SetTitle");

	Params::UI_GunTypeBoxItem_SetTitle Parms{};

	Parms._gun_name = std::move(_gun_name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.MatchServicedPlayerState.IsSummonedBot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsSummonedBot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsSummonedBot");

	Params::MatchServicedPlayerState_IsSummonedBot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.LocalRandomSelectCharacter
// (Final, Native, Public, BlueprintCallable)

void AMatchServicedPlayerState::LocalRandomSelectCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "LocalRandomSelectCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.LocalSelectCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_chara_change                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_init                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::LocalSelectCharacter(ECharaType _chara_type, bool _is_chara_change, bool _is_init)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "LocalSelectCharacter");

	Params::MatchServicedPlayerState_LocalSelectCharacter Parms{};

	Parms._chara_type = _chara_type;
	Parms._is_chara_change = _is_chara_change;
	Parms._is_init = _is_init;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.LocalSelectCostume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::LocalSelectCostume(int32 _zidx, const struct FItemID& _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "LocalSelectCostume");

	Params::MatchServicedPlayerState_LocalSelectCostume Parms{};

	Parms._zidx = _zidx;
	Parms._item = std::move(_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.LocalSelectGun
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::LocalSelectGun(int32 _zidx, const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "LocalSelectGun");

	Params::MatchServicedPlayerState_LocalSelectGun Parms{};

	Parms._zidx = _zidx;
	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_CurrentCharaIdx
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_CurrentCharaIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_CurrentCharaIdx");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_EnableChangeMaster
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_EnableChangeMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_EnableChangeMaster");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_IsReadyToFight
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_IsReadyToFight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_IsReadyToFight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_JoinType
// (Final, Native, Protected)
// Parameters:
// EJoinType                               _old_join_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::OnRep_JoinType(EJoinType _old_join_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_JoinType");

	Params::MatchServicedPlayerState_OnRep_JoinType Parms{};

	Parms._old_join_type = _old_join_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_KPI
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_KPI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_KPI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_NetID
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_NetID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_NetID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_NewCharaType
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_NewCharaType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_NewCharaType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_OwnChara
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_OwnChara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_OwnChara");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_PickedCharas
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_PickedCharas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_PickedCharas");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.OnRep_User
// (Final, Native, Protected)

void AMatchServicedPlayerState::OnRep_User()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "OnRep_User");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.ResetLocalPickedInfo
// (Final, Native, Public, BlueprintCallable)

void AMatchServicedPlayerState::ResetLocalPickedInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "ResetLocalPickedInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SERVER_SetGun
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunSpec                         _spec                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SERVER_SetGun(int32 _zidx, const struct FGunSpec& _spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SERVER_SetGun");

	Params::MatchServicedPlayerState_SERVER_SetGun Parms{};

	Parms._zidx = _zidx;
	Parms._spec = std::move(_spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SERVER_SetIsReadyToFight
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _i_am_ready                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SERVER_SetIsReadyToFight(bool _i_am_ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SERVER_SetIsReadyToFight");

	Params::MatchServicedPlayerState_SERVER_SetIsReadyToFight Parms{};

	Parms._i_am_ready = _i_am_ready;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SERVER_SetNetID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FNetID                           _net_id                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SERVER_SetNetID(const struct FNetID& _net_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SERVER_SetNetID");

	Params::MatchServicedPlayerState_SERVER_SetNetID Parms{};

	Parms._net_id = std::move(_net_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SERVER_SetUserID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SERVER_SetUserID(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SERVER_SetUserID");

	Params::MatchServicedPlayerState_SERVER_SetUserID Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SetLocalCharacterIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SetLocalCharacterIndex(int32 _zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SetLocalCharacterIndex");

	Params::MatchServicedPlayerState_SetLocalCharacterIndex Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SetLocalNewCharaType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SetLocalNewCharaType(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SetLocalNewCharaType");

	Params::MatchServicedPlayerState_SetLocalNewCharaType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SetRelatedWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SetRelatedWidget(class UUserWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SetRelatedWidget");

	Params::MatchServicedPlayerState_SetRelatedWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_CurrentCharaIdx
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// uint8                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_CurrentCharaIdx(uint8 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_CurrentCharaIdx");

	Params::MatchServicedPlayerState_Setter_CurrentCharaIdx Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_EnableChangeMaster
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_EnableChangeMaster(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_EnableChangeMaster");

	Params::MatchServicedPlayerState_Setter_EnableChangeMaster Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_IsReadyToFight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _ready                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_IsReadyToFight(bool _ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_IsReadyToFight");

	Params::MatchServicedPlayerState_Setter_IsReadyToFight Parms{};

	Parms._ready = _ready;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_JoinType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EJoinType                               _join_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_JoinType(EJoinType _join_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_JoinType");

	Params::MatchServicedPlayerState_Setter_JoinType Parms{};

	Parms._join_type = _join_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_KPI
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPlayerKPI                       _player_kpi                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_KPI(const struct FPlayerKPI& _player_kpi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_KPI");

	Params::MatchServicedPlayerState_Setter_KPI Parms{};

	Parms._player_kpi = std::move(_player_kpi);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_NewCharaType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_NewCharaType(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_NewCharaType");

	Params::MatchServicedPlayerState_Setter_NewCharaType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_PickedCharas
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCharacterSet                    _charas                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_PickedCharas(const struct FCharacterSet& _charas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_PickedCharas");

	Params::MatchServicedPlayerState_Setter_PickedCharas Parms{};

	Parms._charas = std::move(_charas);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Setter_User
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserInBattle                    _user_in_battle                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Setter_User(const struct FUserInBattle& _user_in_battle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Setter_User");

	Params::MatchServicedPlayerState_Setter_User Parms{};

	Parms._user_in_battle = std::move(_user_in_battle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.SetUserProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _profile                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::SetUserProfile(class UUserProfile* _profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "SetUserProfile");

	Params::MatchServicedPlayerState_SetUserProfile Parms{};

	Parms._profile = _profile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.Subscribe_OnChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Subscribe_OnChanged(const TDelegate<void(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Subscribe_OnChanged");

	Params::MatchServicedPlayerState_Subscribe_OnChanged Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.TakeHasBeenChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::TakeHasBeenChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "TakeHasBeenChanged");

	Params::MatchServicedPlayerState_TakeHasBeenChanged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.Unsubscribe_OnChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedPlayerState::Unsubscribe_OnChanged(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "Unsubscribe_OnChanged");

	Params::MatchServicedPlayerState_Unsubscribe_OnChanged Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedPlayerState.CanBeReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::CanBeReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "CanBeReady");

	Params::MatchServicedPlayerState_CanBeReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.CanPickCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::CanPickCharacter(ECharaType _chara_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "CanPickCharacter");

	Params::MatchServicedPlayerState_CanPickCharacter Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetArmorType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EArmorType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EArmorType AMatchServicedPlayerState::GetArmorType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetArmorType");

	Params::MatchServicedPlayerState_GetArmorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetBodyID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Skin_Body                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Skin_Body AMatchServicedPlayerState::GetBodyID(int32 _zidx_chara) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetBodyID");

	Params::MatchServicedPlayerState_GetBodyID Parms{};

	Parms._zidx_chara = _zidx_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetBoosterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Booster                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Booster AMatchServicedPlayerState::GetBoosterID(int32 _slot_zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetBoosterID");

	Params::MatchServicedPlayerState_GetBoosterID Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetBoosterIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Booster                  _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetBoosterIndex(const struct FItemID_Booster& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetBoosterIndex");

	Params::MatchServicedPlayerState_GetBoosterIndex Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetBoosters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FItemID_Booster>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FItemID_Booster> AMatchServicedPlayerState::GetBoosters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetBoosters");

	Params::MatchServicedPlayerState_GetBoosters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetBoosterTicketCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetBoosterTicketCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetBoosterTicketCount");

	Params::MatchServicedPlayerState_GetBoosterTicketCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCharacterSetting          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterSetting AMatchServicedPlayerState::GetCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCharacter");

	Params::MatchServicedPlayerState_GetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCharacterIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> AMatchServicedPlayerState::GetCharacterIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCharacterIcon");

	Params::MatchServicedPlayerState_GetCharacterIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCurrentCharacterIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetCurrentCharacterIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCurrentCharacterIndex");

	Params::MatchServicedPlayerState_GetCurrentCharacterIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCurrentCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMatchServicedPlayerState::GetCurrentCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCurrentCharaType");

	Params::MatchServicedPlayerState_GetCurrentCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCurrentGunPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunPreset                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGunPreset AMatchServicedPlayerState::GetCurrentGunPreset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCurrentGunPreset");

	Params::MatchServicedPlayerState_GetCurrentGunPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCurrentGunSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec AMatchServicedPlayerState::GetCurrentGunSpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCurrentGunSpec");

	Params::MatchServicedPlayerState_GetCurrentGunSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetCurrentlySelectedCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMatchServicedPlayerState::GetCurrentlySelectedCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetCurrentlySelectedCharaType");

	Params::MatchServicedPlayerState_GetCurrentlySelectedCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetELO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AMatchServicedPlayerState::GetELO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetELO");

	Params::MatchServicedPlayerState_GetELO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetEmblem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID AMatchServicedPlayerState::GetEmblem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetEmblem");

	Params::MatchServicedPlayerState_GetEmblem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetEnableChangeMaster
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::GetEnableChangeMaster() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetEnableChangeMaster");

	Params::MatchServicedPlayerState_GetEnableChangeMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetGunPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunPreset                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGunPreset AMatchServicedPlayerState::GetGunPreset(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetGunPreset");

	Params::MatchServicedPlayerState_GetGunPreset Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetGunSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec AMatchServicedPlayerState::GetGunSpec(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetGunSpec");

	Params::MatchServicedPlayerState_GetGunSpec Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetHeadID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Skin_Head                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Skin_Head AMatchServicedPlayerState::GetHeadID(int32 _zidx_chara) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetHeadID");

	Params::MatchServicedPlayerState_GetHeadID Parms{};

	Parms._zidx_chara = _zidx_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetJoinType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EJoinType                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EJoinType AMatchServicedPlayerState::GetJoinType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetJoinType");

	Params::MatchServicedPlayerState_GetJoinType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetKPI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayerKPI                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FPlayerKPI AMatchServicedPlayerState::GetKPI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetKPI");

	Params::MatchServicedPlayerState_GetKPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetLocalCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FLocalCharacterSet         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FLocalCharacterSet AMatchServicedPlayerState::GetLocalCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetLocalCharacter");

	Params::MatchServicedPlayerState_GetLocalCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetLocalCharacterIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetLocalCharacterIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetLocalCharacterIndex");

	Params::MatchServicedPlayerState_GetLocalCharacterIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetLocalCurrentCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMatchServicedPlayerState::GetLocalCurrentCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetLocalCurrentCharaType");

	Params::MatchServicedPlayerState_GetLocalCurrentCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetLocalNewCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMatchServicedPlayerState::GetLocalNewCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetLocalNewCharaType");

	Params::MatchServicedPlayerState_GetLocalNewCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetLocalPickedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLocalCharacterSet         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FLocalCharacterSet AMatchServicedPlayerState::GetLocalPickedCharacter(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetLocalPickedCharacter");

	Params::MatchServicedPlayerState_GetLocalPickedCharacter Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetLocalPickedCharacters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FLocalCharacterSet> ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FLocalCharacterSet> AMatchServicedPlayerState::GetLocalPickedCharacters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetLocalPickedCharacters");

	Params::MatchServicedPlayerState_GetLocalPickedCharacters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetNetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FNetID                           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FNetID AMatchServicedPlayerState::GetNetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetNetID");

	Params::MatchServicedPlayerState_GetNetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetNewCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMatchServicedPlayerState::GetNewCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetNewCharaType");

	Params::MatchServicedPlayerState_GetNewCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName AMatchServicedPlayerState::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetNickname");

	Params::MatchServicedPlayerState_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetNicknameFX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID AMatchServicedPlayerState::GetNicknameFX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetNicknameFX");

	Params::MatchServicedPlayerState_GetNicknameFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetOwnCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* AMatchServicedPlayerState::GetOwnCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetOwnCharacter");

	Params::MatchServicedPlayerState_GetOwnCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetPassiveSkills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FPassiveSkill>      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FPassiveSkill> AMatchServicedPlayerState::GetPassiveSkills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetPassiveSkills");

	Params::MatchServicedPlayerState_GetPassiveSkills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetPickedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FCharacterSetting          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterSetting AMatchServicedPlayerState::GetPickedCharacter(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetPickedCharacter");

	Params::MatchServicedPlayerState_GetPickedCharacter Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetPickedCharacterIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetPickedCharacterIndex(ECharaType _chara_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetPickedCharacterIndex");

	Params::MatchServicedPlayerState_GetPickedCharacterIndex Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetPickedCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMatchServicedPlayerState::GetPickedCharaType(int32 _zidx_chara) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetPickedCharaType");

	Params::MatchServicedPlayerState_GetPickedCharaType Parms{};

	Parms._zidx_chara = _zidx_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetPlayerSideAgainstLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlayerSide                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerSide AMatchServicedPlayerState::GetPlayerSideAgainstLocalPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetPlayerSideAgainstLocalPlayer");

	Params::MatchServicedPlayerState_GetPlayerSideAgainstLocalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetProfileCard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID AMatchServicedPlayerState::GetProfileCard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetProfileCard");

	Params::MatchServicedPlayerState_GetProfileCard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetRelatedWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* AMatchServicedPlayerState::GetRelatedWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetRelatedWidget");

	Params::MatchServicedPlayerState_GetRelatedWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams AMatchServicedPlayerState::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetTeam");

	Params::MatchServicedPlayerState_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetTeamColorForHUD
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor AMatchServicedPlayerState::GetTeamColorForHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetTeamColorForHUD");

	Params::MatchServicedPlayerState_GetTeamColorForHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETier                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETier AMatchServicedPlayerState::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetTier");

	Params::MatchServicedPlayerState_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetUsedBoosterCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetUsedBoosterCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetUsedBoosterCount");

	Params::MatchServicedPlayerState_GetUsedBoosterCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserInBattle              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FUserInBattle AMatchServicedPlayerState::GetUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetUser");

	Params::MatchServicedPlayerState_GetUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetUserID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID AMatchServicedPlayerState::GetUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetUserID");

	Params::MatchServicedPlayerState_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetUserLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedPlayerState::GetUserLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetUserLevel");

	Params::MatchServicedPlayerState_GetUserLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.GetUserProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* AMatchServicedPlayerState::GetUserProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "GetUserProfile");

	Params::MatchServicedPlayerState_GetUserProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.HasValidNetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::HasValidNetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "HasValidNetID");

	Params::MatchServicedPlayerState_HasValidNetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.HasValidUserID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::HasValidUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "HasValidUserID");

	Params::MatchServicedPlayerState_HasValidUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.HasValidValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::HasValidValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "HasValidValue");

	Params::MatchServicedPlayerState_HasValidValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsACoach
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsACoach() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsACoach");

	Params::MatchServicedPlayerState_IsACoach Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsAObserver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsAObserver() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsAObserver");

	Params::MatchServicedPlayerState_IsAObserver Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsAPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsAPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsAPlayer");

	Params::MatchServicedPlayerState_IsAPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsBlueSideForHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsBlueSideForHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsBlueSideForHUD");

	Params::MatchServicedPlayerState_IsBlueSideForHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsBoosterSlotEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsBoosterSlotEnabled(int32 _slot_zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsBoosterSlotEnabled");

	Params::MatchServicedPlayerState_IsBoosterSlotEnabled Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsLocal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsLocal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsLocal");

	Params::MatchServicedPlayerState_IsLocal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsNotPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsNotPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsNotPlayer");

	Params::MatchServicedPlayerState_IsNotPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsReadyToFight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsReadyToFight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsReadyToFight");

	Params::MatchServicedPlayerState_IsReadyToFight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsRoomLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsRoomLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsRoomLeader");

	Params::MatchServicedPlayerState_IsRoomLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedPlayerState.IsRoomManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedPlayerState::IsRoomManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedPlayerState", "IsRoomManager");

	Params::MatchServicedPlayerState_IsRoomManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.DEBUG_ActivateInfinitedBullet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerState::DEBUG_ActivateInfinitedBullet(bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "DEBUG_ActivateInfinitedBullet");

	Params::BattlePlayerState_DEBUG_ActivateInfinitedBullet Parms{};

	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.GetBattleStoreBuffStackByItemID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _out_is_success                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBattleStore_BuffStack     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBattleStore_BuffStack ABattlePlayerState::GetBattleStoreBuffStackByItemID(const struct FItemID& _id, bool* _out_is_success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetBattleStoreBuffStackByItemID");

	Params::BattlePlayerState_GetBattleStoreBuffStackByItemID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_is_success != nullptr)
		*_out_is_success = Parms._out_is_success;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IncReviveCount
// (Final, Native, Public, BlueprintCallable)

void ABattlePlayerState::IncReviveCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IncReviveCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.OnRep_AssistCount
// (Final, Native, Protected)

void ABattlePlayerState::OnRep_AssistCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "OnRep_AssistCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.OnRep_DynamicBuffs
// (Final, Native, Protected)

void ABattlePlayerState::OnRep_DynamicBuffs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "OnRep_DynamicBuffs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.OnRep_InGameMoney
// (Final, Native, Protected)
// Parameters:
// int32                                   _old_money                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerState::OnRep_InGameMoney(int32 _old_money)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "OnRep_InGameMoney");

	Params::BattlePlayerState_OnRep_InGameMoney Parms{};

	Parms._old_money = _old_money;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.OnRep_IsSpectating
// (Final, Native, Protected)

void ABattlePlayerState::OnRep_IsSpectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "OnRep_IsSpectating");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.OnRep_KillCount
// (Final, Native, Protected)

void ABattlePlayerState::OnRep_KillCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "OnRep_KillCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.OnRep_StaticBuffs
// (Final, Native, Protected)

void ABattlePlayerState::OnRep_StaticBuffs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "OnRep_StaticBuffs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.SERVER_AddAssistCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerState::SERVER_AddAssistCount(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "SERVER_AddAssistCount");

	Params::BattlePlayerState_SERVER_AddAssistCount Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.SERVER_AddDeathCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerState::SERVER_AddDeathCount(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "SERVER_AddDeathCount");

	Params::BattlePlayerState_SERVER_AddDeathCount Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.SERVER_AddKillCount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABattlePlayerState::SERVER_AddKillCount(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "SERVER_AddKillCount");

	Params::BattlePlayerState_SERVER_AddKillCount Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.SERVER_IncreaseInGameMoney
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _inc_money                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoldRewardType                         _reward_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _round                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerState::SERVER_IncreaseInGameMoney(int32 _inc_money, EGoldRewardType _reward_type, int32 _round)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "SERVER_IncreaseInGameMoney");

	Params::BattlePlayerState_SERVER_IncreaseInGameMoney Parms{};

	Parms._inc_money = _inc_money;
	Parms._reward_type = _reward_type;
	Parms._round = _round;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.SERVER_PayInGameMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _payment                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::SERVER_PayInGameMoney(int32 _payment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "SERVER_PayInGameMoney");

	Params::BattlePlayerState_SERVER_PayInGameMoney Parms{};

	Parms._payment = _payment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.SERVER_SetInSafeArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _in_safe_area                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattlePlayerState::SERVER_SetInSafeArea(bool _in_safe_area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "SERVER_SetInSafeArea");

	Params::BattlePlayerState_SERVER_SetInSafeArea Parms{};

	Parms._in_safe_area = _in_safe_area;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePlayerState.CanRespawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::CanRespawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "CanRespawn");

	Params::BattlePlayerState_CanRespawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.CanRevive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::CanRevive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "CanRevive");

	Params::BattlePlayerState_CanRevive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.DEBUG_IsActivatedInfinitedBullet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::DEBUG_IsActivatedInfinitedBullet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "DEBUG_IsActivatedInfinitedBullet");

	Params::BattlePlayerState_DEBUG_IsActivatedInfinitedBullet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.FindBuffByCausingItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBuffBase*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBuffBase* ABattlePlayerState::FindBuffByCausingItemID(const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "FindBuffByCausingItemID");

	Params::BattlePlayerState_FindBuffByCausingItemID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetAssistCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetAssistCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetAssistCount");

	Params::BattlePlayerState_GetAssistCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetBattleStoreItemPrice
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetBattleStoreItemPrice(const struct FItemID& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetBattleStoreItemPrice");

	Params::BattlePlayerState_GetBattleStoreItemPrice Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetDeathCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetDeathCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetDeathCount");

	Params::BattlePlayerState_GetDeathCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetEnteredRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetEnteredRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetEnteredRound");

	Params::BattlePlayerState_GetEnteredRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABattlePlayerState::GetHP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetHP");

	Params::BattlePlayerState_GetHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetHPRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABattlePlayerState::GetHPRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetHPRate");

	Params::BattlePlayerState_GetHPRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetInGameMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetInGameMoney() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetInGameMoney");

	Params::BattlePlayerState_GetInGameMoney Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetKillCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetKillCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetKillCount");

	Params::BattlePlayerState_GetKillCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetRespawnDelayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABattlePlayerState::GetRespawnDelayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetRespawnDelayTime");

	Params::BattlePlayerState_GetRespawnDelayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.GetReviveCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattlePlayerState::GetReviveCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "GetReviveCount");

	Params::BattlePlayerState_GetReviveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IsBreakInUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::IsBreakInUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IsBreakInUser");

	Params::BattlePlayerState_IsBreakInUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IsCharacterDied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::IsCharacterDied(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IsCharacterDied");

	Params::BattlePlayerState_IsCharacterDied Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IsDied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::IsDied() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IsDied");

	Params::BattlePlayerState_IsDied Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IsInSafeArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::IsInSafeArea() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IsInSafeArea");

	Params::BattlePlayerState_IsInSafeArea Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IsInvincible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::IsInvincible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IsInvincible");

	Params::BattlePlayerState_IsInvincible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePlayerState.IsSpectating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattlePlayerState::IsSpectating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattlePlayerState", "IsSpectating");

	Params::BattlePlayerState_IsSpectating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_PlayerState.OnRep_Money
// (Native, Protected)

void ABountyTDM_PlayerState::OnRep_Money()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_PlayerState", "OnRep_Money");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_PlayerState.OnRep_TransferID
// (Native, Protected)

void ABountyTDM_PlayerState::OnRep_TransferID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_PlayerState", "OnRep_TransferID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_PlayerState.GetMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABountyTDM_PlayerState::GetMoney() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_PlayerState", "GetMoney");

	Params::BountyTDM_PlayerState_GetMoney Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_PlayerState.GetTransferTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABountyTDM_PlayerState::GetTransferTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_PlayerState", "GetTransferTime");

	Params::BountyTDM_PlayerState_GetTransferTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_PlayerState.IsSendingMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABountyTDM_PlayerState::IsSendingMoney() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_PlayerState", "IsSendingMoney");

	Params::BountyTDM_PlayerState_IsSendingMoney Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_DuplicateKeyPanelBase.InvokeOnDuplicateKeyChanged
// (Final, Native, Protected, BlueprintCallable)

void UUI_DuplicateKeyPanelBase::InvokeOnDuplicateKeyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DuplicateKeyPanelBase", "InvokeOnDuplicateKeyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_DuplicateKeyPanelBase.RegisterOnDuplicateKeyChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FKeyMapping& _key_mapping, TArray<EInputAction>& _duplicated_actions)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_DuplicateKeyPanelBase::RegisterOnDuplicateKeyChanged(const TDelegate<void(struct FKeyMapping& _key_mapping, TArray<EInputAction>& _duplicated_actions)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DuplicateKeyPanelBase", "RegisterOnDuplicateKeyChanged");

	Params::UI_DuplicateKeyPanelBase_RegisterOnDuplicateKeyChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.OnRep_GameSetting
// (Native, Protected)

void AMatchServicedGameState::OnRep_GameSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "OnRep_GameSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.OnRep_ServerState
// (Final, Native, Protected)
// Parameters:
// EServerStatus                           _old_state                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::OnRep_ServerState(EServerStatus _old_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "OnRep_ServerState");

	Params::MatchServicedGameState_OnRep_ServerState Parms{};

	Parms._old_state = _old_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.RegisterGameSettingNotification
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FGameSetting& _setting)>_func                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::RegisterGameSettingNotification(const TDelegate<void(struct FGameSetting& _setting)>& _func)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "RegisterGameSettingNotification");

	Params::MatchServicedGameState_RegisterGameSettingNotification Parms{};

	Parms._func = _func;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.RegisterPlayerJoinNotification
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class APlayerState* _ps, EPlayerJoinEvent _event)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::RegisterPlayerJoinNotification(const TDelegate<void(class APlayerState* _ps, EPlayerJoinEvent _event)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "RegisterPlayerJoinNotification");

	Params::MatchServicedGameState_RegisterPlayerJoinNotification Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.SERVER_SetServerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EServerStatus                           _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::SERVER_SetServerState(EServerStatus _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "SERVER_SetServerState");

	Params::MatchServicedGameState_SERVER_SetServerState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.Setter_GameSetting
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameSetting                     _setting                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMatchServicedGameState::Setter_GameSetting(const struct FGameSetting& _setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "Setter_GameSetting");

	Params::MatchServicedGameState_Setter_GameSetting Parms{};

	Parms._setting = std::move(_setting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.Setter_ServerState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EServerStatus                           _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::Setter_ServerState(EServerStatus _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "Setter_ServerState");

	Params::MatchServicedGameState_Setter_ServerState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.UnregisterGameSettingNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::UnregisterGameSettingNotification(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "UnregisterGameSettingNotification");

	Params::MatchServicedGameState_UnregisterGameSettingNotification Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.UnregisterPlayerJoinNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameState::UnregisterPlayerJoinNotification(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "UnregisterPlayerJoinNotification");

	Params::MatchServicedGameState_UnregisterPlayerJoinNotification Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameState.GetGameSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameSetting               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameSetting AMatchServicedGameState::GetGameSetting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "GetGameSetting");

	Params::MatchServicedGameState_GetGameSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.GetMaxPlayableCharacterCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedGameState::GetMaxPlayableCharacterCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "GetMaxPlayableCharacterCount");

	Params::MatchServicedGameState_GetMaxPlayableCharacterCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.GetModeConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMode                      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMode AMatchServicedGameState::GetModeConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "GetModeConfig");

	Params::MatchServicedGameState_GetModeConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.GetRealPlayerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedGameState::GetRealPlayerCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "GetRealPlayerCount");

	Params::MatchServicedGameState_GetRealPlayerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.GetServerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EServerStatus                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerStatus AMatchServicedGameState::GetServerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "GetServerState");

	Params::MatchServicedGameState_GetServerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.GetTeamMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedGameState::GetTeamMemberCount(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "GetTeamMemberCount");

	Params::MatchServicedGameState_GetTeamMemberCount Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.IsInBattle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedGameState::IsInBattle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "IsInBattle");

	Params::MatchServicedGameState_IsInBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameState.IsPickedCharaInTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _asker_id                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedGameState::IsPickedCharaInTeam(const struct FUserID& _asker_id, ECharaType _chara_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameState", "IsPickedCharaInTeam");

	Params::MatchServicedGameState_IsPickedCharaInTeam Parms{};

	Parms._asker_id = std::move(_asker_id);
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetRemainTime
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _out_min                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_sec                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattleGameStateBase::GetRemainTime(int32* _out_min, int32* _out_sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetRemainTime");

	Params::BattleGameStateBase_GetRemainTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_min != nullptr)
		*_out_min = Parms._out_min;

	if (_out_sec != nullptr)
		*_out_sec = Parms._out_sec;
}


// Function Stigma.BattleGameStateBase.OnRep_BattlePhaseDurationSec
// (Native, Protected)

void ABattleGameStateBase::OnRep_BattlePhaseDurationSec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "OnRep_BattlePhaseDurationSec");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.OnRep_BattlePhaseRemainSec
// (Native, Protected)

void ABattleGameStateBase::OnRep_BattlePhaseRemainSec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "OnRep_BattlePhaseRemainSec");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.OnRep_CurrentBattlePhase
// (Native, Protected)

void ABattleGameStateBase::OnRep_CurrentBattlePhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "OnRep_CurrentBattlePhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.OnRep_CurrentRound
// (Native, Protected)

void ABattleGameStateBase::OnRep_CurrentRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "OnRep_CurrentRound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.OnRep_TeamData
// (Native, Protected)

void ABattleGameStateBase::OnRep_TeamData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "OnRep_TeamData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.SetBattlePhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattleModePhase                        _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattleGameStateBase::SetBattlePhase(EBattleModePhase _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "SetBattlePhase");

	Params::BattleGameStateBase_SetBattlePhase Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.SetCurrentRound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _round                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattleGameStateBase::SetCurrentRound(int32 _round)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "SetCurrentRound");

	Params::BattleGameStateBase_SetCurrentRound Parms{};

	Parms._round = _round;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.Setter_BattlePhaseDurationSec
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _sec                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattleGameStateBase::Setter_BattlePhaseDurationSec(int32 _sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "Setter_BattlePhaseDurationSec");

	Params::BattleGameStateBase_Setter_BattlePhaseDurationSec Parms{};

	Parms._sec = _sec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.Setter_BattlePhaseRemainSec
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _sec                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattleGameStateBase::Setter_BattlePhaseRemainSec(int32 _sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "Setter_BattlePhaseRemainSec");

	Params::BattleGameStateBase_Setter_BattlePhaseRemainSec Parms{};

	Parms._sec = _sec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameStateBase.GetBattlePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBattleModePhase                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleModePhase ABattleGameStateBase::GetBattlePhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetBattlePhase");

	Params::BattleGameStateBase_GetBattlePhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetBattlePhaseElapsedSec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattleGameStateBase::GetBattlePhaseElapsedSec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetBattlePhaseElapsedSec");

	Params::BattleGameStateBase_GetBattlePhaseElapsedSec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetBattlePhaseRemainSec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattleGameStateBase::GetBattlePhaseRemainSec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetBattlePhaseRemainSec");

	Params::BattleGameStateBase_GetBattlePhaseRemainSec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetCurrentRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattleGameStateBase::GetCurrentRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetCurrentRound");

	Params::BattleGameStateBase_GetCurrentRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetKillCountByTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattleGameStateBase::GetKillCountByTeam(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetKillCountByTeam");

	Params::BattleGameStateBase_GetKillCountByTeam Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetTeamData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTeamData                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FTeamData ABattleGameStateBase::GetTeamData(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetTeamData");

	Params::BattleGameStateBase_GetTeamData Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetTeamRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattleGameStateBase::GetTeamRank(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetTeamRank");

	Params::BattleGameStateBase_GetTeamRank Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetTeamScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABattleGameStateBase::GetTeamScore(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetTeamScore");

	Params::BattleGameStateBase_GetTeamScore Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameStateBase.GetWinningTeam
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _is_tie                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams ABattleGameStateBase::GetWinningTeam(bool* _is_tie) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameStateBase", "GetWinningTeam");

	Params::BattleGameStateBase_GetWinningTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_is_tie != nullptr)
		*_is_tie = Parms._is_tie;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.IncTeamTotalBounty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _inc_bounty                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABountyTDM_PlayerState*           _increased_by                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABountyTDM_GameState::IncTeamTotalBounty(ETeams _Team, int32 _inc_bounty, class ABountyTDM_PlayerState* _increased_by)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "IncTeamTotalBounty");

	Params::BountyTDM_GameState_IncTeamTotalBounty Parms{};

	Parms._Team = _Team;
	Parms._inc_bounty = _inc_bounty;
	Parms._increased_by = _increased_by;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_GameState.OnRep_CurrentPhase
// (Final, Native, Protected)

void ABountyTDM_GameState::OnRep_CurrentPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "OnRep_CurrentPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_GameState.OnRep_GTATeamData
// (Final, Native, Protected)

void ABountyTDM_GameState::OnRep_GTATeamData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "OnRep_GTATeamData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_GameState.OnRep_ShouldFinishEarly
// (Final, Native, Protected)

void ABountyTDM_GameState::OnRep_ShouldFinishEarly()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "OnRep_ShouldFinishEarly");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_GameState.SetCurrentPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABountyTDM_GameState::SetCurrentPhase(int32 _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "SetCurrentPhase");

	Params::BountyTDM_GameState_SetCurrentPhase Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_GameState.GetBountyRule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBountyRule                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBountyRule ABountyTDM_GameState::GetBountyRule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetBountyRule");

	Params::BountyTDM_GameState_GetBountyRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.GetCurrentBountyPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 ABountyTDM_GameState::GetCurrentBountyPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetCurrentBountyPhase");

	Params::BountyTDM_GameState_GetCurrentBountyPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.GetCurrentBountyPhaseDefine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBountyPhaseDefine         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBountyPhaseDefine ABountyTDM_GameState::GetCurrentBountyPhaseDefine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetCurrentBountyPhaseDefine");

	Params::BountyTDM_GameState_GetCurrentBountyPhaseDefine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.GetGoldRule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBounty_GoldRule           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FBounty_GoldRule ABountyTDM_GameState::GetGoldRule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetGoldRule");

	Params::BountyTDM_GameState_GetGoldRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.GetStealProgressRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABountyTDM_GameState::GetStealProgressRatio(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetStealProgressRatio");

	Params::BountyTDM_GameState_GetStealProgressRatio Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.GetStealProgressTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABountyTDM_GameState::GetStealProgressTime(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetStealProgressTime");

	Params::BountyTDM_GameState_GetStealProgressTime Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BountyTDM_GameState.GetTransferUnit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABountyTDM_GameState::GetTransferUnit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_GameState", "GetTransferUnit");

	Params::BountyTDM_GameState_GetTransferUnit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDMission.InitWidget
// (Final, Native, Public, BlueprintCallable)

void UUI_HUDMission::InitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMission", "InitWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDMission.OnMissionUpdated
// (Final, Native, Protected)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _mission                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDMission::OnMissionUpdated(EMissionUpdateType _type, class UMission* _mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMission", "OnMissionUpdated");

	Params::UI_HUDMission_OnMissionUpdated Parms{};

	Parms._type = _type;
	Parms._mission = _mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDMission.SetCompleted
// (Event, Protected, BlueprintEvent)

void UUI_HUDMission::SetCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMission", "SetCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_HUDMission.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_HUDMission::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMission", "SetDesc");

	Params::UI_HUDMission_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HUDMission.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_HUDMission::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMission", "SetTitle");

	Params::UI_HUDMission_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.BTScore.GetScore
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAdvancedAIController*            _controller                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBTScore::GetScore(class AAdvancedAIController* _controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTScore", "GetScore");

	Params::BTScore_GetScore Parms{};

	Parms._controller = _controller;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Breakable.OnBreaked
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             _step_name                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _current_hp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABreakable::OnBreaked(class FName _step_name, float _current_hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Breakable", "OnBreaked");

	Params::Breakable_OnBreaked Parms{};

	Parms._step_name = _step_name;
	Parms._current_hp = _current_hp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Breakable.OnRep_HP
// (Final, Native, Protected)
// Parameters:
// float                                   _old_hp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABreakable::OnRep_HP(float _old_hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Breakable", "OnRep_HP");

	Params::Breakable_OnRep_HP Parms{};

	Parms._old_hp = _old_hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Breakable.Setter_HP
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _new_hp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABreakable::Setter_HP(float _new_hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Breakable", "Setter_HP");

	Params::Breakable_Setter_HP Parms{};

	Parms._new_hp = _new_hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefBackground.ShowDetail
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBriefBackground::ShowDetail(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefBackground", "ShowDetail");

	Params::UI_BattlePassBriefBackground_ShowDetail Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.GunGraphValuesBlueprintLibrary.GetGunBuffedGraphValues
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunEntry_Main                   _Config                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunEntry_Body                   _body_config                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunAttribute_Common             _gun_object_attribute                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunBuffEffect                   _effect                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunGraphValues                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunGraphValues UGunGraphValuesBlueprintLibrary::GetGunBuffedGraphValues(ECharaType _chara_type, const struct FGunEntry_Main& _Config, const struct FGunEntry_Body& _body_config, const struct FGunAttribute_Common& _gun_object_attribute, const struct FGunBuffEffect& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunGraphValuesBlueprintLibrary", "GetGunBuffedGraphValues");

	Params::GunGraphValuesBlueprintLibrary_GetGunBuffedGraphValues Parms{};

	Parms._chara_type = _chara_type;
	Parms._Config = std::move(_Config);
	Parms._body_config = std::move(_body_config);
	Parms._gun_object_attribute = std::move(_gun_object_attribute);
	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunGraphValuesBlueprintLibrary.GetGunBuffEffectOfBoosters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FItemID_Booster>          _boosters                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunBuffEffect                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunBuffEffect UGunGraphValuesBlueprintLibrary::GetGunBuffEffectOfBoosters(const TArray<struct FItemID_Booster>& _boosters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunGraphValuesBlueprintLibrary", "GetGunBuffEffectOfBoosters");

	Params::GunGraphValuesBlueprintLibrary_GetGunBuffEffectOfBoosters Parms{};

	Parms._boosters = std::move(_boosters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunGraphValuesBlueprintLibrary.GetGunBuffEffectOfPassiveSkills
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPassiveSkill>            _passive_skills                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunBuffEffect                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunBuffEffect UGunGraphValuesBlueprintLibrary::GetGunBuffEffectOfPassiveSkills(const TArray<struct FPassiveSkill>& _passive_skills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunGraphValuesBlueprintLibrary", "GetGunBuffEffectOfPassiveSkills");

	Params::GunGraphValuesBlueprintLibrary_GetGunBuffEffectOfPassiveSkills Parms{};

	Parms._passive_skills = std::move(_passive_skills);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunGraphValuesBlueprintLibrary.GetGunGraphValues
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunEntry_Main                   _Config                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunEntry_Body                   _body_config                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunBuffEffect                   _effect                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunGraphValues                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunGraphValues UGunGraphValuesBlueprintLibrary::GetGunGraphValues(ECharaType _chara_type, const struct FGunEntry_Main& _Config, const struct FGunEntry_Body& _body_config, const struct FGunBuffEffect& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunGraphValuesBlueprintLibrary", "GetGunGraphValues");

	Params::GunGraphValuesBlueprintLibrary_GetGunGraphValues Parms{};

	Parms._chara_type = _chara_type;
	Parms._Config = std::move(_Config);
	Parms._body_config = std::move(_body_config);
	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunGraphValuesBlueprintLibrary.GetGunObjectGraphValues
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunEntry_Main                   _Config                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunEntry_Body                   _body_config                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunAttribute_Common             _gun_object_attribute                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunBuffEffect                   _effect                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunGraphValues                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunGraphValues UGunGraphValuesBlueprintLibrary::GetGunObjectGraphValues(ECharaType _chara_type, const struct FGunEntry_Main& _Config, const struct FGunEntry_Body& _body_config, const struct FGunAttribute_Common& _gun_object_attribute, const struct FGunBuffEffect& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunGraphValuesBlueprintLibrary", "GetGunObjectGraphValues");

	Params::GunGraphValuesBlueprintLibrary_GetGunObjectGraphValues Parms{};

	Parms._chara_type = _chara_type;
	Parms._Config = std::move(_Config);
	Parms._body_config = std::move(_body_config);
	Parms._gun_object_attribute = std::move(_gun_object_attribute);
	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunGraphValuesBlueprintLibrary.GetGunPartsGraphValues
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunEntry_Main                   _Config                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunEntry_Body                   _body_config                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGunAttribute_Common             _gun_parts_attribute                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunBuffEffect                   _effect                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGunGraphValues                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunGraphValues UGunGraphValuesBlueprintLibrary::GetGunPartsGraphValues(ECharaType _chara_type, const struct FGunEntry_Main& _Config, const struct FGunEntry_Body& _body_config, const struct FGunAttribute_Common& _gun_parts_attribute, const struct FGunBuffEffect& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunGraphValuesBlueprintLibrary", "GetGunPartsGraphValues");

	Params::GunGraphValuesBlueprintLibrary_GetGunPartsGraphValues Parms{};

	Parms._chara_type = _chara_type;
	Parms._Config = std::move(_Config);
	Parms._body_config = std::move(_body_config);
	Parms._gun_parts_attribute = std::move(_gun_parts_attribute);
	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ThrowBase.OnCollide
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AThrowBase::OnCollide(const struct FHitResult& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThrowBase", "OnCollide");

	Params::ThrowBase_OnCollide Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ThrowBase.OnGetStuckRotation
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AThrowBase::OnGetStuckRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThrowBase", "OnGetStuckRotation");

	Params::ThrowBase_OnGetStuckRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ThrowBase.GetLastVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AThrowBase::GetLastVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThrowBase", "GetLastVelocity");

	Params::ThrowBase_GetLastVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ThrowBase.GetThrowActionGraphOperatorID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActionGraphOperatorID           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FActionGraphOperatorID AThrowBase::GetThrowActionGraphOperatorID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThrowBase", "GetThrowActionGraphOperatorID");

	Params::ThrowBase_GetThrowActionGraphOperatorID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BombBase.OnExplosion
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABombBase::OnExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BombBase", "OnExplosion");

	Params::BombBase_OnExplosion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.BombBase.SERVER_HittedBombChara
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _hitted                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitData                         _hit_data                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ABombBase::SERVER_HittedBombChara(class ACharaBase* _hitted, const struct FHitData& _hit_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BombBase", "SERVER_HittedBombChara");

	Params::BombBase_SERVER_HittedBombChara Parms{};

	Parms._hitted = _hitted;
	Parms._hit_data = std::move(_hit_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ContentUnlocker.OnClickGoToBtn
// (Final, Native, Protected, BlueprintCallable)

void UUI_ContentUnlocker::OnClickGoToBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ContentUnlocker", "OnClickGoToBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ContentUnlocker.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _Desc                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ContentUnlocker::SetDesc(const class FText& _Desc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ContentUnlocker", "SetDesc");

	Params::UI_ContentUnlocker_SetDesc Parms{};

	Parms._Desc = std::move(_Desc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ContentUnlocker.SetIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ContentUnlocker::SetIcon(const TSoftObjectPtr<class UTexture2D>& _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ContentUnlocker", "SetIcon");

	Params::UI_ContentUnlocker_SetIcon Parms{};

	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ContentUnlocker.SetSubDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _sub_desc                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ContentUnlocker::SetSubDesc(const class FText& _sub_desc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ContentUnlocker", "SetSubDesc");

	Params::UI_ContentUnlocker_SetSubDesc Parms{};

	Parms._sub_desc = std::move(_sub_desc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ContentUnlocker.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _Title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ContentUnlocker::SetTitle(const class FText& _Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ContentUnlocker", "SetTitle");

	Params::UI_ContentUnlocker_SetTitle Parms{};

	Parms._Title = std::move(_Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ContentUnlocker.ShowGoToButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ContentUnlocker::ShowGoToButton(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ContentUnlocker", "ShowGoToButton");

	Params::UI_ContentUnlocker_ShowGoToButton Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.StigmaGameInstance.ShowLoadingScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::ShowLoadingScreen(const class UObject* _world_ctx, bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("StigmaGameInstance", "ShowLoadingScreen");

	Params::StigmaGameInstance_ShowLoadingScreen Parms{};

	Parms._world_ctx = _world_ctx;
	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.AddWishedGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::AddWishedGameMode(EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "AddWishedGameMode");

	Params::StigmaGameInstance_AddWishedGameMode Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.DISCORD_StartBattle
// (Final, Native, Public, BlueprintCallable)

void UStigmaGameInstance::DISCORD_StartBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "DISCORD_StartBattle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.DISCORD_StartLobby
// (Final, Native, Public, BlueprintCallable)

void UStigmaGameInstance::DISCORD_StartLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "DISCORD_StartLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.GetChatManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UChatManager*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UChatManager* UStigmaGameInstance::GetChatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetChatManager");

	Params::StigmaGameInstance_GetChatManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetEmptyFriendList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TArray<class UUserProfile*>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UUserProfile*> UStigmaGameInstance::GetEmptyFriendList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetEmptyFriendList");

	Params::StigmaGameInstance_GetEmptyFriendList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetRecommendedGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameMode                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGameMode UStigmaGameInstance::GetRecommendedGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetRecommendedGameMode");

	Params::StigmaGameInstance_GetRecommendedGameMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetSocialContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USocialContext*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USocialContext* UStigmaGameInstance::GetSocialContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetSocialContext");

	Params::StigmaGameInstance_GetSocialContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetToastManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UToastManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UToastManager* UStigmaGameInstance::GetToastManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetToastManager");

	Params::StigmaGameInstance_GetToastManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.LoadFromService_Characters
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FNetCharacter>            _infos                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UStigmaGameInstance::LoadFromService_Characters(const TArray<struct FNetCharacter>& _infos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "LoadFromService_Characters");

	Params::StigmaGameInstance_LoadFromService_Characters Parms{};

	Parms._infos = std::move(_infos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.LoadFromService_LastUsedCharaType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::LoadFromService_LastUsedCharaType(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "LoadFromService_LastUsedCharaType");

	Params::StigmaGameInstance_LoadFromService_LastUsedCharaType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.OnQueryCloseWindow
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStigmaGameInstance::OnQueryCloseWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "OnQueryCloseWindow");

	Params::StigmaGameInstance_OnQueryCloseWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.RegisterOnLobbyUIInitialized
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::RegisterOnLobbyUIInitialized(const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "RegisterOnLobbyUIInitialized");

	Params::StigmaGameInstance_RegisterOnLobbyUIInitialized Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.RemoveWishedGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::RemoveWishedGameMode(EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "RemoveWishedGameMode");

	Params::StigmaGameInstance_RemoveWishedGameMode Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.RevertPreviewCharaSettings
// (Final, Native, Public, BlueprintCallable)

void UStigmaGameInstance::RevertPreviewCharaSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "RevertPreviewCharaSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetBattleSettingsForClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _map_name                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_tutorial_match                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _option                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetBattleSettingsForClient(EGameMode _game_mode, const class FString& _map_name, bool _is_tutorial_match, const class FString& _option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetBattleSettingsForClient");

	Params::StigmaGameInstance_SetBattleSettingsForClient Parms{};

	Parms._game_mode = _game_mode;
	Parms._map_name = std::move(_map_name);
	Parms._is_tutorial_match = _is_tutorial_match;
	Parms._option = std::move(_option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetGunPreset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetGunPreset(ECharaType _chara_type, const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetGunPreset");

	Params::StigmaGameInstance_SetGunPreset Parms{};

	Parms._chara_type = _chara_type;
	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetPickRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _region_code                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _picked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetPickRegion(const class FString& _region_code, bool _picked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetPickRegion");

	Params::StigmaGameInstance_SetPickRegion Parms{};

	Parms._region_code = std::move(_region_code);
	Parms._picked = _picked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetPreviewChara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetPreviewChara(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetPreviewChara");

	Params::StigmaGameInstance_SetPreviewChara Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetPreviewCharaArmor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EArmorType                              _Armor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetPreviewCharaArmor(EArmorType _Armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetPreviewCharaArmor");

	Params::StigmaGameInstance_SetPreviewCharaArmor Parms{};

	Parms._Armor = _Armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetPreviewCharaBodyID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Skin_Body                _body_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetPreviewCharaBodyID(const struct FItemID_Skin_Body& _body_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetPreviewCharaBodyID");

	Params::StigmaGameInstance_SetPreviewCharaBodyID Parms{};

	Parms._body_id = std::move(_body_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetPreviewCharaHeadID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Skin_Head                _head_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetPreviewCharaHeadID(const struct FItemID_Skin_Head& _head_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetPreviewCharaHeadID");

	Params::StigmaGameInstance_SetPreviewCharaHeadID Parms{};

	Parms._head_id = std::move(_head_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetUserPlayingAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUserPlayingAt                          _playing_at                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetUserPlayingAt(EUserPlayingAt _playing_at)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetUserPlayingAt");

	Params::StigmaGameInstance_SetUserPlayingAt Parms{};

	Parms._playing_at = _playing_at;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.SetWishedGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::SetWishedGameMode(EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "SetWishedGameMode");

	Params::StigmaGameInstance_SetWishedGameMode Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.UpdateMatch_Finish
// (Final, Native, Public, BlueprintCallable)

void UStigmaGameInstance::UpdateMatch_Finish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "UpdateMatch_Finish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.UpdateMatch_Matched
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatchMakingInfo                 _match_info                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStigmaGameInstance::UpdateMatch_Matched(const struct FMatchMakingInfo& _match_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "UpdateMatch_Matched");

	Params::StigmaGameInstance_UpdateMatch_Matched Parms{};

	Parms._match_info = std::move(_match_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.UpdateMatch_Start
// (Final, Native, Public, BlueprintCallable)

void UStigmaGameInstance::UpdateMatch_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "UpdateMatch_Start");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.UpdateMatch_WaitAck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_custom_game                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaGameInstance::UpdateMatch_WaitAck(bool _is_custom_game)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "UpdateMatch_WaitAck");

	Params::StigmaGameInstance_UpdateMatch_WaitAck Parms{};

	Parms._is_custom_game = _is_custom_game;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaGameInstance.AmIMatchBanned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStigmaGameInstance::AmIMatchBanned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "AmIMatchBanned");

	Params::StigmaGameInstance_AmIMatchBanned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.CanStartMatchMaking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStigmaGameInstance::CanStartMatchMaking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "CanStartMatchMaking");

	Params::StigmaGameInstance_CanStartMatchMaking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetAllRegionCodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UStigmaGameInstance::GetAllRegionCodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetAllRegionCodes");

	Params::StigmaGameInstance_GetAllRegionCodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetBattleResult_Decision
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBattleDecisionDetail      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBattleDecisionDetail UStigmaGameInstance::GetBattleResult_Decision() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetBattleResult_Decision");

	Params::StigmaGameInstance_GetBattleResult_Decision Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetBattleResult_MyTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams UStigmaGameInstance::GetBattleResult_MyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetBattleResult_MyTeam");

	Params::StigmaGameInstance_GetBattleResult_MyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetBestPickedRegionData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FRegion                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FRegion UStigmaGameInstance::GetBestPickedRegionData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetBestPickedRegionData");

	Params::StigmaGameInstance_GetBestPickedRegionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetLocalPlayerContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayerContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalPlayerContext* UStigmaGameInstance::GetLocalPlayerContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetLocalPlayerContext");

	Params::StigmaGameInstance_GetLocalPlayerContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetLoginElapsedSec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UStigmaGameInstance::GetLoginElapsedSec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetLoginElapsedSec");

	Params::StigmaGameInstance_GetLoginElapsedSec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetMatchMakingContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMatchContext              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMatchContext UStigmaGameInstance::GetMatchMakingContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetMatchMakingContext");

	Params::StigmaGameInstance_GetMatchMakingContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetMatchMakingElapsedTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UStigmaGameInstance::GetMatchMakingElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetMatchMakingElapsedTime");

	Params::StigmaGameInstance_GetMatchMakingElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetMatchMakingErrorMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const class FText UStigmaGameInstance::GetMatchMakingErrorMessage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetMatchMakingErrorMessage");

	Params::StigmaGameInstance_GetMatchMakingErrorMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetMatchMakingStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFindMatchStatus                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFindMatchStatus UStigmaGameInstance::GetMatchMakingStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetMatchMakingStatus");

	Params::StigmaGameInstance_GetMatchMakingStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetMatchOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMatchOption               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMatchOption UStigmaGameInstance::GetMatchOption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetMatchOption");

	Params::StigmaGameInstance_GetMatchOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetNoticeBannerURL
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UStigmaGameInstance::GetNoticeBannerURL() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetNoticeBannerURL");

	Params::StigmaGameInstance_GetNoticeBannerURL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetPlayerData_Nickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName UStigmaGameInstance::GetPlayerData_Nickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetPlayerData_Nickname");

	Params::StigmaGameInstance_GetPlayerData_Nickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetPlayerData_UserID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UStigmaGameInstance::GetPlayerData_UserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetPlayerData_UserID");

	Params::StigmaGameInstance_GetPlayerData_UserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetRegionData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           _region_code                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRegion                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FRegion UStigmaGameInstance::GetRegionData(const class FString& _region_code) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetRegionData");

	Params::StigmaGameInstance_GetRegionData Parms{};

	Parms._region_code = std::move(_region_code);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.GetServerSessionStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EServerSessionStatus                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerSessionStatus UStigmaGameInstance::GetServerSessionStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "GetServerSessionStatus");

	Params::StigmaGameInstance_GetServerSessionStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.IsInWishedGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStigmaGameInstance::IsInWishedGameMode(EGameMode _game_mode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "IsInWishedGameMode");

	Params::StigmaGameInstance_IsInWishedGameMode Parms{};

	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.IsMatchMaking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStigmaGameInstance::IsMatchMaking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "IsMatchMaking");

	Params::StigmaGameInstance_IsMatchMaking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaGameInstance.IsMatchMakingCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStigmaGameInstance::IsMatchMakingCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaGameInstance", "IsMatchMakingCompleted");

	Params::StigmaGameInstance_IsMatchMakingCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaCharacter.SetMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID                          _body_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _head_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EArmorType                              _armor_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaCharacter::SetMesh(const struct FItemID& _body_id, const struct FItemID& _head_id, EArmorType _armor_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCharacter", "SetMesh");

	Params::StigmaCharacter_SetMesh Parms{};

	Parms._body_id = std::move(_body_id);
	Parms._head_id = std::move(_head_id);
	Parms._armor_type = _armor_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCharacter.GetClassCharacterType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AStigmaCharacter::GetClassCharacterType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCharacter", "GetClassCharacterType");

	Params::StigmaCharacter_GetClassCharacterType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetShowLinkedSkillGuide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::GetShowLinkedSkillGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharaBase", "GetShowLinkedSkillGuide");

	Params::CharaBase_GetShowLinkedSkillGuide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.SetShowLinkedSkillGuide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetShowLinkedSkillGuide(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharaBase", "SetShowLinkedSkillGuide");

	Params::CharaBase_SetShowLinkedSkillGuide Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ALL_FireOneShot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FShot                            _shot                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::ALL_FireOneShot(class AGunBase* _gun, const struct FShot& _shot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ALL_FireOneShot");

	Params::CharaBase_ALL_FireOneShot Parms{};

	Parms._gun = _gun;
	Parms._shot = std::move(_shot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ALL_MakeDiedState
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _died                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::ALL_MakeDiedState(bool _died)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ALL_MakeDiedState");

	Params::CharaBase_ALL_MakeDiedState Parms{};

	Parms._died = _died;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.AttachMesh
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _attach                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::AttachMesh(bool _attach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "AttachMesh");

	Params::CharaBase_AttachMesh Parms{};

	Parms._attach = _attach;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.BindGun
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _for_main                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::BindGun(bool _for_main, class AGunBase* _gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "BindGun");

	Params::CharaBase_BindGun Parms{};

	Parms._for_main = _for_main;
	Parms._gun = _gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CalcDamage
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FDamageDef                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FDamageDef ACharaBase::CalcDamage(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CalcDamage");

	Params::CharaBase_CalcDamage Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanUseBooster
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanUseBooster(int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanUseBooster");

	Params::CharaBase_CanUseBooster Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.ChangeUpperState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBodyUpperState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_force                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::ChangeUpperState(EBodyUpperState _state, bool _is_force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ChangeUpperState");

	Params::CharaBase_ChangeUpperState Parms{};

	Parms._state = _state;
	Parms._is_force = _is_force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CLIENT_EndRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaAction                            _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::CLIENT_EndRequest(ECharaAction _new_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CLIENT_EndRequest");

	Params::CharaBase_CLIENT_EndRequest Parms{};

	Parms._new_action = _new_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CLIENT_Request
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ECharaAction                            _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _direction                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::CLIENT_Request(ECharaAction _new_action, const struct FVector& _direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CLIENT_Request");

	Params::CharaBase_CLIENT_Request Parms{};

	Parms._new_action = _new_action;
	Parms._direction = std::move(_direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CLIENT_StartRequest
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// ECharaAction                            _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _direction                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::CLIENT_StartRequest(ECharaAction _new_action, const struct FVector& _direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CLIENT_StartRequest");

	Params::CharaBase_CLIENT_StartRequest Parms{};

	Parms._new_action = _new_action;
	Parms._direction = std::move(_direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CLIENT_StunPostProcess
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::CLIENT_StunPostProcess(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CLIENT_StunPostProcess");

	Params::CharaBase_CLIENT_StunPostProcess Parms{};

	Parms._enable = _enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CopyOrigineMaterials
// (Final, Native, Public)

void ACharaBase::CopyOrigineMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CopyOrigineMaterials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CreateGun
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunSpec                         _spec                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _righthand                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* ACharaBase::CreateGun(const struct FGunSpec& _spec, bool _righthand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CreateGun");

	Params::CharaBase_CreateGun Parms{};

	Parms._spec = std::move(_spec);
	Parms._righthand = _righthand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_ActivateInfinitedStock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _inf_stock                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_ActivateInfinitedStock(bool _inf_stock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_ActivateInfinitedStock");

	Params::CharaBase_DEBUG_ActivateInfinitedStock Parms{};

	Parms._inf_stock = _inf_stock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_Adjust1PVMeshOffsetToCenter
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::DEBUG_Adjust1PVMeshOffsetToCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_Adjust1PVMeshOffsetToCenter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_GetDebugString
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ACharaBase::DEBUG_GetDebugString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetDebugString");

	Params::CharaBase_DEBUG_GetDebugString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_PlayHitEffects_BP
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_PlayHitEffects_BP(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_PlayHitEffects_BP");

	Params::CharaBase_DEBUG_PlayHitEffects_BP Parms{};

	Parms._hit = std::move(_hit);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_Reset
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::DEBUG_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_Set1PVIdleBlendWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _weight                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_Set1PVIdleBlendWeight(float _weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_Set1PVIdleBlendWeight");

	Params::CharaBase_DEBUG_Set1PVIdleBlendWeight Parms{};

	Parms._weight = _weight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetAutoStandUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAutoStandUp                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetAutoStandUp(EAutoStandUp _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetAutoStandUp");

	Params::CharaBase_DEBUG_SetAutoStandUp Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetCameraDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _dist                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _for_1pv                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetCameraDistance(float _dist, bool _for_1pv)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetCameraDistance");

	Params::CharaBase_DEBUG_SetCameraDistance Parms{};

	Parms._dist = _dist;
	Parms._for_1pv = _for_1pv;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetCameraOffset
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _offset                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _for_target                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _for_1pv                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetCameraOffset(const struct FVector& _offset, bool _for_target, bool _for_1pv)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetCameraOffset");

	Params::CharaBase_DEBUG_SetCameraOffset Parms{};

	Parms._offset = std::move(_offset);
	Parms._for_target = _for_target;
	Parms._for_1pv = _for_1pv;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetInvincible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetInvincible(bool _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetInvincible");

	Params::CharaBase_DEBUG_SetInvincible Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetNoCPPenalty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetNoCPPenalty(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetNoCPPenalty");

	Params::CharaBase_DEBUG_SetNoCPPenalty Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetPeriodicRepeatDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _duration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetPeriodicRepeatDuration(float _duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetPeriodicRepeatDuration");

	Params::CharaBase_DEBUG_SetPeriodicRepeatDuration Parms{};

	Parms._duration = _duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetPeriodicRepeatType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPeriodicRepeatType                     _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetPeriodicRepeatType(EPeriodicRepeatType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetPeriodicRepeatType");

	Params::CharaBase_DEBUG_SetPeriodicRepeatType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetRepeatAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaAction                            _action_slot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _interval                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetRepeatAction(ECharaAction _action_slot, float _interval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetRepeatAction");

	Params::CharaBase_DEBUG_SetRepeatAction Parms{};

	Parms._action_slot = _action_slot;
	Parms._interval = _interval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetShowCharaState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetShowCharaState(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetShowCharaState");

	Params::CharaBase_DEBUG_SetShowCharaState Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetShowCollisionTest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetShowCollisionTest(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetShowCollisionTest");

	Params::CharaBase_DEBUG_SetShowCollisionTest Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetShowDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDebug_DamageViewerType                 _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetShowDamage(bool _show, EDebug_DamageViewerType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetShowDamage");

	Params::CharaBase_DEBUG_SetShowDamage Parms{};

	Parms._show = _show;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetShowPlayingHitFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetShowPlayingHitFX(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetShowPlayingHitFX");

	Params::CharaBase_DEBUG_SetShowPlayingHitFX Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetShowState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetShowState(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetShowState");

	Params::CharaBase_DEBUG_SetShowState Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetStaticCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetStaticCamera(bool _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetStaticCamera");

	Params::CharaBase_DEBUG_SetStaticCamera Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DEBUG_SetZoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_zoom                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DEBUG_SetZoom(bool _is_zoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_SetZoom");

	Params::CharaBase_DEBUG_SetZoom Parms{};

	Parms._is_zoom = _is_zoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Destroy_PiercingProp
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::Destroy_PiercingProp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Destroy_PiercingProp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DriveDeviation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::DriveDeviation(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DriveDeviation");

	Params::CharaBase_DriveDeviation Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.DumpState
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::DumpState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DumpState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.EndCameraDirecting
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::EndCameraDirecting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "EndCameraDirecting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.EndSideView
// (Final, Native, Protected, BlueprintCallable)

void ACharaBase::EndSideView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "EndSideView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Stigma.CharaBase.EventLowerAction__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBodyLowerAction                        _data                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::EventLowerAction__DelegateSignature(EBodyLowerAction _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "EventLowerAction__DelegateSignature");

	Params::CharaBase_EventLowerAction__DelegateSignature Parms{};

	Parms._data = _data;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction Stigma.CharaBase.EventLowerState__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBodyLowerState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::EventLowerState__DelegateSignature(EBodyLowerState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "EventLowerState__DelegateSignature");

	Params::CharaBase_EventLowerState__DelegateSignature Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction Stigma.CharaBase.EventUpperState__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EBodyUpperState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::EventUpperState__DelegateSignature(EBodyUpperState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "EventUpperState__DelegateSignature");

	Params::CharaBase_EventUpperState__DelegateSignature Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.CharaBase.GetCurrentLookAtTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ACharaBase::GetCurrentLookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCurrentLookAtTarget");

	Params::CharaBase_GetCurrentLookAtTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetDeviationAngle
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetDeviationAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetDeviationAngle");

	Params::CharaBase_GetDeviationAngle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetInteractableActorByBounding
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   _out_actors                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::GetInteractableActorByBounding(TArray<class AActor*>* _out_actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetInteractableActorByBounding");

	Params::CharaBase_GetInteractableActorByBounding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_actors != nullptr)
		*_out_actors = std::move(Parms._out_actors);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetKillReasonToAction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FActionGraphEntry                _entry                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::GetKillReasonToAction(const struct FActionGraphOperatorID& _op_id, struct FActionGraphEntry* _entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetKillReasonToAction");

	Params::CharaBase_GetKillReasonToAction Parms{};

	Parms._op_id = std::move(_op_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_entry != nullptr)
		*_entry = std::move(Parms._entry);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AMatchServicedPlayerState*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMatchServicedPlayerState* ACharaBase::GetOwningPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetOwningPlayerState");

	Params::CharaBase_GetOwningPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetTotalDeviation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetTotalDeviation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetTotalDeviation");

	Params::CharaBase_GetTotalDeviation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetUIValues
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _deviation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _hp                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _max_hp                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _out_armor                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _recovery_hp                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::GetUIValues(float* _deviation, float* _hp, float* _max_hp, float* _out_armor, float* _recovery_hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetUIValues");

	Params::CharaBase_GetUIValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_deviation != nullptr)
		*_deviation = Parms._deviation;

	if (_hp != nullptr)
		*_hp = Parms._hp;

	if (_max_hp != nullptr)
		*_max_hp = Parms._max_hp;

	if (_out_armor != nullptr)
		*_out_armor = Parms._out_armor;

	if (_recovery_hp != nullptr)
		*_recovery_hp = Parms._recovery_hp;
}


// Function Stigma.CharaBase.INPUT_EndFire
// (Final, Native, Protected, BlueprintCallable)

void ACharaBase::INPUT_EndFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "INPUT_EndFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.INPUT_HandleMoveForward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::INPUT_HandleMoveForward(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "INPUT_HandleMoveForward");

	Params::CharaBase_INPUT_HandleMoveForward Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.INPUT_HandleMoveRight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::INPUT_HandleMoveRight(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "INPUT_HandleMoveRight");

	Params::CharaBase_INPUT_HandleMoveRight Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.INPUT_StartFire
// (Final, Native, Protected, BlueprintCallable)

void ACharaBase::INPUT_StartFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "INPUT_StartFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.IsExpired
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Param_Name                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Out_remain_time                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Out_duration                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsExpired(class FName Param_Name, float* Out_remain_time, float* Out_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsExpired");

	Params::CharaBase_IsExpired Parms{};

	Parms.Param_Name = Param_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_remain_time != nullptr)
		*Out_remain_time = Parms.Out_remain_time;

	if (Out_duration != nullptr)
		*Out_duration = Parms.Out_duration;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsExpiredBoosterCooltime
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _booster_zidx                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Out_remain_time                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Out_duration                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsExpiredBoosterCooltime(int32 _booster_zidx, float* Out_remain_time, float* Out_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsExpiredBoosterCooltime");

	Params::CharaBase_IsExpiredBoosterCooltime Parms{};

	Parms._booster_zidx = _booster_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_remain_time != nullptr)
		*Out_remain_time = Parms.Out_remain_time;

	if (Out_duration != nullptr)
		*Out_duration = Parms.Out_duration;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnALL_BreakArmor
// (Native, Event, Public, BlueprintEvent)

void ACharaBase::OnALL_BreakArmor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnALL_BreakArmor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnALL_Damaged
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDamagedData                     _damaged_data                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnALL_Damaged(const struct FDamagedData& _damaged_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnALL_Damaged");

	Params::CharaBase_OnALL_Damaged Parms{};

	Parms._damaged_data = std::move(_damaged_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnALL_Hit
// (Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnALL_Hit(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnALL_Hit");

	Params::CharaBase_OnALL_Hit Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnAnimNotify_LowerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBodyLowerState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnAnimNotify_LowerState(EBodyLowerState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnAnimNotify_LowerState");

	Params::CharaBase_OnAnimNotify_LowerState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnAnimNotify_MeleeAttack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    _begin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMeleeData                       _melee_data                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::OnAnimNotify_MeleeAttack(bool _begin, const struct FMeleeData& _melee_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnAnimNotify_MeleeAttack");

	Params::CharaBase_OnAnimNotify_MeleeAttack Parms{};

	Parms._begin = _begin;
	Parms._melee_data = std::move(_melee_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnCapsuleHit
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ACharaBase::OnCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnCapsuleHit");

	Params::CharaBase_OnCapsuleHit Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnChange_LowerAction
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBodyLowerAction                        _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnChange_LowerAction(EBodyLowerAction _new_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnChange_LowerAction");

	Params::CharaBase_OnChange_LowerAction Parms{};

	Parms._new_action = _new_action;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnChange_LowerState
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBodyLowerState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnChange_LowerState(EBodyLowerState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnChange_LowerState");

	Params::CharaBase_OnChange_LowerState Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnChange_UpperState
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBodyUpperState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnChange_UpperState(EBodyUpperState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnChange_UpperState");

	Params::CharaBase_OnChange_UpperState Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnChanged_NetID
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FNetID                           _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnChanged_NetID(const struct FNetID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnChanged_NetID");

	Params::CharaBase_OnChanged_NetID Parms{};

	Parms._id = std::move(_id);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnCLIENT_Stun
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _stunned                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnCLIENT_Stun(bool _stunned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnCLIENT_Stun");

	Params::CharaBase_OnCLIENT_Stun Parms{};

	Parms._stunned = _stunned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnEnabledUIMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnEnabledUIMode(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnEnabledUIMode");

	Params::CharaBase_OnEnabledUIMode Parms{};

	Parms._enable = _enable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnHitImpact
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::OnHitImpact(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnHitImpact");

	Params::CharaBase_OnHitImpact Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnLoadSettings
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnLoadSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnLoadSettings");

	Params::CharaBase_OnLoadSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnRep_Abnormals
// (Final, Native, Protected)

void ACharaBase::OnRep_Abnormals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_Abnormals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_Armor
// (Final, Native, Public)
// Parameters:
// float                                   _old_armor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_Armor(float _old_armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_Armor");

	Params::CharaBase_OnRep_Armor Parms{};

	Parms._old_armor = _old_armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_CurrentRecovery
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FHPRecovery                      _old_recovery                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_CurrentRecovery(const struct FHPRecovery& _old_recovery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_CurrentRecovery");

	Params::CharaBase_OnRep_CurrentRecovery Parms{};

	Parms._old_recovery = std::move(_old_recovery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_DEBUG_Panel_ActiveIndex
// (Final, Native, Protected)
// Parameters:
// int32                                   _old_index                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_DEBUG_Panel_ActiveIndex(int32 _old_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_DEBUG_Panel_ActiveIndex");

	Params::CharaBase_OnRep_DEBUG_Panel_ActiveIndex Parms{};

	Parms._old_index = _old_index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_DelayDuration
// (Final, Native, Protected)

void ACharaBase::OnRep_DelayDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_DelayDuration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_Gears
// (Final, Native, Public)

void ACharaBase::OnRep_Gears()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_Gears");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_HoldingProp
// (Final, Native, Protected)
// Parameters:
// class AThrowBase*                       _old_prop                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_HoldingProp(class AThrowBase* _old_prop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_HoldingProp");

	Params::CharaBase_OnRep_HoldingProp Parms{};

	Parms._old_prop = _old_prop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_InvincibleMode
// (Final, Native, Protected)

void ACharaBase::OnRep_InvincibleMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_InvincibleMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_IsAntidoteState
// (Final, Native, Protected)
// Parameters:
// bool                                    _old_value                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_IsAntidoteState(bool _old_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_IsAntidoteState");

	Params::CharaBase_OnRep_IsAntidoteState Parms{};

	Parms._old_value = _old_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_IsBoneBreaked
// (Final, Native, Protected)
// Parameters:
// bool                                    _old_value                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_IsBoneBreaked(bool _old_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_IsBoneBreaked");

	Params::CharaBase_OnRep_IsBoneBreaked Parms{};

	Parms._old_value = _old_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_IsTurnoffSound
// (Final, Native, Protected)
// Parameters:
// bool                                    _old_value                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_IsTurnoffSound(bool _old_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_IsTurnoffSound");

	Params::CharaBase_OnRep_IsTurnoffSound Parms{};

	Parms._old_value = _old_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_LootedGun
// (Final, Native, Protected)
// Parameters:
// class AGunBase*                         _old_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_LootedGun(class AGunBase* _old_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_LootedGun");

	Params::CharaBase_OnRep_LootedGun Parms{};

	Parms._old_gun = _old_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_LowerAction
// (Final, Native, Protected)
// Parameters:
// EBodyLowerAction                        _old_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_LowerAction(EBodyLowerAction _old_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_LowerAction");

	Params::CharaBase_OnRep_LowerAction Parms{};

	Parms._old_action = _old_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_LowerState
// (Final, Native, Protected)
// Parameters:
// EBodyLowerState                         _old_state                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_LowerState(EBodyLowerState _old_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_LowerState");

	Params::CharaBase_OnRep_LowerState Parms{};

	Parms._old_state = _old_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_NetID
// (Final, Native, Protected)

void ACharaBase::OnRep_NetID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_NetID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_OwnGun_Left
// (Final, Native, Protected)
// Parameters:
// class AGunBase*                         _old_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_OwnGun_Left(class AGunBase* _old_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_OwnGun_Left");

	Params::CharaBase_OnRep_OwnGun_Left Parms{};

	Parms._old_gun = _old_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_OwnGun_Right
// (Final, Native, Protected)
// Parameters:
// class AGunBase*                         _old_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_OwnGun_Right(class AGunBase* _old_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_OwnGun_Right");

	Params::CharaBase_OnRep_OwnGun_Right Parms{};

	Parms._old_gun = _old_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_Penalty_LegInjury_Parts
// (Final, Native, Protected)

void ACharaBase::OnRep_Penalty_LegInjury_Parts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_Penalty_LegInjury_Parts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_PiercingProp
// (Final, Native, Protected)
// Parameters:
// class APiercingObjectBase*              _old_prop                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_PiercingProp(class APiercingObjectBase* _old_prop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_PiercingProp");

	Params::CharaBase_OnRep_PiercingProp Parms{};

	Parms._old_prop = _old_prop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_ScopeMode
// (Final, Native, Public)

void ACharaBase::OnRep_ScopeMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_ScopeMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_StunTypeParam
// (Final, Native, Protected)

void ACharaBase::OnRep_StunTypeParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_StunTypeParam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnRep_UpperState
// (Final, Native, Protected)
// Parameters:
// EBodyUpperState                         _old_state                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::OnRep_UpperState(EBodyUpperState _old_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnRep_UpperState");

	Params::CharaBase_OnRep_UpperState Parms{};

	Parms._old_state = _old_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.OnSERVER_Died
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitData                         _last_hit_data                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnSERVER_Died(const struct FHitData& _last_hit_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnSERVER_Died");

	Params::CharaBase_OnSERVER_Died Parms{};

	Parms._last_hit_data = std::move(_last_hit_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnTick
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnTick(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnTick");

	Params::CharaBase_OnTick Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.OnUpdateMoveSpeed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::OnUpdateMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "OnUpdateMoveSpeed");

	Params::CharaBase_OnUpdateMoveSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.PlayFacialMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaFacialType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::PlayFacialMotion(ECharaFacialType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "PlayFacialMotion");

	Params::CharaBase_PlayFacialMotion Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.PlayHitEffects
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::PlayHitEffects(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "PlayHitEffects");

	Params::CharaBase_PlayHitEffects Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.RequestStandUpDirection
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _forward                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _right                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RequestStandUpDirection(float _forward, float _right)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RequestStandUpDirection");

	Params::CharaBase_RequestStandUpDirection Parms{};

	Parms._forward = _forward;
	Parms._right = _right;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ResetCameraWalk
// (Final, Native, Protected, BlueprintCallable)

void ACharaBase::ResetCameraWalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ResetCameraWalk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ResetCurrentLookAtTarget
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::ResetCurrentLookAtTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ResetCurrentLookAtTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ResetForRespawn
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::ResetForRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ResetForRespawn");

	Params::CharaBase_ResetForRespawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.ResetScanWorld_PostProcess
// (Final, Native, Protected, BlueprintCallable)

void ACharaBase::ResetScanWorld_PostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ResetScanWorld_PostProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ResetStunType
// (Final, Native, Protected)

void ACharaBase::ResetStunType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ResetStunType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ResetZoom
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::ResetZoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ResetZoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RestoreFacialMotion
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::RestoreFacialMotion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RestoreFacialMotion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_ALL_Damaged
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)
// Parameters:
// struct FNetDamagedData                  _data                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::RPC_ALL_Damaged(const struct FNetDamagedData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_ALL_Damaged");

	Params::CharaBase_RPC_ALL_Damaged Parms{};

	Parms._data = std::move(_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_ALL_FinishGame
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void ACharaBase::RPC_ALL_FinishGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_ALL_FinishGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_ALL_PiercingShot_AG
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform                       _start_point                                           (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _end_point                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APiercingObjectBase*              _obj                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_ALL_PiercingShot_AG(const struct FActionGraphOperatorID& _op_id, const struct FTransform& _start_point, const struct FVector& _end_point, class APiercingObjectBase* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_ALL_PiercingShot_AG");

	Params::CharaBase_RPC_ALL_PiercingShot_AG Parms{};

	Parms._op_id = std::move(_op_id);
	Parms._start_point = std::move(_start_point);
	Parms._end_point = std::move(_end_point);
	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_ALL_Respawn
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// bool                                    _for_round_reset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _location                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         _rotation                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMoveSyncID                      _sync_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::RPC_ALL_Respawn(bool _for_round_reset, const struct FVector& _location, const struct FRotator& _rotation, const struct FMoveSyncID& _sync_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_ALL_Respawn");

	Params::CharaBase_RPC_ALL_Respawn Parms{};

	Parms._for_round_reset = _for_round_reset;
	Parms._location = std::move(_location);
	Parms._rotation = std::move(_rotation);
	Parms._sync_id = std::move(_sync_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_ALL_ThrowObject_AG
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               _start_points                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  _end_points                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AThrowBase*                       _throw_object                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_ALL_ThrowObject_AG(const struct FActionGraphOperatorID& _op_id, const TArray<struct FTransform>& _start_points, const TArray<struct FVector>& _end_points, class AThrowBase* _throw_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_ALL_ThrowObject_AG");

	Params::CharaBase_RPC_ALL_ThrowObject_AG Parms{};

	Parms._op_id = std::move(_op_id);
	Parms._start_points = std::move(_start_points);
	Parms._end_points = std::move(_end_points);
	Parms._throw_object = _throw_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_ALL_UseBooster
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Booster                  _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_ALL_UseBooster(const struct FItemID_Booster& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_ALL_UseBooster");

	Params::CharaBase_RPC_ALL_UseBooster Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_CLIENT_CancelInteract
// (Net, NetReliable, Native, Event, Public, NetClient)

void ACharaBase::RPC_CLIENT_CancelInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_CLIENT_CancelInteract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_CLIENT_UpperState_ACK
// (Net, NetReliable, Native, Event, Protected, NetClient, BlueprintCallable)
// Parameters:
// EBodyUpperState                         _prev                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBodyUpperState                         _curr                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_CLIENT_UpperState_ACK(EBodyUpperState _prev, EBodyUpperState _curr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_CLIENT_UpperState_ACK");

	Params::CharaBase_RPC_CLIENT_UpperState_ACK Parms{};

	Parms._prev = _prev;
	Parms._curr = _curr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_AddWelcomeMatchFunctions
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ACharaBase::RPC_SERVER_DEBUG_AddWelcomeMatchFunctions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_AddWelcomeMatchFunctions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_ChangeGun
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_main_gun                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _setup_own_gun                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_DEBUG_ChangeGun(EGunType _gun_type, bool _is_main_gun, bool _setup_own_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_ChangeGun");

	Params::CharaBase_RPC_SERVER_DEBUG_ChangeGun Parms{};

	Parms._gun_type = _gun_type;
	Parms._is_main_gun = _is_main_gun;
	Parms._setup_own_gun = _setup_own_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_HoldProp
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TSubclassOf<class AThrowBase>           _prop_type                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_DEBUG_HoldProp(TSubclassOf<class AThrowBase> _prop_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_HoldProp");

	Params::CharaBase_RPC_SERVER_DEBUG_HoldProp Parms{};

	Parms._prop_type = _prop_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_LowerState
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable)
// Parameters:
// EBodyLowerState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_DEBUG_LowerState(EBodyLowerState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_LowerState");

	Params::CharaBase_RPC_SERVER_DEBUG_LowerState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_Reset
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void ACharaBase::RPC_SERVER_DEBUG_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_SetCharacterSetting
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_DEBUG_SetCharacterSetting(const struct FItemID& _item_id, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_SetCharacterSetting");

	Params::CharaBase_RPC_SERVER_DEBUG_SetCharacterSetting Parms{};

	Parms._item_id = std::move(_item_id);
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_SetPassiveSkillLevel
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FPassiveSkillID                  _skill_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_DEBUG_SetPassiveSkillLevel(const struct FPassiveSkillID& _skill_id, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_SetPassiveSkillLevel");

	Params::CharaBase_RPC_SERVER_DEBUG_SetPassiveSkillLevel Parms{};

	Parms._skill_id = std::move(_skill_id);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_DEBUG_SpawnCorpse
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ACharaBase::RPC_SERVER_DEBUG_SpawnCorpse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_DEBUG_SpawnCorpse");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_P2P_Hit_AG
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FHitData                         _data                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_P2P_Hit_AG(const struct FHitData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_P2P_Hit_AG");

	Params::CharaBase_RPC_SERVER_P2P_Hit_AG Parms{};

	Parms._data = std::move(_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_PiercingShot_AG
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform                       _start_point                                           (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _end_point                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_PiercingShot_AG(const struct FActionGraphOperatorID& _op_id, const struct FTransform& _start_point, const struct FVector& _end_point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_PiercingShot_AG");

	Params::CharaBase_RPC_SERVER_PiercingShot_AG Parms{};

	Parms._op_id = std::move(_op_id);
	Parms._start_point = std::move(_start_point);
	Parms._end_point = std::move(_end_point);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_RequestPurchaseItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AProp_Store*                      Prop_Store                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _item_idx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_RequestPurchaseItem(class AProp_Store* Prop_Store, int32 _item_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_RequestPurchaseItem");

	Params::CharaBase_RPC_SERVER_RequestPurchaseItem Parms{};

	Parms.Prop_Store = Prop_Store;
	Parms._item_idx = _item_idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_ThrowObject_AG
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               _start_points                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  _end_points                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_ThrowObject_AG(const struct FActionGraphOperatorID& _op_id, const TArray<struct FTransform>& _start_points, const TArray<struct FVector>& _end_points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_ThrowObject_AG");

	Params::CharaBase_RPC_SERVER_ThrowObject_AG Parms{};

	Parms._op_id = std::move(_op_id);
	Parms._start_points = std::move(_start_points);
	Parms._end_points = std::move(_end_points);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_ToggleLaserSight
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable)

void ACharaBase::RPC_SERVER_ToggleLaserSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_ToggleLaserSight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_UpperState
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// EBodyUpperState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_UpperState(EBodyUpperState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_UpperState");

	Params::CharaBase_RPC_SERVER_UpperState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.RPC_SERVER_UseBooster
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::RPC_SERVER_UseBooster(int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "RPC_SERVER_UseBooster");

	Params::CharaBase_RPC_SERVER_UseBooster Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SaveConfig
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::SaveConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SaveConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ScanObstacle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EObstacleScanResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EObstacleScanResult ACharaBase::ScanObstacle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ScanObstacle");

	Params::CharaBase_ScanObstacle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.SERVER_AddAbnormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAbnormal                               _abnormal_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_AddAbnormal(EAbnormal _abnormal_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_AddAbnormal");

	Params::CharaBase_SERVER_AddAbnormal Parms{};

	Parms._abnormal_type = _abnormal_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_AssignTeamForAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_AssignTeamForAI(ETeams _Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_AssignTeamForAI");

	Params::CharaBase_SERVER_AssignTeamForAI Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_LoadMagazine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunnerJobReason                        _reason                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Is_main_hand_hold_gun                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::SERVER_LoadMagazine(EGunnerJobReason _reason, bool Is_main_hand_hold_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_LoadMagazine");

	Params::CharaBase_SERVER_LoadMagazine Parms{};

	Parms._reason = _reason;
	Parms.Is_main_hand_hold_gun = Is_main_hand_hold_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.SERVER_RemoveAbnormal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAbnormal                               _abnormal_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_RemoveAbnormal(EAbnormal _abnormal_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_RemoveAbnormal");

	Params::CharaBase_SERVER_RemoveAbnormal Parms{};

	Parms._abnormal_type = _abnormal_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_SetHoldingProp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AThrowBase*                       _prop                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectState                            _obj_state_for_old                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_SetHoldingProp(class AThrowBase* _prop, EObjectState _obj_state_for_old)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_SetHoldingProp");

	Params::CharaBase_SERVER_SetHoldingProp Parms{};

	Parms._prop = _prop;
	Parms._obj_state_for_old = _obj_state_for_old;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_SetIsTurnoffSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _turn_off                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_SetIsTurnoffSound(bool _turn_off)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_SetIsTurnoffSound");

	Params::CharaBase_SERVER_SetIsTurnoffSound Parms{};

	Parms._turn_off = _turn_off;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_SetLootedGun
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_SetLootedGun(class AGunBase* _gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_SetLootedGun");

	Params::CharaBase_SERVER_SetLootedGun Parms{};

	Parms._gun = _gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_SetNetID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FNetID                           _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_SetNetID(const struct FNetID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_SetNetID");

	Params::CharaBase_SERVER_SetNetID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_SetPiercingProp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APiercingObjectBase*              _prop                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EObjectState                            _obj_state_for_old                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_SetPiercingProp(class APiercingObjectBase* _prop, EObjectState _obj_state_for_old)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_SetPiercingProp");

	Params::CharaBase_SERVER_SetPiercingProp Parms{};

	Parms._prop = _prop;
	Parms._obj_state_for_old = _obj_state_for_old;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_StartDisarmed
// (Final, Native, Public, BlueprintCallable)

void ACharaBase::SERVER_StartDisarmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_StartDisarmed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SERVER_StartStun
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FStunTypeParam                   _param                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::SERVER_StartStun(struct FStunTypeParam* _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SERVER_StartStun");

	Params::CharaBase_SERVER_StartStun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_param != nullptr)
		*_param = std::move(Parms._param);
}


// Function Stigma.CharaBase.SetCameraMotionBlur
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetCameraMotionBlur(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetCameraMotionBlur");

	Params::CharaBase_SetCameraMotionBlur Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetControlSpeedRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _move_rate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _rot_yaw_rate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetControlSpeedRate(float _move_rate, float _rot_yaw_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetControlSpeedRate");

	Params::CharaBase_SetControlSpeedRate Parms{};

	Parms._move_rate = _move_rate;
	Parms._rot_yaw_rate = _rot_yaw_rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetControlYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _yaw                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetControlYaw(float _yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetControlYaw");

	Params::CharaBase_SetControlYaw Parms{};

	Parms._yaw = _yaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetForcedDeviation
// (Final, Native, Protected, BlueprintCallable)

void ACharaBase::SetForcedDeviation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetForcedDeviation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetGunSpec
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunSpec                         _gun_spec                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Should_make_gun                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetGunSpec(const struct FGunSpec& _gun_spec, bool Should_make_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetGunSpec");

	Params::CharaBase_SetGunSpec Parms{};

	Parms._gun_spec = std::move(_gun_spec);
	Parms.Should_make_gun = Should_make_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetInputDirection_Forward
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _val                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetInputDirection_Forward(float _val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetInputDirection_Forward");

	Params::CharaBase_SetInputDirection_Forward Parms{};

	Parms._val = _val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetInputDirection_Right
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _val                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetInputDirection_Right(float _val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetInputDirection_Right");

	Params::CharaBase_SetInputDirection_Right Parms{};

	Parms._val = _val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetMeshMaterials
// (Final, Native, Public)
// Parameters:
// class UMeshComponent*                   Meshcom                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               _materialinterface                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               _materialinterface_trans                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _copymaterial                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Materialindex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOriginMaterials                 Timedmaterials                                         (Parm, NativeAccessSpecifierPublic)
// bool                                    _onematerialonly                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOriginMaterials                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOriginMaterials ACharaBase::SetMeshMaterials(class UMeshComponent* Meshcom, class UMaterialInterface* _materialinterface, class UMaterialInterface* _materialinterface_trans, bool _copymaterial, int32 Materialindex, const struct FOriginMaterials& Timedmaterials, bool _onematerialonly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetMeshMaterials");

	Params::CharaBase_SetMeshMaterials Parms{};

	Parms.Meshcom = Meshcom;
	Parms._materialinterface = _materialinterface;
	Parms._materialinterface_trans = _materialinterface_trans;
	Parms._copymaterial = _copymaterial;
	Parms.Materialindex = Materialindex;
	Parms.Timedmaterials = std::move(Timedmaterials);
	Parms._onematerialonly = _onematerialonly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.SetOrigineMaterials
// (Final, Native, Public)

void ACharaBase::SetOrigineMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetOrigineMaterials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetPhysicalState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBodyPhysicalState                      _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetPhysicalState(EBodyPhysicalState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetPhysicalState");

	Params::CharaBase_SetPhysicalState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetScanWorld_PostProcess
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _blendweight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _radius                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetScanWorld_PostProcess(float _blendweight, float _radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetScanWorld_PostProcess");

	Params::CharaBase_SetScanWorld_PostProcess Parms{};

	Parms._blendweight = _blendweight;
	Parms._radius = _radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_Armor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _new_armor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_Armor(float _new_armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_Armor");

	Params::CharaBase_Setter_Armor Parms{};

	Parms._new_armor = _new_armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_DelayDuration
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _duration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_DelayDuration(float _duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_DelayDuration");

	Params::CharaBase_Setter_DelayDuration Parms{};

	Parms._duration = _duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_Gears
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGear>                    _new_gears                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ACharaBase::Setter_Gears(const TArray<struct FGear>& _new_gears)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_Gears");

	Params::CharaBase_Setter_Gears Parms{};

	Parms._new_gears = std::move(_new_gears);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_HoldingProp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AThrowBase*                       _new_prop                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_HoldingProp(class AThrowBase* _new_prop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_HoldingProp");

	Params::CharaBase_Setter_HoldingProp Parms{};

	Parms._new_prop = _new_prop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_InvincibleMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EInvincibleMode                         _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_InvincibleMode(EInvincibleMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_InvincibleMode");

	Params::CharaBase_Setter_InvincibleMode Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_IsAntidoteState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_antidote_state                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_IsAntidoteState(bool _is_antidote_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_IsAntidoteState");

	Params::CharaBase_Setter_IsAntidoteState Parms{};

	Parms._is_antidote_state = _is_antidote_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_IsBoneBreaked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_bone_breaked                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_IsBoneBreaked(bool _is_bone_breaked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_IsBoneBreaked");

	Params::CharaBase_Setter_IsBoneBreaked Parms{};

	Parms._is_bone_breaked = _is_bone_breaked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_IsTurnoffSound
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_turn_off                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_IsTurnoffSound(bool _is_turn_off)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_IsTurnoffSound");

	Params::CharaBase_Setter_IsTurnoffSound Parms{};

	Parms._is_turn_off = _is_turn_off;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_LootedGun
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AGunBase*                         _new_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_LootedGun(class AGunBase* _new_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_LootedGun");

	Params::CharaBase_Setter_LootedGun Parms{};

	Parms._new_gun = _new_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_LowerAction
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBodyLowerAction                        _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_LowerAction(EBodyLowerAction _new_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_LowerAction");

	Params::CharaBase_Setter_LowerAction Parms{};

	Parms._new_action = _new_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_LowerState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBodyLowerState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_LowerState(EBodyLowerState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_LowerState");

	Params::CharaBase_Setter_LowerState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_OwnGun_Left
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AGunBase*                         _new_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_OwnGun_Left(class AGunBase* _new_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_OwnGun_Left");

	Params::CharaBase_Setter_OwnGun_Left Parms{};

	Parms._new_gun = _new_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_OwnGun_Right
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AGunBase*                         _new_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_OwnGun_Right(class AGunBase* _new_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_OwnGun_Right");

	Params::CharaBase_Setter_OwnGun_Right Parms{};

	Parms._new_gun = _new_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_Penalty_LegInjury_Parts
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBodyParts                              _parts                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_Penalty_LegInjury_Parts(EBodyParts _parts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_Penalty_LegInjury_Parts");

	Params::CharaBase_Setter_Penalty_LegInjury_Parts Parms{};

	Parms._parts = _parts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_PiercingProp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class APiercingObjectBase*              _new_prop                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_PiercingProp(class APiercingObjectBase* _new_prop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_PiercingProp");

	Params::CharaBase_Setter_PiercingProp Parms{};

	Parms._new_prop = _new_prop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_ScopeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _scope_mode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_ScopeMode(bool _scope_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_ScopeMode");

	Params::CharaBase_Setter_ScopeMode Parms{};

	Parms._scope_mode = _scope_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Setter_StunTypeParam
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FStunTypeParam                   _param                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::Setter_StunTypeParam(struct FStunTypeParam* _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_StunTypeParam");

	Params::CharaBase_Setter_StunTypeParam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_param != nullptr)
		*_param = std::move(Parms._param);
}


// Function Stigma.CharaBase.Setter_UpperState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBodyUpperState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Setter_UpperState(EBodyUpperState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Setter_UpperState");

	Params::CharaBase_Setter_UpperState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetTimedMaterial
// (Final, Native, Public)
// Parameters:
// class UMaterialInterface*               _materialinterface                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _copymaterial                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _onematerialonly                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _onematerialindex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               _materialinterface_trans                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bodyonly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetTimedMaterial(class UMaterialInterface* _materialinterface, bool _copymaterial, bool _onematerialonly, int32 _onematerialindex, class UMaterialInterface* _materialinterface_trans, bool _bodyonly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetTimedMaterial");

	Params::CharaBase_SetTimedMaterial Parms{};

	Parms._materialinterface = _materialinterface;
	Parms._copymaterial = _copymaterial;
	Parms._onematerialonly = _onematerialonly;
	Parms._onematerialindex = _onematerialindex;
	Parms._materialinterface_trans = _materialinterface_trans;
	Parms._bodyonly = _bodyonly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetTimedMaterialExcludeMaterials
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<int32>                           Excludematerials                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> ACharaBase::SetTimedMaterialExcludeMaterials(TArray<int32>* Excludematerials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetTimedMaterialExcludeMaterials");

	Params::CharaBase_SetTimedMaterialExcludeMaterials Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Excludematerials != nullptr)
		*Excludematerials = std::move(Parms.Excludematerials);

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.SetUIMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetUIMode(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetUIMode");

	Params::CharaBase_SetUIMode Parms{};

	Parms._enable = _enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetupCameraConfig
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FConfig_Camera                   _config_camera                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _use_zoom_in                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::SetupCameraConfig(const struct FConfig_Camera& _config_camera, bool _use_zoom_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetupCameraConfig");

	Params::CharaBase_SetupCameraConfig Parms{};

	Parms._config_camera = std::move(_config_camera);
	Parms._use_zoom_in = _use_zoom_in;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.SetupCollisionForMate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _mate                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetupCollisionForMate(class ACharaBase* _mate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetupCollisionForMate");

	Params::CharaBase_SetupCollisionForMate Parms{};

	Parms._mate = _mate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SetZoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_zoom_in                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _force_zoom                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SetZoom(bool _is_zoom_in, bool _force_zoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SetZoom");

	Params::CharaBase_SetZoom Parms{};

	Parms._is_zoom_in = _is_zoom_in;
	Parms._force_zoom = _force_zoom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.StartActionGraph
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// ECharaAction                            _idx_ag                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vector                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::StartActionGraph(ECharaAction _idx_ag, const struct FVector& _vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "StartActionGraph");

	Params::CharaBase_StartActionGraph Parms{};

	Parms._idx_ag = _idx_ag;
	Parms._vector = std::move(_vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.StartCameraDirecting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCameraDirectingParams           _params                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ACharaBase::StartCameraDirecting(const struct FCameraDirectingParams& _params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "StartCameraDirecting");

	Params::CharaBase_StartCameraDirecting Parms{};

	Parms._params = std::move(_params);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.StartCooltime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Param_Name                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::StartCooltime(class FName Param_Name, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "StartCooltime");

	Params::CharaBase_StartCooltime Parms{};

	Parms.Param_Name = Param_Name;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.StartSideView
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESideViewSide                           _side                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::StartSideView(ESideViewSide _side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "StartSideView");

	Params::CharaBase_StartSideView Parms{};

	Parms._side = _side;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Subscribe_OnPlayerStateChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Subscribe_OnPlayerStateChanged(const TDelegate<void(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Subscribe_OnPlayerStateChanged");

	Params::CharaBase_Subscribe_OnPlayerStateChanged Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.SyncRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   _angle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _dir                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _ctx                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::SyncRotation(float _angle, const struct FVector& _dir, const class FString& _ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "SyncRotation");

	Params::CharaBase_SyncRotation Parms{};

	Parms._angle = _angle;
	Parms._dir = std::move(_dir);
	Parms._ctx = std::move(_ctx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.TryToInteract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _press_key                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::TryToInteract(bool _press_key, class AActor* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "TryToInteract");

	Params::CharaBase_TryToInteract Parms{};

	Parms._press_key = _press_key;
	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.Unsubscribe_OnPlayerStateChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::Unsubscribe_OnPlayerStateChanged(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Unsubscribe_OnPlayerStateChanged");

	Params::CharaBase_Unsubscribe_OnPlayerStateChanged Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.UpdateOutlineColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _force_update                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::UpdateOutlineColor(bool _force_update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "UpdateOutlineColor");

	Params::CharaBase_UpdateOutlineColor Parms{};

	Parms._force_update = _force_update;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.ValidateSettings
// (Native, Protected, BlueprintCallable)

void ACharaBase::ValidateSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "ValidateSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CharaBase.CalcBodyDeviation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBodyDeviation                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBodyDeviation ACharaBase::CalcBodyDeviation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CalcBodyDeviation");

	Params::CharaBase_CalcBodyDeviation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanChangeLowerAction
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBodyLowerAction                        _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanChangeLowerAction(EBodyLowerAction _new_action) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanChangeLowerAction");

	Params::CharaBase_CanChangeLowerAction Parms{};

	Parms._new_action = _new_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanChangeLowerState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBodyLowerState                         _new_state                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanChangeLowerState(EBodyLowerState _new_state) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanChangeLowerState");

	Params::CharaBase_CanChangeLowerState Parms{};

	Parms._new_state = _new_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanChangeUpperState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBodyUpperState                         _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanChangeUpperState(EBodyUpperState _state) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanChangeUpperState");

	Params::CharaBase_CanChangeUpperState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanInteract
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanInteract() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanInteract");

	Params::CharaBase_CanInteract Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanStandUp
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanStandUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanStandUp");

	Params::CharaBase_CanStandUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.CanTurn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::CanTurn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "CanTurn");

	Params::CharaBase_CanTurn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetAutoStandUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAutoStandUp                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAutoStandUp ACharaBase::DEBUG_GetAutoStandUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetAutoStandUp");

	Params::CharaBase_DEBUG_GetAutoStandUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetCameraDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _for_1pv                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::DEBUG_GetCameraDistance(bool _for_1pv) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetCameraDistance");

	Params::CharaBase_DEBUG_GetCameraDistance Parms{};

	Parms._for_1pv = _for_1pv;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetCameraOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _for_target                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _for_1pv                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACharaBase::DEBUG_GetCameraOffset(bool _for_target, bool _for_1pv) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetCameraOffset");

	Params::CharaBase_DEBUG_GetCameraOffset Parms{};

	Parms._for_target = _for_target;
	Parms._for_1pv = _for_1pv;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetNoCPPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_GetNoCPPenalty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetNoCPPenalty");

	Params::CharaBase_DEBUG_GetNoCPPenalty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetPeriodicRepeatDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::DEBUG_GetPeriodicRepeatDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetPeriodicRepeatDuration");

	Params::CharaBase_DEBUG_GetPeriodicRepeatDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetPeriodicRepeatType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPeriodicRepeatType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPeriodicRepeatType ACharaBase::DEBUG_GetPeriodicRepeatType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetPeriodicRepeatType");

	Params::CharaBase_DEBUG_GetPeriodicRepeatType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetRepeatAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaAction                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaAction ACharaBase::DEBUG_GetRepeatAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetRepeatAction");

	Params::CharaBase_DEBUG_GetRepeatAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetShowCharaState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_GetShowCharaState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetShowCharaState");

	Params::CharaBase_DEBUG_GetShowCharaState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetShowCollisionTest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_GetShowCollisionTest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetShowCollisionTest");

	Params::CharaBase_DEBUG_GetShowCollisionTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetShowDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_GetShowDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetShowDamage");

	Params::CharaBase_DEBUG_GetShowDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetShowPlayingHitFX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_GetShowPlayingHitFX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetShowPlayingHitFX");

	Params::CharaBase_DEBUG_GetShowPlayingHitFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_GetShowState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_GetShowState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_GetShowState");

	Params::CharaBase_DEBUG_GetShowState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_IsActivatedInfinitedStock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_IsActivatedInfinitedStock() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_IsActivatedInfinitedStock");

	Params::CharaBase_DEBUG_IsActivatedInfinitedStock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_IsInvincible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_IsInvincible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_IsInvincible");

	Params::CharaBase_DEBUG_IsInvincible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.DEBUG_IsStaticCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::DEBUG_IsStaticCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "DEBUG_IsStaticCamera");

	Params::CharaBase_DEBUG_IsStaticCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.FindActionGraphNode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UActionGraphNode*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActionGraphNode* ACharaBase::FindActionGraphNode(const struct FActionGraphOperatorID& _op_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "FindActionGraphNode");

	Params::CharaBase_FindActionGraphNode Parms{};

	Parms._op_id = std::move(_op_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GameState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABattleGameStateBase*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABattleGameStateBase* ACharaBase::GameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GameState");

	Params::CharaBase_GameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.Get1PVMeshOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACharaBase::Get1PVMeshOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "Get1PVMeshOffset");

	Params::CharaBase_Get1PVMeshOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetAbnormals
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAbnormals                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FAbnormals ACharaBase::GetAbnormals() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetAbnormals");

	Params::CharaBase_GetAbnormals Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetActionGraph
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaAction                            _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UActionGraph*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActionGraph* ACharaBase::GetActionGraph(ECharaAction _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetActionGraph");

	Params::CharaBase_GetActionGraph Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetActionGraphID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaAction                            _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionGraphID                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActionGraphID ACharaBase::GetActionGraphID(ECharaAction _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetActionGraphID");

	Params::CharaBase_GetActionGraphID Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetActionMate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* ACharaBase::GetActionMate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetActionMate");

	Params::CharaBase_GetActionMate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetActivationInfo_ActionGraph
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaAction                            _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionGraph_ActivationInfo      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FActionGraph_ActivationInfo ACharaBase::GetActivationInfo_ActionGraph(ECharaAction _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetActivationInfo_ActionGraph");

	Params::CharaBase_GetActivationInfo_ActionGraph Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetAimStartPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACharaBase::GetAimStartPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetAimStartPoint");

	Params::CharaBase_GetAimStartPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetAllAbnormals
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EAbnormal>                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EAbnormal> ACharaBase::GetAllAbnormals() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetAllAbnormals");

	Params::CharaBase_GetAllAbnormals Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetAnimInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpecterAnimInstance*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpecterAnimInstance* ACharaBase::GetAnimInst() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetAnimInst");

	Params::CharaBase_GetAnimInst Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetArmor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetArmor");

	Params::CharaBase_GetArmor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetArmor_PriceIncrease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetArmor_PriceIncrease() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetArmor_PriceIncrease");

	Params::CharaBase_GetArmor_PriceIncrease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetArmorOriginPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetArmorOriginPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetArmorOriginPrice");

	Params::CharaBase_GetArmorOriginPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetArmorPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetArmorPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetArmorPrice");

	Params::CharaBase_GetArmorPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetAvailableActiveSkill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       _enemy                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaAction                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaAction ACharaBase::GetAvailableActiveSkill(class ACharaBase* _enemy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetAvailableActiveSkill");

	Params::CharaBase_GetAvailableActiveSkill Parms{};

	Parms._enemy = _enemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBodyDeviation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetBodyDeviation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBodyDeviation");

	Params::CharaBase_GetBodyDeviation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBodyItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID ACharaBase::GetBodyItemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBodyItemID");

	Params::CharaBase_GetBodyItemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _bone_name                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBones                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBones ACharaBase::GetBone(class FName _bone_name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBone");

	Params::CharaBase_GetBone Parms{};

	Parms._bone_name = _bone_name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBoneName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  _bones                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName ACharaBase::GetBoneName(EBones _bones) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBoneName");

	Params::CharaBase_GetBoneName Parms{};

	Parms._bones = _bones;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBoosterCooltimeProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _excluding_active_time                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetBoosterCooltimeProgress(int32 _slot_zidx, float _excluding_active_time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBoosterCooltimeProgress");

	Params::CharaBase_GetBoosterCooltimeProgress Parms{};

	Parms._slot_zidx = _slot_zidx;
	Parms._excluding_active_time = _excluding_active_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBoosterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Booster                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Booster ACharaBase::GetBoosterID(int32 _slot_zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBoosterID");

	Params::CharaBase_GetBoosterID Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetBoundKeyForSkill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaAction                            _action                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMapping                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKeyMapping ACharaBase::GetBoundKeyForSkill(ECharaAction _action) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetBoundKeyForSkill");

	Params::CharaBase_GetBoundKeyForSkill Parms{};

	Parms._action = _action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCalculatedMaxHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetCalculatedMaxHP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCalculatedMaxHP");

	Params::CharaBase_GetCalculatedMaxHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCameraComponent* ACharaBase::GetCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCamera");

	Params::CharaBase_GetCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCameraBoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraBoomComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCameraBoomComponent* ACharaBase::GetCameraBoom() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCameraBoom");

	Params::CharaBase_GetCameraBoom Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCharacterDefine           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterDefine ACharaBase::GetConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig");

	Params::CharaBase_GetConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_Armor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_Armor              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Armor ACharaBase::GetConfig_Armor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_Armor");

	Params::CharaBase_GetConfig_Armor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_Armor_MaxArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetConfig_Armor_MaxArmor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_Armor_MaxArmor");

	Params::CharaBase_GetConfig_Armor_MaxArmor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_BaseDamage_Fist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetConfig_BaseDamage_Fist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_BaseDamage_Fist");

	Params::CharaBase_GetConfig_BaseDamage_Fist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_BaseDamage_Foot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetConfig_BaseDamage_Foot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_BaseDamage_Foot");

	Params::CharaBase_GetConfig_BaseDamage_Foot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_Camera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_Camera             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Camera ACharaBase::GetConfig_Camera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_Camera");

	Params::CharaBase_GetConfig_Camera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_FX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_CharaFX            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_CharaFX ACharaBase::GetConfig_FX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_FX");

	Params::CharaBase_GetConfig_FX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_MaxHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetConfig_MaxHP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_MaxHP");

	Params::CharaBase_GetConfig_MaxHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_Penalty_LegInjury_Duration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetConfig_Penalty_LegInjury_Duration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_Penalty_LegInjury_Duration");

	Params::CharaBase_GetConfig_Penalty_LegInjury_Duration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_Penalty_LegInjury_SpeedRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetConfig_Penalty_LegInjury_SpeedRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_Penalty_LegInjury_SpeedRate");

	Params::CharaBase_GetConfig_Penalty_LegInjury_SpeedRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetConfig_Sound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_CharaSound         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_CharaSound ACharaBase::GetConfig_Sound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetConfig_Sound");

	Params::CharaBase_GetConfig_Sound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetControlPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetControlPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetControlPower");

	Params::CharaBase_GetControlPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetControlPowerFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGunBase*                         _gun                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetControlPowerFactor(const class AGunBase* _gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetControlPowerFactor");

	Params::CharaBase_GetControlPowerFactor Parms{};

	Parms._gun = _gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetControlPowerGap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _is_main_hand_gun                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetControlPowerGap(bool _is_main_hand_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetControlPowerGap");

	Params::CharaBase_GetControlPowerGap Parms{};

	Parms._is_main_hand_gun = _is_main_hand_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCurrentActionGraph
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UActionGraph*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UActionGraph* ACharaBase::GetCurrentActionGraph() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCurrentActionGraph");

	Params::CharaBase_GetCurrentActionGraph Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCurrentArmor_AllGears
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetCurrentArmor_AllGears() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCurrentArmor_AllGears");

	Params::CharaBase_GetCurrentArmor_AllGears Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCurrentAverageArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetCurrentAverageArmor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCurrentAverageArmor");

	Params::CharaBase_GetCurrentAverageArmor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetCurrentGunnerMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunnerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunnerType ACharaBase::GetCurrentGunnerMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetCurrentGunnerMode");

	Params::CharaBase_GetCurrentGunnerMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetExclamationComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMaterialBillboardComponent*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialBillboardComponent* ACharaBase::GetExclamationComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetExclamationComponent");

	Params::CharaBase_GetExclamationComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetFireRecoil
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ACharaBase::GetFireRecoil(class AGunBase* _gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetFireRecoil");

	Params::CharaBase_GetFireRecoil Parms{};

	Parms._gun = _gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGameConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_Game               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Game ACharaBase::GetGameConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGameConfig");

	Params::CharaBase_GetGameConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGunEntryMain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Is_main_hand_hold_gun                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Main             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Main ACharaBase::GetGunEntryMain(bool Is_main_hand_hold_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGunEntryMain");

	Params::CharaBase_GetGunEntryMain Parms{};

	Parms.Is_main_hand_hold_gun = Is_main_hand_hold_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGunInCurHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _is_main_hand                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* ACharaBase::GetGunInCurHand(bool _is_main_hand) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGunInCurHand");

	Params::CharaBase_GetGunInCurHand Parms{};

	Parms._is_main_hand = _is_main_hand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGunPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunPreset                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGunPreset ACharaBase::GetGunPreset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGunPreset");

	Params::CharaBase_GetGunPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGunScopeTypeInCurHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Is_main_hand_hold_gun                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EScopeType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EScopeType ACharaBase::GetGunScopeTypeInCurHand(bool Is_main_hand_hold_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGunScopeTypeInCurHand");

	Params::CharaBase_GetGunScopeTypeInCurHand Parms{};

	Parms.Is_main_hand_hold_gun = Is_main_hand_hold_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGunSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec ACharaBase::GetGunSpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGunSpec");

	Params::CharaBase_GetGunSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetGunType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunType ACharaBase::GetGunType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetGunType");

	Params::CharaBase_GetGunType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetHalfHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetHalfHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetHalfHeight");

	Params::CharaBase_GetHalfHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetHeadItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID ACharaBase::GetHeadItemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetHeadItemID");

	Params::CharaBase_GetHeadItemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetHoldingProp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AThrowBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AThrowBase* ACharaBase::GetHoldingProp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetHoldingProp");

	Params::CharaBase_GetHoldingProp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetHP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetHP");

	Params::CharaBase_GetHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetHPRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetHPRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetHPRate");

	Params::CharaBase_GetHPRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetInitialGunDeviation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetInitialGunDeviation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetInitialGunDeviation");

	Params::CharaBase_GetInitialGunDeviation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetInputDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACharaBase::GetInputDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetInputDirection");

	Params::CharaBase_GetInputDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetInteractionTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ACharaBase::GetInteractionTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetInteractionTarget");

	Params::CharaBase_GetInteractionTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetIsReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::GetIsReloading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetIsReloading");

	Params::CharaBase_GetIsReloading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetKillLogText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActionGraphOperatorID           _op_id                                                 (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ACharaBase::GetKillLogText(const struct FActionGraphOperatorID& _op_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetKillLogText");

	Params::CharaBase_GetKillLogText Parms{};

	Parms._op_id = std::move(_op_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetLoadedBulletCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Is_main_hand_hold_gun                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACharaBase::GetLoadedBulletCount(bool Is_main_hand_hold_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetLoadedBulletCount");

	Params::CharaBase_GetLoadedBulletCount Parms{};

	Parms.Is_main_hand_hold_gun = Is_main_hand_hold_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetLookAtRay
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   _distance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _out_start                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _out_end                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::GetLookAtRay(float _distance, struct FVector* _out_start, struct FVector* _out_end) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetLookAtRay");

	Params::CharaBase_GetLookAtRay Parms{};

	Parms._distance = _distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_start != nullptr)
		*_out_start = std::move(Parms._out_start);

	if (_out_end != nullptr)
		*_out_end = std::move(Parms._out_end);
}


// Function Stigma.CharaBase.GetLowerAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBodyLowerAction                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBodyLowerAction ACharaBase::GetLowerAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetLowerAction");

	Params::CharaBase_GetLowerAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetLowerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBodyLowerState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBodyLowerState ACharaBase::GetLowerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetLowerState");

	Params::CharaBase_GetLowerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetMagazineCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Is_main_hand_hold_gun                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACharaBase::GetMagazineCapacity(bool Is_main_hand_hold_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetMagazineCapacity");

	Params::CharaBase_GetMagazineCapacity Parms{};

	Parms.Is_main_hand_hold_gun = Is_main_hand_hold_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetMagazineCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACharaBase::GetMagazineCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetMagazineCount");

	Params::CharaBase_GetMagazineCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetMaxArmor_AllGears
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetMaxArmor_AllGears() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetMaxArmor_AllGears");

	Params::CharaBase_GetMaxArmor_AllGears Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetMaxAverageArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetMaxAverageArmor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetMaxAverageArmor");

	Params::CharaBase_GetMaxAverageArmor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetMeleeAttackPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMeleeAttackPoint                       _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _radius_scaler                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _capsule_height_scaler                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _out_loc_start                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _out_loc_end                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _out_radius                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACharaBase::GetMeleeAttackPoint(EMeleeAttackPoint _point, float _radius_scaler, float _capsule_height_scaler, struct FVector* _out_loc_start, struct FVector* _out_loc_end, float* _out_radius) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetMeleeAttackPoint");

	Params::CharaBase_GetMeleeAttackPoint Parms{};

	Parms._point = _point;
	Parms._radius_scaler = _radius_scaler;
	Parms._capsule_height_scaler = _capsule_height_scaler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_loc_start != nullptr)
		*_out_loc_start = std::move(Parms._out_loc_start);

	if (_out_loc_end != nullptr)
		*_out_loc_end = std::move(Parms._out_loc_end);

	if (_out_radius != nullptr)
		*_out_radius = Parms._out_radius;
}


// Function Stigma.CharaBase.GetNextMagazine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMagazine                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMagazine ACharaBase::GetNextMagazine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetNextMagazine");

	Params::CharaBase_GetNextMagazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetNickname
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName ACharaBase::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetNickname");

	Params::CharaBase_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetOwnMainGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* ACharaBase::GetOwnMainGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetOwnMainGun");

	Params::CharaBase_GetOwnMainGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetOwnSubGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* ACharaBase::GetOwnSubGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetOwnSubGun");

	Params::CharaBase_GetOwnSubGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPartsByBone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  _bones                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBodyParts                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBodyParts ACharaBase::GetPartsByBone(EBones _bones) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPartsByBone");

	Params::CharaBase_GetPartsByBone Parms{};

	Parms._bones = _bones;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPartsByBoneName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _bone_name                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBodyParts                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBodyParts ACharaBase::GetPartsByBoneName(class FName _bone_name) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPartsByBoneName");

	Params::CharaBase_GetPartsByBoneName Parms{};

	Parms._bone_name = _bone_name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPiercingProp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APiercingObjectBase*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APiercingObjectBase* ACharaBase::GetPiercingProp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPiercingProp");

	Params::CharaBase_GetPiercingProp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetPing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPing");

	Params::CharaBase_GetPing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPingQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPingQuality                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPingQuality ACharaBase::GetPingQuality() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPingQuality");

	Params::CharaBase_GetPingQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPlayerName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ACharaBase::GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPlayerName");

	Params::CharaBase_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetPortraitIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ACharaBase::GetPortraitIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetPortraitIcon");

	Params::CharaBase_GetPortraitIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetRecoilCameraRate
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetRecoilCameraRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetRecoilCameraRate");

	Params::CharaBase_GetRecoilCameraRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetRecoilCrosshairOffset
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D ACharaBase::GetRecoilCrosshairOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetRecoilCrosshairOffset");

	Params::CharaBase_GetRecoilCrosshairOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetRemainBulletPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    Is_main_hand_hold_gun                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetRemainBulletPercentage(bool Is_main_hand_hold_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetRemainBulletPercentage");

	Params::CharaBase_GetRemainBulletPercentage Parms{};

	Parms.Is_main_hand_hold_gun = Is_main_hand_hold_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetShouldShowReloadGuide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::GetShouldShowReloadGuide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetShouldShowReloadGuide");

	Params::CharaBase_GetShouldShowReloadGuide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetSpecialMainGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* ACharaBase::GetSpecialMainGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetSpecialMainGun");

	Params::CharaBase_GetSpecialMainGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetSpecialSubGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* ACharaBase::GetSpecialSubGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetSpecialSubGun");

	Params::CharaBase_GetSpecialSubGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACharaBase::GetSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetSpeed");

	Params::CharaBase_GetSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams ACharaBase::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetTeam");

	Params::CharaBase_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetTotalBulletCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACharaBase::GetTotalBulletCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetTotalBulletCount");

	Params::CharaBase_GetTotalBulletCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetTotalSpareBulletCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACharaBase::GetTotalSpareBulletCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetTotalSpareBulletCount");

	Params::CharaBase_GetTotalSpareBulletCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetUpperState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBodyUpperState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBodyUpperState ACharaBase::GetUpperState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetUpperState");

	Params::CharaBase_GetUpperState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetWeaponInCurHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _is_main_hand                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectBase*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AObjectBase* ACharaBase::GetWeaponInCurHand(bool _is_main_hand) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetWeaponInCurHand");

	Params::CharaBase_GetWeaponInCurHand Parms{};

	Parms._is_main_hand = _is_main_hand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetWeaponInCurMainHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AObjectBase*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AObjectBase* ACharaBase::GetWeaponInCurMainHand() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetWeaponInCurMainHand");

	Params::CharaBase_GetWeaponInCurMainHand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.GetWeaponInCurSubHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AObjectBase*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AObjectBase* ACharaBase::GetWeaponInCurSubHand() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "GetWeaponInCurSubHand");

	Params::CharaBase_GetWeaponInCurSubHand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.HasControlPowerPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _is_main_hand_gun                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::HasControlPowerPenalty(bool _is_main_hand_gun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "HasControlPowerPenalty");

	Params::CharaBase_HasControlPowerPenalty Parms{};

	Parms._is_main_hand_gun = _is_main_hand_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.HasPostPonedDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::HasPostPonedDeath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "HasPostPonedDeath");

	Params::CharaBase_HasPostPonedDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.HasScopeGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::HasScopeGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "HasScopeGun");

	Params::CharaBase_HasScopeGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsActable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsActable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsActable");

	Params::CharaBase_IsActable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsActionCooltimeExpired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaAction                            _action_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsActionCooltimeExpired(ECharaAction _action_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsActionCooltimeExpired");

	Params::CharaBase_IsActionCooltimeExpired Parms{};

	Parms._action_type = _action_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsAIControlled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsAIControlled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsAIControlled");

	Params::CharaBase_IsAIControlled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsAlive");

	Params::CharaBase_IsAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsAlly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       _other                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsAlly(const class ACharaBase* _other) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsAlly");

	Params::CharaBase_IsAlly Parms{};

	Parms._other = _other;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsAntidoteState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsAntidoteState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsAntidoteState");

	Params::CharaBase_IsAntidoteState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsAnyServer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsAnyServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsAnyServer");

	Params::CharaBase_IsAnyServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsBlocking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsBlocking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsBlocking");

	Params::CharaBase_IsBlocking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsBoneBreaked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsBoneBreaked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsBoneBreaked");

	Params::CharaBase_IsBoneBreaked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsBulletproofProtected
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBones                                  _bone                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsBulletproofProtected(EBones _bone) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsBulletproofProtected");

	Params::CharaBase_IsBulletproofProtected Parms{};

	Parms._bone = _bone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsDediServer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsDediServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsDediServer");

	Params::CharaBase_IsDediServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsDied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsDied() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsDied");

	Params::CharaBase_IsDied Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsDisarmed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsDisarmed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsDisarmed");

	Params::CharaBase_IsDisarmed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsDiscovered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsDiscovered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsDiscovered");

	Params::CharaBase_IsDiscovered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       _other                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsEnemy(const class ACharaBase* _other) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsEnemy");

	Params::CharaBase_IsEnemy Parms{};

	Parms._other = _other;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsFalling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsFalling() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsFalling");

	Params::CharaBase_IsFalling Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsFullMagazine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsFullMagazine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsFullMagazine");

	Params::CharaBase_IsFullMagazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsInteracting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsInteracting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsInteracting");

	Params::CharaBase_IsInteracting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsInvincible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsInvincible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsInvincible");

	Params::CharaBase_IsInvincible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsJumping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsJumping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsJumping");

	Params::CharaBase_IsJumping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsListenServer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsListenServer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsListenServer");

	Params::CharaBase_IsListenServer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsLocalOrSpectated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsLocalOrSpectated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsLocalOrSpectated");

	Params::CharaBase_IsLocalOrSpectated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsLyingOrPronning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsLyingOrPronning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsLyingOrPronning");

	Params::CharaBase_IsLyingOrPronning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsMovable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsMovable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsMovable");

	Params::CharaBase_IsMovable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsUIMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsUIMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsUIMode");

	Params::CharaBase_IsUIMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.IsUnfireable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACharaBase::IsUnfireable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "IsUnfireable");

	Params::CharaBase_IsUnfireable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.MoveComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpecterCharaMovementComponent*   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpecterCharaMovementComponent* ACharaBase::MoveComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "MoveComponent");

	Params::CharaBase_MoveComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharaBase.PlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABattlePlayerControllerBase*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABattlePlayerControllerBase* ACharaBase::PlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharaBase", "PlayerController");

	Params::CharaBase_PlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AICharaBase.ArrivePatrolLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAICharaBase::ArrivePatrolLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICharaBase", "ArrivePatrolLocation");

	Params::AICharaBase_ArrivePatrolLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AICharaBase.OnRep_CustomSetting
// (Final, Native, Protected)

void AAICharaBase::OnRep_CustomSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICharaBase", "OnRep_CustomSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AICharaBase.RPC_ALL_LifeTimeEnd
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)

void AAICharaBase::RPC_ALL_LifeTimeEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICharaBase", "RPC_ALL_LifeTimeEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AICharaBase.RPC_ALL_SummonStart
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)

void AAICharaBase::RPC_ALL_SummonStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICharaBase", "RPC_ALL_SummonStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AICharaBase.GetTargetPatrolLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AAICharaBase::GetTargetPatrolLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICharaBase", "GetTargetPatrolLocation");

	Params::AICharaBase_GetTargetPatrolLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AICharaBase.IsSummoned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAICharaBase::IsSummoned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AICharaBase", "IsSummoned");

	Params::AICharaBase_IsSummoned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AGO_Charge.DestroyChargeComp
// (Final, Native, Public)
// Parameters:
// bool                                    _forced                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAGO_Charge::DestroyChargeComp(bool _forced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AGO_Charge", "DestroyChargeComp");

	Params::AGO_Charge_DestroyChargeComp Parms{};

	Parms._forced = _forced;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_DamageIndicator.OnShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_DamageIndicator::OnShow(bool _show, class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageIndicator", "OnShow");

	Params::UI_DamageIndicator_OnShow Parms{};

	Parms._show = _show;
	Parms._chara = _chara;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_DamageIndicator.SetHitCount
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamagedData                     _damaged_data                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_DamageIndicator::SetHitCount(int32 _count, const struct FDamagedData& _damaged_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageIndicator", "SetHitCount");

	Params::UI_DamageIndicator_SetHitCount Parms{};

	Parms._count = _count;
	Parms._damaged_data = std::move(_damaged_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Announce.GetAnnouceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUI_Announce::GetAnnouceCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Announce", "GetAnnouceCount");

	Params::UI_Announce_GetAnnouceCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Announce.IsShowing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Announce::IsShowing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Announce", "IsShowing");

	Params::UI_Announce_IsShowing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.GoBack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::GoBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "GoBack");

	Params::UI_LobbyPage_GoBack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.HandleOnKeyClose
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::HandleOnKeyClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "HandleOnKeyClose");

	Params::UI_LobbyPage_HandleOnKeyClose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnClosePage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ELobbyPage                              _next_page                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnClosePage(ELobbyPage _next_page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnClosePage");

	Params::UI_LobbyPage_OnClosePage Parms{};

	Parms._next_page = _next_page;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnMatchChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnMatchChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnMatchChanged");

	Params::UI_LobbyPage_OnMatchChanged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnOpenPage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EItemCategory                           _option                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELobbyPage                              _prev_page                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnOpenPage(EItemCategory _option, ELobbyPage _prev_page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnOpenPage");

	Params::UI_LobbyPage_OnOpenPage Parms{};

	Parms._option = _option;
	Parms._prev_page = _prev_page;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnParty_CharacterUpdated
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FUserID                          _user_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharSpec                        _chara                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnParty_CharacterUpdated(const struct FUserID& _user_id, const struct FCharSpec& _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnParty_CharacterUpdated");

	Params::UI_LobbyPage_OnParty_CharacterUpdated Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._chara = std::move(_chara);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnParty_Entered
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnParty_Entered(const class UBriefParty* _party)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnParty_Entered");

	Params::UI_LobbyPage_OnParty_Entered Parms{};

	Parms._party = _party;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnParty_Exited
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnParty_Exited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnParty_Exited");

	Params::UI_LobbyPage_OnParty_Exited Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnParty_LeaderUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FUserID                          _leader_id                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnParty_LeaderUpdated(const struct FUserID& _leader_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnParty_LeaderUpdated");

	Params::UI_LobbyPage_OnParty_LeaderUpdated Parms{};

	Parms._leader_id = std::move(_leader_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnParty_MemberAdded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     _member                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnParty_MemberAdded(const class UBriefParty* _party, const class UUserProfile* _member)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnParty_MemberAdded");

	Params::UI_LobbyPage_OnParty_MemberAdded Parms{};

	Parms._party = _party;
	Parms._member = _member;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.OnParty_MemberDeleted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LobbyPage::OnParty_MemberDeleted(const class UBriefParty* _party, const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "OnParty_MemberDeleted");

	Params::UI_LobbyPage_OnParty_MemberDeleted Parms{};

	Parms._party = _party;
	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LobbyPage.PlaySelectionCutScene
// (Final, Native, Public, BlueprintCallable)

void UUI_LobbyPage::PlaySelectionCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LobbyPage", "PlaySelectionCutScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.ChangeChannel
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EChatBoxChannelType                     _channel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _change_hint_text                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::ChangeChannel(EChatBoxChannelType _channel, bool _change_hint_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "ChangeChannel");

	Params::UI_ChatBox_ChangeChannel Parms{};

	Parms._channel = _channel;
	Parms._change_hint_text = _change_hint_text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.ChangeInputState
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EChatBoxInputStateType                  _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::ChangeInputState(EChatBoxInputStateType _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "ChangeInputState");

	Params::UI_ChatBox_ChangeInputState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.ChangePanelState
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EChatBoxPanelStateType                  _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::ChangePanelState(EChatBoxPanelStateType _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "ChangePanelState");

	Params::UI_ChatBox_ChangePanelState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.ClearAllChatHistories
// (Final, Native, Public, BlueprintCallable)

void UUI_ChatBox::ClearAllChatHistories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "ClearAllChatHistories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.EnablePartyCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::EnablePartyCheck(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "EnablePartyCheck");

	Params::UI_ChatBox_EnablePartyCheck Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.EnqueueChatHistory
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FChatMsg                         _slot_data                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatBox::EnqueueChatHistory(const struct FChatMsg& _slot_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "EnqueueChatHistory");

	Params::UI_ChatBox_EnqueueChatHistory Parms{};

	Parms._slot_data = std::move(_slot_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.FinishChatProcess
// (Final, Native, Private, BlueprintCallable)

void UUI_ChatBox::FinishChatProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "FinishChatProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.Init
// (Final, Native, Private, BlueprintCallable)

void UUI_ChatBox::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.OnStartChat
// (Final, Native, Public, BlueprintCallable)

void UUI_ChatBox::OnStartChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "OnStartChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.OnTextChange
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatBox::OnTextChange(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "OnTextChange");

	Params::UI_ChatBox_OnTextChange Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.OnTextCommit
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (Parm, NativeAccessSpecifierPublic)

void UUI_ChatBox::OnTextCommit(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "OnTextCommit");

	Params::UI_ChatBox_OnTextCommit Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Stigma.UI_ChatBox.OnUserCommitPartyChatDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FChatMsg                         _message                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatBox::OnUserCommitPartyChatDelegate__DelegateSignature(const struct FChatMsg& _message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "OnUserCommitPartyChatDelegate__DelegateSignature");

	Params::UI_ChatBox_OnUserCommitPartyChatDelegate__DelegateSignature Parms{};

	Parms._message = std::move(_message);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction Stigma.UI_ChatBox.OnUserCommitShoutChatDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FChatMsg                         _message                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatBox::OnUserCommitShoutChatDelegate__DelegateSignature(const struct FChatMsg& _message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "OnUserCommitShoutChatDelegate__DelegateSignature");

	Params::UI_ChatBox_OnUserCommitShoutChatDelegate__DelegateSignature Parms{};

	Parms._message = std::move(_message);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction Stigma.UI_ChatBox.OnUserCommitTeamChatDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FChatMsg                         _message                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatBox::OnUserCommitTeamChatDelegate__DelegateSignature(const struct FChatMsg& _message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "OnUserCommitTeamChatDelegate__DelegateSignature");

	Params::UI_ChatBox_OnUserCommitTeamChatDelegate__DelegateSignature Parms{};

	Parms._message = std::move(_message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ChatBox.SelectRadioChatCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::SelectRadioChatCategory(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "SelectRadioChatCategory");

	Params::UI_ChatBox_SelectRadioChatCategory Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.SelectRadioChatListItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::SelectRadioChatListItem(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "SelectRadioChatListItem");

	Params::UI_ChatBox_SelectRadioChatListItem Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.SetAllowChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::SetAllowChat(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "SetAllowChat");

	Params::UI_ChatBox_SetAllowChat Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.SetAllowedChannels
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EChatBoxChannelType                     _channels                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::SetAllowedChannels(EChatBoxChannelType _channels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "SetAllowedChannels");

	Params::UI_ChatBox_SetAllowedChannels Parms{};

	Parms._channels = _channels;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.SetAllowedShout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatBox::SetAllowedShout(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "SetAllowedShout");

	Params::UI_ChatBox_SetAllowedShout Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.SetHintText
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatBox::SetHintText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "SetHintText");

	Params::UI_ChatBox_SetHintText Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatBox.ToggleRadioChat
// (Final, Native, Public, BlueprintCallable)

void UUI_ChatBox::ToggleRadioChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatBox", "ToggleRadioChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MissionArea.ActivateArea
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _activate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMissionArea::ActivateArea(bool _activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionArea", "ActivateArea");

	Params::MissionArea_ActivateArea Parms{};

	Parms._activate = _activate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MissionArea.OnCharaBeginOverlap
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMissionArea::OnCharaBeginOverlap(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionArea", "OnCharaBeginOverlap");

	Params::MissionArea_OnCharaBeginOverlap Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MissionArea.OnCharaEndOverlap
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMissionArea::OnCharaEndOverlap(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionArea", "OnCharaEndOverlap");

	Params::MissionArea_OnCharaEndOverlap Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AGO_MeleeAttack.SetAttackPriorityColor
// (Final, Native, Public)
// Parameters:
// EAttackPriority                         _attackpriority                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAGO_MeleeAttack::SetAttackPriorityColor(EAttackPriority _attackpriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AGO_MeleeAttack", "SetAttackPriorityColor");

	Params::AGO_MeleeAttack_SetAttackPriorityColor Parms{};

	Parms._attackpriority = _attackpriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MissionCondition.OnConditionReported
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FMissionConditionInfo            _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMissionCondition::OnConditionReported(const struct FMissionConditionInfo& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionCondition", "OnConditionReported");

	Params::MissionCondition_OnConditionReported Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MissionCondition.FailOnCalled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMissionCondition::FailOnCalled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionCondition", "FailOnCalled");

	Params::MissionCondition_FailOnCalled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_KillLogPanel.AddKillLogSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKillLog                         _kill_log                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_KillLogPanel::AddKillLogSlot(const struct FKillLog& _kill_log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogPanel", "AddKillLogSlot");

	Params::HUD_KillLogPanel_AddKillLogSlot Parms{};

	Parms._kill_log = std::move(_kill_log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillLogPanel.AddKillLogSlot_Bounty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FActionLog_Bounty                _bounty_log                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_KillLogPanel::AddKillLogSlot_Bounty(const struct FActionLog_Bounty& _bounty_log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogPanel", "AddKillLogSlot_Bounty");

	Params::HUD_KillLogPanel_AddKillLogSlot_Bounty Parms{};

	Parms._bounty_log = std::move(_bounty_log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillLogPanel.AddKillLogSlot_ForRevive
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKillLog_ForRevive               _kill_log_revive                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_KillLogPanel::AddKillLogSlot_ForRevive(const struct FKillLog_ForRevive& _kill_log_revive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogPanel", "AddKillLogSlot_ForRevive");

	Params::HUD_KillLogPanel_AddKillLogSlot_ForRevive Parms{};

	Parms._kill_log_revive = std::move(_kill_log_revive);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillLogPanel.GetSlotClassType
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UHUD_KillLogSlot>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UHUD_KillLogSlot> UHUD_KillLogPanel::GetSlotClassType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogPanel", "GetSlotClassType");

	Params::HUD_KillLogPanel_GetSlotClassType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PreviewActor.GetPreviewActorType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPreviewActorType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPreviewActorType APreviewActor::GetPreviewActorType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PreviewActor", "GetPreviewActorType");

	Params::PreviewActor_GetPreviewActorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AIDeco_Base.PerformConditionCheck
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AActor*                           OwnerActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIDeco_Base::PerformConditionCheck(class AActor* OwnerActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIDeco_Base", "PerformConditionCheck");

	Params::AIDeco_Base_PerformConditionCheck Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.SafeBase.HackingComplete
// (Event, Public, BlueprintEvent)

void ASafeBase::HackingComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "HackingComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.SafeBase.OnCharaBeginOverlapped
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASafeBase::OnCharaBeginOverlapped(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "OnCharaBeginOverlapped");

	Params::SafeBase_OnCharaBeginOverlapped Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SafeBase.OnCharaEndOverlapped
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASafeBase::OnCharaEndOverlapped(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "OnCharaEndOverlapped");

	Params::SafeBase_OnCharaEndOverlapped Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SafeBase.OnRep_InteractChara
// (Final, Native, Protected)
// Parameters:
// class ACharaBase*                       _old_chara                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASafeBase::OnRep_InteractChara(class ACharaBase* _old_chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "OnRep_InteractChara");

	Params::SafeBase_OnRep_InteractChara Parms{};

	Parms._old_chara = _old_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SafeBase.OnRep_SafeState
// (Final, Native, Protected)

void ASafeBase::OnRep_SafeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "OnRep_SafeState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SafeBase.SERVER_SetSafeState
// (Final, Native, Protected)
// Parameters:
// ESafeState                              _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASafeBase::SERVER_SetSafeState(ESafeState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "SERVER_SetSafeState");

	Params::SafeBase_SERVER_SetSafeState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SafeBase.Setter_InteractChara
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASafeBase::Setter_InteractChara(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "Setter_InteractChara");

	Params::SafeBase_Setter_InteractChara Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SafeBase.CanInteract
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASafeBase::CanInteract(class ACharaBase* _involver) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "CanInteract");

	Params::SafeBase_CanInteract Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SafeBase.GetActorDisplayName
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ASafeBase::GetActorDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "GetActorDisplayName");

	Params::SafeBase_GetActorDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SafeBase.GetActorIcon
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* ASafeBase::GetActorIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "GetActorIcon");

	Params::SafeBase_GetActorIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SafeBase.GetDisplayText
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ASafeBase::GetDisplayText(class ACharaBase* _involver) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "GetDisplayText");

	Params::SafeBase_GetDisplayText Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SafeBase.GetOwnTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams ASafeBase::GetOwnTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SafeBase", "GetOwnTeam");

	Params::SafeBase_GetOwnTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_EmoticonWidgetBase.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FConfig_Emoticon                 _emoticon_def                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHUD_EmoticonWidgetBase::InitWidget(const struct FConfig_Emoticon& _emoticon_def)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_EmoticonWidgetBase", "InitWidget");

	Params::HUD_EmoticonWidgetBase_InitWidget Parms{};

	Parms._emoticon_def = std::move(_emoticon_def);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Annihilation_PlayerController.RPC_CLIENT_AddSupplyStoreLog
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ASupplyStore*                     _store                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_cool                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAnnihilation_PlayerController::RPC_CLIENT_AddSupplyStoreLog(class ASupplyStore* _store, int32 _index, float _value, bool _is_cool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_PlayerController", "RPC_CLIENT_AddSupplyStoreLog");

	Params::Annihilation_PlayerController_RPC_CLIENT_AddSupplyStoreLog Parms{};

	Parms._store = _store;
	Parms._index = _index;
	Parms._value = _value;
	Parms._is_cool = _is_cool;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Annihilation_PlayerController.RPC_SERVER_RequestPurchase_SupplyItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASupplyStore*                     _store                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAnnihilation_PlayerController::RPC_SERVER_RequestPurchase_SupplyItem(class ASupplyStore* _store, int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_PlayerController", "RPC_SERVER_RequestPurchase_SupplyItem");

	Params::Annihilation_PlayerController_RPC_SERVER_RequestPurchase_SupplyItem Parms{};

	Parms._store = _store;
	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Annihilation_PlayerController.GetEnemyTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams AAnnihilation_PlayerController::GetEnemyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_PlayerController", "GetEnemyTeam");

	Params::Annihilation_PlayerController_GetEnemyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.CanRewardAnyMissions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _check_only_auto_reward                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContextTool::CanRewardAnyMissions(const class UObject* _world_ctx, bool _check_only_auto_reward, const struct FItemID& _task_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "CanRewardAnyMissions");

	Params::LocalPlayerContextTool_CanRewardAnyMissions Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._check_only_auto_reward = _check_only_auto_reward;
	Parms._task_id = std::move(_task_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.FindAppliedFunctionsByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _func_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAppliedFunction                 _out_function                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContextTool::FindAppliedFunctionsByID(const class UObject* _world_ctx, const struct FItemID& _func_id, struct FAppliedFunction* _out_function)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "FindAppliedFunctionsByID");

	Params::LocalPlayerContextTool_FindAppliedFunctionsByID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._func_id = std::move(_func_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_function != nullptr)
		*_out_function = std::move(Parms._out_function);

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.FindGMFunctionByGMFuncID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _gm_func_id                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGMFunction                      _out_function                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContextTool::FindGMFunctionByGMFuncID(const class UObject* _world_ctx, int32 _gm_func_id, struct FGMFunction* _out_function)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "FindGMFunctionByGMFuncID");

	Params::LocalPlayerContextTool_FindGMFunctionByGMFuncID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gm_func_id = _gm_func_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_function != nullptr)
		*_out_function = std::move(Parms._out_function);

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.FindMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMission* ULocalPlayerContextTool::FindMission(const class UObject* _world_ctx, const struct FItemID& _task_id, int32 _idx, const struct FItemID_Mission& _mission_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "FindMission");

	Params::LocalPlayerContextTool_FindMission Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._mission_id = std::move(_mission_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocalPlayerContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalPlayerContext* ULocalPlayerContextTool::Get(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "Get");

	Params::LocalPlayerContextTool_Get Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.GetCompetitionInfoManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCompetitionInfoManager*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionInfoManager* ULocalPlayerContextTool::GetCompetitionInfoManager(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "GetCompetitionInfoManager");

	Params::LocalPlayerContextTool_GetCompetitionInfoManager Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.GetCompletedMissionCountByTaskID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULocalPlayerContextTool::GetCompletedMissionCountByTaskID(const class UObject* _world_ctx, const struct FItemID& _task_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "GetCompletedMissionCountByTaskID");

	Params::LocalPlayerContextTool_GetCompletedMissionCountByTaskID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._task_id = std::move(_task_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.GetMissionsByTaskID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMission*>                 _out_missions                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void ULocalPlayerContextTool::GetMissionsByTaskID(const class UObject* _world_ctx, const struct FItemID& _task_id, TArray<class UMission*>* _out_missions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "GetMissionsByTaskID");

	Params::LocalPlayerContextTool_GetMissionsByTaskID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._task_id = std::move(_task_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_missions != nullptr)
		*_out_missions = std::move(Parms._out_missions);
}


// Function Stigma.LocalPlayerContextTool.GetProgressingTrackMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_EventPage                _track_id                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<EMissionProgressType>              _progress_types                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _get_first                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMission* ULocalPlayerContextTool::GetProgressingTrackMission(const class UObject* _world_ctx, const struct FItemID_EventPage& _track_id, const TSet<EMissionProgressType>& _progress_types, bool _get_first)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "GetProgressingTrackMission");

	Params::LocalPlayerContextTool_GetProgressingTrackMission Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._track_id = std::move(_track_id);
	Parms._progress_types = std::move(_progress_types);
	Parms._get_first = _get_first;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.HasMasterMission
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContextTool::HasMasterMission(const class UObject* _world_ctx, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "HasMasterMission");

	Params::LocalPlayerContextTool_HasMasterMission Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.IsBoosterSlotActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContextTool::IsBoosterSlotActive(const class UObject* _world_ctx, int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "IsBoosterSlotActive");

	Params::LocalPlayerContextTool_IsBoosterSlotActive Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.IsMasterFirstMissionCompleted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContextTool::IsMasterFirstMissionCompleted(const class UObject* _world_ctx, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "IsMasterFirstMissionCompleted");

	Params::LocalPlayerContextTool_IsMasterFirstMissionCompleted Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContextTool.MarkRefreshInventoryRedDot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalPlayerContextTool::MarkRefreshInventoryRedDot(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LocalPlayerContextTool", "MarkRefreshInventoryRedDot");

	Params::LocalPlayerContextTool_MarkRefreshInventoryRedDot Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBriefContainer.OnMissionUpdated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _mission                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefContainer::OnMissionUpdated(EMissionUpdateType _type, class UMission* _mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefContainer", "OnMissionUpdated");

	Params::UI_MissionBriefContainer_OnMissionUpdated Parms{};

	Parms._type = _type;
	Parms._mission = _mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBriefContainer.SetLocked
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionType                            _mission_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _limited_level                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefContainer::SetLocked(EMissionType _mission_type, int32 _limited_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefContainer", "SetLocked");

	Params::UI_MissionBriefContainer_SetLocked Parms{};

	Parms._mission_type = _mission_type;
	Parms._limited_level = _limited_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailListItem.OnClickRead
// (Final, Native, Protected)

void UUI_MailListItem::OnClickRead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailListItem", "OnClickRead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailListItem.OnClickSelect
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MailListItem::OnClickSelect(bool _is_selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailListItem", "OnClickSelect");

	Params::UI_MailListItem_OnClickSelect Parms{};

	Parms._is_selected = _is_selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillStreakWidget.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKillStreakDefine                _kill_streak_def                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHUD_KillStreakWidget::InitWidget(const struct FKillStreakDefine& _kill_streak_def)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillStreakWidget", "InitWidget");

	Params::HUD_KillStreakWidget_InitWidget Parms{};

	Parms._kill_streak_def = std::move(_kill_streak_def);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerMaster.ClearLocked
// (Event, Protected, BlueprintEvent)

void UUI_MissionPopupContainerMaster::ClearLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "ClearLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MissionPopupContainerMaster.FirstMissionLocked
// (Event, Protected, BlueprintEvent)

void UUI_MissionPopupContainerMaster::FirstMissionLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "FirstMissionLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MissionPopupContainerMaster.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_EventPage                _master_event_id                                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::InitWidget(const struct FItemID_EventPage& _master_event_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "InitWidget");

	Params::UI_MissionPopupContainerMaster_InitWidget Parms{};

	Parms._master_event_id = std::move(_master_event_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerMaster.MaxLevelLocked
// (Event, Protected, BlueprintEvent)

void UUI_MissionPopupContainerMaster::MaxLevelLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "MaxLevelLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MissionPopupContainerMaster.NoMasterLocked
// (Event, Protected, BlueprintEvent)

void UUI_MissionPopupContainerMaster::NoMasterLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "NoMasterLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MissionPopupContainerMaster.OnMasterButtonSelected
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::OnMasterButtonSelected(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "OnMasterButtonSelected");

	Params::UI_MissionPopupContainerMaster_OnMasterButtonSelected Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerMaster.SetCanReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_reward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::SetCanReward(bool _can_reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "SetCanReward");

	Params::UI_MissionPopupContainerMaster_SetCanReward Parms{};

	Parms._can_reward = _can_reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerMaster.SetMasterExpPercent
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _percent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::SetMasterExpPercent(float _percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "SetMasterExpPercent");

	Params::UI_MissionPopupContainerMaster_SetMasterExpPercent Parms{};

	Parms._percent = _percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerMaster.SetMissionChangeCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _current_count                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::SetMissionChangeCount(int32 _current_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "SetMissionChangeCount");

	Params::UI_MissionPopupContainerMaster_SetMissionChangeCount Parms{};

	Parms._current_count = _current_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerMaster.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "SetTitle");

	Params::UI_MissionPopupContainerMaster_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerMaster.SetTitleReward
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      _brush                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::SetTitleReward(const class FText& _text, const struct FSlateBrush& _brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "SetTitleReward");

	Params::UI_MissionPopupContainerMaster_SetTitleReward Parms{};

	Parms._text = std::move(_text);
	Parms._brush = std::move(_brush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerMaster.UserLevelLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerMaster::UserLevelLocked(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "UserLevelLocked");

	Params::UI_MissionPopupContainerMaster_UserLevelLocked Parms{};

	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerMaster.GetCurrentCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UUI_MissionPopupContainerMaster::GetCurrentCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerMaster", "GetCurrentCharaType");

	Params::UI_MissionPopupContainerMaster_GetCurrentCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AIRoamingPointVolume.GetRandomLocationInVolume
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AAIRoamingPointVolume::GetRandomLocationInVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIRoamingPointVolume", "GetRandomLocationInVolume");

	Params::AIRoamingPointVolume_GetRandomLocationInVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.AddAIAsPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _nickname                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AAICharaBase>         _Class                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBehaviorTree*                    _BT                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAI_Characteristic               _characteristic                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   _hp_scaler                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _armor_scaler                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _action_stock_scaler                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _bullet_scaler                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerState*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMatchServicedPlayerState* AMatchServicedGameMode::AddAIAsPlayer(const class FString& _nickname, ETeams _Team, TSubclassOf<class AAICharaBase> _Class, ECharaType _chara_type, class UBehaviorTree* _BT, const struct FAI_Characteristic& _characteristic, float _hp_scaler, float _armor_scaler, float _action_stock_scaler, float _bullet_scaler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "AddAIAsPlayer");

	Params::MatchServicedGameMode_AddAIAsPlayer Parms{};

	Parms._nickname = std::move(_nickname);
	Parms._Team = _Team;
	Parms._Class = _Class;
	Parms._chara_type = _chara_type;
	Parms._BT = _BT;
	Parms._characteristic = std::move(_characteristic);
	Parms._hp_scaler = _hp_scaler;
	Parms._armor_scaler = _armor_scaler;
	Parms._action_stock_scaler = _action_stock_scaler;
	Parms._bullet_scaler = _bullet_scaler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.AddMissionConditionReport
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMissionConditionType                   _type                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _sub_type                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _value                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMatchServicedGameMode::AddMissionConditionReport(const struct FUserID& _user_id, const EMissionConditionType _type, const class FString& _sub_type, const int32 _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "AddMissionConditionReport");

	Params::MatchServicedGameMode_AddMissionConditionReport Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._type = _type;
	Parms._sub_type = std::move(_sub_type);
	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MatchServicedGameMode.AddPlaceHolder
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _elo                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerState*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMatchServicedPlayerState* AMatchServicedGameMode::AddPlaceHolder(ETeams _Team, int32 _elo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "AddPlaceHolder");

	Params::MatchServicedGameMode_AddPlaceHolder Parms{};

	Parms._Team = _Team;
	Parms._elo = _elo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.FindPlayerStartByTeam
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerStart*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerStart* AMatchServicedGameMode::FindPlayerStartByTeam(ETeams _Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "FindPlayerStartByTeam");

	Params::MatchServicedGameMode_FindPlayerStartByTeam Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.OnQuery_IsReadyForStarting
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedGameMode::OnQuery_IsReadyForStarting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "OnQuery_IsReadyForStarting");

	Params::MatchServicedGameMode_OnQuery_IsReadyForStarting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.OnQuery_SendBattlePing
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMatchServicedGameMode::OnQuery_SendBattlePing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "OnQuery_SendBattlePing");

	Params::MatchServicedGameMode_OnQuery_SendBattlePing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.GetTeamMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AMatchServicedGameMode::GetTeamMemberCount(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "GetTeamMemberCount");

	Params::MatchServicedGameMode_GetTeamMemberCount Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MatchServicedGameMode.OnQuery_FinishBattle
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FBattleFinish                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FBattleFinish AMatchServicedGameMode::OnQuery_FinishBattle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchServicedGameMode", "OnQuery_FinishBattle");

	Params::MatchServicedGameMode_OnQuery_FinishBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomGameMode.DEBUG_SetToCustomGame
// (Final, Native, Public, BlueprintCallable)

void AWaitingRoomGameMode::DEBUG_SetToCustomGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameMode", "DEBUG_SetToCustomGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameMode.GetStartingDuration
// (Final, Native, Public)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWaitingRoomGameMode::GetStartingDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameMode", "GetStartingDuration");

	Params::WaitingRoomGameMode_GetStartingDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AISense_CustomHearing.ReportNoiseCustomEvent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NoiseLocation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Loudness                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxRange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAISense_CustomHearing::ReportNoiseCustomEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float Loudness, class AActor* Instigator, float MaxRange, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AISense_CustomHearing", "ReportNoiseCustomEvent");

	Params::AISense_CustomHearing_ReportNoiseCustomEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NoiseLocation = std::move(NoiseLocation);
	Parms.Loudness = Loudness;
	Parms.Instigator = Instigator;
	Parms.MaxRange = MaxRange;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AISpawner.Activate
// (Final, Native, Public, BlueprintCallable)

void AAISpawner::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AISpawner.Deactivate
// (Final, Native, Public, BlueprintCallable)

void AAISpawner::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AISpawner.Reset
// (Final, Native, Public, BlueprintCallable)

void AAISpawner::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.AISpawner.GetAliveCharaCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAISpawner::GetAliveCharaCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "GetAliveCharaCount");

	Params::AISpawner_GetAliveCharaCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AISpawner.GetRemainCharaCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAISpawner::GetRemainCharaCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "GetRemainCharaCount");

	Params::AISpawner_GetRemainCharaCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AISpawner.GetTotalSpawnCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAISpawner::GetTotalSpawnCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "GetTotalSpawnCount");

	Params::AISpawner_GetTotalSpawnCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AISpawner.IsDestoriedAllCharas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAISpawner::IsDestoriedAllCharas() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AISpawner", "IsDestoriedAllCharas");

	Params::AISpawner_IsDestoriedAllCharas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MannequinManager.Bind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMannequinManager::Bind(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "Bind");

	Params::MannequinManager_Bind Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MannequinManager.ScanMannequins
// (Final, Native, Public, BlueprintCallable)

void UMannequinManager::ScanMannequins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "ScanMannequins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MannequinManager.ShowDummy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMannequinManager::ShowDummy(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "ShowDummy");

	Params::MannequinManager_ShowDummy Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MannequinManager.Update
// (Final, Native, Public, BlueprintCallable)

void UMannequinManager::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MannequinManager.GetCurrentMannequin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMannequin*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMannequin* UMannequinManager::GetCurrentMannequin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "GetCurrentMannequin");

	Params::MannequinManager_GetCurrentMannequin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MannequinManager.GetMannequin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMannequin*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMannequin* UMannequinManager::GetMannequin(int32 _idx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "GetMannequin");

	Params::MannequinManager_GetMannequin Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MannequinManager.GetMannequinCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMannequinManager::GetMannequinCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "GetMannequinCount");

	Params::MannequinManager_GetMannequinCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MannequinManager.GetPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AMatchServicedPlayerState*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMatchServicedPlayerState* UMannequinManager::GetPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MannequinManager", "GetPlayerState");

	Params::MannequinManager_GetPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AITools.CompareValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECompareFunc                            _op                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _v1                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _v2                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _tolerance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAITools::CompareValue(ECompareFunc _op, float _v1, float _v2, float _tolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AITools", "CompareValue");

	Params::AITools_CompareValue Parms{};

	Parms._op = _op;
	Parms._v1 = _v1;
	Parms._v2 = _v2;
	Parms._tolerance = _tolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.AITools.ThrowDice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _guide                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAITools::ThrowDice(float _guide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AITools", "ThrowDice");

	Params::AITools_ThrowDice Parms{};

	Parms._guide = _guide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameModeBase.FillUpWithBOT
// (Final, Native, Public, BlueprintCallable)

void ABattleGameModeBase::FillUpWithBOT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameModeBase", "FillUpWithBOT");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameModeBase.OnCharaIsKilled
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      _killer                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _killed                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _assist                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABattleGameModeBase::OnCharaIsKilled(class AController* _killer, class AController* _killed, class AController* _assist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameModeBase", "OnCharaIsKilled");

	Params::BattleGameModeBase_OnCharaIsKilled Parms{};

	Parms._killer = _killer;
	Parms._killed = _killed;
	Parms._assist = _assist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattleGameModeBase.OnQuery_EndOfRound
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABattleGameModeBase::OnQuery_EndOfRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameModeBase", "OnQuery_EndOfRound");

	Params::BattleGameModeBase_OnQuery_EndOfRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleGameModeBase.GetCurrentBattlePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBattleModePhase                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleModePhase ABattleGameModeBase::GetCurrentBattlePhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BattleGameModeBase", "GetCurrentBattlePhase");

	Params::BattleGameModeBase_GetCurrentBattlePhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDMode.OnBind
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDMode::OnBind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode", "OnBind");

	Params::UI_HUDMode_OnBind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDMode.OnHitAndDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDamagedData                     _damage                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDMode::OnHitAndDamage(const struct FDamagedData& _damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode", "OnHitAndDamage");

	Params::UI_HUDMode_OnHitAndDamage Parms{};

	Parms._damage = std::move(_damage);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDMode.OnTargetRespawned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDMode::OnTargetRespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode", "OnTargetRespawned");

	Params::UI_HUDMode_OnTargetRespawned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Annihilation_GameMode.RegisterBarrierDoor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ADoorBase*                        _door                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAnnihilation_GameMode::RegisterBarrierDoor(class ADoorBase* _door)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_GameMode", "RegisterBarrierDoor");

	Params::Annihilation_GameMode_RegisterBarrierDoor Parms{};

	Parms._door = _door;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Annihilation_GameState.GetGoldRule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAnnihilation_GoldRule     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FAnnihilation_GoldRule AAnnihilation_GameState::GetGoldRule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_GameState", "GetGoldRule");

	Params::Annihilation_GameState_GetGoldRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Annihilation_GameState.GetRule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FAnnihilationRule          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FAnnihilationRule AAnnihilation_GameState::GetRule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_GameState", "GetRule");

	Params::Annihilation_GameState_GetRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Annihilation_GameState.IsFactionChanged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAnnihilation_GameState::IsFactionChanged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_GameState", "IsFactionChanged");

	Params::Annihilation_GameState_IsFactionChanged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Annihilation_GameState.IsFactionChangedRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAnnihilation_GameState::IsFactionChangedRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Annihilation_GameState", "IsFactionChangedRound");

	Params::Annihilation_GameState_IsFactionChangedRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_CooldownBaseSlotPanel.OnSlotNotReady
// (Final, Native, Protected)

void UHUD_CooldownBaseSlotPanel::OnSlotNotReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CooldownBaseSlotPanel", "OnSlotNotReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_CooldownBaseSlotPanel.OnSlotReady
// (Final, Native, Protected)

void UHUD_CooldownBaseSlotPanel::OnSlotReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CooldownBaseSlotPanel", "OnSlotReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_DescBase.InitByEntry
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOptionDescEntry                 _entry                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Option_DescBase::InitByEntry(const struct FOptionDescEntry& _entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_DescBase", "InitByEntry");

	Params::UI_Option_DescBase_InitByEntry Parms{};

	Parms._entry = std::move(_entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ModeSelectPopupBase.DoStartCustomGame
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           _battle_ids                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ModeSelectPopupBase::DoStartCustomGame(const class FString& _battle_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ModeSelectPopupBase", "DoStartCustomGame");

	Params::UI_ModeSelectPopupBase_DoStartCustomGame Parms{};

	Parms._battle_ids = std::move(_battle_ids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ModeSelectPopupBase.OnAck_DeleteParty
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_PartyDelete                 _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_ModeSelectPopupBase::OnAck_DeleteParty(EResultCode _rcode, const struct FACK_PartyDelete& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ModeSelectPopupBase", "OnAck_DeleteParty");

	Params::UI_ModeSelectPopupBase_OnAck_DeleteParty Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ModeSelectPopupBase.OnAck_StartMatchMaking
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_FindMatch                   _ack                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_ModeSelectPopupBase::OnAck_StartMatchMaking(EResultCode _rcode, const struct FACK_FindMatch& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ModeSelectPopupBase", "OnAck_StartMatchMaking");

	Params::UI_ModeSelectPopupBase_OnAck_StartMatchMaking Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ModeSelectPopupBase.OnCustomCreateBtnClick
// (Final, Native, Protected, BlueprintCallable)

void UUI_ModeSelectPopupBase::OnCustomCreateBtnClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ModeSelectPopupBase", "OnCustomCreateBtnClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ModeSelectPopupBase.OnCustomJoinBtnClick
// (Final, Native, Protected, BlueprintCallable)

void UUI_ModeSelectPopupBase::OnCustomJoinBtnClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ModeSelectPopupBase", "OnCustomJoinBtnClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ReviverBase.OnAttachmentEvent
// (Native, Event, Public, BlueprintEvent)

void AReviverBase::OnAttachmentEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReviverBase", "OnAttachmentEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ReviverBase.OnRep_DiedChara
// (Native, Event, Protected, BlueprintEvent)

void AReviverBase::OnRep_DiedChara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReviverBase", "OnRep_DiedChara");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ReviverBase.GetAttachParent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AReviverBase::GetAttachParent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReviverBase", "GetAttachParent");

	Params::ReviverBase_GetAttachParent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayNiagaraFPS.GetSpawnedEffect
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFXSystemComponent*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFXSystemComponent* UPlayNiagaraFPS::GetSpawnedEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayNiagaraFPS", "GetSpawnedEffect");

	Params::PlayNiagaraFPS_GetSpawnedEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BarrierBase.OnRep_BarrierState
// (Final, Native, Protected)

void ABarrierBase::OnRep_BarrierState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BarrierBase", "OnRep_BarrierState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BattlePassHelper.CalcBattlePassResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _added_pass_exp                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_cur_level                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_level_exp                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_added_level_exp                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _out_is_max_level                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassHelper::CalcBattlePassResult(const class UObject* _world_ctx, const struct FItemID_BattlePass& _pass_id, int32 _added_pass_exp, int32* _out_cur_level, int32* _out_level_exp, int32* _out_added_level_exp, bool* _out_is_max_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "CalcBattlePassResult");

	Params::BattlePassHelper_CalcBattlePassResult Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._pass_id = std::move(_pass_id);
	Parms._added_pass_exp = _added_pass_exp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_cur_level != nullptr)
		*_out_cur_level = Parms._out_cur_level;

	if (_out_level_exp != nullptr)
		*_out_level_exp = Parms._out_level_exp;

	if (_out_added_level_exp != nullptr)
		*_out_added_level_exp = Parms._out_added_level_exp;

	if (_out_is_max_level != nullptr)
		*_out_is_max_level = Parms._out_is_max_level;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetActivedBattlePassInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattlePassInfo                  _out_info                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassHelper::GetActivedBattlePassInfo(const class UObject* _world_ctx, struct FBattlePassInfo* _out_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetActivedBattlePassInfo");

	Params::BattlePassHelper_GetActivedBattlePassInfo Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_info != nullptr)
		*_out_info = std::move(Parms._out_info);

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetAllBattlePassIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemID_BattlePass>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FItemID_BattlePass> UBattlePassHelper::GetAllBattlePassIDs(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetAllBattlePassIDs");

	Params::BattlePassHelper_GetAllBattlePassIDs Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetBattlePassCurrentWeek
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBattlePassHelper::GetBattlePassCurrentWeek(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetBattlePassCurrentWeek");

	Params::BattlePassHelper_GetBattlePassCurrentWeek Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetBattlePassInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattlePassInfo                  _out_info                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassHelper::GetBattlePassInfo(const class UObject* _world_ctx, const struct FItemID_BattlePass& _pass_id, struct FBattlePassInfo* _out_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetBattlePassInfo");

	Params::BattlePassHelper_GetBattlePassInfo Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_info != nullptr)
		*_out_info = std::move(Parms._out_info);

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetBattlePassLevelConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattlePassLevelConfig           _out_config                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassHelper::GetBattlePassLevelConfig(const struct FItemID_BattlePass& _pass_id, int32 _level, struct FBattlePassLevelConfig* _out_config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetBattlePassLevelConfig");

	Params::BattlePassHelper_GetBattlePassLevelConfig Parms{};

	Parms._pass_id = std::move(_pass_id);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_config != nullptr)
		*_out_config = std::move(Parms._out_config);

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetBattlePassMaxLevel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBattlePassHelper::GetBattlePassMaxLevel(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetBattlePassMaxLevel");

	Params::BattlePassHelper_GetBattlePassMaxLevel Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetBattlePassMissionConfig
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _week                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattlePassMissionConfig         _out_config                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassHelper::GetBattlePassMissionConfig(const struct FItemID_BattlePass& _pass_id, int32 _week, struct FBattlePassMissionConfig* _out_config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetBattlePassMissionConfig");

	Params::BattlePassHelper_GetBattlePassMissionConfig Parms{};

	Parms._pass_id = std::move(_pass_id);
	Parms._week = _week;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_config != nullptr)
		*_out_config = std::move(Parms._out_config);

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.GetNoMissionBattlePassIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemID_BattlePass>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FItemID_BattlePass> UBattlePassHelper::GetNoMissionBattlePassIDs(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "GetNoMissionBattlePassIDs");

	Params::BattlePassHelper_GetNoMissionBattlePassIDs Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattlePassHelper.IsActivedBattlePass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBattlePassHelper::IsActivedBattlePass(const class UObject* _world_ctx, const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattlePassHelper", "IsActivedBattlePass");

	Params::BattlePassHelper_IsActivedBattlePass Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BattleStoreBlueprintLibrary.SortGunListItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGunEntry_Main>           _entries                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FGunEntry_Main>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGunEntry_Main> UBattleStoreBlueprintLibrary::SortGunListItems(const class UObject* _world_ctx, const TArray<struct FGunEntry_Main>& _entries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BattleStoreBlueprintLibrary", "SortGunListItems");

	Params::BattleStoreBlueprintLibrary_SortGunListItems Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._entries = std::move(_entries);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ShopGunFilter.OnSelectedGunFilter
// (Final, Native, Protected)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopGunFilter::OnSelectedGunFilter(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopGunFilter", "OnSelectedGunFilter");

	Params::UI_ShopGunFilter_OnSelectedGunFilter Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BountyTDM_PlayerController.RPC_ALL_Bounty_Hacking
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _hacker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASafeBase*                        _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABountyTDM_PlayerController::RPC_ALL_Bounty_Hacking(class ACharaBase* _hacker, class ASafeBase* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BountyTDM_PlayerController", "RPC_ALL_Bounty_Hacking");

	Params::BountyTDM_PlayerController_RPC_ALL_Bounty_Hacking Parms{};

	Parms._hacker = _hacker;
	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BriefUser.GetCharaType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UBriefUser::GetCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetCharaType");

	Params::BriefUser_GetCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetEmblem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UBriefUser::GetEmblem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetEmblem");

	Params::BriefUser_GetEmblem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBriefUser::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetLevel");

	Params::BriefUser_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetNickname
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName UBriefUser::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetNickname");

	Params::BriefUser_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetNicknameFX
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UBriefUser::GetNicknameFX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetNicknameFX");

	Params::BriefUser_GetNicknameFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetPlayingAt
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUserPlayingAt                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserPlayingAt UBriefUser::GetPlayingAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetPlayingAt");

	Params::BriefUser_GetPlayingAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetProfileCard
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UBriefUser::GetProfileCard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetProfileCard");

	Params::BriefUser_GetProfileCard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetTier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETier                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETier UBriefUser::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetTier");

	Params::BriefUser_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefUser.GetUserID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UBriefUser::GetUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefUser", "GetUserID");

	Params::BriefUser_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomGameSlotBlueprintLibrary.IsEmptySlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCustomGameSlot                  _slot                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomGameSlotBlueprintLibrary::IsEmptySlot(const struct FCustomGameSlot& _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CustomGameSlotBlueprintLibrary", "IsEmptySlot");

	Params::CustomGameSlotBlueprintLibrary_IsEmptySlot Parms{};

	Parms._slot = std::move(_slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomGameSlotBlueprintLibrary.IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCustomGameSlotIndex             _index                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomGameSlotBlueprintLibrary::IsValid(const struct FCustomGameSlotIndex& _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CustomGameSlotBlueprintLibrary", "IsValid");

	Params::CustomGameSlotBlueprintLibrary_IsValid Parms{};

	Parms._index = std::move(_index);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomGameSlotBlueprintLibrary.ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCustomGameSlotIndex             _index                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UCustomGameSlotBlueprintLibrary::ToString(const struct FCustomGameSlotIndex& _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CustomGameSlotBlueprintLibrary", "ToString");

	Params::CustomGameSlotBlueprintLibrary_ToString Parms{};

	Parms._index = std::move(_index);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_TabBase.OnChangeActionSetting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_TabBase::OnChangeActionSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabBase", "OnChangeActionSetting");

	Params::UI_TabBase_OnChangeActionSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_TabBase.OnDiscoverEnemy
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _enemy                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _discovered                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_TabBase::OnDiscoverEnemy(class ACharaBase* _enemy, bool _discovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabBase", "OnDiscoverEnemy");

	Params::UI_TabBase_OnDiscoverEnemy Parms{};

	Parms._enemy = _enemy;
	Parms._discovered = _discovered;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_TabBase.OnShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_TabBase::OnShow(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabBase", "OnShow");

	Params::UI_TabBase_OnShow Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_TabBase.Show
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TabBase::Show(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabBase", "Show");

	Params::UI_TabBase_Show Parms{};

	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FovStaticMeshComponent.Get1PVMatrix
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FMatrix                          ModelMatrix                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FMatrix                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FMatrix UFovStaticMeshComponent::Get1PVMatrix(const struct FMatrix& ModelMatrix) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FovStaticMeshComponent", "Get1PVMatrix");

	Params::FovStaticMeshComponent_Get1PVMatrix Parms{};

	Parms.ModelMatrix = std::move(ModelMatrix);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.NPC_ActionDummy.AddTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANPC_ActionDummy::AddTarget(class ACharaBase* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_ActionDummy", "AddTarget");

	Params::NPC_ActionDummy_AddTarget Parms{};

	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NPC_ActionDummy.RemoveTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANPC_ActionDummy::RemoveTarget(class ACharaBase* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_ActionDummy", "RemoveTarget");

	Params::NPC_ActionDummy_RemoveTarget Parms{};

	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NPC_ActionDummy.SetAutoRepeatAttack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _on                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ANPC_ActionDummy::SetAutoRepeatAttack(bool _on)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_ActionDummy", "SetAutoRepeatAttack");

	Params::NPC_ActionDummy_SetAutoRepeatAttack Parms{};

	Parms._on = _on;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.NPC_ActionDummy.IsAutoRepeatingAttack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANPC_ActionDummy::IsAutoRepeatingAttack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_ActionDummy", "IsAutoRepeatingAttack");

	Params::NPC_ActionDummy_IsAutoRepeatingAttack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Survey.OnAnswerQuestion
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSurveyQuestion                  _question                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSurveyAnswer                    _answer                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Survey::OnAnswerQuestion(const struct FSurveyQuestion& _question, const struct FSurveyAnswer& _answer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Survey", "OnAnswerQuestion");

	Params::UI_Survey_OnAnswerQuestion Parms{};

	Parms._question = std::move(_question);
	Parms._answer = std::move(_answer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Survey.OnShowQuestion
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// ESurveyUIPhase                          _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSurveyQuestion                  _question                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Survey::OnShowQuestion(ESurveyUIPhase _phase, const struct FSurveyQuestion& _question)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Survey", "OnShowQuestion");

	Params::UI_Survey_OnShowQuestion Parms{};

	Parms._phase = _phase;
	Parms._question = std::move(_question);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Survey.SummitAnswer
// (Final, Native, Protected, BlueprintCallable)

void UUI_Survey::SummitAnswer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Survey", "SummitAnswer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Survey.GetCurrentPhase
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESurveyUIPhase                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESurveyUIPhase UUI_Survey::GetCurrentPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Survey", "GetCurrentPhase");

	Params::UI_Survey_GetCurrentPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.FilterGoodsObjects
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UGoodsObject*>             _goods_objects                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGoodsFilterInfo                 _filter                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class UGoodsObject*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UGoodsObject*> UShopHelper::FilterGoodsObjects(const class UObject* _world_ctx, const TArray<class UGoodsObject*>& _goods_objects, const struct FGoodsFilterInfo& _filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "FilterGoodsObjects");

	Params::ShopHelper_FilterGoodsObjects Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._goods_objects = std::move(_goods_objects);
	Parms._filter = std::move(_filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.FilterGoodsPeriod
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UGoodsObject*>             _goods_objects                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UGoodsObject*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UGoodsObject*> UShopHelper::FilterGoodsPeriod(const class UObject* _world_ctx, const TArray<class UGoodsObject*>& _goods_objects)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "FilterGoodsPeriod");

	Params::ShopHelper_FilterGoodsPeriod Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._goods_objects = std::move(_goods_objects);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.GetGoodsOwningInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_Goods                    _goods_define                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EGoodsOwningInfo                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoodsOwningInfo UShopHelper::GetGoodsOwningInfo(const class UObject* _world_ctx, const struct FConfig_Goods& _goods_define)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "GetGoodsOwningInfo");

	Params::ShopHelper_GetGoodsOwningInfo Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._goods_define = std::move(_goods_define);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.GetUITags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGoodsTag                        _goods_tag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<EItemUITag>                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EItemUITag> UShopHelper::GetUITags(const struct FGoodsTag& _goods_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "GetUITags");

	Params::ShopHelper_GetUITags Parms{};

	Parms._goods_tag = std::move(_goods_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.HasAnyGoodsTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGoodsTag                        _goods_tag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UShopHelper::HasAnyGoodsTag(const struct FGoodsTag& _goods_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "HasAnyGoodsTag");

	Params::ShopHelper_HasAnyGoodsTag Parms{};

	Parms._goods_tag = std::move(_goods_tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.IsBundleGoods
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGoodsObject*                     _goods                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UShopHelper::IsBundleGoods(class UGoodsObject* _goods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "IsBundleGoods");

	Params::ShopHelper_IsBundleGoods Parms{};

	Parms._goods = _goods;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.IsPurchasableCurrency
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECurrencyTypes                          _currency_type                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UShopHelper::IsPurchasableCurrency(const ECurrencyTypes _currency_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "IsPurchasableCurrency");

	Params::ShopHelper_IsPurchasableCurrency Parms{};

	Parms._currency_type = _currency_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.IsPurchasableFromLevelCondition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_Goods                    _goods_define                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UShopHelper::IsPurchasableFromLevelCondition(const class UObject* _world_ctx, const struct FConfig_Goods& _goods_define)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "IsPurchasableFromLevelCondition");

	Params::ShopHelper_IsPurchasableFromLevelCondition Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._goods_define = std::move(_goods_define);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.MakeCurrencyItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemIDRef                       _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _currency_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UShopHelper::MakeCurrencyItem(const struct FItemIDRef& _currency_id, int32 _currency_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "MakeCurrencyItem");

	Params::ShopHelper_MakeCurrencyItem Parms{};

	Parms._currency_id = std::move(_currency_id);
	Parms._currency_value = _currency_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.MakeInvenItemFromRewardItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRewardItem                      _reward_item                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UShopHelper::MakeInvenItemFromRewardItem(const struct FRewardItem& _reward_item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "MakeInvenItemFromRewardItem");

	Params::ShopHelper_MakeInvenItemFromRewardItem Parms{};

	Parms._reward_item = std::move(_reward_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopHelper.ShowCantPurchasableMessageBox
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _ask_quick_purchase                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UShopHelper::ShowCantPurchasableMessageBox(const class UObject* _world_ctx, const struct FItemID_Currency& _currency_id, bool _ask_quick_purchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "ShowCantPurchasableMessageBox");

	Params::ShopHelper_ShowCantPurchasableMessageBox Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._currency_id = std::move(_currency_id);
	Parms._ask_quick_purchase = _ask_quick_purchase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ShopHelper.ShowPurchaseFailureToastMessage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UShopHelper::ShowPurchaseFailureToastMessage(const class UObject* _world_ctx, const struct FItemID_Currency& _currency_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "ShowPurchaseFailureToastMessage");

	Params::ShopHelper_ShowPurchaseFailureToastMessage Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._currency_id = std::move(_currency_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ShopHelper.SortGoodsObjects
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UGoodsObject*>             _goods_list                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EShopSortType                           _sort_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_ascending                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UGoodsObject*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UGoodsObject*> UShopHelper::SortGoodsObjects(const class UObject* _world_ctx, TArray<class UGoodsObject*>* _goods_list, EShopSortType _sort_type, bool _is_ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopHelper", "SortGoodsObjects");

	Params::ShopHelper_SortGoodsObjects Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._sort_type = _sort_type;
	Parms._is_ascending = _is_ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_goods_list != nullptr)
		*_goods_list = std::move(Parms._goods_list);

	return Parms.ReturnValue;
}


// Function Stigma.LVData_GunPreset.Config
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_GunPreset::Config(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunPreset", "Config");

	Params::LVData_GunPreset_Config Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_GunPreset.GetGunObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* ULVData_GunPreset::GetGunObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunPreset", "GetGunObject");

	Params::LVData_GunPreset_GetGunObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ModeUtil.IsSatisfied
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModeUnlockCondition             _condition                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModeUtil::IsSatisfied(const class UObject* _world_ctx, const struct FModeUnlockCondition& _condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModeUtil", "IsSatisfied");

	Params::ModeUtil_IsSatisfied Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._condition = std::move(_condition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ModeUtil.ToText
// (Final, Native, Static, Private, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FModeUnlockCondition             _condition                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UModeUtil::ToText(const class UObject* _world_ctx, const struct FModeUnlockCondition& _condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ModeUtil", "ToText");

	Params::ModeUtil_ToText Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._condition = std::move(_condition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PooledBullethole.Deactivate
// (Final, Native, Public, BlueprintCallable)

void APooledBullethole::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PooledBullethole", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Marker_Chara.DetermineState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaMarkerState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaMarkerState UMarker_Chara::DetermineState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Marker_Chara", "DetermineState");

	Params::Marker_Chara_DetermineState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Marker_Chara.GetMarkerColor
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UMarker_Chara::GetMarkerColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Marker_Chara", "GetMarkerColor");

	Params::Marker_Chara_GetMarkerColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Marker_Chara.GetSide
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlayerSide                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerSide UMarker_Chara::GetSide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Marker_Chara", "GetSide");

	Params::Marker_Chara_GetSide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Marker_Chara.IsBountyTarget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMarker_Chara::IsBountyTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Marker_Chara", "IsBountyTarget");

	Params::Marker_Chara_IsBountyTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Occupation_GameMode.AddOccupyScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _additional_score                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOccupation_GameMode::AddOccupyScore(ETeams _Team, int32 _additional_score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_GameMode", "AddOccupyScore");

	Params::Occupation_GameMode_AddOccupyScore Parms{};

	Parms._Team = _Team;
	Parms._additional_score = _additional_score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Occupation_GameMode.NotifyOccupyArea
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeams                                  _prev_team                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  _curr_team                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _occupant                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOccupationArea*                  _area                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOccupation_GameMode::NotifyOccupyArea(ETeams _prev_team, ETeams _curr_team, class ACharaBase* _occupant, class AOccupationArea* _area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_GameMode", "NotifyOccupyArea");

	Params::Occupation_GameMode_NotifyOccupyArea Parms{};

	Parms._prev_team = _prev_team;
	Parms._curr_team = _curr_team;
	Parms._occupant = _occupant;
	Parms._area = _area;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserProfile.GetCharaBody
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUserProfile::GetCharaBody() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetCharaBody");

	Params::UserProfile_GetCharaBody Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetCharaHead
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUserProfile::GetCharaHead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetCharaHead");

	Params::UserProfile_GetCharaHead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetCharaType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UUserProfile::GetCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetCharaType");

	Params::UserProfile_GetCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetElapsedCreateTimeString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUserProfile::GetElapsedCreateTimeString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetElapsedCreateTimeString");

	Params::UserProfile_GetElapsedCreateTimeString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetEmblem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUserProfile::GetEmblem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetEmblem");

	Params::UserProfile_GetEmblem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetGunSpec
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec UUserProfile::GetGunSpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetGunSpec");

	Params::UserProfile_GetGunSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserProfile::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetLevel");

	Params::UserProfile_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetNickname
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName UUserProfile::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetNickname");

	Params::UserProfile_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetNicknameFX
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUserProfile::GetNicknameFX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetNicknameFX");

	Params::UserProfile_GetNicknameFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetPlayingAt
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUserPlayingAt                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserPlayingAt UUserProfile::GetPlayingAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetPlayingAt");

	Params::UserProfile_GetPlayingAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetProfileCard
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUserProfile::GetProfileCard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetProfileCard");

	Params::UserProfile_GetProfileCard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetProfileType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUserProfileType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserProfileType UUserProfile::GetProfileType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetProfileType");

	Params::UserProfile_GetProfileType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetSocialPriorityLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserProfile::GetSocialPriorityLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetSocialPriorityLevel");

	Params::UserProfile_GetSocialPriorityLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetTier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETier                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETier UUserProfile::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetTier");

	Params::UserProfile_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.GetUserID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UUserProfile::GetUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "GetUserID");

	Params::UserProfile_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.HasValidCharacter
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::HasValidCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "HasValidCharacter");

	Params::UserProfile_HasValidCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.HasValidProfile
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::HasValidProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "HasValidProfile");

	Params::UserProfile_HasValidProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.IsMine
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::IsMine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "IsMine");

	Params::UserProfile_IsMine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.IsOnline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::IsOnline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "IsOnline");

	Params::UserProfile_IsOnline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.IsPlayingAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUserPlayingAt                          _playing_at                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::IsPlayingAt(EUserPlayingAt _playing_at) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "IsPlayingAt");

	Params::UserProfile_IsPlayingAt Parms{};

	Parms._playing_at = _playing_at;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.IsPlayingAtBattle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::IsPlayingAtBattle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "IsPlayingAtBattle");

	Params::UserProfile_IsPlayingAtBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfile.IsPlayingAtLobby
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserProfile::IsPlayingAtLobby() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfile", "IsPlayingAtLobby");

	Params::UserProfile_IsPlayingAtLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RewardedItems.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRewardPlain                     _reward_plain                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RewardedItems::InitWidget(const struct FRewardPlain& _reward_plain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardedItems", "InitWidget");

	Params::UI_RewardedItems_InitWidget Parms{};

	Parms._reward_plain = std::move(_reward_plain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardedItems.StartFalling
// (Final, Native, Public, BlueprintCallable)

void UUI_RewardedItems::StartFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardedItems", "StartFalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.FindGoodsObject
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGoodsID                         _goods_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGoodsObject*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGoodsObject* UUI_ShopPage::FindGoodsObject(const struct FGoodsID& _goods_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "FindGoodsObject");

	Params::UI_ShopPage_FindGoodsObject Parms{};

	Parms._goods_id = std::move(_goods_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ShopPage.OnClickSortOrder
// (Final, Native, Protected)

void UUI_ShopPage::OnClickSortOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnClickSortOrder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.OnMainTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::OnMainTabChanged(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnMainTabChanged");

	Params::UI_ShopPage_OnMainTabChanged Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.OnSelectGunFilter
// (Final, Native, Protected)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::OnSelectGunFilter(EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnSelectGunFilter");

	Params::UI_ShopPage_OnSelectGunFilter Parms{};

	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.OnSelectionSortMenu
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::OnSelectionSortMenu(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnSelectionSortMenu");

	Params::UI_ShopPage_OnSelectionSortMenu Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.OnSelectMasterFilter
// (Final, Native, Protected)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::OnSelectMasterFilter(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnSelectMasterFilter");

	Params::UI_ShopPage_OnSelectMasterFilter Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.OnSubTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::OnSubTabChanged(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnSubTabChanged");

	Params::UI_ShopPage_OnSubTabChanged Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.OnUpdateGoods
// (Final, Native, Protected)
// Parameters:
// EUserEvent                              _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::OnUpdateGoods(EUserEvent _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "OnUpdateGoods");

	Params::UI_ShopPage_OnUpdateGoods Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.ScrollToGoods
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGoodsID                         _goods_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::ScrollToGoods(const struct FGoodsID& _goods_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "ScrollToGoods");

	Params::UI_ShopPage_ScrollToGoods Parms{};

	Parms._goods_id = std::move(_goods_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.SelectCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGoodsCategory                          _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::SelectCategory(EGoodsCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "SelectCategory");

	Params::UI_ShopPage_SelectCategory Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.SelectSubCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _tab_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopPage::SelectSubCategory(class FName _tab_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "SelectSubCategory");

	Params::UI_ShopPage_SelectSubCategory Parms{};

	Parms._tab_id = _tab_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopPage.UpdateRecommendGoodsList
// (Event, Protected, BlueprintEvent)

void UUI_ShopPage::UpdateRecommendGoodsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopPage", "UpdateRecommendGoodsList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.GoToWidgetHelper.GotoMasterObtain
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoToWidgetHelper::GotoMasterObtain(class UObject* _outer, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoToWidgetHelper", "GotoMasterObtain");

	Params::GoToWidgetHelper_GotoMasterObtain Parms{};

	Parms._outer = _outer;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoToWidgetHelper.GoToWidget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _go_to_widget_id                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   _detailer_params                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGoToWidgetHelper::GoToWidget(class UObject* _outer, const class FName& _go_to_widget_id, const TArray<class FString>& _detailer_params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GoToWidgetHelper", "GoToWidget");

	Params::GoToWidgetHelper_GoToWidget Parms{};

	Parms._outer = _outer;
	Parms._go_to_widget_id = _go_to_widget_id;
	Parms._detailer_params = std::move(_detailer_params);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectWeaponPanel.OnChangedGun
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SelectWeaponPanel::OnChangedGun(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectWeaponPanel", "OnChangedGun");

	Params::UI_SelectWeaponPanel_OnChangedGun Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectWeaponPanel.OnChangedMaster
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _selected_master_idx                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SelectWeaponPanel::OnChangedMaster(bool _is_selected, ECharaType _chara_type, int32 _selected_master_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectWeaponPanel", "OnChangedMaster");

	Params::UI_SelectWeaponPanel_OnChangedMaster Parms{};

	Parms._is_selected = _is_selected;
	Parms._chara_type = _chara_type;
	Parms._selected_master_idx = _selected_master_idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectWeaponPanel.OnHoverGunPresetItem
// (Final, Native, Protected)
// Parameters:
// class UObject*                          _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_hover                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SelectWeaponPanel::OnHoverGunPresetItem(class UObject* _item, bool _is_hover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectWeaponPanel", "OnHoverGunPresetItem");

	Params::UI_SelectWeaponPanel_OnHoverGunPresetItem Parms{};

	Parms._item = _item;
	Parms._is_hover = _is_hover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectWeaponPanel.OnPlayerStateChanged
// (Final, Native, Protected)
// Parameters:
// EChangedPlayerState                     _reason                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SelectWeaponPanel::OnPlayerStateChanged(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectWeaponPanel", "OnPlayerStateChanged");

	Params::UI_SelectWeaponPanel_OnPlayerStateChanged Parms{};

	Parms._reason = _reason;
	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectWeaponPanel.SetSelectMaster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _master_idx                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SelectWeaponPanel::SetSelectMaster(int32 _master_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectWeaponPanel", "SetSelectMaster");

	Params::UI_SelectWeaponPanel_SetSelectMaster Parms{};

	Parms._master_idx = _master_idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectWeaponPanel.UpdateDetail
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGunObject*                       _origin_gun_obj                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _compared_gun_obj                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SelectWeaponPanel::UpdateDetail(class UGunObject* _origin_gun_obj, class UGunObject* _compared_gun_obj, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectWeaponPanel", "UpdateDetail");

	Params::UI_SelectWeaponPanel_UpdateDetail Parms{};

	Parms._origin_gun_obj = _origin_gun_obj;
	Parms._compared_gun_obj = _compared_gun_obj;
	Parms._chara_type = _chara_type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.BuffBase.ActivateBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuffBase::ActivateBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "ActivateBuff");

	Params::BuffBase_ActivateBuff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.DeactivateBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuffBase::DeactivateBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "DeactivateBuff");

	Params::BuffBase_DeactivateBuff Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.GetActiveTimeProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBuffBase::GetActiveTimeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "GetActiveTimeProgress");

	Params::BuffBase_GetActiveTimeProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.OnFirstUpdate
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBuffStats                       _buff_stats                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UBuffBase::OnFirstUpdate(float _delta, struct FBuffStats* _buff_stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "OnFirstUpdate");

	Params::BuffBase_OnFirstUpdate Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_buff_stats != nullptr)
		*_buff_stats = std::move(Parms._buff_stats);
}


// Function Stigma.BuffBase.OnUpdateBuff
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBuffStats                       _buff_stats                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UBuffBase::OnUpdateBuff(float _delta, struct FBuffStats* _buff_stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "OnUpdateBuff");

	Params::BuffBase_OnUpdateBuff Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_buff_stats != nullptr)
		*_buff_stats = std::move(Parms._buff_stats);
}


// Function Stigma.BuffBase.ResetForRespawn
// (Native, Public, BlueprintCallable)

void UBuffBase::ResetForRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "ResetForRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BuffBase.GetBuffOptions
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _buff_level                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBuffEffectOption>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FBuffEffectOption> UBuffBase::GetBuffOptions(int32 _buff_level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "GetBuffOptions");

	Params::BuffBase_GetBuffOptions Parms{};

	Parms._buff_level = _buff_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBuffBase::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "GetDuration");

	Params::BuffBase_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.GetLimitType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBuffLimitType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBuffLimitType UBuffBase::GetLimitType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "GetLimitType");

	Params::BuffBase_GetLimitType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.IsActivating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuffBase::IsActivating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "IsActivating");

	Params::BuffBase_IsActivating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BuffBase.IsProperVariable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuffBase::IsProperVariable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuffBase", "IsProperVariable");

	Params::BuffBase_IsProperVariable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RoundResultBase.InitWidget
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FRoundResult                     _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   _override_life_time                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RoundResultBase::InitWidget(const struct FRoundResult& _result, float _override_life_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RoundResultBase", "InitWidget");

	Params::UI_RoundResultBase_InitWidget Parms{};

	Parms._result = std::move(_result);
	Parms._override_life_time = _override_life_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TDM_MainScore.UpdateWinningTeam
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_tie                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _my_team                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TDM_MainScore::UpdateWinningTeam(bool _is_tie, bool _my_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TDM_MainScore", "UpdateWinningTeam");

	Params::UI_TDM_MainScore_UpdateWinningTeam Parms{};

	Parms._is_tie = _is_tie;
	Parms._my_team = _my_team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_TextCheckBoxGroupBase.ClearAllSelections
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxGroupBase::ClearAllSelections(bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxGroupBase", "ClearAllSelections");

	Params::Ctrl_TextCheckBoxGroupBase_ClearAllSelections Parms{};

	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxGroupBase.RegisterOnStateChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_TextCheckBoxBase* _check_box, class FName& _id, bool _is_checked)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxGroupBase::RegisterOnStateChange(const TDelegate<void(class UCtrl_TextCheckBoxBase* _check_box, class FName& _id, bool _is_checked)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxGroupBase", "RegisterOnStateChange");

	Params::Ctrl_TextCheckBoxGroupBase_RegisterOnStateChange Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxGroupBase.SetCheckStateByID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_check                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxGroupBase::SetCheckStateByID(const class FName& _id, bool _is_check, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxGroupBase", "SetCheckStateByID");

	Params::Ctrl_TextCheckBoxGroupBase_SetCheckStateByID Parms{};

	Parms._id = _id;
	Parms._is_check = _is_check;
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxGroupBase.Setup
// (Final, Native, Public, BlueprintCallable)

void UCtrl_TextCheckBoxGroupBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxGroupBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialContainer.OnPartyEntered
// (Final, Native, Protected)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialContainer::OnPartyEntered(const class UBriefParty* _party)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialContainer", "OnPartyEntered");

	Params::UI_SocialContainer_OnPartyEntered Parms{};

	Parms._party = _party;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardMissionSlot.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RewardMissionSlot::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardMissionSlot", "SetDesc");

	Params::UI_RewardMissionSlot_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RewardMissionSlot.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RewardMissionSlot::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardMissionSlot", "SetTitle");

	Params::UI_RewardMissionSlot_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.LVData_CompetitionRankingItem.Config
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCompetitionPlayer*               _entry                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_CompetitionRankingItem::Config(ECompetitionType _competition_type, class UCompetitionPlayer* _entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_CompetitionRankingItem", "Config");

	Params::LVData_CompetitionRankingItem_Config Parms{};

	Parms._competition_type = _competition_type;
	Parms._entry = _entry;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InteractionComponent.GetOrCreateInteractionUI
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUI_Interaction*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_Interaction* UInteractionComponent::GetOrCreateInteractionUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "GetOrCreateInteractionUI");

	Params::InteractionComponent_GetOrCreateInteractionUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InteractionComponent.Lock
// (Final, Native, Public, BlueprintCallable)

void UInteractionComponent::Lock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "Lock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InteractionComponent.RPC_ALL_TryInteract
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _interactive_target                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _key_pressed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInteractionResult                      _result                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionComponent::RPC_ALL_TryInteract(class AActor* _interactive_target, bool _key_pressed, int32 _param, EInteractionResult _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "RPC_ALL_TryInteract");

	Params::InteractionComponent_RPC_ALL_TryInteract Parms{};

	Parms._interactive_target = _interactive_target;
	Parms._key_pressed = _key_pressed;
	Parms._param = _param;
	Parms._result = _result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InteractionComponent.RPC_SERVER_TryInteract
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AActor*                           _interactive_target                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _key_pressed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionComponent::RPC_SERVER_TryInteract(class AActor* _interactive_target, bool _key_pressed, int32 _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "RPC_SERVER_TryInteract");

	Params::InteractionComponent_RPC_SERVER_TryInteract Parms{};

	Parms._interactive_target = _interactive_target;
	Parms._key_pressed = _key_pressed;
	Parms._param = _param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InteractionComponent.TryInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _pressed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInteractionComponent::TryInteraction(bool _pressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "TryInteraction");

	Params::InteractionComponent_TryInteraction Parms{};

	Parms._pressed = _pressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InteractionComponent.Unlock
// (Final, Native, Public, BlueprintCallable)

void UInteractionComponent::Unlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "Unlock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InteractionComponent.GetInteractiveTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UInteractionComponent::GetInteractiveTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "GetInteractiveTarget");

	Params::InteractionComponent_GetInteractiveTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InteractionComponent.GetLookAtRay
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          _out_start                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _out_end                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInteractionComponent::GetLookAtRay(struct FVector* _out_start, struct FVector* _out_end) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionComponent", "GetLookAtRay");

	Params::InteractionComponent_GetLookAtRay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_start != nullptr)
		*_out_start = std::move(Parms._out_start);

	if (_out_end != nullptr)
		*_out_end = std::move(Parms._out_end);
}


// Function Stigma.UI_ToastMessageBase.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_show                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ToastMessageBase::SetActive(bool _is_show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ToastMessageBase", "SetActive");

	Params::UI_ToastMessageBase_SetActive Parms{};

	Parms._is_show = _is_show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ToastMessageBase.SetScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _scale                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ToastMessageBase::SetScale(float _scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ToastMessageBase", "SetScale");

	Params::UI_ToastMessageBase_SetScale Parms{};

	Parms._scale = _scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Debug_DamageViewerComponent.OnActivation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDebug_DamageViewerType                 _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDebug_DamageViewerComponent::OnActivation(bool _is_activated, EDebug_DamageViewerType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Debug_DamageViewerComponent", "OnActivation");

	Params::Debug_DamageViewerComponent_OnActivation Parms{};

	Parms._is_activated = _is_activated;
	Parms._type = _type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Debug_DamageViewerComponent.OnAddDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDamagedData                     _damage                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDebug_DamageViewerComponent::OnAddDamage(const struct FDamagedData& _damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Debug_DamageViewerComponent", "OnAddDamage");

	Params::Debug_DamageViewerComponent_OnAddDamage Parms{};

	Parms._damage = std::move(_damage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Debug_DamageViewerComponent.Reset
// (Event, Public, BlueprintEvent)

void UDebug_DamageViewerComponent::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Debug_DamageViewerComponent", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_TDM_SubScoreContainer.SetBGBrush
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _brush                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_TDM_SubScoreContainer::SetBGBrush(const struct FSlateBrush& _brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TDM_SubScoreContainer", "SetBGBrush");

	Params::UI_TDM_SubScoreContainer_SetBGBrush Parms{};

	Parms._brush = std::move(_brush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.GunnerSystemComponent_Snipe.OnRep_ElapsedChargingTime
// (Final, Native, Protected)

void UGunnerSystemComponent_Snipe::OnRep_ElapsedChargingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunnerSystemComponent_Snipe", "OnRep_ElapsedChargingTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunnerSystemComponent_Snipe.Setter_ElapsedChargingTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _elapsed_time                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunnerSystemComponent_Snipe::Setter_ElapsedChargingTime(float _elapsed_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunnerSystemComponent_Snipe", "Setter_ElapsedChargingTime");

	Params::GunnerSystemComponent_Snipe_Setter_ElapsedChargingTime Parms{};

	Parms._elapsed_time = _elapsed_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HitDataBlueprintLibrary.GetDamage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FDamageDef                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FDamageDef UHitDataBlueprintLibrary::GetDamage(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HitDataBlueprintLibrary", "GetDamage");

	Params::HitDataBlueprintLibrary_GetDamage Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CameraBoomComponent.Reset
// (Final, Native, Public, BlueprintCallable)

void UCameraBoomComponent::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBoomComponent", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CameraBoomComponent.SetCameraDirectingParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCameraDirectingParams           Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UCameraBoomComponent::SetCameraDirectingParams(const struct FCameraDirectingParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBoomComponent", "SetCameraDirectingParams");

	Params::CameraBoomComponent_SetCameraDirectingParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CameraBoomComponent.SetMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraWalkMode                         _new_mode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _smoothing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCameraBoomComponent::SetMode(ECameraWalkMode _new_mode, bool _smoothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBoomComponent", "SetMode");

	Params::CameraBoomComponent_SetMode Parms{};

	Parms._new_mode = _new_mode;
	Parms._smoothing = _smoothing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CameraBoomComponent.SetSideViewAimLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _loc                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCameraBoomComponent::SetSideViewAimLocation(const struct FVector& _loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBoomComponent", "SetSideViewAimLocation");

	Params::CameraBoomComponent_SetSideViewAimLocation Parms{};

	Parms._loc = std::move(_loc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CameraBoomComponent.SetSideViewTargetLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _loc                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCameraBoomComponent::SetSideViewTargetLocation(const struct FVector& _loc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBoomComponent", "SetSideViewTargetLocation");

	Params::CameraBoomComponent_SetSideViewTargetLocation Parms{};

	Parms._loc = std::move(_loc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CameraBoomComponent.GetMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraWalkMode                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECameraWalkMode UCameraBoomComponent::GetMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBoomComponent", "GetMode");

	Params::CameraBoomComponent_GetMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.ChangeInputMappingContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*                     _local_player                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIMCType                                _imc_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_active                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyBindingSubsys::ChangeInputMappingContext(class ULocalPlayer* _local_player, EIMCType _imc_type, bool _is_active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "ChangeInputMappingContext");

	Params::KeyBindingSubsys_ChangeInputMappingContext Parms{};

	Parms._local_player = _local_player;
	Parms._imc_type = _imc_type;
	Parms._is_active = _is_active;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.KeyBindingSubsys.FindKeyMapping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInputAction                            _input_action                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputSlotType                          _slot_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMapping                      ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKeyMapping UKeyBindingSubsys::FindKeyMapping(EInputAction _input_action, EInputSlotType _slot_type, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "FindKeyMapping");

	Params::KeyBindingSubsys_FindKeyMapping Parms{};

	Parms._input_action = _input_action;
	Parms._slot_type = _slot_type;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.FindKeyMappings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInputAction                            _input_action                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMappings                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FKeyMappings UKeyBindingSubsys::FindKeyMappings(EInputAction _input_action, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "FindKeyMappings");

	Params::KeyBindingSubsys_FindKeyMappings Parms{};

	Parms._input_action = _input_action;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.GetKeyByIMC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*                     _local_player                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIMCType                                _imc_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputAction                            _input_action                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UKeyBindingSubsys::GetKeyByIMC(class ULocalPlayer* _local_player, EIMCType _imc_type, EInputAction _input_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "GetKeyByIMC");

	Params::KeyBindingSubsys_GetKeyByIMC Parms{};

	Parms._local_player = _local_player;
	Parms._imc_type = _imc_type;
	Parms._input_action = _input_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.GetKeyDisplayText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             _Key                                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UKeyBindingSubsys::GetKeyDisplayText(const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "GetKeyDisplayText");

	Params::KeyBindingSubsys_GetKeyDisplayText Parms{};

	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.HasMappingContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*                     _local_player                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EIMCType                                _imc_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyBindingSubsys::HasMappingContext(class ULocalPlayer* _local_player, EIMCType _imc_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "HasMappingContext");

	Params::KeyBindingSubsys_HasMappingContext Parms{};

	Parms._local_player = _local_player;
	Parms._imc_type = _imc_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.IsCombinationKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             _Key                                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyBindingSubsys::IsCombinationKey(const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "IsCombinationKey");

	Params::KeyBindingSubsys_IsCombinationKey Parms{};

	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.IsUsedInterceptor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyBindingSubsys::IsUsedInterceptor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "IsUsedInterceptor");

	Params::KeyBindingSubsys_IsUsedInterceptor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.IsValidInputKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             _Key                                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UKeyBindingSubsys::IsValidInputKey(const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "IsValidInputKey");

	Params::KeyBindingSubsys_IsValidInputKey Parms{};

	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyBindingSubsys.RequestInputKeyInterceptor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCtrl_OptionKeyBindBase*          _host                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyBindingSubsys::RequestInputKeyInterceptor(class UCtrl_OptionKeyBindBase* _host)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "RequestInputKeyInterceptor");

	Params::KeyBindingSubsys_RequestInputKeyInterceptor Parms{};

	Parms._host = _host;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.KeyBindingSubsys.StopInputKeyInterceptor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_roll_back                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_update_key_mapping                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UKeyBindingSubsys::StopInputKeyInterceptor(bool _is_roll_back, bool _is_update_key_mapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "StopInputKeyInterceptor");

	Params::KeyBindingSubsys_StopInputKeyInterceptor Parms{};

	Parms._is_roll_back = _is_roll_back;
	Parms._is_update_key_mapping = _is_update_key_mapping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.KeyBindingSubsys.ToastDisableKey
// (Final, Native, Public, BlueprintCallable)

void UKeyBindingSubsys::ToastDisableKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyBindingSubsys", "ToastDisableKey");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CamMesh.GetCamIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACamMesh::GetCamIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CamMesh", "GetCamIndex");

	Params::CamMesh_GetCamIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Tooltip.AddTooltipKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTooltipKeyInfo                  _key_info                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Tooltip::AddTooltipKey(const struct FTooltipKeyInfo& _key_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip", "AddTooltipKey");

	Params::UI_Tooltip_AddTooltipKey Parms{};

	Parms._key_info = std::move(_key_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Tooltip.ClearTooltipKeys
// (Final, Native, Public, BlueprintCallable)

void UUI_Tooltip::ClearTooltipKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip", "ClearTooltipKeys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Tooltip.OnShowTooltip
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Tooltip::OnShowTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip", "OnShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_Tooltip.SetDesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _Desc                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Tooltip::SetDesc(const class FText& _Desc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip", "SetDesc");

	Params::UI_Tooltip_SetDesc Parms{};

	Parms._Desc = std::move(_Desc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Tooltip.SetTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _Title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Tooltip::SetTitle(const class FText& _Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip", "SetTitle");

	Params::UI_Tooltip_SetTitle Parms{};

	Parms._Title = std::move(_Title);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Tooltip.SetWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _width                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Tooltip::SetWidth(float _width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip", "SetWidth");

	Params::UI_Tooltip_SetWidth Parms{};

	Parms._width = _width;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_GameMode.OnMissionUpdated
// (Final, Native, Protected)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _mission                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AChallenge_GameMode::OnMissionUpdated(EMissionUpdateType _type, class UMission* _mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_GameMode", "OnMissionUpdated");

	Params::Challenge_GameMode_OnMissionUpdated Parms{};

	Parms._type = _type;
	Parms._mission = _mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_GameMode.GetCharConfig_AI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_Challenge_AIChara        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FConfig_Challenge_AIChara AChallenge_GameMode::GetCharConfig_AI(int32 _index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_GameMode", "GetCharConfig_AI");

	Params::Challenge_GameMode_GetCharConfig_AI Parms{};

	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_GameMode.GetCurrentWaveIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AChallenge_GameMode::GetCurrentWaveIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_GameMode", "GetCurrentWaveIndex");

	Params::Challenge_GameMode_GetCurrentWaveIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_GameMode.GetCurrentWaves
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FChallengeWaves                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FChallengeWaves AChallenge_GameMode::GetCurrentWaves() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_GameMode", "GetCurrentWaves");

	Params::Challenge_GameMode_GetCurrentWaves Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_GameMode.GetNextWaves
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FChallengeWaves                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FChallengeWaves AChallenge_GameMode::GetNextWaves() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_GameMode", "GetNextWaves");

	Params::Challenge_GameMode_GetNextWaves Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_GameMode.GetSpawnPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerStart_AI*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerStart_AI* AChallenge_GameMode::GetSpawnPoint(int32 _index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_GameMode", "GetSpawnPoint");

	Params::Challenge_GameMode_GetSpawnPoint Parms{};

	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.DoorBase.Close
// (Final, Native, Public, BlueprintCallable)

void ADoorBase::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.DoorBase.InitDoor
// (Final, Native, Protected, BlueprintCallable)

void ADoorBase::InitDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase", "InitDoor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.DoorBase.OnRep_IsOpened
// (Final, Native, Protected)

void ADoorBase::OnRep_IsOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase", "OnRep_IsOpened");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.DoorBase.Open
// (Final, Native, Public, BlueprintCallable)

void ADoorBase::Open()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase", "Open");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.DoorBase.Setter_IsOpened
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_opened                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADoorBase::Setter_IsOpened(bool _is_opened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DoorBase", "Setter_IsOpened");

	Params::DoorBase_Setter_IsOpened Parms{};

	Parms._is_opened = _is_opened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TextDialogue.SetSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _Speed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TextDialogue::SetSpeed(int32 _Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TextDialogue", "SetSpeed");

	Params::UI_TextDialogue_SetSpeed Parms{};

	Parms._Speed = _Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TextDialogue.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_TextDialogue::SetText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TextDialogue", "SetText");

	Params::UI_TextDialogue_SetText Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TextDialogue_Mission.GetMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMission*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMission* UUI_TextDialogue_Mission::GetMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TextDialogue_Mission", "GetMission");

	Params::UI_TextDialogue_Mission_GetMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_PlayerController.OnFinishRound
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FChallengeResult                 _prev                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FChallengeResult                 _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AChallenge_PlayerController::OnFinishRound(const struct FChallengeResult& _prev, const struct FChallengeResult& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "OnFinishRound");

	Params::Challenge_PlayerController_OnFinishRound Parms{};

	Parms._prev = std::move(_prev);
	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_PlayerController.RPC_CLIENT_ChallengeResult
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// TArray<struct FACK_ChallengeRead>       _top3                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _rankers                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AChallenge_PlayerController::RPC_CLIENT_ChallengeResult(const TArray<struct FACK_ChallengeRead>& _top3, const TArray<struct FACK_ChallengeRead>& _rankers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "RPC_CLIENT_ChallengeResult");

	Params::Challenge_PlayerController_RPC_CLIENT_ChallengeResult Parms{};

	Parms._top3 = std::move(_top3);
	Parms._rankers = std::move(_rankers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_PlayerController.RPC_CLIENT_FinishRound
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FChallengeResult                 _prev                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FChallengeResult                 _result                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AChallenge_PlayerController::RPC_CLIENT_FinishRound(const struct FChallengeResult& _prev, const struct FChallengeResult& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "RPC_CLIENT_FinishRound");

	Params::Challenge_PlayerController_RPC_CLIENT_FinishRound Parms{};

	Parms._prev = std::move(_prev);
	Parms._result = std::move(_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_PlayerController.RPC_SERVER_DriveNextRound
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                                    _is_round_clear                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AChallenge_PlayerController::RPC_SERVER_DriveNextRound(bool _is_round_clear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "RPC_SERVER_DriveNextRound");

	Params::Challenge_PlayerController_RPC_SERVER_DriveNextRound Parms{};

	Parms._is_round_clear = _is_round_clear;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_PlayerController.RPC_SERVER_FinishChallengeMode
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AChallenge_PlayerController::RPC_SERVER_FinishChallengeMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "RPC_SERVER_FinishChallengeMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_PlayerController.RPC_SERVER_StartRound
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AChallenge_PlayerController::RPC_SERVER_StartRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "RPC_SERVER_StartRound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_PlayerController.ShowChallengeResult
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FACK_ChallengeRead>       _top3                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _rankers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AChallenge_PlayerController::ShowChallengeResult(const TArray<struct FACK_ChallengeRead>& _top3, const TArray<struct FACK_ChallengeRead>& _rankers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerController", "ShowChallengeResult");

	Params::Challenge_PlayerController_ShowChallengeResult Parms{};

	Parms._top3 = std::move(_top3);
	Parms._rankers = std::move(_rankers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Challenge_PlayerState.GetBattleResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBattleResult_Challenge    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBattleResult_Challenge AChallenge_PlayerState::GetBattleResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerState", "GetBattleResult");

	Params::Challenge_PlayerState_GetBattleResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_PlayerState.GetBounsBoosterCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AChallenge_PlayerState::GetBounsBoosterCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_PlayerState", "GetBounsBoosterCount");

	Params::Challenge_PlayerState_GetBounsBoosterCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetBuyCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoodsObject::GetBuyCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetBuyCount");

	Params::GoodsObject_GetBuyCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_Goods              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Goods UGoodsObject::GetConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetConfig");

	Params::GoodsObject_GetConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetCurrencyCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGoodsObject::GetCurrencyCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetCurrencyCode");

	Params::GoodsObject_GetCurrencyCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetDiscount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoodsObject::GetDiscount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetDiscount");

	Params::GoodsObject_GetDiscount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetDisplayNameText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UGoodsObject::GetDisplayNameText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetDisplayNameText");

	Params::GoodsObject_GetDisplayNameText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetDisplaySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGoodsObject::GetDisplaySlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetDisplaySlot");

	Params::GoodsObject_GetDisplaySlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetGoodsDesc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGoodsObject::GetGoodsDesc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetGoodsDesc");

	Params::GoodsObject_GetGoodsDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UTexture2D> UGoodsObject::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetIcon");

	Params::GoodsObject_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UGoodsObject::GetItemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetItemID");

	Params::GoodsObject_GetItemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetLaunchingDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UGoodsObject::GetLaunchingDate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetLaunchingDate");

	Params::GoodsObject_GetLaunchingDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UGoodsObject::GetPrice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetPrice");

	Params::GoodsObject_GetPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetPriceType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Currency                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Currency UGoodsObject::GetPriceType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetPriceType");

	Params::GoodsObject_GetPriceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoodsObject.GetTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGoodsTag                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FGoodsTag UGoodsObject::GetTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoodsObject", "GetTags");

	Params::GoodsObject_GetTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.GetHeartBit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOnlineAccount::GetHeartBit(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "GetHeartBit");

	Params::OnlineAccount_GetHeartBit Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.GetPublisher
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPublisher                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPublisher UOnlineAccount::GetPublisher(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "GetPublisher");

	Params::OnlineAccount_GetPublisher Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.GetPublisherID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineAccount::GetPublisherID(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "GetPublisherID");

	Params::OnlineAccount_GetPublisherID Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.GetPublisherToken
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineAccount::GetPublisherToken(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "GetPublisherToken");

	Params::OnlineAccount_GetPublisherToken Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.GetToken
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineAccount::GetToken(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "GetToken");

	Params::OnlineAccount_GetToken Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.IsAuthenticated
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineAccount::IsAuthenticated(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "IsAuthenticated");

	Params::OnlineAccount_IsAuthenticated Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.SetAuthenticated
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineAccount::SetAuthenticated(const class UObject* WorldContextObject, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "SetAuthenticated");

	Params::OnlineAccount_SetAuthenticated Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineAccount.SetPublisher
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPublisher                              _Publisher                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineAccount::SetPublisher(const class UObject* WorldContextObject, EPublisher _Publisher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "SetPublisher");

	Params::OnlineAccount_SetPublisher Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms._Publisher = _Publisher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OnlineAccount.SetPublisherID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Name                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineAccount::SetPublisherID(const class UObject* _world_ctx, const class FString& _Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "SetPublisherID");

	Params::OnlineAccount_SetPublisherID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Name = std::move(_Name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OnlineAccount.SetPublisherToken
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Token                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineAccount::SetPublisherToken(const class UObject* _world_ctx, const class FString& _Token)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "SetPublisherToken");

	Params::OnlineAccount_SetPublisherToken Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Token = std::move(_Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OnlineAccount.ShouldBeEnterAccountID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOnlineAccount::ShouldBeEnterAccountID(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineAccount", "ShouldBeEnterAccountID");

	Params::OnlineAccount_ShouldBeEnterAccountID Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.CalcRankWithCurrentBattleResult
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _top3                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _rankers                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FBattleResult_Challenge          _current_battle_result                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _out_top3                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _out_rankers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UChallenge_SubSystem::CalcRankWithCurrentBattleResult(const class UObject* _world_ctx, const TArray<struct FACK_ChallengeRead>& _top3, const TArray<struct FACK_ChallengeRead>& _rankers, const struct FBattleResult_Challenge& _current_battle_result, TArray<struct FACK_ChallengeRead>* _out_top3, TArray<struct FACK_ChallengeRead>* _out_rankers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "CalcRankWithCurrentBattleResult");

	Params::Challenge_SubSystem_CalcRankWithCurrentBattleResult Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._top3 = std::move(_top3);
	Parms._rankers = std::move(_rankers);
	Parms._current_battle_result = std::move(_current_battle_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_top3 != nullptr)
		*_out_top3 = std::move(Parms._out_top3);

	if (_out_rankers != nullptr)
		*_out_rankers = std::move(Parms._out_rankers);
}


// Function Stigma.Challenge_SubSystem.JumpToBestRound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _delay_before_jump                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallenge_SubSystem::JumpToBestRound(float _delay_before_jump)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "JumpToBestRound");

	Params::Challenge_SubSystem_JumpToBestRound Parms{};

	Parms._delay_before_jump = _delay_before_jump;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_SubSystem.ReadMyChallengeRanks
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallenge_SubSystem::ReadMyChallengeRanks(const TDelegate<void()>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "ReadMyChallengeRanks");

	Params::Challenge_SubSystem_ReadMyChallengeRanks Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_SubSystem.Reset
// (Final, Native, Public, BlueprintCallable)

void UChallenge_SubSystem::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_SubSystem.StartChallengeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_first_round                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChallenge_SubSystem::StartChallengeMode(bool _is_first_round)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "StartChallengeMode");

	Params::Challenge_SubSystem_StartChallengeMode Parms{};

	Parms._is_first_round = _is_first_round;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Challenge_SubSystem.GetBounsTicket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetBounsTicket() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetBounsTicket");

	Params::Challenge_SubSystem_GetBounsTicket Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetCurrentBlackCoin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetCurrentBlackCoin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetCurrentBlackCoin");

	Params::Challenge_SubSystem_GetCurrentBlackCoin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetCurrentGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetCurrentGold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetCurrentGold");

	Params::Challenge_SubSystem_GetCurrentGold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetCurrentRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetCurrentRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetCurrentRound");

	Params::Challenge_SubSystem_GetCurrentRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetCurrentRoundConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FConfig_ChallengeRound           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FConfig_ChallengeRound UChallenge_SubSystem::GetCurrentRoundConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetCurrentRoundConfig");

	Params::Challenge_SubSystem_GetCurrentRoundConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetLastRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetLastRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetLastRound");

	Params::Challenge_SubSystem_GetLastRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetPrevBestScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetPrevBestScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetPrevBestScore");

	Params::Challenge_SubSystem_GetPrevBestScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetPrevResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FChallengeResult                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FChallengeResult UChallenge_SubSystem::GetPrevResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetPrevResult");

	Params::Challenge_SubSystem_GetPrevResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetStartRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetStartRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetStartRound");

	Params::Challenge_SubSystem_GetStartRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.GetTicketUsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UChallenge_SubSystem::GetTicketUsed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "GetTicketUsed");

	Params::Challenge_SubSystem_GetTicketUsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Challenge_SubSystem.IsStartRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChallenge_SubSystem::IsStartRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_SubSystem", "IsStartRound");

	Params::Challenge_SubSystem_IsStartRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterDefineBlueprintLibrary.GetActionGraphID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterDefine                 _define                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharaAction                            _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionGraphID                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActionGraphID UCharacterDefineBlueprintLibrary::GetActionGraphID(const struct FCharacterDefine& _define, ECharaAction _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDefineBlueprintLibrary", "GetActionGraphID");

	Params::CharacterDefineBlueprintLibrary_GetActionGraphID Parms{};

	Parms._define = std::move(_define);
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterDefineBlueprintLibrary.GetCharaBuffedGraphValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterDefine                 _define                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharaBuffEffect                 _effect                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FCharaGraphValue                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCharaGraphValue UCharacterDefineBlueprintLibrary::GetCharaBuffedGraphValue(const struct FCharacterDefine& _define, const struct FCharaBuffEffect& _effect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDefineBlueprintLibrary", "GetCharaBuffedGraphValue");

	Params::CharacterDefineBlueprintLibrary_GetCharaBuffedGraphValue Parms{};

	Parms._define = std::move(_define);
	Parms._effect = std::move(_effect);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterDefineBlueprintLibrary.GetCharaBuffEffectOfBoosters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FItemID_Booster>          _boosters                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharaBuffEffect                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCharaBuffEffect UCharacterDefineBlueprintLibrary::GetCharaBuffEffectOfBoosters(const TArray<struct FItemID_Booster>& _boosters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDefineBlueprintLibrary", "GetCharaBuffEffectOfBoosters");

	Params::CharacterDefineBlueprintLibrary_GetCharaBuffEffectOfBoosters Parms{};

	Parms._boosters = std::move(_boosters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterDefineBlueprintLibrary.GetCharaBuffEffectOfPassiveSkills
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPassiveSkill>            _passive_skills                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharaBuffEffect                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCharaBuffEffect UCharacterDefineBlueprintLibrary::GetCharaBuffEffectOfPassiveSkills(const TArray<struct FPassiveSkill>& _passive_skills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDefineBlueprintLibrary", "GetCharaBuffEffectOfPassiveSkills");

	Params::CharacterDefineBlueprintLibrary_GetCharaBuffEffectOfPassiveSkills Parms{};

	Parms._passive_skills = std::move(_passive_skills);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterDefineBlueprintLibrary.GetCharaType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterDefine                 _define                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UCharacterDefineBlueprintLibrary::GetCharaType(const struct FCharacterDefine& _define)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDefineBlueprintLibrary", "GetCharaType");

	Params::CharacterDefineBlueprintLibrary_GetCharaType Parms{};

	Parms._define = std::move(_define);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterDefineBlueprintLibrary.GetGraphValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterDefine                 _define                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCharaGraphValue                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCharaGraphValue UCharacterDefineBlueprintLibrary::GetGraphValue(const struct FCharacterDefine& _define)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterDefineBlueprintLibrary", "GetGraphValue");

	Params::CharacterDefineBlueprintLibrary_GetGraphValue Parms{};

	Parms._define = std::move(_define);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterInfoBlueprintLibrary.CalcControlPower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterInfo                   _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCharacterInfoBlueprintLibrary::CalcControlPower(const class UObject* _world_ctx, const struct FCharacterInfo& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterInfoBlueprintLibrary", "CalcControlPower");

	Params::CharacterInfoBlueprintLibrary_CalcControlPower Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterInfoBlueprintLibrary.GetArmorType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterInfo                   _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EArmorType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EArmorType UCharacterInfoBlueprintLibrary::GetArmorType(const struct FCharacterInfo& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterInfoBlueprintLibrary", "GetArmorType");

	Params::CharacterInfoBlueprintLibrary_GetArmorType Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterInfoBlueprintLibrary.GetBullets
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterInfo                   _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBulletType                             _out_bullet_type                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBulletTip                              _out_bullet_tip                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterInfoBlueprintLibrary::GetBullets(const struct FCharacterInfo& _info, EBulletType* _out_bullet_type, EBulletTip* _out_bullet_tip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterInfoBlueprintLibrary", "GetBullets");

	Params::CharacterInfoBlueprintLibrary_GetBullets Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_bullet_type != nullptr)
		*_out_bullet_type = Parms._out_bullet_type;

	if (_out_bullet_tip != nullptr)
		*_out_bullet_tip = Parms._out_bullet_tip;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterInfoBlueprintLibrary.GetBulletTipID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterInfo                   _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EBulletTip                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBulletTip UCharacterInfoBlueprintLibrary::GetBulletTipID(const struct FCharacterInfo& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterInfoBlueprintLibrary", "GetBulletTipID");

	Params::CharacterInfoBlueprintLibrary_GetBulletTipID Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterInfoBlueprintLibrary.IsEquipedItemID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterInfo                   _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCharacterInfoBlueprintLibrary::IsEquipedItemID(const struct FCharacterInfo& _info, const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterInfoBlueprintLibrary", "IsEquipedItemID");

	Params::CharacterInfoBlueprintLibrary_IsEquipedItemID Parms{};

	Parms._info = std::move(_info);
	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CharacterInfoBlueprintLibrary.ToNetCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCharacterInfo                   _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetCharacter                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetCharacter UCharacterInfoBlueprintLibrary::ToNetCharacter(const struct FCharacterInfo& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CharacterInfoBlueprintLibrary", "ToNetCharacter");

	Params::CharacterInfoBlueprintLibrary_ToNetCharacter Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_TeamResultItem.UpdateUI
// (Final, Native, Public, BlueprintCallable)

void UUI_TeamResultItem::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TeamResultItem", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TeamResultItem.GetResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBattleDecisionDetail            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FBattleDecisionDetail UUI_TeamResultItem::GetResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TeamResultItem", "GetResult");

	Params::UI_TeamResultItem_GetResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ChatManager.NotifyChatStartEvent
// (Final, Native, Public, BlueprintCallable)

void UChatManager::NotifyChatStartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "NotifyChatStartEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ChatManager.RegisterOnChatMsgAdded
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FChatMsg& _msg)>  _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatManager::RegisterOnChatMsgAdded(const TDelegate<void(struct FChatMsg& _msg)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "RegisterOnChatMsgAdded");

	Params::ChatManager_RegisterOnChatMsgAdded Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ChatManager.RegisterOnChatMsgCleared
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatManager::RegisterOnChatMsgCleared(const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "RegisterOnChatMsgCleared");

	Params::ChatManager_RegisterOnChatMsgCleared Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ChatManager.RegisterOnStartChatReceived
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatManager::RegisterOnStartChatReceived(const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "RegisterOnStartChatReceived");

	Params::ChatManager_RegisterOnStartChatReceived Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ChatManager.UnRegisterOnChatMsgAdded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _bind_owner                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatManager::UnRegisterOnChatMsgAdded(const class UObject* _bind_owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "UnRegisterOnChatMsgAdded");

	Params::ChatManager_UnRegisterOnChatMsgAdded Parms{};

	Parms._bind_owner = _bind_owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ChatManager.UnRegisterOnChatMsgCleared
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _bind_owner                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatManager::UnRegisterOnChatMsgCleared(const class UObject* _bind_owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "UnRegisterOnChatMsgCleared");

	Params::ChatManager_UnRegisterOnChatMsgCleared Parms{};

	Parms._bind_owner = _bind_owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ChatManager.UnRegisterOnStartChatReceived
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _bind_owner                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatManager::UnRegisterOnStartChatReceived(const class UObject* _bind_owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatManager", "UnRegisterOnStartChatReceived");

	Params::ChatManager_UnRegisterOnStartChatReceived Parms{};

	Parms._bind_owner = _bind_owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TutorialMissionGuide.ClearTargetMissions
// (Final, Native, Public, BlueprintCallable)

void UUI_TutorialMissionGuide::ClearTargetMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TutorialMissionGuide", "ClearTargetMissions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TutorialMissionGuide.GetMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMission*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMission* UUI_TutorialMissionGuide::GetMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TutorialMissionGuide", "GetMission");

	Params::UI_TutorialMissionGuide_GetMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_TutorialMissionGuide.OnMissionUpdated
// (Final, Native, Protected)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TutorialMissionGuide::OnMissionUpdated(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TutorialMissionGuide", "OnMissionUpdated");

	Params::UI_TutorialMissionGuide_OnMissionUpdated Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TutorialMissionGuide.SetTargetMission
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemIDRef_Mission>       _mission_ids                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _show_title                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TutorialMissionGuide::SetTargetMission(const struct FItemID& _task_id, const TArray<struct FItemIDRef_Mission>& _mission_ids, bool _show_title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TutorialMissionGuide", "SetTargetMission");

	Params::UI_TutorialMissionGuide_SetTargetMission Parms{};

	Parms._task_id = std::move(_task_id);
	Parms._mission_ids = std::move(_mission_ids);
	Parms._show_title = _show_title;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TutorialMissionGuide.GetIsmissionChecked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_TutorialMissionGuide::GetIsmissionChecked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TutorialMissionGuide", "GetIsmissionChecked");

	Params::UI_TutorialMissionGuide_GetIsmissionChecked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_ActuationSwitch.FinishInteraction
// (Final, Native, Public, BlueprintCallable)

void ACLB_ActuationSwitch::FinishInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_ActuationSwitch", "FinishInteraction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_ActuationSwitch.StartInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _interactor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACLB_ActuationSwitch::StartInteraction(class ACharaBase* _interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_ActuationSwitch", "StartInteraction");

	Params::CLB_ActuationSwitch_StartInteraction Parms{};

	Parms._interactor = _interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_ActuationSwitch.StopInteraction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _interactor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_ActuationSwitch::StopInteraction(class ACharaBase* _interactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_ActuationSwitch", "StopInteraction");

	Params::CLB_ActuationSwitch_StopInteraction Parms{};

	Parms._interactor = _interactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FireSystemComponent.RPC_ALL_BeReady
// (Net, Native, Event, NetMulticast, Protected)

void UFireSystemComponent::RPC_ALL_BeReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FireSystemComponent", "RPC_ALL_BeReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FireSystemComponent.RPC_ALL_Fire
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FShot                            _shot                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFireSystemComponent::RPC_ALL_Fire(const struct FShot& _shot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FireSystemComponent", "RPC_ALL_Fire");

	Params::FireSystemComponent_RPC_ALL_Fire Parms{};

	Parms._shot = std::move(_shot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FireSystemComponent.RPC_ALL_LoadMagazine
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void UFireSystemComponent::RPC_ALL_LoadMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FireSystemComponent", "RPC_ALL_LoadMagazine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FireSystemComponent.RPC_SERVER_BeReady
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UFireSystemComponent::RPC_SERVER_BeReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FireSystemComponent", "RPC_SERVER_BeReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FireSystemComponent.RPC_SERVER_Fire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FShot                            _shot                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFireSystemComponent::RPC_SERVER_Fire(const struct FShot& _shot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FireSystemComponent", "RPC_SERVER_Fire");

	Params::FireSystemComponent_RPC_SERVER_Fire Parms{};

	Parms._shot = std::move(_shot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.FireSystemComponent.RPC_SERVER_LoadMagazine
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UFireSystemComponent::RPC_SERVER_LoadMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FireSystemComponent", "RPC_SERVER_LoadMagazine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_Sector.GetPlayerStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerStart*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerStart* ACLB_Sector::GetPlayerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_Sector", "GetPlayerStart");

	Params::CLB_Sector_GetPlayerStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_Sector.GetSectorType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECLB_SectorType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECLB_SectorType ACLB_Sector::GetSectorType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_Sector", "GetSectorType");

	Params::CLB_Sector_GetSectorType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_DefensionSector.GetElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACLB_DefensionSector::GetElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_DefensionSector", "GetElapsedTime");

	Params::CLB_DefensionSector_GetElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_TooltipKeyContainer.AddTooltipKey
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTooltipKeyInfo                  _key_info                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_TooltipKeyContainer::AddTooltipKey(const struct FTooltipKeyInfo& _key_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKeyContainer", "AddTooltipKey");

	Params::UI_TooltipKeyContainer_AddTooltipKey Parms{};

	Parms._key_info = std::move(_key_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TooltipKeyContainer.ClearTooltipKey
// (Final, Native, Public, BlueprintCallable)

void UUI_TooltipKeyContainer::ClearTooltipKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKeyContainer", "ClearTooltipKey");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameMode.OnFinishLoading
// (Final, Native, Protected)
// Parameters:
// int32                                   _uuid                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_GameMode::OnFinishLoading(int32 _uuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameMode", "OnFinishLoading");

	Params::CLB_GameMode_OnFinishLoading Parms{};

	Parms._uuid = _uuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameMode.StartFighting
// (Final, Native, Protected, BlueprintCallable)

void ACLB_GameMode::StartFighting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameMode", "StartFighting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameMode.GetCollaborationConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_CollaborationMode  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_CollaborationMode ACLB_GameMode::GetCollaborationConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameMode", "GetCollaborationConfig");

	Params::CLB_GameMode_GetCollaborationConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.EventCaster.PublishEvent
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _event_name                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _subject                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _with                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _int_value                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _vector                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventCaster::PublishEvent(const class UObject* _world_ctx, const class FName& _event_name, class UObject* _subject, class UObject* _target, class UObject* _with, int32 _int_value, const struct FVector& _vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventCaster", "PublishEvent");

	Params::EventCaster_PublishEvent Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._event_name = _event_name;
	Parms._subject = _subject;
	Parms._target = _target;
	Parms._with = _with;
	Parms._int_value = _int_value;
	Parms._vector = std::move(_vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.EventCaster.SubscribeEvent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _event_name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class FName& _event_name, struct FCastedEvent& _event)>_handler                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventCaster::SubscribeEvent(const class UObject* _world_ctx, class FName _event_name, const TDelegate<void(class FName& _event_name, struct FCastedEvent& _event)>& _handler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventCaster", "SubscribeEvent");

	Params::EventCaster_SubscribeEvent Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._event_name = _event_name;
	Parms._handler = _handler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.EventCaster.UnsubscribeAllEvents
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _object                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventCaster::UnsubscribeAllEvents(const class UObject* _object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventCaster", "UnsubscribeAllEvents");

	Params::EventCaster_UnsubscribeAllEvents Parms{};

	Parms._object = _object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.EventCaster.UnsubscribeEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             _event_name                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _object                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventCaster::UnsubscribeEvent(class FName _event_name, const class UObject* _object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventCaster", "UnsubscribeEvent");

	Params::EventCaster_UnsubscribeEvent Parms{};

	Parms._event_name = _event_name;
	Parms._object = _object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameState.OnRep_ActiveDoor
// (Final, Native, Protected)

void ACLB_GameState::OnRep_ActiveDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameState", "OnRep_ActiveDoor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameState.OnRep_MapIndex
// (Final, Native, Protected)

void ACLB_GameState::OnRep_MapIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameState", "OnRep_MapIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameState.OnRep_Phase
// (Final, Native, Protected)

void ACLB_GameState::OnRep_Phase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameState", "OnRep_Phase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameState.Setter_ActiveDoor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ADoorBase*                        _door                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_GameState::Setter_ActiveDoor(class ADoorBase* _door)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameState", "Setter_ActiveDoor");

	Params::CLB_GameState_Setter_ActiveDoor Parms{};

	Parms._door = _door;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameState.Setter_Phase
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ECLBModePhase                           _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_GameState::Setter_Phase(ECLBModePhase _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameState", "Setter_Phase");

	Params::CLB_GameState_Setter_Phase Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_GameState.GetSectorRemainTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACLB_GameState::GetSectorRemainTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_GameState", "GetSectorRemainTime");

	Params::CLB_GameState_GetSectorRemainTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonTabPanel.DuplicateTab
// (Final, Native, Public, BlueprintCallable)

void UCtrl_CommonTabPanel::DuplicateTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "DuplicateTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTabPanel.GetEditableTabDefine
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTabDefine                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTabDefine UCtrl_CommonTabPanel::GetEditableTabDefine(const class FName& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "GetEditableTabDefine");

	Params::Ctrl_CommonTabPanel_GetEditableTabDefine Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonTabPanel.GetEditableTabDefineFromIdx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTabDefine                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTabDefine UCtrl_CommonTabPanel::GetEditableTabDefineFromIdx(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "GetEditableTabDefineFromIdx");

	Params::Ctrl_CommonTabPanel_GetEditableTabDefineFromIdx Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonTabPanel.SetReRegisterTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _tab_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_register                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonTabPanel::SetReRegisterTab(class FName _tab_id, bool _is_register)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "SetReRegisterTab");

	Params::Ctrl_CommonTabPanel_SetReRegisterTab Parms{};

	Parms._tab_id = _tab_id;
	Parms._is_register = _is_register;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTabPanel.SetSelectedIdx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _call_on_tab_changed                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonTabPanel::SetSelectedIdx(int32 _idx, bool _call_on_tab_changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "SetSelectedIdx");

	Params::Ctrl_CommonTabPanel_SetSelectedIdx Parms{};

	Parms._idx = _idx;
	Parms._call_on_tab_changed = _call_on_tab_changed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTabPanel.SetSelectedTabID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _tab_id                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _call_on_tab_changed                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonTabPanel::SetSelectedTabID(class FName _tab_id, bool _call_on_tab_changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "SetSelectedTabID");

	Params::Ctrl_CommonTabPanel_SetSelectedTabID Parms{};

	Parms._tab_id = _tab_id;
	Parms._call_on_tab_changed = _call_on_tab_changed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTabPanel.GetAllTabDefine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FTabDefine>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FTabDefine> UCtrl_CommonTabPanel::GetAllTabDefine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "GetAllTabDefine");

	Params::Ctrl_CommonTabPanel_GetAllTabDefine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonTabPanel.GetIndexOfID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCtrl_CommonTabPanel::GetIndexOfID(const class FName& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "GetIndexOfID");

	Params::Ctrl_CommonTabPanel_GetIndexOfID Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonTabPanel.GetSelectedID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCtrl_CommonTabPanel::GetSelectedID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "GetSelectedID");

	Params::Ctrl_CommonTabPanel_GetSelectedID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonTabPanel.GetTabDefine
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTabDefine                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTabDefine UCtrl_CommonTabPanel::GetTabDefine(const class FName& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTabPanel", "GetTabDefine");

	Params::Ctrl_CommonTabPanel_GetTabDefine Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_VerticalTabPanel.OnTabSelected
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_VerticalTabPanel::OnTabSelected(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_VerticalTabPanel", "OnTabSelected");

	Params::Ctrl_VerticalTabPanel_OnTabSelected Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_InterMissionTrigger.GetRemainWaitingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ACLB_InterMissionTrigger::GetRemainWaitingTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_InterMissionTrigger", "GetRemainWaitingTime");

	Params::CLB_InterMissionTrigger_GetRemainWaitingTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_InterMissionTrigger.IsFinishedInterMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACLB_InterMissionTrigger::IsFinishedInterMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_InterMissionTrigger", "IsFinishedInterMission");

	Params::CLB_InterMissionTrigger_IsFinishedInterMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_InterMissionTrigger.IsStartInterMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACLB_InterMissionTrigger::IsStartInterMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_InterMissionTrigger", "IsStartInterMission");

	Params::CLB_InterMissionTrigger_IsStartInterMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.MakeBoosterID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Booster                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Booster UItemIDsBlueprintLibrary::MakeBoosterID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "MakeBoosterID");

	Params::ItemIDsBlueprintLibrary_MakeBoosterID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.MakeItemIDByCategories
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBoosterAcquisitionType                 _acq_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _serial_number                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UItemIDsBlueprintLibrary::MakeItemIDByCategories(EBoosterAcquisitionType _acq_type, int32 _serial_number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "MakeItemIDByCategories");

	Params::ItemIDsBlueprintLibrary_MakeItemIDByCategories Parms{};

	Parms._acq_type = _acq_type;
	Parms._serial_number = _serial_number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToAnnouncerID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Announcer                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Announcer UItemIDsBlueprintLibrary::ToAnnouncerID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToAnnouncerID");

	Params::ItemIDsBlueprintLibrary_ToAnnouncerID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToBattlePassID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_BattlePass UItemIDsBlueprintLibrary::ToBattlePassID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToBattlePassID");

	Params::ItemIDsBlueprintLibrary_ToBattlePassID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToBodyID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Skin_Body                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Skin_Body UItemIDsBlueprintLibrary::ToBodyID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToBodyID");

	Params::ItemIDsBlueprintLibrary_ToBodyID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToBoosterID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Booster                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Booster UItemIDsBlueprintLibrary::ToBoosterID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToBoosterID");

	Params::ItemIDsBlueprintLibrary_ToBoosterID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToBuffID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Buff                     ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Buff UItemIDsBlueprintLibrary::ToBuffID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToBuffID");

	Params::ItemIDsBlueprintLibrary_ToBuffID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToCurrencyID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Currency                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Currency UItemIDsBlueprintLibrary::ToCurrencyID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToCurrencyID");

	Params::ItemIDsBlueprintLibrary_ToCurrencyID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToEventPageID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_EventPage                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_EventPage UItemIDsBlueprintLibrary::ToEventPageID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToEventPageID");

	Params::ItemIDsBlueprintLibrary_ToEventPageID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGoodsID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGoodsID                         ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGoodsID UItemIDsBlueprintLibrary::ToGoodsID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGoodsID");

	Params::ItemIDsBlueprintLibrary_ToGoodsID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunBodyID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Body                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Body UItemIDsBlueprintLibrary::ToGunBodyID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunBodyID");

	Params::ItemIDsBlueprintLibrary_ToGunBodyID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunCharmID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Charm                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Charm UItemIDsBlueprintLibrary::ToGunCharmID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunCharmID");

	Params::ItemIDsBlueprintLibrary_ToGunCharmID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunFrontID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Front                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Front UItemIDsBlueprintLibrary::ToGunFrontID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunFrontID");

	Params::ItemIDsBlueprintLibrary_ToGunFrontID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunMagazineID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Magazine             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Magazine UItemIDsBlueprintLibrary::ToGunMagazineID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunMagazineID");

	Params::ItemIDsBlueprintLibrary_ToGunMagazineID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunSightID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Sight                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Sight UItemIDsBlueprintLibrary::ToGunSightID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunSightID");

	Params::ItemIDsBlueprintLibrary_ToGunSightID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunSlideID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Slide                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Slide UItemIDsBlueprintLibrary::ToGunSlideID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunSlideID");

	Params::ItemIDsBlueprintLibrary_ToGunSlideID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToGunStickerID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Sticker              ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Sticker UItemIDsBlueprintLibrary::ToGunStickerID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToGunStickerID");

	Params::ItemIDsBlueprintLibrary_ToGunStickerID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToHeadID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Skin_Head                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Skin_Head UItemIDsBlueprintLibrary::ToHeadID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToHeadID");

	Params::ItemIDsBlueprintLibrary_ToHeadID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToHeadIDRef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemIDRef_Skin_Head             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemIDRef_Skin_Head UItemIDsBlueprintLibrary::ToHeadIDRef(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToHeadIDRef");

	Params::ItemIDsBlueprintLibrary_ToHeadIDRef Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToItemIDRef
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemIDRef                       ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemIDRef UItemIDsBlueprintLibrary::ToItemIDRef(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToItemIDRef");

	Params::ItemIDsBlueprintLibrary_ToItemIDRef Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToMissionID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Mission UItemIDsBlueprintLibrary::ToMissionID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToMissionID");

	Params::ItemIDsBlueprintLibrary_ToMissionID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToPassiveSkillID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPassiveSkillID                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FPassiveSkillID UItemIDsBlueprintLibrary::ToPassiveSkillID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToPassiveSkillID");

	Params::ItemIDsBlueprintLibrary_ToPassiveSkillID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToRandomBoxID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_RandomBox                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_RandomBox UItemIDsBlueprintLibrary::ToRandomBoxID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToRandomBoxID");

	Params::ItemIDsBlueprintLibrary_ToRandomBoxID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToRecruitID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Recruit                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Recruit UItemIDsBlueprintLibrary::ToRecruitID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToRecruitID");

	Params::ItemIDsBlueprintLibrary_ToRecruitID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDsBlueprintLibrary.ToStackID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Stack                    ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Stack UItemIDsBlueprintLibrary::ToStackID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDsBlueprintLibrary", "ToStackID");

	Params::ItemIDsBlueprintLibrary_ToStackID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_PatrolPoint.GetPatrolLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ACLB_PatrolPoint::GetPatrolLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PatrolPoint", "GetPatrolLocation");

	Params::CLB_PatrolPoint_GetPatrolLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.DepthSenseComponent.GetVisualizedTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UDepthSenseComponent::GetVisualizedTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DepthSenseComponent", "GetVisualizedTexture");

	Params::DepthSenseComponent_GetVisualizedTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_SeasonRewardPopup.SetValue
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBC_SeasonReward                 _packet                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_SeasonRewardPopup::SetValue(const struct FBC_SeasonReward& _packet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SeasonRewardPopup", "SetValue");

	Params::UI_SeasonRewardPopup_SetValue Parms{};

	Parms._packet = std::move(_packet);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.ItemBoxBase.OnPickupItem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxBase::OnPickupItem(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxBase", "OnPickupItem");

	Params::ItemBoxBase_OnPickupItem Parms{};

	Parms._involver = _involver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.ItemBoxBase.OnRep_CanPickup
// (Native, Public)

void AItemBoxBase::OnRep_CanPickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxBase", "OnRep_CanPickup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ItemBoxBase.RPC_All_OnPickupItem
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxBase::RPC_All_OnPickupItem(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxBase", "RPC_All_OnPickupItem");

	Params::ItemBoxBase_RPC_All_OnPickupItem Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ItemBoxBase.SetInteraction
// (Final, Native, Public)
// Parameters:
// bool                                    _is_interaction                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxBase::SetInteraction(bool _is_interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxBase", "SetInteraction");

	Params::ItemBoxBase_SetInteraction Parms{};

	Parms._is_interaction = _is_interaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ItemBoxBase.Setter_CanPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _can_pickup                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AItemBoxBase::Setter_CanPickup(bool _can_pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxBase", "Setter_CanPickup");

	Params::ItemBoxBase_Setter_CanPickup Parms{};

	Parms._can_pickup = _can_pickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ItemBoxBase.GetDisplayText
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AItemBoxBase::GetDisplayText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemBoxBase", "GetDisplayText");

	Params::ItemBoxBase_GetDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_PlayerController.OnAddNotifyMessage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           _text                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _life_time                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_PlayerController::OnAddNotifyMessage(const class FString& _text, float _life_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerController", "OnAddNotifyMessage");

	Params::CLB_PlayerController_OnAddNotifyMessage Parms{};

	Parms._text = std::move(_text);
	Parms._life_time = _life_time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.CLB_PlayerController.OnChangeActiveDoor
// (Event, Public, BlueprintEvent)
// Parameters:
// class ADoorBase*                        _door                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACLB_PlayerController::OnChangeActiveDoor(class ADoorBase* _door)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerController", "OnChangeActiveDoor");

	Params::CLB_PlayerController_OnChangeActiveDoor Parms{};

	Parms._door = _door;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CLB_PlayerController.OnChangePhase
// (Event, Public, BlueprintEvent)
// Parameters:
// ECLBModePhase                           _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ACLB_PlayerController::OnChangePhase(ECLBModePhase _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerController", "OnChangePhase");

	Params::CLB_PlayerController_OnChangePhase Parms{};

	Parms._phase = _phase;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.CLB_PlayerController.RPC_CLIENT_AddNotifyMessage
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class FString                           _text                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _life_time                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_PlayerController::RPC_CLIENT_AddNotifyMessage(const class FString& _text, float _life_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerController", "RPC_CLIENT_AddNotifyMessage");

	Params::CLB_PlayerController_RPC_CLIENT_AddNotifyMessage Parms{};

	Parms._text = std::move(_text);
	Parms._life_time = _life_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_PlayerController.RPC_SERVER_DEBUG_SkipNextInterMission
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable)

void ACLB_PlayerController::RPC_SERVER_DEBUG_SkipNextInterMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerController", "RPC_SERVER_DEBUG_SkipNextInterMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_PlayerController.RPC_SERVER_RequestRespawn
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)

void ACLB_PlayerController::RPC_SERVER_RequestRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerController", "RPC_SERVER_RequestRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_PlayerState.SetRemainLife
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _Life                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_PlayerState::SetRemainLife(int32 _Life)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerState", "SetRemainLife");

	Params::CLB_PlayerState_SetRemainLife Parms{};

	Parms._Life = _Life;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_PlayerState.GetRemainLife
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACLB_PlayerState::GetRemainLife() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerState", "GetRemainLife");

	Params::CLB_PlayerState_GetRemainLife Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_PlayerState.GetTotalPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACLB_PlayerState::GetTotalPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_PlayerState", "GetTotalPoints");

	Params::CLB_PlayerState_GetTotalPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_SectorManager.GetPlayerStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerStart*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerStart* ACLB_SectorManager::GetPlayerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_SectorManager", "GetPlayerStart");

	Params::CLB_SectorManager_GetPlayerStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_SectorManager.OnFinishSector
// (Final, Native, Public)
// Parameters:
// class ACLB_Sector*                      Sector                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_SectorManager::OnFinishSector(class ACLB_Sector* Sector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_SectorManager", "OnFinishSector");

	Params::CLB_SectorManager_OnFinishSector Parms{};

	Parms.Sector = Sector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitResultPopup.CreateGun
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UGunObject*                       Gun_obj                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitResultPopup::CreateGun(class UGunObject* Gun_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "CreateGun");

	Params::UI_RecruitResultPopup_CreateGun Parms{};

	Parms.Gun_obj = Gun_obj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RecruitResultPopup.GetGun
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AGunBase*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AGunBase* UUI_RecruitResultPopup::GetGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "GetGun");

	Params::UI_RecruitResultPopup_GetGun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecruitResultPopup.OnClickResultConfirm
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _btn                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitResultPopup::OnClickResultConfirm(class UAnimatableWidget* _btn, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "OnClickResultConfirm");

	Params::UI_RecruitResultPopup_OnClickResultConfirm Parms{};

	Parms._btn = _btn;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitResultPopup.OnClickScreen
// (Final, Native, Protected)

void UUI_RecruitResultPopup::OnClickScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "OnClickScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitResultPopup.OnClickSkip
// (Final, Native, Protected, BlueprintCallable)

void UUI_RecruitResultPopup::OnClickSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "OnClickSkip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitResultPopup.OnRewardWidgetShowEnd
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitResultPopup::OnRewardWidgetShowEnd(class UAnimatableWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "OnRewardWidgetShowEnd");

	Params::UI_RecruitResultPopup_OnRewardWidgetShowEnd Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitResultPopup.OnSequenceFinished
// (Final, Native, Protected)

void UUI_RecruitResultPopup::OnSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitResultPopup", "OnSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.BlueprintCollaborationSecurmentLibrary.GetSecurmentZoneName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   _score                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UBlueprintCollaborationSecurmentLibrary::GetSecurmentZoneName(int32 _score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintCollaborationSecurmentLibrary", "GetSecurmentZoneName");

	Params::BlueprintCollaborationSecurmentLibrary_GetSecurmentZoneName Parms{};

	Parms._score = _score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_SecurementZone.GetOverlappedPlayerCount
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ACLB_SecurementZone::GetOverlappedPlayerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_SecurementZone", "GetOverlappedPlayerCount");

	Params::CLB_SecurementZone_GetOverlappedPlayerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CLB_SecurementZone.OnRep_IsActivated
// (Final, Native, Protected)

void ACLB_SecurementZone::OnRep_IsActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_SecurementZone", "OnRep_IsActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CLB_SecurementZone.Setter_IsActivated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACLB_SecurementZone::Setter_IsActivated(bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CLB_SecurementZone", "Setter_IsActivated");

	Params::CLB_SecurementZone_Setter_IsActivated Parms{};

	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalRegistry.GetBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _default                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalRegistry::GetBool(const class FString& _Key, bool _default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "GetBool");

	Params::LocalRegistry_GetBool Parms{};

	Parms._Key = std::move(_Key);
	Parms._default = _default;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalRegistry.GetFloat
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _default                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULocalRegistry::GetFloat(const class FString& _Key, float _default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "GetFloat");

	Params::LocalRegistry_GetFloat Parms{};

	Parms._Key = std::move(_Key);
	Parms._default = _default;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalRegistry.GetInt32
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _default                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ULocalRegistry::GetInt32(const class FString& _Key, int32 _default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "GetInt32");

	Params::LocalRegistry_GetInt32 Parms{};

	Parms._Key = std::move(_Key);
	Parms._default = _default;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalRegistry.GetString
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _default                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ULocalRegistry::GetString(const class FString& _Key, const class FString& _default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "GetString");

	Params::LocalRegistry_GetString Parms{};

	Parms._Key = std::move(_Key);
	Parms._default = std::move(_default);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalRegistry.Load
// (Final, Native, Public, BlueprintCallable)

void ULocalRegistry::Load()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "Load");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalRegistry.Save
// (Final, Native, Public, BlueprintCallable)

void ULocalRegistry::Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "Save");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalRegistry.SetBool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalRegistry::SetBool(const class FString& _Key, bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "SetBool");

	Params::LocalRegistry_SetBool Parms{};

	Parms._Key = std::move(_Key);
	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalRegistry.SetFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalRegistry::SetFloat(const class FString& _Key, float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "SetFloat");

	Params::LocalRegistry_SetFloat Parms{};

	Parms._Key = std::move(_Key);
	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalRegistry.SetInt32
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalRegistry::SetInt32(const class FString& _Key, int32 _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "SetInt32");

	Params::LocalRegistry_SetInt32 Parms{};

	Parms._Key = std::move(_Key);
	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalRegistry.SetString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _value                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalRegistry::SetString(const class FString& _Key, const class FString& _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalRegistry", "SetString");

	Params::LocalRegistry_SetString Parms{};

	Parms._Key = std::move(_Key);
	Parms._value = std::move(_value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CoinBase.OnPickup
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACoinBase::OnPickup(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoinBase", "OnPickup");

	Params::CoinBase_OnPickup Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CoinBase.OnRep_Gold
// (Final, Native, Protected)

void ACoinBase::OnRep_Gold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoinBase", "OnRep_Gold");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CoinBase.RPC_All_OnPickupItem
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACoinBase::RPC_All_OnPickupItem(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CoinBase", "RPC_All_OnPickupItem");

	Params::CoinBase_RPC_All_OnPickupItem Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.FinishGame
// (Final, Native, Public, BlueprintCallable)

void ALemmingsGameZone::FinishGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "FinishGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.OnBeginOverlap_KillZone
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ALemmingsGameZone::OnBeginOverlap_KillZone(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "OnBeginOverlap_KillZone");

	Params::LemmingsGameZone_OnBeginOverlap_KillZone Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.OnChange_GameState
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FLemmingsGameState               _state                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ALemmingsGameZone::OnChange_GameState(const struct FLemmingsGameState& _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "OnChange_GameState");

	Params::LemmingsGameZone_OnChange_GameState Parms{};

	Parms._state = std::move(_state);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LemmingsGameZone.OnRep_GameState
// (Final, Native, Protected)

void ALemmingsGameZone::OnRep_GameState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "OnRep_GameState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.RPC_ALL_LemmingDied
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class ANPC_Lemming*                     _lemming                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_killed_by_player                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALemmingsGameZone::RPC_ALL_LemmingDied(class ANPC_Lemming* _lemming, bool _is_killed_by_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "RPC_ALL_LemmingDied");

	Params::LemmingsGameZone_RPC_ALL_LemmingDied Parms{};

	Parms._lemming = _lemming;
	Parms._is_killed_by_player = _is_killed_by_player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.Setter_GameState
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLemmingsGameState               _new_state                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ALemmingsGameZone::Setter_GameState(const struct FLemmingsGameState& _new_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "Setter_GameState");

	Params::LemmingsGameZone_Setter_GameState Parms{};

	Parms._new_state = std::move(_new_state);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.StartGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _user                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALemmingsGameZone::StartGame(class ACharaBase* _user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "StartGame");

	Params::LemmingsGameZone_StartGame Parms{};

	Parms._user = _user;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LemmingsGameZone.GetCurrentWave
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ALemmingsGameZone::GetCurrentWave() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "GetCurrentWave");

	Params::LemmingsGameZone_GetCurrentWave Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LemmingsGameZone.GetPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ALemmingsGameZone::GetPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "GetPoint");

	Params::LemmingsGameZone_GetPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LemmingsGameZone.GetWaveCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ALemmingsGameZone::GetWaveCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "GetWaveCount");

	Params::LemmingsGameZone_GetWaveCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LemmingsGameZone.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ALemmingsGameZone::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LemmingsGameZone", "IsPlaying");

	Params::LemmingsGameZone_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.VoiceSubsystem.OnFinishedVoiceInfo
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FToPlayVoiceInfo                 _finished_voice_info                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UVoiceSubsystem::OnFinishedVoiceInfo(const struct FToPlayVoiceInfo& _finished_voice_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceSubsystem", "OnFinishedVoiceInfo");

	Params::VoiceSubsystem_OnFinishedVoiceInfo Parms{};

	Parms._finished_voice_info = std::move(_finished_voice_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.VoiceSubsystem.SetVoiceIgnored
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UVoiceSubsystem::SetVoiceIgnored(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceSubsystem", "SetVoiceIgnored");

	Params::VoiceSubsystem_SetVoiceIgnored Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.VoiceSubsystem.StopAllVoices
// (Final, Native, Public, BlueprintCallable)

void UVoiceSubsystem::StopAllVoices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VoiceSubsystem", "StopAllVoices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Prop_Store.CLIENT_RequestPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _item_index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AProp_Store::CLIENT_RequestPurchase(int32 _item_index, class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Store", "CLIENT_RequestPurchase");

	Params::Prop_Store_CLIENT_RequestPurchase Parms{};

	Parms._item_index = _item_index;
	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Prop_Store.RPC_ALL_SuccessPurchase
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// int32                                   _item_index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AProp_Store::RPC_ALL_SuccessPurchase(int32 _item_index, class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Store", "RPC_ALL_SuccessPurchase");

	Params::Prop_Store_RPC_ALL_SuccessPurchase Parms{};

	Parms._item_index = _item_index;
	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Prop_Store.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UProp_StoreItem*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UProp_StoreItem* AProp_Store::GetItem(int32 _index, class ACharaBase* _involver) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Prop_Store", "GetItem");

	Params::Prop_Store_GetItem Parms{};

	Parms._index = _index;
	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_PointUI.Tutorial_PointUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _id_to_point                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             _guide_key                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _guide_input                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _wait_time                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_PointUI*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_PointUI* UUIGuide_PointUI::Tutorial_PointUI(class UTutorial* _tutorial, class FName _id_to_point, const struct FKey& _guide_key, bool _guide_input, float _wait_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_PointUI", "Tutorial_PointUI");

	Params::UIGuide_PointUI_Tutorial_PointUI Parms{};

	Parms._tutorial = _tutorial;
	Parms._id_to_point = _id_to_point;
	Parms._guide_key = std::move(_guide_key);
	Parms._guide_input = _guide_input;
	Parms._wait_time = _wait_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CollaborationModeStore.OnRep_IsIndicateable
// (Final, Native, Protected)

void ACollaborationModeStore::OnRep_IsIndicateable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollaborationModeStore", "OnRep_IsIndicateable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CollaborationModeStore.OnRep_IsInteractable
// (Final, Native, Protected)

void ACollaborationModeStore::OnRep_IsInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollaborationModeStore", "OnRep_IsInteractable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CollaborationModeStore.SERVER_Internal_Set_Interactable_Property
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACollaborationModeStore::SERVER_Internal_Set_Interactable_Property(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollaborationModeStore", "SERVER_Internal_Set_Interactable_Property");

	Params::CollaborationModeStore_SERVER_Internal_Set_Interactable_Property Parms{};

	Parms._value = _value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.CollaborationModeStore.Setter_IsIndicateable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_indicateable                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACollaborationModeStore::Setter_IsIndicateable(bool _is_indicateable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollaborationModeStore", "Setter_IsIndicateable");

	Params::CollaborationModeStore_Setter_IsIndicateable Parms{};

	Parms._is_indicateable = _is_indicateable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CollaborationModeStore.Setter_IsInteractable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_interactable                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACollaborationModeStore::Setter_IsInteractable(bool _is_interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CollaborationModeStore", "Setter_IsInteractable");

	Params::CollaborationModeStore_Setter_IsInteractable Parms{};

	Parms._is_interactable = _is_interactable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CompetitionBriefPlayer.GetCompetitionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECompetitionState UCompetitionBriefPlayer::GetCompetitionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetCompetitionState");

	Params::CompetitionBriefPlayer_GetCompetitionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetBreakEndAt
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UCompetitionBriefPlayer::GetBreakEndAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetBreakEndAt");

	Params::CompetitionBriefPlayer_GetBreakEndAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetCompetitionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECompetitionType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECompetitionType UCompetitionBriefPlayer::GetCompetitionType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetCompetitionType");

	Params::CompetitionBriefPlayer_GetCompetitionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetEndAt
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UCompetitionBriefPlayer::GetEndAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetEndAt");

	Params::CompetitionBriefPlayer_GetEndAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserName                        ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserName UCompetitionBriefPlayer::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetNickname");

	Params::CompetitionBriefPlayer_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetPlayingAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUserPlayingAt                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserPlayingAt UCompetitionBriefPlayer::GetPlayingAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetPlayingAt");

	Params::CompetitionBriefPlayer_GetPlayingAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionBriefPlayer::GetRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetRank");

	Params::CompetitionBriefPlayer_GetRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetRankPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCompetitionBriefPlayer::GetRankPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetRankPoint");

	Params::CompetitionBriefPlayer_GetRankPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.GetUserID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UCompetitionBriefPlayer::GetUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "GetUserID");

	Params::CompetitionBriefPlayer_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.IsInBattle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCompetitionBriefPlayer::IsInBattle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "IsInBattle");

	Params::CompetitionBriefPlayer_IsInBattle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefPlayer.IsMyBrief
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCompetitionBriefPlayer::IsMyBrief() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefPlayer", "IsMyBrief");

	Params::CompetitionBriefPlayer_IsMyBrief Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefInfo.GetBriefPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UCompetitionBriefPlayer*>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UCompetitionBriefPlayer*> UCompetitionBriefInfo::GetBriefPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefInfo", "GetBriefPlayers");

	Params::CompetitionBriefInfo_GetBriefPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefInfo.GetMyBriefPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCompetitionBriefPlayer*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionBriefPlayer* UCompetitionBriefInfo::GetMyBriefPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefInfo", "GetMyBriefPlayer");

	Params::CompetitionBriefInfo_GetMyBriefPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionBriefInfo.GetMyPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECompetitionState UCompetitionBriefInfo::GetMyPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionBriefInfo", "GetMyPlayerState");

	Params::CompetitionBriefInfo_GetMyPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_PlayerSlot.InitPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABattlePlayerState*               _player_state                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _zidx_chara                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_blue_team                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_show_hp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_PlayerSlot::InitPlayer(class ABattlePlayerState* _player_state, int32 _zidx_chara, bool _is_blue_team, bool _is_show_hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_PlayerSlot", "InitPlayer");

	Params::HUD_PlayerSlot_InitPlayer Parms{};

	Parms._player_state = _player_state;
	Parms._zidx_chara = _zidx_chara;
	Parms._is_blue_team = _is_blue_team;
	Parms._is_show_hp = _is_show_hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CompetitionPlayer.GetPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionState                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECompetitionState UCompetitionPlayer::GetPlayerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetPlayerState");

	Params::CompetitionPlayer_GetPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetAssist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetAssist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetAssist");

	Params::CompetitionPlayer_GetAssist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetBriefPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCompetitionBriefPlayer*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionBriefPlayer* UCompetitionPlayer::GetBriefPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetBriefPlayer");

	Params::CompetitionPlayer_GetBriefPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetCompetCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetCompetCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetCompetCount");

	Params::CompetitionPlayer_GetCompetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetDeath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetDeath");

	Params::CompetitionPlayer_GetDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetEmblemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UCompetitionPlayer::GetEmblemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetEmblemID");

	Params::CompetitionPlayer_GetEmblemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetKill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetKill() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetKill");

	Params::CompetitionPlayer_GetKill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetLevel");

	Params::CompetitionPlayer_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetNicknameFXID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UCompetitionPlayer::GetNicknameFXID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetNicknameFXID");

	Params::CompetitionPlayer_GetNicknameFXID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetPlayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetPlayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetPlayTime");

	Params::CompetitionPlayer_GetPlayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetProfileCardID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UCompetitionPlayer::GetProfileCardID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetProfileCardID");

	Params::CompetitionPlayer_GetProfileCardID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetRewardCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetRewardCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetRewardCount");

	Params::CompetitionPlayer_GetRewardCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETier                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETier UCompetitionPlayer::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetTier");

	Params::CompetitionPlayer_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetTopRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetTopRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetTopRank");

	Params::CompetitionPlayer_GetTopRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetWin1Count
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetWin1Count() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetWin1Count");

	Params::CompetitionPlayer_GetWin1Count Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.GetWin2Count
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCompetitionPlayer::GetWin2Count() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "GetWin2Count");

	Params::CompetitionPlayer_GetWin2Count Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionPlayer.IsMyPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCompetitionPlayer::IsMyPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionPlayer", "IsMyPlayer");

	Params::CompetitionPlayer_IsMyPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.Create
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunSpec                         _gun_spec                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* UGunObject::Create(class UObject* _outer, const struct FGunSpec& _gun_spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunObject", "Create");

	Params::GunObject_Create Parms{};

	Parms._outer = _outer;
	Parms._gun_spec = std::move(_gun_spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsAccessorySlot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsAccessorySlot(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunObject", "IsAccessorySlot");

	Params::GunObject_IsAccessorySlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsCharmSlot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsCharmSlot(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunObject", "IsCharmSlot");

	Params::GunObject_IsCharmSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsStickerSlot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsStickerSlot(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunObject", "IsStickerSlot");

	Params::GunObject_IsStickerSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.ItemCategoryToPartsSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _item_category                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunPartsSlot UGunObject::ItemCategoryToPartsSlot(EItemCategory _item_category, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunObject", "ItemCategoryToPartsSlot");

	Params::GunObject_ItemCategoryToPartsSlot Parms{};

	Parms._item_category = _item_category;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.PartsSlotToItemCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemCategory UGunObject::PartsSlotToItemCategory(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunObject", "PartsSlotToItemCategory");

	Params::GunObject_PartsSlotToItemCategory Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.BindUpdatedEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UGunObject* Object)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::BindUpdatedEvent(const TDelegate<void(class UGunObject* Object)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "BindUpdatedEvent");

	Params::GunObject_BindUpdatedEvent Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Stigma.GunObject.D_OnUpdatedSpec__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UGunObject*                       Object                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::D_OnUpdatedSpec__DelegateSignature(class UGunObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "D_OnUpdatedSpec__DelegateSignature");

	Params::GunObject_D_OnUpdatedSpec__DelegateSignature Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.GunObject.SetAccessory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_shop_preview                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetAccessory(EGunPartsSlot _slot, const struct FItemID& _item_id, bool _is_shop_preview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetAccessory");

	Params::GunObject_SetAccessory Parms{};

	Parms._slot = _slot;
	Parms._item_id = std::move(_item_id);
	Parms._is_shop_preview = _is_shop_preview;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetBody
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Body                 _body_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetBody(const struct FItemID_Gun_Body& _body_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetBody");

	Params::GunObject_SetBody Parms{};

	Parms._body_id = std::move(_body_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetBulletTip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBulletTip                              _bullet_tip                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetBulletTip(EBulletTip _bullet_tip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetBulletTip");

	Params::GunObject_SetBulletTip Parms{};

	Parms._bullet_tip = _bullet_tip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetCharm
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Charm                _charm_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_shop_preview                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetCharm(EGunPartsSlot _slot, const struct FItemID_Gun_Charm& _charm_id, bool _is_shop_preview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetCharm");

	Params::GunObject_SetCharm Parms{};

	Parms._slot = _slot;
	Parms._charm_id = std::move(_charm_id);
	Parms._is_shop_preview = _is_shop_preview;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetFront
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Front                _front_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetFront(const struct FItemID_Gun_Front& _front_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetFront");

	Params::GunObject_SetFront Parms{};

	Parms._front_id = std::move(_front_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetMagazine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Magazine             _magazine_id                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetMagazine(const struct FItemID_Gun_Magazine& _magazine_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetMagazine");

	Params::GunObject_SetMagazine Parms{};

	Parms._magazine_id = std::move(_magazine_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetPartsID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetPartsID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetPartsID");

	Params::GunObject_SetPartsID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetPresetName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _preset_name                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetPresetName(const class FString& _preset_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetPresetName");

	Params::GunObject_SetPresetName Parms{};

	Parms._preset_name = std::move(_preset_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetSight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Sight                _sight_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetSight(const struct FItemID_Gun_Sight& _sight_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetSight");

	Params::GunObject_SetSight Parms{};

	Parms._sight_id = std::move(_sight_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetSlide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Slide                _slide_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetSlide(const struct FItemID_Gun_Slide& _slide_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetSlide");

	Params::GunObject_SetSlide Parms{};

	Parms._slide_id = std::move(_slide_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetSticker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Sticker              _sticker_id                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_shop_preview                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetSticker(EGunPartsSlot _slot, const struct FItemID_Gun_Sticker& _sticker_id, bool _is_shop_preview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetSticker");

	Params::GunObject_SetSticker Parms{};

	Parms._slot = _slot;
	Parms._sticker_id = std::move(_sticker_id);
	Parms._is_shop_preview = _is_shop_preview;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetTopSight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Sight                _top_sight_id                                          (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetTopSight(const struct FItemID_Gun_Sight& _top_sight_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetTopSight");

	Params::GunObject_SetTopSight Parms{};

	Parms._top_sight_id = std::move(_top_sight_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.SetUnderSight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Gun_Sight                _under_sight_id                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::SetUnderSight(const struct FItemID_Gun_Sight& _under_sight_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "SetUnderSight");

	Params::GunObject_SetUnderSight Parms{};

	Parms._under_sight_id = std::move(_under_sight_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.ToggleBookmark
// (Final, Native, Public, BlueprintCallable)

void UGunObject::ToggleBookmark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "ToggleBookmark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.UnBindUpdatedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _binder                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGunObject::UnBindUpdatedEvent(class UObject* _binder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "UnBindUpdatedEvent");

	Params::GunObject_UnBindUpdatedEvent Parms{};

	Parms._binder = _binder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.UpdateGunSpec
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunSpec                         Param__spec                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGunObject::UpdateGunSpec(const struct FGunSpec& Param__spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "UpdateGunSpec");

	Params::GunObject_UpdateGunSpec Parms{};

	Parms.Param__spec = std::move(Param__spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.UpdateOwnInfo
// (Final, Native, Public, BlueprintCallable)

void UGunObject::UpdateOwnInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "UpdateOwnInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunObject.CalculateEquipablePartsCnt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGunObject::CalculateEquipablePartsCnt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "CalculateEquipablePartsCnt");

	Params::GunObject_CalculateEquipablePartsCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.CalculateEquippedPartsCnt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGunObject::CalculateEquippedPartsCnt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "CalculateEquippedPartsCnt");

	Params::GunObject_CalculateEquippedPartsCnt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.DuplicatedGunObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* UGunObject::DuplicatedGunObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "DuplicatedGunObject");

	Params::GunObject_DuplicatedGunObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.FindPartsSlotByID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunPartsSlot UGunObject::FindPartsSlotByID(const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "FindPartsSlotByID");

	Params::GunObject_FindPartsSlotByID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Body                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Body UGunObject::GetBody() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetBody");

	Params::GunObject_GetBody Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetBulletTip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBulletTip                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBulletTip UGunObject::GetBulletTip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetBulletTip");

	Params::GunObject_GetBulletTip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetCharm_Body
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Charm                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Charm UGunObject::GetCharm_Body() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetCharm_Body");

	Params::GunObject_GetCharm_Body Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetCharm_Magazine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Charm                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Charm UGunObject::GetCharm_Magazine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetCharm_Magazine");

	Params::GunObject_GetCharm_Magazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetExpireAt
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UGunObject::GetExpireAt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetExpireAt");

	Params::GunObject_GetExpireAt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetFront
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Front                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Front UGunObject::GetFront() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetFront");

	Params::GunObject_GetFront Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetGunPartsID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UGunObject::GetGunPartsID(EGunPartsSlot _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetGunPartsID");

	Params::GunObject_GetGunPartsID Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetGunPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunPreset                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGunPreset UGunObject::GetGunPreset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetGunPreset");

	Params::GunObject_GetGunPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetGunPresetSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGunObject::GetGunPresetSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetGunPresetSlot");

	Params::GunObject_GetGunPresetSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetGunSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec UGunObject::GetGunSpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetGunSpec");

	Params::GunObject_GetGunSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetGunType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunType UGunObject::GetGunType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetGunType");

	Params::GunObject_GetGunType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetMagazine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Magazine             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Magazine UGunObject::GetMagazine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetMagazine");

	Params::GunObject_GetMagazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetPresetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UGunObject::GetPresetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetPresetName");

	Params::GunObject_GetPresetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetSlide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Slide                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Slide UGunObject::GetSlide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetSlide");

	Params::GunObject_GetSlide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetSticker_Body
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Sticker              ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Sticker UGunObject::GetSticker_Body() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetSticker_Body");

	Params::GunObject_GetSticker_Body Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetSticker_Body2
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Sticker              ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Sticker UGunObject::GetSticker_Body2() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetSticker_Body2");

	Params::GunObject_GetSticker_Body2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetTopSight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Sight                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Sight UGunObject::GetTopSight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetTopSight");

	Params::GunObject_GetTopSight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetUnderSight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Gun_Sight                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Gun_Sight UGunObject::GetUnderSight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetUnderSight");

	Params::GunObject_GetUnderSight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.GetUnownedGunParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EGunPartsSlot>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EGunPartsSlot> UGunObject::GetUnownedGunParts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "GetUnownedGunParts");

	Params::GunObject_GetUnownedGunParts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsActivatedSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsActivatedSlot(EGunPartsSlot _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsActivatedSlot");

	Params::GunObject_IsActivatedSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsBookmarked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsBookmarked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsBookmarked");

	Params::GunObject_IsBookmarked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsDefaultPartsSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsDefaultPartsSlot(EGunPartsSlot _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsDefaultPartsSlot");

	Params::GunObject_IsDefaultPartsSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsEqual
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGunObject*                       _gun_object                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsEqual(const class UGunObject* _gun_object) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsEqual");

	Params::GunObject_IsEqual Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsEquippedItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsEquippedItem(const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsEquippedItem");

	Params::GunObject_IsEquippedItem Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsEquippedItemToSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsEquippedItemToSlot(EGunPartsSlot _slot, const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsEquippedItemToSlot");

	Params::GunObject_IsEquippedItemToSlot Parms{};

	Parms._slot = _slot;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsExpiredGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsExpiredGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsExpiredGun");

	Params::GunObject_IsExpiredGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunObject.IsHiddenSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunObject::IsHiddenSlot(EGunPartsSlot _slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunObject", "IsHiddenSlot");

	Params::GunObject_IsHiddenSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionInfo.GetMyPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCompetitionPlayer*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionPlayer* UCompetitionInfo::GetMyPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionInfo", "GetMyPlayer");

	Params::CompetitionInfo_GetMyPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionInfo.GetPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UCompetitionPlayer*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UCompetitionPlayer*> UCompetitionInfo::GetPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionInfo", "GetPlayers");

	Params::CompetitionInfo_GetPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionInfoManager.GetCompetitionBrief
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCompetitionBriefInfo*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionBriefInfo* UCompetitionInfoManager::GetCompetitionBrief(ECompetitionType _competition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionInfoManager", "GetCompetitionBrief");

	Params::CompetitionInfoManager_GetCompetitionBrief Parms{};

	Parms._competition_type = _competition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionInfoManager.GetCompetitionPlayerInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCompetitionInfo*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionInfo* UCompetitionInfoManager::GetCompetitionPlayerInfo(ECompetitionType _competition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionInfoManager", "GetCompetitionPlayerInfo");

	Params::CompetitionInfoManager_GetCompetitionPlayerInfo Parms{};

	Parms._competition_type = _competition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CompetitionInfoManager.SetUseFastStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _use                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCompetitionInfoManager::SetUseFastStart(ECompetitionType _competition_type, bool _use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionInfoManager", "SetUseFastStart");

	Params::CompetitionInfoManager_SetUseFastStart Parms{};

	Parms._competition_type = _competition_type;
	Parms._use = _use;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CompetitionInfoManager.IsEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCompetitionInfoManager::IsEnable(ECompetitionType _competition_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CompetitionInfoManager", "IsEnable");

	Params::CompetitionInfoManager_IsEnable Parms{};

	Parms._competition_type = _competition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.CheckVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _Version                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UConfig::CheckVersion(const class FString& _Version)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "CheckVersion");

	Params::Config_CheckVersion Parms{};

	Parms._Version = std::move(_Version);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.CompareVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _Version1                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Version2                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UConfig::CompareVersion(const class FString& _Version1, const class FString& _Version2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "CompareVersion");

	Params::Config_CompareVersion Parms{};

	Parms._Version1 = std::move(_Version1);
	Parms._Version2 = std::move(_Version2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetAPIURL
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _uri                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UConfig::GetAPIURL(const class UObject* _world_ctx, const class FString& _uri)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetAPIURL");

	Params::Config_GetAPIURL Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._uri = std::move(_uri);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetMQURL
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UConfig::GetMQURL(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetMQURL");

	Params::Config_GetMQURL Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetRunEnvironment
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERunEnv                                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERunEnv UConfig::GetRunEnvironment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetRunEnvironment");

	Params::Config_GetRunEnvironment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetRunEnvironmentName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UConfig::GetRunEnvironmentName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetRunEnvironmentName");

	Params::Config_GetRunEnvironmentName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetSteamAppID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UConfig::GetSteamAppID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetSteamAppID");

	Params::Config_GetSteamAppID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetVersionString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _with_revision                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UConfig::GetVersionString(bool _with_revision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetVersionString");

	Params::Config_GetVersionString Parms{};

	Parms._with_revision = _with_revision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.GetWebsocketURL
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UConfig::GetWebsocketURL(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "GetWebsocketURL");

	Params::Config_GetWebsocketURL Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.IsDevelopping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UConfig::IsDevelopping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "IsDevelopping");

	Params::Config_IsDevelopping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.IsRunEnvironment
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERunEnv                                 Run_type                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UConfig::IsRunEnvironment(ERunEnv Run_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "IsRunEnvironment");

	Params::Config_IsRunEnvironment Parms{};

	Parms.Run_type = Run_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Config.IsStaging
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UConfig::IsStaging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Config", "IsStaging");

	Params::Config_IsStaging Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.AddMissionConditionReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMissionConditionType                   _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _sub_type                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _value                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::AddMissionConditionReport(EMissionConditionType _type, const class FString& _sub_type, const int32 _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "AddMissionConditionReport");

	Params::PlayerContext_AddMissionConditionReport Parms{};

	Parms._type = _type;
	Parms._sub_type = std::move(_sub_type);
	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.BindOnMissionUpdatedEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(EMissionUpdateType _type, class UMission* _mission)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::BindOnMissionUpdatedEvent(const TDelegate<void(EMissionUpdateType _type, class UMission* _mission)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "BindOnMissionUpdatedEvent");

	Params::PlayerContext_BindOnMissionUpdatedEvent Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.DEBUG_SetPassiveSkillLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPassiveSkillID                  _skill_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _skill_level                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::DEBUG_SetPassiveSkillLevel(const struct FPassiveSkillID& _skill_id, int32 _skill_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "DEBUG_SetPassiveSkillLevel");

	Params::PlayerContext_DEBUG_SetPassiveSkillLevel Parms{};

	Parms._skill_id = std::move(_skill_id);
	Parms._skill_level = _skill_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.GetFilteredInvenItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _include_box                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _include_currency                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _include_function                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UPlayerContext::GetFilteredInvenItems(bool _include_box, bool _include_currency, bool _include_function)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetFilteredInvenItems");

	Params::PlayerContext_GetFilteredInvenItems Parms{};

	Parms._include_box = _include_box;
	Parms._include_currency = _include_currency;
	Parms._include_function = _include_function;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetOptimalGunByControlPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _chara_cp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _cur_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* UPlayerContext::GetOptimalGunByControlPower(float _chara_cp, class UGunObject* _cur_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetOptimalGunByControlPower");

	Params::PlayerContext_GetOptimalGunByControlPower Parms{};

	Parms._chara_cp = _chara_cp;
	Parms._cur_gun = _cur_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.OnMissionUpdated
// (Native, Protected)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _mission                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::OnMissionUpdated(EMissionUpdateType _type, class UMission* _mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "OnMissionUpdated");

	Params::PlayerContext_OnMissionUpdated Parms{};

	Parms._type = _type;
	Parms._mission = _mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.RefreshCharacterOwnInfo
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_in_battle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::RefreshCharacterOwnInfo(bool _is_in_battle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "RefreshCharacterOwnInfo");

	Params::PlayerContext_RefreshCharacterOwnInfo Parms{};

	Parms._is_in_battle = _is_in_battle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.RefreshGunOwnInfo
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_in_battle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::RefreshGunOwnInfo(bool _is_in_battle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "RefreshGunOwnInfo");

	Params::PlayerContext_RefreshGunOwnInfo Parms{};

	Parms._is_in_battle = _is_in_battle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.SetEmblem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetEmblem(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetEmblem");

	Params::PlayerContext_SetEmblem Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.SetNicknameFX
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetNicknameFX(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetNicknameFX");

	Params::PlayerContext_SetNicknameFX Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.SetProfileCard
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetProfileCard(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetProfileCard");

	Params::PlayerContext_SetProfileCard Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.UnBindOnMissionUpdatedEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::UnBindOnMissionUpdatedEvent(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "UnBindOnMissionUpdatedEvent");

	Params::PlayerContext_UnBindOnMissionUpdatedEvent Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerContext.FindFunctionByTarget
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFuncTarget                             _target                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAppliedFunction                 _function                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::FindFunctionByTarget(EFuncTarget _target, struct FAppliedFunction* _function) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "FindFunctionByTarget");

	Params::PlayerContext_FindFunctionByTarget Parms{};

	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_function != nullptr)
		*_function = std::move(Parms._function);

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.FindGunObjectByPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGunPreset                       _preset                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* UPlayerContext::FindGunObjectByPreset(const struct FGunPreset& _preset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "FindGunObjectByPreset");

	Params::PlayerContext_FindGunObjectByPreset Parms{};

	Parms._preset = std::move(_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetActiveFunctions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FActiveFunction>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FActiveFunction> UPlayerContext::GetActiveFunctions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetActiveFunctions");

	Params::PlayerContext_GetActiveFunctions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetAllCharacters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FCharacterInfo>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCharacterInfo> UPlayerContext::GetAllCharacters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetAllCharacters");

	Params::PlayerContext_GetAllCharacters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EArmorType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EArmorType UPlayerContext::GetArmor(ECharaType _type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetArmor");

	Params::PlayerContext_GetArmor Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UPlayerContext::GetBody(ECharaType _type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetBody");

	Params::PlayerContext_GetBody Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetBooster
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _slot_index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Booster                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Booster UPlayerContext::GetBooster(int32 _slot_index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetBooster");

	Params::PlayerContext_GetBooster Parms{};

	Parms._slot_index = _slot_index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetBoosterSlotExpiry
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UPlayerContext::GetBoosterSlotExpiry(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetBoosterSlotExpiry");

	Params::PlayerContext_GetBoosterSlotExpiry Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetBoosterSlotStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUserSlotStatus                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserSlotStatus UPlayerContext::GetBoosterSlotStatus(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetBoosterSlotStatus");

	Params::PlayerContext_GetBoosterSlotStatus Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetBoosterTicketCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetBoosterTicketCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetBoosterTicketCount");

	Params::PlayerContext_GetBoosterTicketCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FCharacterInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterInfo UPlayerContext::GetCharacter(ECharaType _chara_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCharacter");

	Params::PlayerContext_GetCharacter Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UPlayerContext::GetCharaType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCharaType");

	Params::PlayerContext_GetCharaType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCountry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerContext::GetCountry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCountry");

	Params::PlayerContext_GetCountry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCurrentArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EArmorType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EArmorType UPlayerContext::GetCurrentArmor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCurrentArmor");

	Params::PlayerContext_GetCurrentArmor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCurrentBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Skin_Body                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Skin_Body UPlayerContext::GetCurrentBody() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCurrentBody");

	Params::PlayerContext_GetCurrentBody Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCurrentCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCharacterInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterInfo UPlayerContext::GetCurrentCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCurrentCharacter");

	Params::PlayerContext_GetCurrentCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCurrentGunPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunPreset                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGunPreset UPlayerContext::GetCurrentGunPreset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCurrentGunPreset");

	Params::PlayerContext_GetCurrentGunPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetCurrentHead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Skin_Head                ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Skin_Head UPlayerContext::GetCurrentHead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetCurrentHead");

	Params::PlayerContext_GetCurrentHead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetEmblem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Emblem                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Emblem UPlayerContext::GetEmblem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetEmblem");

	Params::PlayerContext_GetEmblem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetFuncContext
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayerFuncContext         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPlayerFuncContext UPlayerContext::GetFuncContext() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetFuncContext");

	Params::PlayerContext_GetFuncContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetGMFunctions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FGMFunction>        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FGMFunction> UPlayerContext::GetGMFunctions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGMFunctions");

	Params::PlayerContext_GetGMFunctions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetGunMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<struct FGunPreset, class UGunObject*>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<struct FGunPreset, class UGunObject*> UPlayerContext::GetGunMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGunMap");

	Params::PlayerContext_GetGunMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetGunPreset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunPreset                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FGunPreset UPlayerContext::GetGunPreset(ECharaType _type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGunPreset");

	Params::PlayerContext_GetGunPreset Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetGunPresetSlotsStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<bool>                      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<bool> UPlayerContext::GetGunPresetSlotsStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGunPresetSlotsStatus");

	Params::PlayerContext_GetGunPresetSlotsStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetGunPresetSlotStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetGunPresetSlotStatus(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGunPresetSlotStatus");

	Params::PlayerContext_GetGunPresetSlotStatus Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetGuns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UGunObject*>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UGunObject*> UPlayerContext::GetGuns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGuns");

	Params::PlayerContext_GetGuns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetHavingCharas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<ECharaType, struct FCharacterInfo>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<ECharaType, struct FCharacterInfo> UPlayerContext::GetHavingCharas() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetHavingCharas");

	Params::PlayerContext_GetHavingCharas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetHead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UPlayerContext::GetHead(ECharaType _type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetHead");

	Params::PlayerContext_GetHead Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetInvenItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInvenItems*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItems* UPlayerContext::GetInvenItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetInvenItems");

	Params::PlayerContext_GetInvenItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetInvenItemsByGunParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UPlayerContext::GetInvenItemsByGunParts(EGunPartsSlot _gun_parts_slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetInvenItemsByGunParts");

	Params::PlayerContext_GetInvenItemsByGunParts Parms{};

	Parms._gun_parts_slot = _gun_parts_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetJoinType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EJoinType                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EJoinType UPlayerContext::GetJoinType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetJoinType");

	Params::PlayerContext_GetJoinType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetKPI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayerKPI                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FPlayerKPI UPlayerContext::GetKPI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetKPI");

	Params::PlayerContext_GetKPI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetLevel");

	Params::PlayerContext_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName UPlayerContext::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetNickname");

	Params::PlayerContext_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetNicknameFX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_NicknameFX               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_NicknameFX UPlayerContext::GetNicknameFX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetNicknameFX");

	Params::PlayerContext_GetNicknameFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetPassiveSkillLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPassiveSkillID                  _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetPassiveSkillLevel(const struct FPassiveSkillID& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetPassiveSkillLevel");

	Params::PlayerContext_GetPassiveSkillLevel Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetPickedCharaCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetPickedCharaCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetPickedCharaCount");

	Params::PlayerContext_GetPickedCharaCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetPickedCharaType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UPlayerContext::GetPickedCharaType(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetPickedCharaType");

	Params::PlayerContext_GetPickedCharaType Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetPreviewCharaInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCharacterInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterInfo UPlayerContext::GetPreviewCharaInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetPreviewCharaInfo");

	Params::PlayerContext_GetPreviewCharaInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetPrivilege
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayerPrivilege           ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FPlayerPrivilege UPlayerContext::GetPrivilege() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetPrivilege");

	Params::PlayerContext_GetPrivilege Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetProfileCard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_ProfileCard              ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_ProfileCard UPlayerContext::GetProfileCard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetProfileCard");

	Params::PlayerContext_GetProfileCard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerContext::GetRegion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetRegion");

	Params::PlayerContext_GetRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserRole                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FUserRole UPlayerContext::GetRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetRole");

	Params::PlayerContext_GetRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams UPlayerContext::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetTeam");

	Params::PlayerContext_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETier                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETier UPlayerContext::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetTier");

	Params::PlayerContext_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetTopInvenItemByID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UPlayerContext::GetTopInvenItemByID(const struct FItemID& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetTopInvenItemByID");

	Params::PlayerContext_GetTopInvenItemByID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetTotalSkillPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetTotalSkillPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetTotalSkillPoint");

	Params::PlayerContext_GetTotalSkillPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.GetTutorialProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTutorialProgress                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTutorialProgress UPlayerContext::GetTutorialProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetTutorialProgress");

	Params::PlayerContext_GetTutorialProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.HasCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::HasCharacter(ECharaType _chara_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "HasCharacter");

	Params::PlayerContext_HasCharacter Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.HasItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::HasItem(const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "HasItem");

	Params::PlayerContext_HasItem Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.HasUniqueItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::HasUniqueItem(const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "HasUniqueItem");

	Params::PlayerContext_HasUniqueItem Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.HasValidCharacters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::HasValidCharacters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "HasValidCharacters");

	Params::PlayerContext_HasValidCharacters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsAI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsAI");

	Params::PlayerContext_IsAI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsBoosterSlotActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsBoosterSlotActive(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsBoosterSlotActive");

	Params::PlayerContext_IsBoosterSlotActive Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsEquippedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsEquippedItem(EItemCategory _category, const struct FItemID& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsEquippedItem");

	Params::PlayerContext_IsEquippedItem Parms{};

	Parms._category = _category;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsFunctionApplied
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemIDRef_Function              _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsFunctionApplied(const struct FItemIDRef_Function& _item_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsFunctionApplied");

	Params::PlayerContext_IsFunctionApplied Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsReadyToFight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsReadyToFight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsReadyToFight");

	Params::PlayerContext_IsReadyToFight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsTutorialCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsTutorialCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsTutorialCompleted");

	Params::PlayerContext_IsTutorialCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PlayerContext.IsTutorialPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::IsTutorialPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "IsTutorialPaused");

	Params::PlayerContext_IsTutorialPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.AddRewardItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRewardPlain                     _reward_plain                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULocalPlayerContext::AddRewardItem(const struct FRewardPlain& _reward_plain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "AddRewardItem");

	Params::LocalPlayerContext_AddRewardItem Parms{};

	Parms._reward_plain = std::move(_reward_plain);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalPlayerContext.GetAllItemsOfCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UInvenItem*>         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UInvenItem*> ULocalPlayerContext::GetAllItemsOfCategory(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "GetAllItemsOfCategory");

	Params::LocalPlayerContext_GetAllItemsOfCategory Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.GetCategoryGoods
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGoodsCategory                          _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCategoryGoodsMap                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCategoryGoodsMap ULocalPlayerContext::GetCategoryGoods(EGoodsCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "GetCategoryGoods");

	Params::LocalPlayerContext_GetCategoryGoods Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.GetCompetitionInfoManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCompetitionInfoManager*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCompetitionInfoManager* ULocalPlayerContext::GetCompetitionInfoManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "GetCompetitionInfoManager");

	Params::LocalPlayerContext_GetCompetitionInfoManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.GetCopiedCurrentGunObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* ULocalPlayerContext::GetCopiedCurrentGunObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "GetCopiedCurrentGunObject");

	Params::LocalPlayerContext_GetCopiedCurrentGunObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.GetUserObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalUserProfile*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalUserProfile* ULocalPlayerContext::GetUserObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "GetUserObject");

	Params::LocalPlayerContext_GetUserObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.MakeItemsSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULocalPlayerContext::MakeItemsSeen(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "MakeItemsSeen");

	Params::LocalPlayerContext_MakeItemsSeen Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LocalPlayerContext.GetCurrentGunObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* ULocalPlayerContext::GetCurrentGunObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "GetCurrentGunObject");

	Params::LocalPlayerContext_GetCurrentGunObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.HasCategoryGoods
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGoodsCategory                          _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContext::HasCategoryGoods(EGoodsCategory _category) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "HasCategoryGoods");

	Params::LocalPlayerContext_HasCategoryGoods Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LocalPlayerContext.IsReadyForPVP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULocalPlayerContext::IsReadyForPVP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LocalPlayerContext", "IsReadyForPVP");

	Params::LocalPlayerContext_IsReadyForPVP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_Dialog.Tutorial_Dialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _msg                                                   (Parm, NativeAccessSpecifierPublic)
// class UTexture2D*                       _tex                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _img_index                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _left_side                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _black_screen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_Dialog*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_Dialog* UUIGuide_Dialog::Tutorial_Dialog(class UTutorial* _tutorial, const class FText& _msg, class UTexture2D* _tex, int32 _img_index, bool _left_side, bool _black_screen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_Dialog", "Tutorial_Dialog");

	Params::UIGuide_Dialog_Tutorial_Dialog Parms{};

	Parms._tutorial = _tutorial;
	Parms._msg = std::move(_msg);
	Parms._tex = _tex;
	Parms._img_index = _img_index;
	Parms._left_side = _left_side;
	Parms._black_screen = _black_screen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.FunctionHelper.GetFunctionEffectText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FConfig_Function                 _function_def                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFunctionHelper::GetFunctionEffectText(const struct FConfig_Function& _function_def)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionHelper", "GetFunctionEffectText");

	Params::FunctionHelper_GetFunctionEffectText Parms{};

	Parms._function_def = std::move(_function_def);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.FunctionHelper.IsGrantedOnceEffect
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FConfig_Function                 _function_def                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFunctionHelper::IsGrantedOnceEffect(const struct FConfig_Function& _function_def)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionHelper", "IsGrantedOnceEffect");

	Params::FunctionHelper_IsGrantedOnceEffect Parms{};

	Parms._function_def = std::move(_function_def);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_StopTutorial.Tutorial_StopTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_StopTutorial*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_StopTutorial* UUIGuide_StopTutorial::Tutorial_StopTutorial(class UTutorial* _tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_StopTutorial", "Tutorial_StopTutorial");

	Params::UIGuide_StopTutorial_Tutorial_StopTutorial Parms{};

	Parms._tutorial = _tutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CooltimeComponent.IsExpired
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             Param_Name                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Out_remain_time                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Out_duration                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCooltimeComponent::IsExpired(const class FName Param_Name, float* Out_remain_time, float* Out_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CooltimeComponent", "IsExpired");

	Params::CooltimeComponent_IsExpired Parms{};

	Parms.Param_Name = Param_Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_remain_time != nullptr)
		*Out_remain_time = Parms.Out_remain_time;

	if (Out_duration != nullptr)
		*Out_duration = Parms.Out_duration;

	return Parms.ReturnValue;
}


// Function Stigma.CooltimeComponent.StartCooltime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             Param_Name                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCooltimeComponent::StartCooltime(class FName Param_Name, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CooltimeComponent", "StartCooltime");

	Params::CooltimeComponent_StartCooltime Parms{};

	Parms.Param_Name = Param_Name;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_Armor.BindTargetChara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_Armor::BindTargetChara(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Armor", "BindTargetChara");

	Params::HUD_Armor_BindTargetChara Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_Armor.OnRechargeArmor
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _inc_armor_rate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_Armor::OnRechargeArmor(float _inc_armor_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Armor", "OnRechargeArmor");

	Params::HUD_Armor_OnRechargeArmor Parms{};

	Parms._inc_armor_rate = _inc_armor_rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.HUD_Armor.Update
// (Final, Native, Public, BlueprintCallable)

void UHUD_Armor::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Armor", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_Armor.UpdateMaterial
// (Final, Native, Protected, BlueprintCallable)

void UHUD_Armor::UpdateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Armor", "UpdateMaterial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_BattlePassLevel.SetLevel
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _set_instance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_BattlePassLevel::SetLevel(int32 _level, bool _set_instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_BattlePassLevel", "SetLevel");

	Params::Ctrl_BattlePassLevel_SetLevel Parms{};

	Parms._level = _level;
	Parms._set_instance = _set_instance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_BattlePassLevel.SetMax
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _is_max                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_BattlePassLevel::SetMax(bool _is_max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_BattlePassLevel", "SetMax");

	Params::Ctrl_BattlePassLevel_SetMax Parms{};

	Parms._is_max = _is_max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_Character_CheckBox.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _master_idx                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_Character_CheckBox::Init(int32 _master_idx, ECharaType _chara_type, class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Character_CheckBox", "Init");

	Params::Ctrl_Character_CheckBox_Init Parms{};

	Parms._master_idx = _master_idx;
	Parms._chara_type = _chara_type;
	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_Character_CheckBox.OnClickBtn
// (Final, Native, Protected)

void UCtrl_Character_CheckBox::OnClickBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Character_CheckBox", "OnClickBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_Character_CheckBox.OnClickCheckBox
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_Character_CheckBox::OnClickCheckBox(bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Character_CheckBox", "OnClickCheckBox");

	Params::Ctrl_Character_CheckBox_OnClickCheckBox Parms{};

	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_Character_CheckBox.RegisterIsSelectedDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool _is_select, class UCtrl_Character_CheckBox* _item)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_Character_CheckBox::RegisterIsSelectedDelegate(const TDelegate<void(bool _is_select, class UCtrl_Character_CheckBox* _item)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Character_CheckBox", "RegisterIsSelectedDelegate");

	Params::Ctrl_Character_CheckBox_RegisterIsSelectedDelegate Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_Character_CheckBox.SetSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_select                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _from_ctrl                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_Character_CheckBox::SetSelect(bool _is_select, bool _from_ctrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Character_CheckBox", "SetSelect");

	Params::Ctrl_Character_CheckBox_SetSelect Parms{};

	Parms._is_select = _is_select;
	Parms._from_ctrl = _from_ctrl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.OnClickButton
// (Final, Native, Public)

void UCtrl_CommonButtonBase::OnClickButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "OnClickButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.OnPressButton
// (Final, Native, Public)

void UCtrl_CommonButtonBase::OnPressButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "OnPressButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.SetBackground
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBrushStyle                      _style                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_CommonButtonBase::SetBackground(const struct FBrushStyle& _style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "SetBackground");

	Params::Ctrl_CommonButtonBase_SetBackground Parms{};

	Parms._style = std::move(_style);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.SetFont
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateFontInfo                   _new_font                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_sub_text                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonButtonBase::SetFont(const struct FSlateFontInfo& _new_font, bool _is_sub_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "SetFont");

	Params::Ctrl_CommonButtonBase_SetFont Parms{};

	Parms._new_font = std::move(_new_font);
	Parms._is_sub_text = _is_sub_text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.SetIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBrushStyle                      _icon_style                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_CommonButtonBase::SetIcon(const struct FBrushStyle& _icon_style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "SetIcon");

	Params::Ctrl_CommonButtonBase_SetIcon Parms{};

	Parms._icon_style = std::move(_icon_style);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             _new_text                                              (ConstParm, Parm, NativeAccessSpecifierPublic)
// bool                                    _is_sub_text                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonButtonBase::SetText(const class FText& _new_text, bool _is_sub_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "SetText");

	Params::Ctrl_CommonButtonBase_SetText Parms{};

	Parms._new_text = std::move(_new_text);
	Parms._is_sub_text = _is_sub_text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.ShowHighlight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonButtonBase::ShowHighlight(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "ShowHighlight");

	Params::Ctrl_CommonButtonBase_ShowHighlight Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.UpdateFont
// (Native, Event, Protected, BlueprintEvent)

void UCtrl_CommonButtonBase::UpdateFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "UpdateFont");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.UpdateIcon
// (Native, Event, Protected, BlueprintEvent)

void UCtrl_CommonButtonBase::UpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "UpdateIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.UpdateSize
// (Native, Event, Protected, BlueprintEvent)

void UCtrl_CommonButtonBase::UpdateSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "UpdateSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.UpdateState
// (Native, Event, Protected, BlueprintEvent)

void UCtrl_CommonButtonBase::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "UpdateState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.UpdateText
// (Native, Event, Protected, BlueprintEvent)

void UCtrl_CommonButtonBase::UpdateText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "UpdateText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonButtonBase.GetText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _is_sub_text                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UCtrl_CommonButtonBase::GetText(bool _is_sub_text) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "GetText");

	Params::Ctrl_CommonButtonBase_GetText Parms{};

	Parms._is_sub_text = _is_sub_text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonButtonBase.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_CommonButtonBase::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButtonBase", "IsEnabled");

	Params::Ctrl_CommonButtonBase_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_GunParts.Config
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       _inven_item                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _cur_gun_object                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_GunParts::Config(EGunPartsSlot _slot, class UInvenItem* _inven_item, class UGunObject* _cur_gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunParts", "Config");

	Params::LVData_GunParts_Config Parms{};

	Parms._slot = _slot;
	Parms._inven_item = _inven_item;
	Parms._cur_gun_object = _cur_gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_GunParts.OnUpdateListItemStates
// (Final, Native, Public, BlueprintCallable)

void ULVData_GunParts::OnUpdateListItemStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunParts", "OnUpdateListItemStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_GunParts.GetGunObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* ULVData_GunParts::GetGunObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunParts", "GetGunObject");

	Params::LVData_GunParts_GetGunObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_GunParts.GetInvenItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* ULVData_GunParts::GetInvenItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunParts", "GetInvenItem");

	Params::LVData_GunParts_GetInvenItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_GunParts.GetPartsSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunPartsSlot ULVData_GunParts::GetPartsSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_GunParts", "GetPartsSlot");

	Params::LVData_GunParts_GetPartsSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_KickOffTutorialIfAny.Tutorial_KickOffTutorialIfAny
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_KickOffTutorialIfAny*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_KickOffTutorialIfAny* UUIGuide_KickOffTutorialIfAny::Tutorial_KickOffTutorialIfAny(class UTutorial* _tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_KickOffTutorialIfAny", "Tutorial_KickOffTutorialIfAny");

	Params::UIGuide_KickOffTutorialIfAny_Tutorial_KickOffTutorialIfAny Parms{};

	Parms._tutorial = _tutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonButton_Currency.GetCanPurchase
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_CommonButton_Currency::GetCanPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButton_Currency", "GetCanPurchase");

	Params::Ctrl_CommonButton_Currency_GetCanPurchase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonButton_Currency.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _currency_amount                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonButton_Currency::InitWidget(const struct FItemID_Currency& _currency_id, int32 _currency_amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButton_Currency", "InitWidget");

	Params::Ctrl_CommonButton_Currency_InitWidget Parms{};

	Parms._currency_id = std::move(_currency_id);
	Parms._currency_amount = _currency_amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.ClearCharacter
// (Final, Native, Public, BlueprintCallable)

void AMannequin::ClearCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "ClearCharacter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.Reset
// (Final, Native, Public, BlueprintCallable)

void AMannequin::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.ResetRotation
// (Final, Native, Public, BlueprintCallable)

void AMannequin::ResetRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "ResetRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.RotateYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _yaw                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMannequin::RotateYaw(float _yaw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "RotateYaw");

	Params::Mannequin_RotateYaw Parms{};

	Parms._yaw = _yaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.SetCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID                          _body_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _head_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMannequin::SetCharacter(const struct FItemID& _body_id, const struct FItemID& _head_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "SetCharacter");

	Params::Mannequin_SetCharacter Parms{};

	Parms._body_id = std::move(_body_id);
	Parms._head_id = std::move(_head_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.SetGunByGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMannequin::SetGunByGunObject(class UGunObject* _gun_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "SetGunByGunObject");

	Params::Mannequin_SetGunByGunObject Parms{};

	Parms._gun_obj = _gun_obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.SetGunSpec
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunSpec                         _spec                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AMannequin::SetGunSpec(const struct FGunSpec& _spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "SetGunSpec");

	Params::Mannequin_SetGunSpec Parms{};

	Parms._spec = std::move(_spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _visible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMannequin::SetVisible(bool _visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "SetVisible");

	Params::Mannequin_SetVisible Parms{};

	Parms._visible = _visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.UpdateIfAny
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMannequin::UpdateIfAny(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "UpdateIfAny");

	Params::Mannequin_UpdateIfAny Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mannequin.GetBodyID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID AMannequin::GetBodyID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "GetBodyID");

	Params::Mannequin_GetBodyID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mannequin.GetCharacterType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType AMannequin::GetCharacterType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "GetCharacterType");

	Params::Mannequin_GetCharacterType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mannequin.GetGunType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunType AMannequin::GetGunType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "GetGunType");

	Params::Mannequin_GetGunType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mannequin.GetHeadID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID AMannequin::GetHeadID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "GetHeadID");

	Params::Mannequin_GetHeadID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mannequin.IsVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMannequin::IsVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mannequin", "IsVisible");

	Params::Mannequin_IsVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTutorialSubsystem*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTutorialSubsystem* UTutorialSubsystem::Get(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "Get");

	Params::TutorialSubsystem_Get Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.GetCompletedMatchCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTutorialSubsystem::GetCompletedMatchCount(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "GetCompletedMatchCount");

	Params::TutorialSubsystem_GetCompletedMatchCount Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.GetTutorialState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialState                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETutorialState UTutorialSubsystem::GetTutorialState(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "GetTutorialState");

	Params::TutorialSubsystem_GetTutorialState Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.IsAnyTutorialRunning
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorialSubsystem::IsAnyTutorialRunning(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "IsAnyTutorialRunning");

	Params::TutorialSubsystem_IsAnyTutorialRunning Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.IsTutorialProgressing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorialSubsystem::IsTutorialProgressing(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "IsTutorialProgressing");

	Params::TutorialSubsystem_IsTutorialProgressing Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.SetTutorialState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialState                          _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialSubsystem::SetTutorialState(const class UObject* _world_ctx, ETutorialState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "SetTutorialState");

	Params::TutorialSubsystem_SetTutorialState Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TutorialSubsystem.StartTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UTutorial>            _type                                                  (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialSubsystem::StartTutorial(const class UObject* _world_ctx, TSubclassOf<class UTutorial> _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "StartTutorial");

	Params::TutorialSubsystem_StartTutorial Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TutorialSubsystem.StartTutorialMatch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_welcome_match                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _option                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialSubsystem::StartTutorialMatch(const class UObject* _world_ctx, EGameMode _game_mode, int32 _level, ECharaType _chara_type, bool _is_welcome_match, const class FString& _option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "StartTutorialMatch");

	Params::TutorialSubsystem_StartTutorialMatch Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;
	Parms._level = _level;
	Parms._chara_type = _chara_type;
	Parms._is_welcome_match = _is_welcome_match;
	Parms._option = std::move(_option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TutorialSubsystem.StartWelcomeMatch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialSubsystem::StartWelcomeMatch(const class UObject* _world_ctx, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "StartWelcomeMatch");

	Params::TutorialSubsystem_StartWelcomeMatch Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TutorialSubsystem.StopWelcomeScenario
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show_yes_no                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorialSubsystem::StopWelcomeScenario(const class UObject* _world_ctx, bool _show_yes_no)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TutorialSubsystem", "StopWelcomeScenario");

	Params::TutorialSubsystem_StopWelcomeScenario Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._show_yes_no = _show_yes_no;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TutorialSubsystem.IsProgressing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorialSubsystem::IsProgressing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialSubsystem", "IsProgressing");

	Params::TutorialSubsystem_IsProgressing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TutorialSubsystem.IsTutorialRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorialSubsystem::IsTutorialRunning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TutorialSubsystem", "IsTutorialRunning");

	Params::TutorialSubsystem_IsTutorialRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_CommonButton_Intensity.SetIntensity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EButtonIntensity                        _new_intensity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonButton_Intensity::SetIntensity(EButtonIntensity _new_intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonButton_Intensity", "SetIntensity");

	Params::Ctrl_CommonButton_Intensity_SetIntensity Parms{};

	Parms._new_intensity = _new_intensity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Button_Ready.SetTitleText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UButton_Ready::SetTitleText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Button_Ready", "SetTitleText");

	Params::Button_Ready_SetTitleText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.HUD_CrossHair.GetCrossHairPos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UHUD_CrossHair::GetCrossHairPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CrossHair", "GetCrossHairPos");

	Params::HUD_CrossHair_GetCrossHairPos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_CrossHair.OnHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit_data                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_CrossHair::OnHit(const struct FHitData& _hit_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CrossHair", "OnHit");

	Params::HUD_CrossHair_OnHit Parms{};

	Parms._hit_data = std::move(_hit_data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_CrossHair.OnHit_Local
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FHitData                         _hit_data                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUD_CrossHair::OnHit_Local(const struct FHitData& _hit_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CrossHair", "OnHit_Local");

	Params::HUD_CrossHair_OnHit_Local Parms{};

	Parms._hit_data = std::move(_hit_data);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.HUD_CrossHair.SetCrossHairPos
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _x                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _y                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_CrossHair::SetCrossHairPos(float _x, float _y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CrossHair", "SetCrossHairPos");

	Params::HUD_CrossHair_SetCrossHairPos Parms{};

	Parms._x = _x;
	Parms._y = _y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonProgressBar.SetFractionalText
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _current_val                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _target_val                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_max                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonProgressBar::SetFractionalText(float _current_val, float _target_val, bool _is_max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonProgressBar", "SetFractionalText");

	Params::Ctrl_CommonProgressBar_SetFractionalText Parms{};

	Parms._current_val = _current_val;
	Parms._target_val = _target_val;
	Parms._is_max = _is_max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_CommonProgressBar.SetPercentageText
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _current_val                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _target_val                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_max                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonProgressBar::SetPercentageText(float _current_val, float _target_val, bool _is_max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonProgressBar", "SetPercentageText");

	Params::Ctrl_CommonProgressBar_SetPercentageText Parms{};

	Parms._current_val = _current_val;
	Parms._target_val = _target_val;
	Parms._is_max = _is_max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_CommonProgressBar.SetProgressPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _cur_percent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _reset_value                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonProgressBar::SetProgressPercent(float _cur_percent, bool _reset_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonProgressBar", "SetProgressPercent");

	Params::Ctrl_CommonProgressBar_SetProgressPercent Parms{};

	Parms._cur_percent = _cur_percent;
	Parms._reset_value = _reset_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonProgressBar.SetProgressValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _target_value                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _cur_value                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _reset_value                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonProgressBar::SetProgressValue(float _target_value, float _cur_value, bool _reset_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonProgressBar", "SetProgressValue");

	Params::Ctrl_CommonProgressBar_SetProgressValue Parms{};

	Parms._target_value = _target_value;
	Parms._cur_value = _cur_value;
	Parms._reset_value = _reset_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.Init
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCommonTabInitializeInfo         _info                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_CommonTab::Init(const struct FCommonTabInitializeInfo& _info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "Init");

	Params::Ctrl_CommonTab_Init Parms{};

	Parms._info = std::move(_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.OnClickBtn
// (Final, Native, Protected)

void UCtrl_CommonTab::OnClickBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "OnClickBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.SetSelected
// (Final, Native, Public, BlueprintCallable)

void UCtrl_CommonTab::SetSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "SetSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.SetSelectedID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_CommonTab::SetSelectedID(const class FName& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "SetSelectedID");

	Params::Ctrl_CommonTab_SetSelectedID Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.SetTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _Title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_CommonTab::SetTitle(const class FText& _Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "SetTitle");

	Params::Ctrl_CommonTab_SetTitle Parms{};

	Parms._Title = std::move(_Title);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.UpdateFont
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_CommonTab::UpdateFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "UpdateFont");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.UpdateMargin
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_CommonTab::UpdateMargin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "UpdateMargin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.UpdateSelected
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_CommonTab::UpdateSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "UpdateSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.UpdateSize
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_CommonTab::UpdateSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "UpdateSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.UpdateStyle
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_CommonTab::UpdateStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "UpdateStyle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.UpdateTitle
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_CommonTab::UpdateTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "UpdateTitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_CommonTab.GetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCtrl_CommonTab::GetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_CommonTab", "GetID");

	Params::Ctrl_CommonTab_GetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ShowWidget.Tutorial_ShowWidget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          _widget_class                                          (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _timeout                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _close_at_timeout                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUIOrder                                _order                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      _out_widget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ShowWidget*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ShowWidget* UUIGuide_ShowWidget::Tutorial_ShowWidget(class UTutorial* _tutorial, TSubclassOf<class UUserWidget> _widget_class, float _timeout, bool _close_at_timeout, EUIOrder _order, class UUserWidget** _out_widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ShowWidget", "Tutorial_ShowWidget");

	Params::UIGuide_ShowWidget_Tutorial_ShowWidget Parms{};

	Parms._tutorial = _tutorial;
	Parms._widget_class = _widget_class;
	Parms._timeout = _timeout;
	Parms._close_at_timeout = _close_at_timeout;
	Parms._order = _order;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_widget != nullptr)
		*_out_widget = Parms._out_widget;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_ControlMasterTabBase.GetSelectedChara
// (Event, Public, BlueprintEvent)
// Parameters:
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UCtrl_ControlMasterTabBase::GetSelectedChara()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ControlMasterTabBase", "GetSelectedChara");

	Params::Ctrl_ControlMasterTabBase_GetSelectedChara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_ControlMasterTabBase.InvokeOnMasterSelectionChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ECharaType                              _chara                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ControlMasterTabBase::InvokeOnMasterSelectionChanged(ECharaType _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ControlMasterTabBase", "InvokeOnMasterSelectionChanged");

	Params::Ctrl_ControlMasterTabBase_InvokeOnMasterSelectionChanged Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ControlMasterTabBase.RegisterOnMasterChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_ControlMasterTabBase* _master_tab, ECharaType _chara)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ControlMasterTabBase::RegisterOnMasterChanged(const TDelegate<void(class UCtrl_ControlMasterTabBase* _master_tab, ECharaType _chara)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ControlMasterTabBase", "RegisterOnMasterChanged");

	Params::Ctrl_ControlMasterTabBase_RegisterOnMasterChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ControlMasterTabBase.RemoveMasterProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ControlMasterTabBase::RemoveMasterProfile(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ControlMasterTabBase", "RemoveMasterProfile");

	Params::Ctrl_ControlMasterTabBase_RemoveMasterProfile Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ControlMasterTabBase.UpdateProfile
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_ControlMasterTabBase::UpdateProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ControlMasterTabBase", "UpdateProfile");

	Params::Ctrl_ControlMasterTabBase_UpdateProfile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.HUD_Cartridge.UpdateAnimationProgress
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_Cartridge::UpdateAnimationProgress(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_Cartridge", "UpdateAnimationProgress");

	Params::HUD_Cartridge_UpdateAnimationProgress Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_EventCountBubbleBase.ActiveEllipsisMark
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_EventCountBubbleBase::ActiveEllipsisMark(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_EventCountBubbleBase", "ActiveEllipsisMark");

	Params::Ctrl_EventCountBubbleBase_ActiveEllipsisMark Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_EventCountBubbleBase.SetEventCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_EventCountBubbleBase::SetEventCount(int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_EventCountBubbleBase", "SetEventCount");

	Params::Ctrl_EventCountBubbleBase_SetEventCount Parms{};

	Parms._count = _count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_EventCountBubbleBase.SetMaxDisplayableCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _max_count                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_EventCountBubbleBase::SetMaxDisplayableCount(int32 _max_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_EventCountBubbleBase", "SetMaxDisplayableCount");

	Params::Ctrl_EventCountBubbleBase_SetMaxDisplayableCount Parms{};

	Parms._max_count = _max_count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_EventCountBubbleBase.UpdateContext
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_EventCountBubbleBase::UpdateContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_EventCountBubbleBase", "UpdateContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_HorizontalTabPanel.OnTabSelected
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_HorizontalTabPanel::OnTabSelected(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_HorizontalTabPanel", "OnTabSelected");

	Params::Ctrl_HorizontalTabPanel_OnTabSelected Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ItemTag.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EItemUITag>                      _tags                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_ItemTag::InitWidget(const TArray<EItemUITag>& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemTag", "InitWidget");

	Params::Ctrl_ItemTag_InitWidget Parms{};

	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ItemTag.SetTagStyle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FItemTagConfig                   _style                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_ItemTag::SetTagStyle(const struct FItemTagConfig& _style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemTag", "SetTagStyle");

	Params::Ctrl_ItemTag_SetTagStyle Parms{};

	Parms._style = std::move(_style);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_ItemTag.ShowNextTag
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_ItemTag::ShowNextTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ItemTag", "ShowNextTag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitHistoryPopup.OnClickNextPage
// (Final, Native, Protected)

void UUI_RecruitHistoryPopup::OnClickNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitHistoryPopup", "OnClickNextPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitHistoryPopup.OnClickPrevPage
// (Final, Native, Protected)

void UUI_RecruitHistoryPopup::OnClickPrevPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitHistoryPopup", "OnClickPrevPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitHistoryPopup.OnHistoryTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitHistoryPopup::OnHistoryTabChanged(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitHistoryPopup", "OnHistoryTabChanged");

	Params::UI_RecruitHistoryPopup_OnHistoryTabChanged Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitHistoryPopup.OnReadHistoryRecruit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadHistoryRecruit          _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RecruitHistoryPopup::OnReadHistoryRecruit(EResultCode _rcode, const struct FACK_ReadHistoryRecruit& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitHistoryPopup", "OnReadHistoryRecruit");

	Params::UI_RecruitHistoryPopup_OnReadHistoryRecruit Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ListItem_Border.OnProcCheckBoxStateChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ListItem_Border::OnProcCheckBoxStateChanged(bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ListItem_Border", "OnProcCheckBoxStateChanged");

	Params::Ctrl_ListItem_Border_OnProcCheckBoxStateChanged Parms{};

	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ListItem_Border.GetHoverImageVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UCtrl_ListItem_Border::GetHoverImageVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ListItem_Border", "GetHoverImageVisibility");

	Params::Ctrl_ListItem_Border_GetHoverImageVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_MasterMissionButton.SetCharaIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _image                                                 (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_MasterMissionButton::SetCharaIcon(const TSoftObjectPtr<class UTexture2D>& _image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_MasterMissionButton", "SetCharaIcon");

	Params::Ctrl_MasterMissionButton_SetCharaIcon Parms{};

	Parms._image = _image;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_MasterMissionButton.SetLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_MasterMissionButton::SetLevel(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_MasterMissionButton", "SetLevel");

	Params::Ctrl_MasterMissionButton_SetLevel Parms{};

	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_MasterMissionButton.SetLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _locked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_MasterMissionButton::SetLocked(bool _locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_MasterMissionButton", "SetLocked");

	Params::Ctrl_MasterMissionButton_SetLocked Parms{};

	Parms._locked = _locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_MasterMissionButton.ShowRedDot
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_MasterMissionButton::ShowRedDot(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_MasterMissionButton", "ShowRedDot");

	Params::Ctrl_MasterMissionButton_ShowRedDot Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.HUD_HpProgress.BindTargetChara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_HpProgress::BindTargetChara(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HpProgress", "BindTargetChara");

	Params::HUD_HpProgress_BindTargetChara Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_HpProgress.OnHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _damage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_HpProgress::OnHit(float _damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HpProgress", "OnHit");

	Params::HUD_HpProgress_OnHit Parms{};

	Parms._damage = _damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_HpProgress.OnRechargeArmor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _inc_armor_rate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_HpProgress::OnRechargeArmor(float _inc_armor_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HpProgress", "OnRechargeArmor");

	Params::HUD_HpProgress_OnRechargeArmor Parms{};

	Parms._inc_armor_rate = _inc_armor_rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_HpProgress.Update
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_HpProgress::Update(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HpProgress", "Update");

	Params::HUD_HpProgress_Update Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_MissionRepeatSlot.OnSetReated
// (Event, Protected, BlueprintEvent)

void UCtrl_MissionRepeatSlot::OnSetReated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_MissionRepeatSlot", "OnSetReated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.Ctrl_NavigationStepper.GetNotSelectedEntrySlotBtnColor
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UCtrl_NavigationStepper::GetNotSelectedEntrySlotBtnColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "GetNotSelectedEntrySlotBtnColor");

	Params::Ctrl_NavigationStepper_GetNotSelectedEntrySlotBtnColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_NavigationStepper.GetSelectedEntry
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FNavigationStepperEntry          _get_selected_entry                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_NavigationStepper::GetSelectedEntry(struct FNavigationStepperEntry* _get_selected_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "GetSelectedEntry");

	Params::Ctrl_NavigationStepper_GetSelectedEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_get_selected_entry != nullptr)
		*_get_selected_entry = std::move(Parms._get_selected_entry);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_NavigationStepper.GetSelectedEntrySlotBtnColor
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UCtrl_NavigationStepper::GetSelectedEntrySlotBtnColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "GetSelectedEntrySlotBtnColor");

	Params::Ctrl_NavigationStepper_GetSelectedEntrySlotBtnColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_NavigationStepper.OnArrowHover
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_NavigationStepper::OnArrowHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "OnArrowHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepper.OnArrowUnhover
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_NavigationStepper::OnArrowUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "OnArrowUnhover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepper.OnLeftArrowClick
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_NavigationStepper::OnLeftArrowClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "OnLeftArrowClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepper.OnRightArrowClick
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_NavigationStepper::OnRightArrowClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "OnRightArrowClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepper.RegisterOnSelectionChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_NavigationStepper* _navigation_stepper, struct FNavigationStepperEntry& _selected_entry, int32 _entry_index)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_NavigationStepper::RegisterOnSelectionChanged(const TDelegate<void(class UCtrl_NavigationStepper* _navigation_stepper, struct FNavigationStepperEntry& _selected_entry, int32 _entry_index)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "RegisterOnSelectionChanged");

	Params::Ctrl_NavigationStepper_RegisterOnSelectionChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepper.SelectByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_NavigationStepper::SelectByIndex(int32 _index, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "SelectByIndex");

	Params::Ctrl_NavigationStepper_SelectByIndex Parms{};

	Parms._index = _index;
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_NavigationStepper.SelectEntryByID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_NavigationStepper::SelectEntryByID(const class FName& _id, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "SelectEntryByID");

	Params::Ctrl_NavigationStepper_SelectEntryByID Parms{};

	Parms._id = _id;
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_NavigationStepper.Setup
// (Final, Native, Public, BlueprintCallable)

void UCtrl_NavigationStepper::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepper.UpdateArrows
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_NavigationStepper::UpdateArrows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepper", "UpdateArrows");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_NavigationStepperSlotBase.SetSelectedState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_NavigationStepperSlotBase::SetSelectedState(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_NavigationStepperSlotBase", "SetSelectedState");

	Params::Ctrl_NavigationStepperSlotBase_SetSelectedState Parms{};

	Parms._flag = _flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RemainDateTimer.InitWidget
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDateTime                        _end_at                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _alert_hour                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RemainDateTimer::InitWidget(const struct FDateTime& _end_at, int32 _alert_hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RemainDateTimer", "InitWidget");

	Params::UI_RemainDateTimer_InitWidget Parms{};

	Parms._end_at = std::move(_end_at);
	Parms._alert_hour = _alert_hour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RemainDateTimer.OnAlert
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _alert                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RemainDateTimer::OnAlert(bool _alert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RemainDateTimer", "OnAlert");

	Params::UI_RemainDateTimer_OnAlert Parms{};

	Parms._alert = _alert;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RemainDateTimer.Reset
// (Final, Native, Public, BlueprintCallable)

void UUI_RemainDateTimer::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RemainDateTimer", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RemainDateTimer.GetRemainTimerSec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUI_RemainDateTimer::GetRemainTimerSec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RemainDateTimer", "GetRemainTimerSec");

	Params::UI_RemainDateTimer_GetRemainTimerSec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_Navigation_BorderBase.OnEndFocus
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UCtrl_Navigation_BorderBase::OnEndFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Navigation_BorderBase", "OnEndFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.Ctrl_Navigation_BorderBase.OnInteraction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UCtrl_Navigation_BorderBase::OnInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Navigation_BorderBase", "OnInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.Ctrl_Navigation_BorderBase.OnStartFocus
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UCtrl_Navigation_BorderBase::OnStartFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Navigation_BorderBase", "OnStartFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.HUD_TeamScorePanel_New.Update
// (Final, Native, Public, BlueprintCallable)

void UHUD_TeamScorePanel_New::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamScorePanel_New", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionControlBase.IsControlNowUsing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_OptionControlBase::IsControlNowUsing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionControlBase", "IsControlNowUsing");

	Params::Ctrl_OptionControlBase_IsControlNowUsing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionControlBase.RegisterOnControlUsingChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionControlBase* _control, bool _is_using)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionControlBase::RegisterOnControlUsingChanged(const TDelegate<void(class UCtrl_OptionControlBase* _control, bool _is_using)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionControlBase", "RegisterOnControlUsingChanged");

	Params::Ctrl_OptionControlBase_RegisterOnControlUsingChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionControlBase.SetIsControlNowUsing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionControlBase::SetIsControlNowUsing(bool _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionControlBase", "SetIsControlNowUsing");

	Params::Ctrl_OptionControlBase_SetIsControlNowUsing Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionControlBase.SetOwner
// (Native, Public, BlueprintCallable)
// Parameters:
// class UUI_Option_Control*               _owner_page                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCtrl_OptionItemPanelBase*        _owner_panel                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionControlBase::SetOwner(class UUI_Option_Control* _owner_page, class UCtrl_OptionItemPanelBase* _owner_panel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionControlBase", "SetOwner");

	Params::Ctrl_OptionControlBase_SetOwner Parms{};

	Parms._owner_page = _owner_page;
	Parms._owner_panel = _owner_panel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnBuyRecruit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_BuyRecruit                  _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnBuyRecruit(EResultCode _rcode, const struct FACK_BuyRecruit& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnBuyRecruit");

	Params::UI_RecruitPage_OnBuyRecruit Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnClickDetail
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _select                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnClickDetail(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnClickDetail");

	Params::UI_RecruitPage_OnClickDetail Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnClickExchange
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _select                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnClickExchange(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnClickExchange");

	Params::UI_RecruitPage_OnClickExchange Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnClickHistory
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _select                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnClickHistory(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnClickHistory");

	Params::UI_RecruitPage_OnClickHistory Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnClickRecruitBuy
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FRecruitExcuteData               _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnClickRecruitBuy(const struct FRecruitExcuteData& _data, int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnClickRecruitBuy");

	Params::UI_RecruitPage_OnClickRecruitBuy Parms{};

	Parms._data = std::move(_data);
	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnEndResult
// (Final, Native, Protected)

void UUI_RecruitPage::OnEndResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnEndResult");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnReadRecruit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadRecruit                 _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnReadRecruit(EResultCode _rcode, const struct FACK_ReadRecruit& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnReadRecruit");

	Params::UI_RecruitPage_OnReadRecruit Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnRecruitTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnRecruitTabChanged(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnRecruitTabChanged");

	Params::UI_RecruitPage_OnRecruitTabChanged Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitPage.OnUpdateUser
// (Final, Native, Protected)
// Parameters:
// EUserEvent                              _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitPage::OnUpdateUser(EUserEvent _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitPage", "OnUpdateUser");

	Params::UI_RecruitPage_OnUpdateUser Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDetailTabBase.CreateOptionContextWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UCtrl_OptionDetailTabBase::CreateOptionContextWidget(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDetailTabBase", "CreateOptionContextWidget");

	Params::Ctrl_OptionDetailTabBase_CreateOptionContextWidget Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionDetailTabBase.GetSelectedIdx
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCtrl_OptionDetailTabBase::GetSelectedIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDetailTabBase", "GetSelectedIdx");

	Params::Ctrl_OptionDetailTabBase_GetSelectedIdx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionDropDownBase.Internal_OnOpeningDropdown
// (Final, Native, Protected)

void UCtrl_OptionDropDownBase::Internal_OnOpeningDropdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "Internal_OnOpeningDropdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDropDownBase.OnProcSelectionChange
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _option                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             _selection_info                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionDropDownBase::OnProcSelectionChange(const class FName _id, const class FString& _option, ESelectInfo _selection_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "OnProcSelectionChange");

	Params::Ctrl_OptionDropDownBase_OnProcSelectionChange Parms{};

	Parms._id = _id;
	Parms._option = std::move(_option);
	Parms._selection_info = _selection_info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDropDownBase.RegisterOnSelectionChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class FName& _id, int32 _index)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionDropDownBase::RegisterOnSelectionChanged(const TDelegate<void(class FName& _id, int32 _index)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "RegisterOnSelectionChanged");

	Params::Ctrl_OptionDropDownBase_RegisterOnSelectionChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDropDownBase.SelectByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _display_text                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_OptionDropDownBase::SelectByID(class FName _display_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "SelectByID");

	Params::Ctrl_OptionDropDownBase_SelectByID Parms{};

	Parms._display_text = _display_text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionDropDownBase.SelectByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionDropDownBase::SelectByIndex(int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "SelectByIndex");

	Params::Ctrl_OptionDropDownBase_SelectByIndex Parms{};

	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDropDownBase.Setup
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionDropDownBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDropDownBase.SetUpByEntries
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FOptionDropDownEntry>     _entry_list                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_OptionDropDownBase::SetUpByEntries(const TArray<struct FOptionDropDownEntry>& _entry_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "SetUpByEntries");

	Params::Ctrl_OptionDropDownBase_SetUpByEntries Parms{};

	Parms._entry_list = std::move(_entry_list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionDropDownBase.GetOptionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCtrl_OptionDropDownBase::GetOptionCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "GetOptionCount");

	Params::Ctrl_OptionDropDownBase_GetOptionCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionDropDownBase.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCtrl_OptionDropDownBase::GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionDropDownBase", "GetSelectedIndex");

	Params::Ctrl_OptionDropDownBase_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionItemEntry.RegisterOnHoverChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionItemEntry* _panel, bool _is_hover)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionItemEntry::RegisterOnHoverChanged(const TDelegate<void(class UCtrl_OptionItemEntry* _panel, bool _is_hover)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionItemEntry", "RegisterOnHoverChanged");

	Params::Ctrl_OptionItemEntry_RegisterOnHoverChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_ScopeWidgetBase.OnEndChargeAnimation
// (Final, Native, Protected)

void UHUD_ScopeWidgetBase::OnEndChargeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ScopeWidgetBase", "OnEndChargeAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_ScopeWidgetBase.OnEndShootAnimation
// (Final, Native, Protected)

void UHUD_ScopeWidgetBase::OnEndShootAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_ScopeWidgetBase", "OnEndShootAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionItemPanelBase.SetHoverSound
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundBase*                       _hover_sound                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionItemPanelBase::SetHoverSound(class USoundBase* _hover_sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionItemPanelBase", "SetHoverSound");

	Params::Ctrl_OptionItemPanelBase_SetHoverSound Parms{};

	Parms._hover_sound = _hover_sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionItemPanelBase.SetHoverState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionItemPanelBase::SetHoverState(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionItemPanelBase", "SetHoverState");

	Params::Ctrl_OptionItemPanelBase_SetHoverState Parms{};

	Parms._flag = _flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_OptionItemPanelBase.SetPanelText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_OptionItemPanelBase::SetPanelText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionItemPanelBase", "SetPanelText");

	Params::Ctrl_OptionItemPanelBase_SetPanelText Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionItemPanelBase.SetUnhoverSound
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USoundBase*                       _unhover_sound                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionItemPanelBase::SetUnhoverSound(class USoundBase* _unhover_sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionItemPanelBase", "SetUnhoverSound");

	Params::Ctrl_OptionItemPanelBase_SetUnhoverSound Parms{};

	Parms._unhover_sound = _unhover_sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionItemPanelBase.Setup
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionItemPanelBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionItemPanelBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.ChangeKeyMapping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_roll_back                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::ChangeKeyMapping(bool _is_roll_back, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "ChangeKeyMapping");

	Params::Ctrl_OptionKeyBindBase_ChangeKeyMapping Parms{};

	Parms._is_roll_back = _is_roll_back;
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.CheckDuplicate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKeyBindOption                   Key_bind_option                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FKeyMappings                     _mappings                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::CheckDuplicate(const struct FKeyBindOption& Key_bind_option, const struct FKeyMappings& _mappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "CheckDuplicate");

	Params::Ctrl_OptionKeyBindBase_CheckDuplicate Parms{};

	Parms.Key_bind_option = std::move(Key_bind_option);
	Parms._mappings = std::move(_mappings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.CheckKeyDesc
// (Final, Native, Public, BlueprintCallable)

void UCtrl_OptionKeyBindBase::CheckKeyDesc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "CheckKeyDesc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMapping                      _cur_key_mapping                                       (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMapping                      _default_key_mapping                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMappings                     _cur_key_mappings                                      (Parm, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::Init(ECharaType _chara_type, const struct FKeyMapping& _cur_key_mapping, const struct FKeyMapping& _default_key_mapping, const struct FKeyMappings& _cur_key_mappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "Init");

	Params::Ctrl_OptionKeyBindBase_Init Parms{};

	Parms._chara_type = _chara_type;
	Parms._cur_key_mapping = std::move(_cur_key_mapping);
	Parms._default_key_mapping = std::move(_default_key_mapping);
	Parms._cur_key_mappings = std::move(_cur_key_mappings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.OnInternalKeyMappingChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKeyMapping                      _mapping                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::OnInternalKeyMappingChanged(const struct FKeyMapping& _mapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "OnInternalKeyMappingChanged");

	Params::Ctrl_OptionKeyBindBase_OnInternalKeyMappingChanged Parms{};

	Parms._mapping = std::move(_mapping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.ReadyToInputKey
// (Final, Native, Public, BlueprintCallable)

void UCtrl_OptionKeyBindBase::ReadyToInputKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "ReadyToInputKey");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.RegisterOnMappingChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionKeyBindBase* _key_binder, struct FKeyMapping& _mapping)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::RegisterOnMappingChange(const TDelegate<void(class UCtrl_OptionKeyBindBase* _key_binder, struct FKeyMapping& _mapping)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "RegisterOnMappingChange");

	Params::Ctrl_OptionKeyBindBase_RegisterOnMappingChange Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.SetBlinking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _blinking                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _blinking_speed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::SetBlinking(bool _blinking, float _blinking_speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "SetBlinking");

	Params::Ctrl_OptionKeyBindBase_SetBlinking Parms{};

	Parms._blinking = _blinking;
	Parms._blinking_speed = _blinking_speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionKeyBindBase.UpdateUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UCtrl_OptionKeyBindBase*          _key_binder                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeyMapping                      _mapping                                               (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionKeyBindBase::UpdateUI(class UCtrl_OptionKeyBindBase* _key_binder, const struct FKeyMapping& _mapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "UpdateUI");

	Params::Ctrl_OptionKeyBindBase_UpdateUI Parms{};

	Parms._key_binder = _key_binder;
	Parms._mapping = std::move(_mapping);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_OptionKeyBindBase.ValidateMtrl
// (Final, Native, Public, BlueprintCallable)

void UCtrl_OptionKeyBindBase::ValidateMtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBindBase", "ValidateMtrl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunPresetBlueprintLibrary.GetGunType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunType UGunPresetBlueprintLibrary::GetGunType(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunPresetBlueprintLibrary", "GetGunType");

	Params::GunPresetBlueprintLibrary_GetGunType Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunPresetBlueprintLibrary.GetPresetSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UGunPresetBlueprintLibrary::GetPresetSlot(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunPresetBlueprintLibrary", "GetPresetSlot");

	Params::GunPresetBlueprintLibrary_GetPresetSlot Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunPresetBlueprintLibrary.IsEqualGunPreset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGunPreset                       _preset1                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _preset2                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunPresetBlueprintLibrary::IsEqualGunPreset(const struct FGunPreset& _preset1, const struct FGunPreset& _preset2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunPresetBlueprintLibrary", "IsEqualGunPreset");

	Params::GunPresetBlueprintLibrary_IsEqualGunPreset Parms{};

	Parms._preset1 = std::move(_preset1);
	Parms._preset2 = std::move(_preset2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunPresetBlueprintLibrary.IsValidGunPreset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UGunPresetBlueprintLibrary::IsValidGunPreset(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunPresetBlueprintLibrary", "IsValidGunPreset");

	Params::GunPresetBlueprintLibrary_IsValidGunPreset Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunPresetBlueprintLibrary.MakeGunPreset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _preset_slot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGunPreset UGunPresetBlueprintLibrary::MakeGunPreset(EGunType _gun_type, int32 _preset_slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GunPresetBlueprintLibrary", "MakeGunPreset");

	Params::GunPresetBlueprintLibrary_MakeGunPreset Parms{};

	Parms._gun_type = _gun_type;
	Parms._preset_slot = _preset_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RewardItem.OnClickItem
// (Final, Native, Protected, BlueprintCallable)

void UUI_RewardItem::OnClickItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "OnClickItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardItem.SetCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RewardItem::SetCount(int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "SetCount");

	Params::UI_RewardItem_SetCount Parms{};

	Parms._count = _count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RewardItem.SetFromItemEntry
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FItemEntry                       _item_entry                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_RewardItem::SetFromItemEntry(const struct FItemEntry& _item_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "SetFromItemEntry");

	Params::UI_RewardItem_SetFromItemEntry Parms{};

	Parms._item_entry = std::move(_item_entry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RewardItem.SetRewardItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _reward_id                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _reward_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RewardItem::SetRewardItem(const struct FItemID& _reward_id, int32 _reward_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "SetRewardItem");

	Params::UI_RewardItem_SetRewardItem Parms{};

	Parms._reward_id = std::move(_reward_id);
	Parms._reward_count = _reward_count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardItem.SetRewardRankPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _reward_rank_point                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RewardItem::SetRewardRankPoint(int32 _reward_rank_point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "SetRewardRankPoint");

	Params::UI_RewardItem_SetRewardRankPoint Parms{};

	Parms._reward_rank_point = _reward_rank_point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardItem.SetRewardState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERewardItemState                        _reward_state                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RewardItem::SetRewardState(ERewardItemState _reward_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "SetRewardState");

	Params::UI_RewardItem_SetRewardState Parms{};

	Parms._reward_state = _reward_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardItem.GetItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID UUI_RewardItem::GetItemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "GetItemID");

	Params::UI_RewardItem_GetItemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RewardItem.GetRewardState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERewardItemState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERewardItemState UUI_RewardItem::GetRewardState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardItem", "GetRewardState");

	Params::UI_RewardItem_GetRewardState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionPaletteBase.ApplyChangeColor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPaletteBase::ApplyChangeColor(bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "ApplyChangeColor");

	Params::Ctrl_OptionPaletteBase_ApplyChangeColor Parms{};

	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.CloseDetailColorSetter
// (Final, Native, Public, BlueprintCallable)

void UCtrl_OptionPaletteBase::CloseDetailColorSetter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "CloseDetailColorSetter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.Init
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPaletteBase::Init(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "Init");

	Params::Ctrl_OptionPaletteBase_Init Parms{};

	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.InitByRGBA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _r                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _g                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _b                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _a                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPaletteBase::InitByRGBA(int32 _r, int32 _g, int32 _b, int32 _a)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "InitByRGBA");

	Params::Ctrl_OptionPaletteBase_InitByRGBA Parms{};

	Parms._r = _r;
	Parms._g = _g;
	Parms._b = _b;
	Parms._a = _a;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.OpenDetailColorSetter
// (Final, Native, Public, BlueprintCallable)

void UCtrl_OptionPaletteBase::OpenDetailColorSetter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "OpenDetailColorSetter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.RegisterOnValueApplied
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionPaletteBase* _palette, struct FLinearColor& _color)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPaletteBase::RegisterOnValueApplied(const TDelegate<void(class UCtrl_OptionPaletteBase* _palette, struct FLinearColor& _color)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "RegisterOnValueApplied");

	Params::Ctrl_OptionPaletteBase_RegisterOnValueApplied Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.RegisterOnValueChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionPaletteBase* _palette, struct FLinearColor& _color)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPaletteBase::RegisterOnValueChange(const TDelegate<void(class UCtrl_OptionPaletteBase* _palette, struct FLinearColor& _color)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "RegisterOnValueChange");

	Params::Ctrl_OptionPaletteBase_RegisterOnValueChange Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.Setup
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionPaletteBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPaletteBase.GetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCtrl_OptionPaletteBase::GetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPaletteBase", "GetID");

	Params::Ctrl_OptionPaletteBase_GetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.FindItemsOrAddItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UInvenItems::FindItemsOrAddItem(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "FindItemsOrAddItem");

	Params::InvenItems_FindItemsOrAddItem Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.HasItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInvenItems::HasItem(class UInvenItem* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "HasItem");

	Params::InvenItems_HasItem Parms{};

	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.IsVisibleRedDot_Category
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInvenItems::IsVisibleRedDot_Category(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "IsVisibleRedDot_Category");

	Params::InvenItems_IsVisibleRedDot_Category Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.IsVisibleRedDot_GunParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInvenItems::IsVisibleRedDot_GunParts(EGunType _gun_type, EGunPartsSlot _gun_parts_slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "IsVisibleRedDot_GunParts");

	Params::InvenItems_IsVisibleRedDot_GunParts Parms{};

	Parms._gun_type = _gun_type;
	Parms._gun_parts_slot = _gun_parts_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.SetSeenAtRecently_Category
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInvenItems::SetSeenAtRecently_Category(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "SetSeenAtRecently_Category");

	Params::InvenItems_SetSeenAtRecently_Category Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InvenItems.FindAttachablePartsItemsByGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UInvenItems::FindAttachablePartsItemsByGun(EGunType _gun_type, EGunPartsSlot _gun_parts_slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "FindAttachablePartsItemsByGun");

	Params::InvenItems_FindAttachablePartsItemsByGun Parms{};

	Parms._gun_type = _gun_type;
	Parms._gun_parts_slot = _gun_parts_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.FindItemByNetItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FNetInvenItem                    _net_item                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UInvenItems::FindItemByNetItem(const struct FNetInvenItem& _net_item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "FindItemByNetItem");

	Params::InvenItems_FindItemByNetItem Parms{};

	Parms._net_item = std::move(_net_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.FindItemsByGunPartsSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UInvenItems::FindItemsByGunPartsSlot(EGunPartsSlot _gun_parts_slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "FindItemsByGunPartsSlot");

	Params::InvenItems_FindItemsByGunPartsSlot Parms{};

	Parms._gun_parts_slot = _gun_parts_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.FindItemsByID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UInvenItems::FindItemsByID(const struct FItemID& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "FindItemsByID");

	Params::InvenItems_FindItemsByID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItems.FindTopItemByID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UInvenItems::FindTopItemByID(const struct FItemID& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItems", "FindTopItemByID");

	Params::InvenItems_FindTopItemByID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionPreSetColorBase.InternalOnMouseDown
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionPreSetColorBase::InternalOnMouseDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPreSetColorBase", "InternalOnMouseDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPreSetColorBase.RegisterOnClicked
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionPreSetColorBase* _preset_widget)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPreSetColorBase::RegisterOnClicked(const TDelegate<void(class UCtrl_OptionPreSetColorBase* _preset_widget)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPreSetColorBase", "RegisterOnClicked");

	Params::Ctrl_OptionPreSetColorBase_RegisterOnClicked Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPreSetColorBase.SetColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionPreSetColorBase::SetColor(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPreSetColorBase", "SetColor");

	Params::Ctrl_OptionPreSetColorBase_SetColor Parms{};

	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionPreSetColorBase.GetColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UCtrl_OptionPreSetColorBase::GetColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionPreSetColorBase", "GetColor");

	Params::Ctrl_OptionPreSetColorBase_GetColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BattlePassBriefSlot.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBriefSlot::InitWidget(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefSlot", "InitWidget");

	Params::UI_BattlePassBriefSlot_InitWidget Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefSlot.OnClick
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBriefSlot::OnClick(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefSlot", "OnClick");

	Params::UI_BattlePassBriefSlot_OnClick Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefSlot.GetPassID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID_BattlePass         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID_BattlePass UUI_BattlePassBriefSlot::GetPassID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefSlot", "GetPassID");

	Params::UI_BattlePassBriefSlot_GetPassID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Result_BattlePassBrief.AddPassExp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _base_exp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _buff_exp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Result_BattlePassBrief::AddPassExp(int32 _base_exp, int32 _buff_exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Result_BattlePassBrief", "AddPassExp");

	Params::UI_Result_BattlePassBrief_AddPassExp Parms{};

	Parms._base_exp = _base_exp;
	Parms._buff_exp = _buff_exp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Result_BattlePassBrief.SetFunctionAddedExp
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _buff_exp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Result_BattlePassBrief::SetFunctionAddedExp(int32 _buff_exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Result_BattlePassBrief", "SetFunctionAddedExp");

	Params::UI_Result_BattlePassBrief_SetFunctionAddedExp Parms{};

	Parms._buff_exp = _buff_exp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_OptionSliderBase.OnBeginCaptureSlider
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionSliderBase::OnBeginCaptureSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "OnBeginCaptureSlider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.OnEndCaptureSlider
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionSliderBase::OnEndCaptureSlider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "OnEndCaptureSlider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.OnInternalSliderValueChanged
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionSliderBase::OnInternalSliderValueChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "OnInternalSliderValueChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.OnSliderChanged
// (Final, Native, Protected)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionSliderBase::OnSliderChanged(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "OnSliderChanged");

	Params::Ctrl_OptionSliderBase_OnSliderChanged Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.OnValueTextCommitted
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             _commit_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionSliderBase::OnValueTextCommitted(const class FText& _text, ETextCommit _commit_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "OnValueTextCommitted");

	Params::Ctrl_OptionSliderBase_OnValueTextCommitted Parms{};

	Parms._text = std::move(_text);
	Parms._commit_type = _commit_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.RegisterOnValueChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_OptionSliderBase* Slider, class FName& _id, float _value)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionSliderBase::RegisterOnValueChange(const TDelegate<void(class UCtrl_OptionSliderBase* Slider, class FName& _id, float _value)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "RegisterOnValueChange");

	Params::Ctrl_OptionSliderBase_RegisterOnValueChange Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.Setup
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_OptionSliderBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_OptionSliderBase::SetValue(float _value, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "SetValue");

	Params::Ctrl_OptionSliderBase_SetValue Parms{};

	Parms._value = _value;
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_OptionSliderBase.GetNormalizedValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCtrl_OptionSliderBase::GetNormalizedValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "GetNormalizedValue");

	Params::Ctrl_OptionSliderBase_GetNormalizedValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_OptionSliderBase.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UCtrl_OptionSliderBase::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionSliderBase", "GetValue");

	Params::Ctrl_OptionSliderBase_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_PageNavigator.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _current_idx                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_idx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_PageNavigator::InitWidget(int32 _current_idx, int32 _max_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_PageNavigator", "InitWidget");

	Params::Ctrl_PageNavigator_InitWidget Parms{};

	Parms._current_idx = _current_idx;
	Parms._max_idx = _max_idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_PageNavigator.OnClickBtn
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_PageNavigator::OnClickBtn(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_PageNavigator", "OnClickBtn");

	Params::Ctrl_PageNavigator_OnClickBtn Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_PageNavigator.SetCurrentCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _current_count                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_PageNavigator::SetCurrentCount(int32 _current_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_PageNavigator", "SetCurrentCount");

	Params::Ctrl_PageNavigator_SetCurrentCount Parms{};

	Parms._current_count = _current_count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.EventPageHelper.GetAllEventPageIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemID_EventPage>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FItemID_EventPage> UEventPageHelper::GetAllEventPageIDs(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventPageHelper", "GetAllEventPageIDs");

	Params::EventPageHelper_GetAllEventPageIDs Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.EventPageHelper.GetMasterLevelExp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_level                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_exp                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _out_target_exp                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEventPageHelper::GetMasterLevelExp(const class UObject* _world_ctx, ECharaType _type, int32* _out_level, int32* _out_exp, int32* _out_target_exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventPageHelper", "GetMasterLevelExp");

	Params::EventPageHelper_GetMasterLevelExp Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_level != nullptr)
		*_out_level = Parms._out_level;

	if (_out_exp != nullptr)
		*_out_exp = Parms._out_exp;

	if (_out_target_exp != nullptr)
		*_out_target_exp = Parms._out_target_exp;

	return Parms.ReturnValue;
}


// Function Stigma.EventPageHelper.GetTypeEventPageIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEventPageType                          _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemID_EventPage>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FItemID_EventPage> UEventPageHelper::GetTypeEventPageIDs(const class UObject* _world_ctx, EEventPageType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EventPageHelper", "GetTypeEventPageIDs");

	Params::EventPageHelper_GetTypeEventPageIDs Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_WeaponPage.CloseParts
// (Final, Native, Protected, BlueprintCallable)

void UUI_WeaponPage::CloseParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "CloseParts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.GetPartsCamName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UUI_WeaponPage::GetPartsCamName(EGunPartsSlot _gun_parts_slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "GetPartsCamName");

	Params::UI_WeaponPage_GetPartsCamName Parms{};

	Parms._gun_parts_slot = _gun_parts_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_WeaponPage.Init
// (Final, Native, Protected, BlueprintCallable)

void UUI_WeaponPage::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.OnClickCloseParts
// (Final, Native, Protected)

void UUI_WeaponPage::OnClickCloseParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "OnClickCloseParts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.OnClickPartsSlot
// (Final, Native, Protected)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeaponPage::OnClickPartsSlot(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "OnClickPartsSlot");

	Params::UI_WeaponPage_OnClickPartsSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.OnLoadCompleteLevel
// (Final, Native, Protected)

void UUI_WeaponPage::OnLoadCompleteLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "OnLoadCompleteLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.OnUpdateGun
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _is_init                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeaponPage::OnUpdateGun(bool _is_init)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "OnUpdateGun");

	Params::UI_WeaponPage_OnUpdateGun Parms{};

	Parms._is_init = _is_init;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.OpenParts
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeaponPage::OpenParts(EGunPartsSlot _gun_parts_slot, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "OpenParts");

	Params::UI_WeaponPage_OpenParts Parms{};

	Parms._gun_parts_slot = _gun_parts_slot;
	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.RefreshPreview
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             _cam_tag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeaponPage::RefreshPreview(class FName _cam_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "RefreshPreview");

	Params::UI_WeaponPage_RefreshPreview Parms{};

	Parms._cam_tag = _cam_tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.SelectGunPreset
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeaponPage::SelectGunPreset(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "SelectGunPreset");

	Params::UI_WeaponPage_SelectGunPreset Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.SelectParts
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UInvenItem*                       _parts                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeaponPage::SelectParts(class UInvenItem* _parts, class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "SelectParts");

	Params::UI_WeaponPage_SelectParts Parms{};

	Parms._parts = _parts;
	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WeaponPage.ShowGunDetailParts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_shown                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WeaponPage::ShowGunDetailParts(bool _is_shown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "ShowGunDetailParts");

	Params::UI_WeaponPage_ShowGunDetailParts Parms{};

	Parms._is_shown = _is_shown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_WeaponPage.HasSelectPartsOnlyOwnedParts
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WeaponPage::HasSelectPartsOnlyOwnedParts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "HasSelectPartsOnlyOwnedParts");

	Params::UI_WeaponPage_HasSelectPartsOnlyOwnedParts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_WeaponPage.IsSelectingParts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WeaponPage::IsSelectingParts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeaponPage", "IsSelectingParts");

	Params::UI_WeaponPage_IsSelectingParts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_QuestionBase.OnGetAnswer
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FSurveyAnswer                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSurveyAnswer UCtrl_QuestionBase::OnGetAnswer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_QuestionBase", "OnGetAnswer");

	Params::Ctrl_QuestionBase_OnGetAnswer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_RadioButtonGroupBase.GetSelectedID
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UCtrl_RadioButtonGroupBase::GetSelectedID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "GetSelectedID");

	Params::Ctrl_RadioButtonGroupBase_GetSelectedID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_RadioButtonGroupBase.InvokeOnSelectionChanged
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_RadioButtonGroupBase::InvokeOnSelectionChanged(const class FName& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "InvokeOnSelectionChanged");

	Params::Ctrl_RadioButtonGroupBase_InvokeOnSelectionChanged Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_RadioButtonGroupBase.OnClick
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_RadioButtonGroupBase::OnClick(class FName _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "OnClick");

	Params::Ctrl_RadioButtonGroupBase_OnClick Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_RadioButtonGroupBase.OnHover
// (Final, Native, Protected, BlueprintCallable)

void UCtrl_RadioButtonGroupBase::OnHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "OnHover");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_RadioButtonGroupBase.RegisterOnSelectionChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_RadioButtonGroupBase* _panel, class FName& _id)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_RadioButtonGroupBase::RegisterOnSelectionChange(const TDelegate<void(class UCtrl_RadioButtonGroupBase* _panel, class FName& _id)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "RegisterOnSelectionChange");

	Params::Ctrl_RadioButtonGroupBase_RegisterOnSelectionChange Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_RadioButtonGroupBase.SelectOnlyMatchedID
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _id_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_RadioButtonGroupBase::SelectOnlyMatchedID(class FName _id_selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "SelectOnlyMatchedID");

	Params::Ctrl_RadioButtonGroupBase_SelectOnlyMatchedID Parms{};

	Parms._id_selected = _id_selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_RadioButtonGroupBase.SelectOnlyMatchedIDEx
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             _id_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_RadioButtonGroupBase::SelectOnlyMatchedIDEx(class FName _id_selected, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_RadioButtonGroupBase", "SelectOnlyMatchedIDEx");

	Params::Ctrl_RadioButtonGroupBase_SelectOnlyMatchedIDEx Parms{};

	Parms._id_selected = _id_selected;
	Parms._invoke_callback = _invoke_callback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UserSelectable.OnSelectGunType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGunType                                _gun_types                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IUserSelectable::OnSelectGunType(EGunType _gun_types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserSelectable", "OnSelectGunType");

	Params::UserSelectable_OnSelectGunType Parms{};

	Parms._gun_types = _gun_types;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_ResultProgressBar.SetAddedValueText
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _added_value                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ResultProgressBar::SetAddedValueText(int32 _added_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ResultProgressBar", "SetAddedValueText");

	Params::Ctrl_ResultProgressBar_SetAddedValueText Parms{};

	Parms._added_value = _added_value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_ScrollTextBlock.DoScroll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _do_scorll                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ScrollTextBlock::DoScroll(bool _do_scorll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ScrollTextBlock", "DoScroll");

	Params::Ctrl_ScrollTextBlock_DoScroll Parms{};

	Parms._do_scorll = _do_scorll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ScrollTextBlock.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _new_text                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_ScrollTextBlock::SetText(const class FText& _new_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ScrollTextBlock", "SetText");

	Params::Ctrl_ScrollTextBlock_SetText Parms{};

	Parms._new_text = std::move(_new_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WIDGET_TutorialDialog.OnEndShowMessage
// (Event, Protected, BlueprintEvent)

void UWIDGET_TutorialDialog::OnEndShowMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TutorialDialog", "OnEndShowMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.WIDGET_TutorialDialog.OnStartShowMessage
// (Event, Protected, BlueprintEvent)

void UWIDGET_TutorialDialog::OnStartShowMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TutorialDialog", "OnStartShowMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.WIDGET_TutorialDialog.IsShowing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWIDGET_TutorialDialog::IsShowing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TutorialDialog", "IsShowing");

	Params::WIDGET_TutorialDialog_IsShowing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_SkinSlot.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _skin_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_SkinSlot::InitWidget(const struct FItemID& _skin_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_SkinSlot", "InitWidget");

	Params::Ctrl_SkinSlot_InitWidget Parms{};

	Parms._skin_id = std::move(_skin_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.AllowPreviewerRotationMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _allow_rot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::AllowPreviewerRotationMode(bool _allow_rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "AllowPreviewerRotationMode");

	Params::LobbyControllerBase_AllowPreviewerRotationMode Parms{};

	Parms._allow_rot = _allow_rot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.CloseHelpPopup
// (Final, Native, Public, BlueprintCallable)

void ALobbyControllerBase::CloseHelpPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "CloseHelpPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.GetCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMouseCursor                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMouseCursor ALobbyControllerBase::GetCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "GetCursor");

	Params::LobbyControllerBase_GetCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LobbyControllerBase.GetCutScenePlayer
// (Final, Native, Public)
// Parameters:
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* ALobbyControllerBase::GetCutScenePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "GetCutScenePlayer");

	Params::LobbyControllerBase_GetCutScenePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LobbyControllerBase.GetSequenceByTag
// (Final, Native, Public)
// Parameters:
// class FName                             _tag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ALevelSequenceActor* ALobbyControllerBase::GetSequenceByTag(class FName _tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "GetSequenceByTag");

	Params::LobbyControllerBase_GetSequenceByTag Parms{};

	Parms._tag = _tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LobbyControllerBase.LoadSelectionCutScene
// (Final, Native, Public)

void ALobbyControllerBase::LoadSelectionCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "LoadSelectionCutScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.OnBeginGamePlay
// (Event, Protected, BlueprintEvent)

void ALobbyControllerBase::OnBeginGamePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "OnBeginGamePlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.LobbyControllerBase.OnFinishSelectionCutScene
// (Final, Native, Protected)

void ALobbyControllerBase::OnFinishSelectionCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "OnFinishSelectionCutScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.OnMatchChanged
// (Final, Native, Protected)

void ALobbyControllerBase::OnMatchChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "OnMatchChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.SetPreviewActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _Actor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::SetPreviewActor(class AActor* _Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "SetPreviewActor");

	Params::LobbyControllerBase_SetPreviewActor Parms{};

	Parms._Actor = _Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowBattlePassLevelUpPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _Title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowBattlePassLevelUpPopup(const class FText& _Title, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowBattlePassLevelUpPopup");

	Params::LobbyControllerBase_ShowBattlePassLevelUpPopup Parms{};

	Parms._Title = std::move(_Title);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowCompetitionRewardPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBC_CompetitionEnd               _competition_end                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowCompetitionRewardPopup(const struct FBC_CompetitionEnd& _competition_end)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowCompetitionRewardPopup");

	Params::LobbyControllerBase_ShowCompetitionRewardPopup Parms{};

	Parms._competition_end = std::move(_competition_end);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowEventPagePopup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _on_bc                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowEventPagePopup(bool _on_bc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowEventPagePopup");

	Params::LobbyControllerBase_ShowEventPagePopup Parms{};

	Parms._on_bc = _on_bc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowHelpPopup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _contents_key                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowHelpPopup(const class FString& _contents_key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowHelpPopup");

	Params::LobbyControllerBase_ShowHelpPopup Parms{};

	Parms._contents_key = std::move(_contents_key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowLevelUpPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRewardPlain                     _reward                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowLevelUpPopup(int32 _level, const struct FRewardPlain& _reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowLevelUpPopup");

	Params::LobbyControllerBase_ShowLevelUpPopup Parms{};

	Parms._level = _level;
	Parms._reward = std::move(_reward);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowMissionRewardPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FNetMission>              _rewarded_net_missions                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowMissionRewardPopup(const TArray<struct FNetMission>& _rewarded_net_missions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowMissionRewardPopup");

	Params::LobbyControllerBase_ShowMissionRewardPopup Parms{};

	Parms._rewarded_net_missions = std::move(_rewarded_net_missions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowNoticePopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FLoginNotice                     _packet                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _is_auto_open                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowNoticePopup(const struct FLoginNotice& _packet, bool _is_auto_open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowNoticePopup");

	Params::LobbyControllerBase_ShowNoticePopup Parms{};

	Parms._packet = std::move(_packet);
	Parms._is_auto_open = _is_auto_open;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowPlayerProfilePopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _emblem_id                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _profilecard_id                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETier                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowPlayerProfilePopup(const struct FUserID& _user_id, const struct FItemID& _emblem_id, const struct FItemID& _profilecard_id, ETier _tier, const struct FUserName& _nickname, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowPlayerProfilePopup");

	Params::LobbyControllerBase_ShowPlayerProfilePopup Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._emblem_id = std::move(_emblem_id);
	Parms._profilecard_id = std::move(_profilecard_id);
	Parms._tier = _tier;
	Parms._nickname = std::move(_nickname);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowRewardedPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRewardPlain                     _reward_plain                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _on_queue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowRewardedPopup(const struct FRewardPlain& _reward_plain, bool _on_queue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowRewardedPopup");

	Params::LobbyControllerBase_ShowRewardedPopup Parms{};

	Parms._reward_plain = std::move(_reward_plain);
	Parms._on_queue = _on_queue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowSeasonRewardPopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBC_SeasonReward                 _season_result                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowSeasonRewardPopup(const struct FBC_SeasonReward& _season_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowSeasonRewardPopup");

	Params::LobbyControllerBase_ShowSeasonRewardPopup Parms{};

	Parms._season_result = std::move(_season_result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.ShowTierUpdatePopup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBC_TierUpdate                   _tier_update                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ALobbyControllerBase::ShowTierUpdatePopup(const struct FBC_TierUpdate& _tier_update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "ShowTierUpdatePopup");

	Params::LobbyControllerBase_ShowTierUpdatePopup Parms{};

	Parms._tier_update = std::move(_tier_update);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.StopSelectionCutScene
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFollowCameraActor*               _cam                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyControllerBase::StopSelectionCutScene(class AFollowCameraActor* _cam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "StopSelectionCutScene");

	Params::LobbyControllerBase_StopSelectionCutScene Parms{};

	Parms._cam = _cam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyControllerBase.IsPlayingCutScene
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ALobbyControllerBase::IsPlayingCutScene() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyControllerBase", "IsPlayingCutScene");

	Params::LobbyControllerBase_IsPlayingCutScene Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_SocialTabEntryBase.DoSelect
// (Event, Public, BlueprintEvent)
// Parameters:
// ESocialPopupTabType                     _tab_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_SocialTabEntryBase::DoSelect(ESocialPopupTabType _tab_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_SocialTabEntryBase", "DoSelect");

	Params::Ctrl_SocialTabEntryBase_DoSelect Parms{};

	Parms._tab_type = _tab_type;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_SocialTabEntryBase.GetState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCtrl_SocialTabEntryBase::GetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_SocialTabEntryBase", "GetState");

	Params::Ctrl_SocialTabEntryBase_GetState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_SocialTabEntryBase.SetEventCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_SocialTabEntryBase::SetEventCount(int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_SocialTabEntryBase", "SetEventCount");

	Params::Ctrl_SocialTabEntryBase_SetEventCount Parms{};

	Parms._count = _count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_SocialTabEntryBase.SetState
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_SocialTabEntryBase::SetState(int32 _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_SocialTabEntryBase", "SetState");

	Params::Ctrl_SocialTabEntryBase_SetState Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_StatUpdate.SetControlPower
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _cp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_StatUpdate::SetControlPower(int32 _cp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_StatUpdate", "SetControlPower");

	Params::Ctrl_StatUpdate_SetControlPower Parms{};

	Parms._cp = _cp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_StatUpdate.SetControlPowerLack
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _cp_lack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_StatUpdate::SetControlPowerLack(int32 _cp_lack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_StatUpdate", "SetControlPowerLack");

	Params::Ctrl_StatUpdate_SetControlPowerLack Parms{};

	Parms._cp_lack = _cp_lack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.Ctrl_StatUpdate.SetCustomStatValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   _val                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       _Icon                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_StatUpdate::SetCustomStatValue(float _val, class UTexture2D* _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_StatUpdate", "SetCustomStatValue");

	Params::Ctrl_StatUpdate_SetCustomStatValue Parms{};

	Parms._val = _val;
	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.InvenItem.Create
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemEntry                       _item                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UInvenItem::Create(class UObject* _outer, const struct FItemEntry& _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("InvenItem", "Create");

	Params::InvenItem_Create Parms{};

	Parms._outer = _outer;
	Parms._item = std::move(_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.CopyFromItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInvenItem*                       _item                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInvenItem::CopyFromItem(const class UInvenItem* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "CopyFromItem");

	Params::InvenItem_CopyFromItem Parms{};

	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InvenItem.SetSeenAtRecently
// (Final, Native, Public, BlueprintCallable)

void UInvenItem::SetSeenAtRecently()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "SetSeenAtRecently");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.InvenItem.GetBigIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UTexture2D> UInvenItem::GetBigIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetBigIcon");

	Params::InvenItem_GetBigIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetColor
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FLinearColor               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FLinearColor UInvenItem::GetColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetColor");

	Params::InvenItem_GetColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UInvenItem::GetCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetCount");

	Params::InvenItem_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetDescShortText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UInvenItem::GetDescShortText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetDescShortText");

	Params::InvenItem_GetDescShortText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetDescText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UInvenItem::GetDescText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetDescText");

	Params::InvenItem_GetDescText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FText                       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const class FText UInvenItem::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetDisplayName");

	Params::InvenItem_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetExpiry
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UInvenItem::GetExpiry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetExpiry");

	Params::InvenItem_GetExpiry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetGrade
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemGrade                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemGrade UInvenItem::GetGrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetGrade");

	Params::InvenItem_GetGrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetIcon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TSoftObjectPtr<class UTexture2D>  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const TSoftObjectPtr<class UTexture2D> UInvenItem::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetIcon");

	Params::InvenItem_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UInvenItem::GetItemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetItemID");

	Params::InvenItem_GetItemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetLaunchingDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UInvenItem::GetLaunchingDate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetLaunchingDate");

	Params::InvenItem_GetLaunchingDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetLeftOwnershipTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UInvenItem::GetLeftOwnershipTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetLeftOwnershipTime");

	Params::InvenItem_GetLeftOwnershipTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.GetOwnType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOwnType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOwnType UInvenItem::GetOwnType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "GetOwnType");

	Params::InvenItem_GetOwnType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.IsOwned
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInvenItem::IsOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "IsOwned");

	Params::InvenItem_IsOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.IsPossessed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInvenItem::IsPossessed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "IsPossessed");

	Params::InvenItem_IsPossessed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem.IsVisibleRedDot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInvenItem::IsVisibleRedDot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem", "IsVisibleRedDot");

	Params::InvenItem_IsVisibleRedDot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfileRef.GetProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* UUserProfileRef::GetProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfileRef", "GetProfile");

	Params::UserProfileRef_GetProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfileRef.GetRefAs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUserProfileType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUserProfileType UUserProfileRef::GetRefAs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserProfileRef", "GetRefAs");

	Params::UserProfileRef_GetRefAs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_Status.SetSubTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_Status::SetSubTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Status", "SetSubTitle");

	Params::Ctrl_Status_SetSubTitle Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_Status.SetTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCtrl_Status::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_Status", "SetTitle");

	Params::Ctrl_Status_SetTitle Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxBase.Init
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _ctrl_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _ctrl_text                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxBase::Init(const class FName& _ctrl_id, const class FText& _ctrl_text, bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxBase", "Init");

	Params::Ctrl_TextCheckBoxBase_Init Parms{};

	Parms._ctrl_id = _ctrl_id;
	Parms._ctrl_text = std::move(_ctrl_text);
	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxBase.IsChecked
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_TextCheckBoxBase::IsChecked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxBase", "IsChecked");

	Params::Ctrl_TextCheckBoxBase_IsChecked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Ctrl_TextCheckBoxBase.OnProcCheckBoxStateChanged
// (Native, Protected)
// Parameters:
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxBase::OnProcCheckBoxStateChanged(bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxBase", "OnProcCheckBoxStateChanged");

	Params::Ctrl_TextCheckBoxBase_OnProcCheckBoxStateChanged Parms{};

	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxBase.RegisterOnStateChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UCtrl_TextCheckBoxBase* _check_box, class FName& _id, bool _is_checked)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxBase::RegisterOnStateChange(const TDelegate<void(class UCtrl_TextCheckBoxBase* _check_box, class FName& _id, bool _is_checked)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxBase", "RegisterOnStateChange");

	Params::Ctrl_TextCheckBoxBase_RegisterOnStateChange Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_TextCheckBoxBase.SetCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_TextCheckBoxBase::SetCheck(bool _flag, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_TextCheckBoxBase", "SetCheck");

	Params::Ctrl_TextCheckBoxBase_SetCheck Parms{};

	Parms._flag = _flag;
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ToggleButton.OnButtonClicked
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _button_widget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ToggleButton::OnButtonClicked(class UAnimatableWidget* _button_widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ToggleButton", "OnButtonClicked");

	Params::Ctrl_ToggleButton_OnButtonClicked Parms{};

	Parms._button_widget = _button_widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ToggleButton.OnValueChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_init                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ToggleButton::OnValueChanged(bool _value, bool _is_init)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ToggleButton", "OnValueChanged");

	Params::Ctrl_ToggleButton_OnValueChanged Parms{};

	Parms._value = _value;
	Parms._is_init = _is_init;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ToggleButton.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_init                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCtrl_ToggleButton::SetValue(bool _value, bool _is_init)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ToggleButton", "SetValue");

	Params::Ctrl_ToggleButton_SetValue Parms{};

	Parms._value = _value;
	Parms._is_init = _is_init;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Ctrl_ToggleButton.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCtrl_ToggleButton::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_ToggleButton", "GetValue");

	Params::Ctrl_ToggleButton_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.AddOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _option                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomComboBoxString::AddOption(const class FName _id, const class FString& _option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "AddOption");

	Params::CustomComboBoxString_AddOption Parms{};

	Parms._id = _id;
	Parms._option = std::move(_option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CustomComboBoxString.ClearOptions
// (Final, Native, Public, BlueprintCallable)

void UCustomComboBoxString::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "ClearOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CustomComboBoxString.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UCustomComboBoxString::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CustomComboBoxString.ForceOpen
// (Final, Native, Public, BlueprintCallable)

void UCustomComboBoxString::ForceOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "ForceOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction Stigma.CustomComboBoxString.OnOpeningEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UCustomComboBoxString::OnOpeningEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "OnOpeningEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction Stigma.CustomComboBoxString.OnSelectionChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             SelectedID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomComboBoxString::OnSelectionChangedEvent__DelegateSignature(class FName SelectedID, const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "OnSelectionChangedEvent__DelegateSignature");

	Params::CustomComboBoxString_OnSelectionChangedEvent__DelegateSignature Parms{};

	Parms.SelectedID = SelectedID;
	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.CustomComboBoxString.RefreshOptions
// (Final, Native, Public, BlueprintCallable)

void UCustomComboBoxString::RefreshOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "RefreshOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CustomComboBoxString.RemoveOption
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomComboBoxString::RemoveOption(const class FName& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "RemoveOption");

	Params::CustomComboBoxString_RemoveOption Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _index                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomComboBoxString::SetSelectedIndex(const int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "SetSelectedIndex");

	Params::CustomComboBoxString_SetSelectedIndex Parms{};

	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CustomComboBoxString.SetSelectedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomComboBoxString::SetSelectedOption(class FName _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "SetSelectedOption");

	Params::CustomComboBoxString_SetSelectedOption Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.CustomComboBoxString.FindOptionIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             _id                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCustomComboBoxString::FindOptionIndex(const class FName& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "FindOptionIndex");

	Params::CustomComboBoxString_FindOptionIndex Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.GetOptionAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOptionCustomBoxEntry            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOptionCustomBoxEntry UCustomComboBoxString::GetOptionAtIndex(int32 _index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "GetOptionAtIndex");

	Params::CustomComboBoxString_GetOptionAtIndex Parms{};

	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.GetOptionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCustomComboBoxString::GetOptionCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "GetOptionCount");

	Params::CustomComboBoxString_GetOptionCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UCustomComboBoxString::GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "GetSelectedIndex");

	Params::CustomComboBoxString_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.GetSelectedOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOptionCustomBoxEntry            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOptionCustomBoxEntry UCustomComboBoxString::GetSelectedOption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "GetSelectedOption");

	Params::CustomComboBoxString_GetSelectedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.CustomComboBoxString.IsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCustomComboBoxString::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomComboBoxString", "IsOpen");

	Params::CustomComboBoxString_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.DLG_JoinCustomGameBase.InvokeOnJoinCustomGameCallback
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           _battle_ids                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDLG_JoinCustomGameBase::InvokeOnJoinCustomGameCallback(const class FString& _battle_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DLG_JoinCustomGameBase", "InvokeOnJoinCustomGameCallback");

	Params::DLG_JoinCustomGameBase_InvokeOnJoinCustomGameCallback Parms{};

	Parms._battle_ids = std::move(_battle_ids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.DLG_JoinCustomGameBase.RegisterOnJoinCustomGame
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(const class FString& _battle_ids)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDLG_JoinCustomGameBase::RegisterOnJoinCustomGame(const TDelegate<void(const class FString& _battle_ids)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DLG_JoinCustomGameBase", "RegisterOnJoinCustomGame");

	Params::DLG_JoinCustomGameBase_RegisterOnJoinCustomGame Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Elevator.OnMovingDoor
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _t                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AElevator::OnMovingDoor(float _t)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "OnMovingDoor");

	Params::Elevator_OnMovingDoor Parms{};

	Parms._t = _t;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Elevator.OnMovingFloor
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _height                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _t                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AElevator::OnMovingFloor(float _height, float _t)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "OnMovingFloor");

	Params::Elevator_OnMovingFloor Parms{};

	Parms._height = _height;
	Parms._t = _t;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Elevator.OnRep_State
// (Final, Native, Protected)

void AElevator::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "OnRep_State");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Elevator.Operate
// (Final, Native, Public, BlueprintCallable)

void AElevator::Operate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "Operate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Elevator.Reset
// (Final, Native, Public, BlueprintCallable)

void AElevator::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Elevator.Setter_State
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FElevatorState                   _state                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AElevator::Setter_State(const struct FElevatorState& _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "Setter_State");

	Params::Elevator_Setter_State Parms{};

	Parms._state = std::move(_state);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Elevator.IsHighFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AElevator::IsHighFloor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "IsHighFloor");

	Params::Elevator_IsHighFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Elevator.IsLowFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AElevator::IsLowFloor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Elevator", "IsLowFloor");

	Params::Elevator_IsLowFloor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.EventCounterSubsystem.Subscribe
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSet<EEventCounter>                     _events                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EEventCounter _event, int32 _count)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventCounterSubsystem::Subscribe(const TSet<EEventCounter>& _events, const TDelegate<void(EEventCounter _event, int32 _count)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventCounterSubsystem", "Subscribe");

	Params::EventCounterSubsystem_Subscribe Parms{};

	Parms._events = std::move(_events);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.EventCounterSubsystem.Unsubscribe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventCounterSubsystem::Unsubscribe(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventCounterSubsystem", "Unsubscribe");

	Params::EventCounterSubsystem_Unsubscribe Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.EventCounterSubsystem.GetTotalCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSet<EEventCounter>                     _events                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEventCounterSubsystem::GetTotalCount(const TSet<EEventCounter>& _events) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventCounterSubsystem", "GetTotalCount");

	Params::EventCounterSubsystem_GetTotalCount Parms{};

	Parms._events = std::move(_events);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.GetGunnerState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _sub_gun                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunnerState                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FGunnerState IGunner::GetGunnerState(bool _sub_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "GetGunnerState");

	Params::Gunner_GetGunnerState Parms{};

	Parms._sub_gun = _sub_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.GetTargetingPoint
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _for_aiming_shot                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBodyParts                              _part                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IGunner::GetTargetingPoint(bool _for_aiming_shot, EBodyParts _part)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "GetTargetingPoint");

	Params::Gunner_GetTargetingPoint Parms{};

	Parms._for_aiming_shot = _for_aiming_shot;
	Parms._part = _part;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.OnBeReady
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _sub_gun                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGunner::OnBeReady(bool _sub_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "OnBeReady");

	Params::Gunner_OnBeReady Parms{};

	Parms._sub_gun = _sub_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.OnExtraJob
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _sub_gun                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _extra_job_id                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGunner::OnExtraJob(bool _sub_gun, int32 _extra_job_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "OnExtraJob");

	Params::Gunner_OnExtraJob Parms{};

	Parms._sub_gun = _sub_gun;
	Parms._extra_job_id = _extra_job_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.OnFireOneShot
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _sub_gun                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FShot                            _shot                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGunner::OnFireOneShot(bool _sub_gun, const struct FShot& _shot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "OnFireOneShot");

	Params::Gunner_OnFireOneShot Parms{};

	Parms._sub_gun = _sub_gun;
	Parms._shot = std::move(_shot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.OnLoadBullet
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _sub_gun                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGunner::OnLoadBullet(bool _sub_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "OnLoadBullet");

	Params::Gunner_OnLoadBullet Parms{};

	Parms._sub_gun = _sub_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Gunner.OnLoadMagazine
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _sub_gun                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IGunner::OnLoadMagazine(bool _sub_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Gunner", "OnLoadMagazine");

	Params::Gunner_OnLoadMagazine Parms{};

	Parms._sub_gun = _sub_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoldBox.DriveWidget
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGoldBox::DriveWidget(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "DriveWidget");

	Params::GoldBox_DriveWidget Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoldBox.OnRep_BoxType
// (Final, Native, Public)

void AGoldBox::OnRep_BoxType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "OnRep_BoxType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoldBox.RPC_ALL_LoadConfig
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AGoldBox::RPC_ALL_LoadConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "RPC_ALL_LoadConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoldBox.Setter_BoxType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGoldBoxType                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGoldBox::Setter_BoxType(EGoldBoxType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "Setter_BoxType");

	Params::GoldBox_Setter_BoxType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoldBox.ShowDelayParticle
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGoldBox::ShowDelayParticle(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "ShowDelayParticle");

	Params::GoldBox_ShowDelayParticle Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.GoldBox.GetDelayProgressRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGoldBox::GetDelayProgressRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "GetDelayProgressRate");

	Params::GoldBox_GetDelayProgressRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoldBox.GetGoldBoxConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGoldBoxConfig             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGoldBoxConfig AGoldBox::GetGoldBoxConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "GetGoldBoxConfig");

	Params::GoldBox_GetGoldBoxConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoldBox.GetGoldBoxType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGoldBoxType                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoldBoxType AGoldBox::GetGoldBoxType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "GetGoldBoxType");

	Params::GoldBox_GetGoldBoxType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoldBox.GetGoldValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGoldBox::GetGoldValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "GetGoldValue");

	Params::GoldBox_GetGoldValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoldBox.IsOnDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGoldBox::IsOnDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoldBox", "IsOnDelay");

	Params::GoldBox_IsOnDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GoToWidgetDetailer.Init
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGoToWidget*                      _goto_widget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   _detailer_params                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UGoToWidgetDetailer::Init(class UGoToWidget* _goto_widget, const TArray<class FString>& _detailer_params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoToWidgetDetailer", "Init");

	Params::GoToWidgetDetailer_Init Parms{};

	Parms._goto_widget = _goto_widget;
	Parms._detailer_params = std::move(_detailer_params);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GoToWidgetDetailer.PlayDetailer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPreviewableWidget*               _target_widget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGoToWidgetDetailer::PlayDetailer(class UPreviewableWidget* _target_widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GoToWidgetDetailer", "PlayDetailer");

	Params::GoToWidgetDetailer_PlayDetailer Parms{};

	Parms._target_widget = _target_widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.ALL_FireAShot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunFeedback                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunFeedback AGunBase::ALL_FireAShot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "ALL_FireAShot");

	Params::GunBase_ALL_FireAShot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.BeginFire
// (Final, Native, Public, BlueprintCallable)

void AGunBase::BeginFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "BeginFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.EndFire
// (Final, Native, Public, BlueprintCallable)

void AGunBase::EndFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "EndFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.GetDefaultMagazineValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMagazine                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMagazine AGunBase::GetDefaultMagazineValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetDefaultMagazineValue");

	Params::GunBase_GetDefaultMagazineValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.MakeForUI
// (Final, Native, Public, BlueprintCallable)

void AGunBase::MakeForUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "MakeForUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.MergeMeshes
// (Final, Native, Public)

void AGunBase::MergeMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "MergeMeshes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.OnFire
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::OnFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnFire");

	Params::GunBase_OnFire Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.OnLoadBullet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::OnLoadBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnLoadBullet");

	Params::GunBase_OnLoadBullet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.OnLoadMagazine
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::OnLoadMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnLoadMagazine");

	Params::GunBase_OnLoadMagazine Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.OnLoadSettings
// (Event, Public, BlueprintEvent)

void AGunBase::OnLoadSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnLoadSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.GunBase.OnRep_EnableLaserSight
// (Final, Native, Protected)

void AGunBase::OnRep_EnableLaserSight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnRep_EnableLaserSight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.OnRep_GunSpec
// (Final, Native, Protected)

void AGunBase::OnRep_GunSpec()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnRep_GunSpec");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.OnRep_GunState
// (Final, Native, Protected)

void AGunBase::OnRep_GunState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "OnRep_GunState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.RPC_SERVER_DEBUG_ChangeGunPart
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGunBase::RPC_SERVER_DEBUG_ChangeGunPart(const struct FItemID& _item_id, EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "RPC_SERVER_DEBUG_ChangeGunPart");

	Params::GunBase_RPC_SERVER_DEBUG_ChangeGunPart Parms{};

	Parms._item_id = std::move(_item_id);
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_CalcDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaAction                            _involving_action                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _distance_in_cm                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _apply_damage_rate                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageDef                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FDamageDef AGunBase::SERVER_CalcDamage(ECharaAction _involving_action, float _distance_in_cm, float _apply_damage_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_CalcDamage");

	Params::GunBase_SERVER_CalcDamage Parms{};

	Parms._involving_action = _involving_action;
	Parms._distance_in_cm = _distance_in_cm;
	Parms._apply_damage_rate = _apply_damage_rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.SERVER_CancelLoadBullet
// (Final, Native, Public, BlueprintCallable)

void AGunBase::SERVER_CancelLoadBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_CancelLoadBullet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_CancelLoadMagazine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMagazine                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMagazine AGunBase::SERVER_CancelLoadMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_CancelLoadMagazine");

	Params::GunBase_SERVER_CancelLoadMagazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.SERVER_EndLoadBullet
// (Final, Native, Public, BlueprintCallable)

void AGunBase::SERVER_EndLoadBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_EndLoadBullet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_EndLoadMagazine
// (Final, Native, Public, BlueprintCallable)

void AGunBase::SERVER_EndLoadMagazine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_EndLoadMagazine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_Reset
// (Final, Native, Public, BlueprintCallable)

void AGunBase::SERVER_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_SetBulletTip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBulletTip                              _tip_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGunBase::SERVER_SetBulletTip(EBulletTip _tip_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_SetBulletTip");

	Params::GunBase_SERVER_SetBulletTip Parms{};

	Parms._tip_type = _tip_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_SetGunParts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGunBase::SERVER_SetGunParts(const struct FItemID& _id, EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_SetGunParts");

	Params::GunBase_SERVER_SetGunParts Parms{};

	Parms._id = std::move(_id);
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_SetGunSpec
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunSpec                         _gun_spec                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AGunBase::SERVER_SetGunSpec(const struct FGunSpec& _gun_spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_SetGunSpec");

	Params::GunBase_SERVER_SetGunSpec Parms{};

	Parms._gun_spec = std::move(_gun_spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_StartLoadBullet
// (Final, Native, Public, BlueprintCallable)

void AGunBase::SERVER_StartLoadBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_StartLoadBullet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SERVER_StartLoadMagazine
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMagazine                        _new_mag                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FMagazine                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMagazine AGunBase::SERVER_StartLoadMagazine(const struct FMagazine& _new_mag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SERVER_StartLoadMagazine");

	Params::GunBase_SERVER_StartLoadMagazine Parms{};

	Parms._new_mag = std::move(_new_mag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.Setter_EnableLaserSight
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGunBase::Setter_EnableLaserSight(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "Setter_EnableLaserSight");

	Params::GunBase_Setter_EnableLaserSight Parms{};

	Parms._enable = _enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.Setter_GunSpec
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGunSpec                         _gun_spec                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AGunBase::Setter_GunSpec(const struct FGunSpec& _gun_spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "Setter_GunSpec");

	Params::GunBase_Setter_GunSpec Parms{};

	Parms._gun_spec = std::move(_gun_spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.Setter_GunState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EGunState                               _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AGunBase::Setter_GunState(EGunState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "Setter_GunState");

	Params::GunBase_Setter_GunState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.SpawnBulletEjection
// (Final, Native, Public, BlueprintCallable)

void AGunBase::SpawnBulletEjection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "SpawnBulletEjection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.UpdateScope
// (Final, Native, Protected)

void AGunBase::UpdateScope()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "UpdateScope");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.GunBase.GetBodyConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunEntry_Body             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Body AGunBase::GetBodyConfig() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetBodyConfig");

	Params::GunBase_GetBodyConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetBulletEffectType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBulletEffectScaleType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBulletEffectScaleType AGunBase::GetBulletEffectType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetBulletEffectType");

	Params::GunBase_GetBulletEffectType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetBulletType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBulletType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBulletType AGunBase::GetBulletType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetBulletType");

	Params::GunBase_GetBulletType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetCalculatedMagazineCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetCalculatedMagazineCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetCalculatedMagazineCapacity");

	Params::GunBase_GetCalculatedMagazineCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_AutoFireCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetConfig_AutoFireCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_AutoFireCount");

	Params::GunBase_GetConfig_AutoFireCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_BulletPerShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetConfig_BulletPerShot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_BulletPerShot");

	Params::GunBase_GetConfig_BulletPerShot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_BulletTip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FBulletTipDefine           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBulletTipDefine AGunBase::GetConfig_BulletTip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_BulletTip");

	Params::GunBase_GetConfig_BulletTip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_FireDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGunBase::GetConfig_FireDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_FireDelay");

	Params::GunBase_GetConfig_FireDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_MagazineCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetConfig_MagazineCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_MagazineCapacity");

	Params::GunBase_GetConfig_MagazineCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_MaxMagazine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetConfig_MaxMagazine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_MaxMagazine");

	Params::GunBase_GetConfig_MaxMagazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_ProjectileCountPerBullet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetConfig_ProjectileCountPerBullet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_ProjectileCountPerBullet");

	Params::GunBase_GetConfig_ProjectileCountPerBullet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetConfig_Range
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGunBase::GetConfig_Range() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetConfig_Range");

	Params::GunBase_GetConfig_Range Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetCurrentReloadingMagaine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMagazine                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMagazine AGunBase::GetCurrentReloadingMagaine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetCurrentReloadingMagaine");

	Params::GunBase_GetCurrentReloadingMagaine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetFeedback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   _tolerant_delay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunFeedback                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunFeedback AGunBase::GetFeedback(float _tolerant_delay) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetFeedback");

	Params::GunBase_GetFeedback Parms{};

	Parms._tolerant_delay = _tolerant_delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetFireCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetFireCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetFireCount");

	Params::GunBase_GetFireCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetFireDirection
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AGunBase::GetFireDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetFireDirection");

	Params::GunBase_GetFireDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetFireLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AGunBase::GetFireLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetFireLocation");

	Params::GunBase_GetFireLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunAttributeFireSys
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunAttribute_FireSystem   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FGunAttribute_FireSystem AGunBase::GetGunAttributeFireSys() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunAttributeFireSys");

	Params::GunBase_GetGunAttributeFireSys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunAttributes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunAttribute_Common       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FGunAttribute_Common AGunBase::GetGunAttributes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunAttributes");

	Params::GunBase_GetGunAttributes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunControlPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AGunBase::GetGunControlPower() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunControlPower");

	Params::GunBase_GetGunControlPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunMainEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunEntry_Main             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Main AGunBase::GetGunMainEntry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunMainEntry");

	Params::GunBase_GetGunMainEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunSightEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunEntry_Sight            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Sight AGunBase::GetGunSightEntry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunSightEntry");

	Params::GunBase_GetGunSightEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunSlideEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunEntry_Slide            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Slide AGunBase::GetGunSlideEntry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunSlideEntry");

	Params::GunBase_GetGunSlideEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetGunSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec AGunBase::GetGunSpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetGunSpec");

	Params::GunBase_GetGunSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetLoadedBulletCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetLoadedBulletCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetLoadedBulletCount");

	Params::GunBase_GetLoadedBulletCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetRemainAutoFireCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AGunBase::GetRemainAutoFireCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetRemainAutoFireCount");

	Params::GunBase_GetRemainAutoFireCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetScopeLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    _for_1pv                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _with_offset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AGunBase::GetScopeLocation(bool _for_1pv, bool _with_offset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetScopeLocation");

	Params::GunBase_GetScopeLocation Parms{};

	Parms._for_1pv = _for_1pv;
	Parms._with_offset = _with_offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunState                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunState AGunBase::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "GetState");

	Params::GunBase_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.IsBulletLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::IsBulletLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "IsBulletLoaded");

	Params::GunBase_IsBulletLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.IsBurstFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::IsBurstFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "IsBurstFire");

	Params::GunBase_IsBurstFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.IsFullAutoFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::IsFullAutoFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "IsFullAutoFire");

	Params::GunBase_IsFullAutoFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.IsLoadingBullet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::IsLoadingBullet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "IsLoadingBullet");

	Params::GunBase_IsLoadingBullet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.GunBase.IsLoadingMagazine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AGunBase::IsLoadingMagazine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase", "IsLoadingMagazine");

	Params::GunBase_IsLoadingMagazine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilGunBlueprintLibrary.GetPresetName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGunSpec                         _gun_spec                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilGunBlueprintLibrary::GetPresetName(const struct FGunSpec& _gun_spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilGunBlueprintLibrary", "GetPresetName");

	Params::UtilGunBlueprintLibrary_GetPresetName Parms{};

	Parms._gun_spec = std::move(_gun_spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_CartridgeSlot.BindTargetChara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_CartridgeSlot::BindTargetChara(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CartridgeSlot", "BindTargetChara");

	Params::HUD_CartridgeSlot_BindTargetChara Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_CartridgeSlot.GetFlyBulletClassType
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UHUD_FlyBullet>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UHUD_FlyBullet> UHUD_CartridgeSlot::GetFlyBulletClassType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CartridgeSlot", "GetFlyBulletClassType");

	Params::HUD_CartridgeSlot_GetFlyBulletClassType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_CartridgeSlot.SetBulletCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_count                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_CartridgeSlot::SetBulletCount(int32 _count, int32 _max_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CartridgeSlot", "SetBulletCount");

	Params::HUD_CartridgeSlot_SetBulletCount Parms{};

	Parms._count = _count;
	Parms._max_count = _max_count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_CommonBase.OnBind
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUD_CommonBase::OnBind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_CommonBase", "OnBind");

	Params::HUD_CommonBase_OnBind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.HUD_KillAssistTag.UpdateTagCount
// (Event, Protected, BlueprintEvent, Const)

void UHUD_KillAssistTag::UpdateTagCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillAssistTag", "UpdateTagCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.HUD_KillLogSlot.OnEndRemoveAnimation
// (Final, Native, Protected, BlueprintCallable)

void UHUD_KillLogSlot::OnEndRemoveAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogSlot", "OnEndRemoveAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillLogSlot.SetActionLog_Bounty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FActionLog_Bounty                _bounty_action_log                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_KillLogSlot::SetActionLog_Bounty(const struct FActionLog_Bounty& _bounty_action_log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogSlot", "SetActionLog_Bounty");

	Params::HUD_KillLogSlot_SetActionLog_Bounty Parms{};

	Parms._bounty_action_log = std::move(_bounty_action_log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillLogSlot.SetKillLog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKillLog                         _kill_log                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_KillLogSlot::SetKillLog(const struct FKillLog& _kill_log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogSlot", "SetKillLog");

	Params::HUD_KillLogSlot_SetKillLog Parms{};

	Parms._kill_log = std::move(_kill_log);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_KillLogSlot.SetKillLog_Revive
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FKillLog_ForRevive               _kill_log_revive                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHUD_KillLogSlot::SetKillLog_Revive(const struct FKillLog_ForRevive& _kill_log_revive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_KillLogSlot", "SetKillLog_Revive");

	Params::HUD_KillLogSlot_SetKillLog_Revive Parms{};

	Parms._kill_log_revive = std::move(_kill_log_revive);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_TeamMembers.AssignTeamByOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _offset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_team                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_TeamMembers::AssignTeamByOffset(int32 _offset, int32 _max_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamMembers", "AssignTeamByOffset");

	Params::HUD_TeamMembers_AssignTeamByOffset Parms{};

	Parms._offset = _offset;
	Parms._max_team = _max_team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_TeamMembers.OnChangeTeam
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETeams                                  _new_team                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_TeamMembers::OnChangeTeam(ETeams _new_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamMembers", "OnChangeTeam");

	Params::HUD_TeamMembers_OnChangeTeam Parms{};

	Parms._new_team = _new_team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.HUD_TeamMembers.OnGetAllPlayerWidgets
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UHUD_PlayerSlot*>          _out_widgets                                           (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UHUD_TeamMembers::OnGetAllPlayerWidgets(TArray<class UHUD_PlayerSlot*>* _out_widgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamMembers", "OnGetAllPlayerWidgets");

	Params::HUD_TeamMembers_OnGetAllPlayerWidgets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_out_widgets != nullptr)
		*_out_widgets = std::move(Parms._out_widgets);
}


// Function Stigma.HUD_TeamMembers.SetTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETeams                                  _new_team                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUD_TeamMembers::SetTeam(ETeams _new_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamMembers", "SetTeam");

	Params::HUD_TeamMembers_SetTeam Parms{};

	Parms._new_team = _new_team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.HUD_TeamMembers.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams UHUD_TeamMembers::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamMembers", "GetTeam");

	Params::HUD_TeamMembers_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.HUD_TeamScorePanel.OnChangedPlayers
// (Native, Event, Protected, BlueprintEvent)

void UHUD_TeamScorePanel::OnChangedPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_TeamScorePanel", "OnChangedPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Interactable.OnALL_Interact
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _key_pressed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::OnALL_Interact(class ACharaBase* _involver, bool _key_pressed, bool Success, int32 _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnALL_Interact");

	Params::Interactable_OnALL_Interact Parms{};

	Parms._involver = _involver;
	Parms._key_pressed = _key_pressed;
	Parms.Success = Success;
	Parms._param = _param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.OnFocus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _focus                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::OnFocus(class ACharaBase* _involver, bool _focus, int32 _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnFocus");

	Params::Interactable_OnFocus Parms{};

	Parms._involver = _involver;
	Parms._focus = _focus;
	Parms._param = _param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.OnQueryInteractable
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FInteractionData                 _out_data                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::OnQueryInteractable(class ACharaBase* _involver, const struct FHitResult& _hit, struct FInteractionData* _out_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnQueryInteractable");

	Params::Interactable_OnQueryInteractable Parms{};

	Parms._involver = _involver;
	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_data != nullptr)
		*_out_data = std::move(Parms._out_data);

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.OnQueryInteractionDetail
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInteractionDetail               _out_detail                                            (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::OnQueryInteractionDetail(class ACharaBase* _involver, int32 _param, struct FInteractionDetail* _out_detail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnQueryInteractionDetail");

	Params::Interactable_OnQueryInteractionDetail Parms{};

	Parms._involver = _involver;
	Parms._param = _param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_detail != nullptr)
		*_out_detail = std::move(Parms._out_detail);

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.OnQueryInteractionPoint
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInteractionPoint                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FInteractionPoint IInteractable::OnQueryInteractionPoint(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnQueryInteractionPoint");

	Params::Interactable_OnQueryInteractionPoint Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.OnQueryPriority
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IInteractable::OnQueryPriority(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnQueryPriority");

	Params::Interactable_OnQueryPriority Parms{};

	Parms._involver = _involver;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.OnSERVER_Interact
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _key_pressed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IInteractable::OnSERVER_Interact(class ACharaBase* _involver, bool _key_pressed, int32 _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "OnSERVER_Interact");

	Params::Interactable_OnSERVER_Interact Parms{};

	Parms._involver = _involver;
	Parms._key_pressed = _key_pressed;
	Parms._param = _param;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Interactable.GetInteractingChara
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* IInteractable::GetInteractingChara() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Interactable", "GetInteractingChara");

	Params::Interactable_GetInteractingChara Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.Conv_ItemIdToInteger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UItemIDBlueprintLibrary::Conv_ItemIdToInteger(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "Conv_ItemIdToInteger");

	Params::ItemIDBlueprintLibrary_Conv_ItemIdToInteger Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.GetCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemCategory UItemIDBlueprintLibrary::GetCategory(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "GetCategory");

	Params::ItemIDBlueprintLibrary_GetCategory Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.GetCategoryByItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemCategory UItemIDBlueprintLibrary::GetCategoryByItemID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "GetCategoryByItemID");

	Params::ItemIDBlueprintLibrary_GetCategoryByItemID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.GetSerialNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UItemIDBlueprintLibrary::GetSerialNumber(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "GetSerialNumber");

	Params::ItemIDBlueprintLibrary_GetSerialNumber Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.GetSubCategoryByItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UItemIDBlueprintLibrary::GetSubCategoryByItemID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "GetSubCategoryByItemID");

	Params::ItemIDBlueprintLibrary_GetSubCategoryByItemID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.IsEqualItemID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id1                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _id2                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemIDBlueprintLibrary::IsEqualItemID(const struct FItemID& _id1, const struct FItemID& _id2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "IsEqualItemID");

	Params::ItemIDBlueprintLibrary_IsEqualItemID Parms{};

	Parms._id1 = std::move(_id1);
	Parms._id2 = std::move(_id2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.IsValidItemCategories
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _sub_category                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemIDBlueprintLibrary::IsValidItemCategories(EItemCategory _category, int32 _sub_category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "IsValidItemCategories");

	Params::ItemIDBlueprintLibrary_IsValidItemCategories Parms{};

	Parms._category = _category;
	Parms._sub_category = _sub_category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.IsValidItemID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UItemIDBlueprintLibrary::IsValidItemID(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "IsValidItemID");

	Params::ItemIDBlueprintLibrary_IsValidItemID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.MakeItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UItemIDBlueprintLibrary::MakeItemID(int32 _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "MakeItemID");

	Params::ItemIDBlueprintLibrary_MakeItemID Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.MakeItemIDByCategories
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _main_category                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _sub_category                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _serial_number                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UItemIDBlueprintLibrary::MakeItemIDByCategories(EItemCategory _main_category, int32 _sub_category, int32 _serial_number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "MakeItemIDByCategories");

	Params::ItemIDBlueprintLibrary_MakeItemIDByCategories Parms{};

	Parms._main_category = _main_category;
	Parms._sub_category = _sub_category;
	Parms._serial_number = _serial_number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.ToInt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UItemIDBlueprintLibrary::ToInt(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "ToInt");

	Params::ItemIDBlueprintLibrary_ToInt Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UItemIDBlueprintLibrary::ToString(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "ToString");

	Params::ItemIDBlueprintLibrary_ToString Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemIDBlueprintLibrary.ToText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UItemIDBlueprintLibrary::ToText(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemIDBlueprintLibrary", "ToText");

	Params::ItemIDBlueprintLibrary_ToText Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ItemObject.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UItemObject::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemObject", "GetLevel");

	Params::ItemObject_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.InvenItem_Currency.GetCurrencyType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECurrencyTypes                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECurrencyTypes UInvenItem_Currency::GetCurrencyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InvenItem_Currency", "GetCurrencyType");

	Params::InvenItem_Currency_GetCurrencyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.KeyInputBlueprintLibrary.GetKeyFName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                             _Key                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UKeyInputBlueprintLibrary::GetKeyFName(const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("KeyInputBlueprintLibrary", "GetKeyFName");

	Params::KeyInputBlueprintLibrary_GetKeyFName Parms{};

	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LobbyCamera.Adjust
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ALobbyCamera::Adjust(class AActor* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyCamera", "Adjust");

	Params::LobbyCamera_Adjust Parms{};

	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LobbyInventoryPageBase.UpdateInventoryContext
// (Final, Native, Public, BlueprintCallable)

void ULobbyInventoryPageBase::UpdateInventoryContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LobbyInventoryPageBase", "UpdateInventoryContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_Gun.Config
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _use_reddot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_Gun::Config(EGunType _gun_type, bool _use_reddot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Gun", "Config");

	Params::LVData_Gun_Config Parms{};

	Parms._gun_type = _gun_type;
	Parms._use_reddot = _use_reddot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_Gun.GetGunType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunType ULVData_Gun::GetGunType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Gun", "GetGunType");

	Params::LVData_Gun_GetGunType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_Gun.IsOwned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULVData_Gun::IsOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Gun", "IsOwned");

	Params::LVData_Gun_IsOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_Item.Config
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_possessed                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_Item::Config(const struct FItemID& _item_id, bool _is_possessed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "Config");

	Params::LVData_Item_Config Parms{};

	Parms._item_id = std::move(_item_id);
	Parms._is_possessed = _is_possessed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_Item.SetCurrentSelectedItemID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID                          _selected_item_id                                      (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_Item::SetCurrentSelectedItemID(const struct FItemID& _selected_item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "SetCurrentSelectedItemID");

	Params::LVData_Item_SetCurrentSelectedItemID Parms{};

	Parms._selected_item_id = std::move(_selected_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_Item.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ULVData_Item::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "GetDisplayName");

	Params::LVData_Item_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_Item.GetGrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemGrade                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemGrade ULVData_Item::GetGrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "GetGrade");

	Params::LVData_Item_GetGrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_Item.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> ULVData_Item::GetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "GetIcon");

	Params::LVData_Item_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_Item.GetItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID ULVData_Item::GetItemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "GetItemID");

	Params::LVData_Item_GetItemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_Item.IsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ULVData_Item::IsSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_Item", "IsSelected");

	Params::LVData_Item_IsSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.Config
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNetRankingEntry                 _entry                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UUI_RankingListView*              _parent                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_searced_user                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_RankingItem::Config(ERankingType _ranking_type, const struct FNetRankingEntry& _entry, class UUI_RankingListView* _parent, bool _is_searced_user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "Config");

	Params::LVData_RankingItem_Config Parms{};

	Parms._ranking_type = _ranking_type;
	Parms._entry = std::move(_entry);
	Parms._parent = _parent;
	Parms._is_searced_user = _is_searced_user;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_RankingItem.ConfigChallenge
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ChallengeRead               _entry                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UUI_RankingListView*              _parent                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULVData_RankingItem::ConfigChallenge(ERankingType _ranking_type, const struct FACK_ChallengeRead& _entry, class UUI_RankingListView* _parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "ConfigChallenge");

	Params::LVData_RankingItem_ConfigChallenge Parms{};

	Parms._ranking_type = _ranking_type;
	Parms._entry = std::move(_entry);
	Parms._parent = _parent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.LVData_RankingItem.GetArmor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetArmor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetArmor");

	Params::LVData_RankingItem_GetArmor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetAssist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetAssist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetAssist");

	Params::LVData_RankingItem_GetAssist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetBlackCoin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetBlackCoin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetBlackCoin");

	Params::LVData_RankingItem_GetBlackCoin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetDeath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetDeath");

	Params::LVData_RankingItem_GetDeath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetDraw
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetDraw() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetDraw");

	Params::LVData_RankingItem_GetDraw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetEmblemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID ULVData_RankingItem::GetEmblemID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetEmblemID");

	Params::LVData_RankingItem_GetEmblemID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetFinalRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetFinalRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetFinalRound");

	Params::LVData_RankingItem_GetFinalRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetGold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetGold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetGold");

	Params::LVData_RankingItem_GetGold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetKill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetKill() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetKill");

	Params::LVData_RankingItem_GetKill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetLevel");

	Params::LVData_RankingItem_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetLose
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetLose() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetLose");

	Params::LVData_RankingItem_GetLose Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName ULVData_RankingItem::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetNickname");

	Params::LVData_RankingItem_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetNicknameFXID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID ULVData_RankingItem::GetNicknameFXID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetNicknameFXID");

	Params::LVData_RankingItem_GetNicknameFXID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetPlayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetPlayTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetPlayTime");

	Params::LVData_RankingItem_GetPlayTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetPrevRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetPrevRank() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetPrevRank");

	Params::LVData_RankingItem_GetPrevRank Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetPrevRanking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetPrevRanking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetPrevRanking");

	Params::LVData_RankingItem_GetPrevRanking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetProfileCardID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID ULVData_RankingItem::GetProfileCardID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetProfileCardID");

	Params::LVData_RankingItem_GetProfileCardID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetRanking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetRanking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetRanking");

	Params::LVData_RankingItem_GetRanking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const float                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const float ULVData_RankingItem::GetScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetScore");

	Params::LVData_RankingItem_GetScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const ETier                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const ETier ULVData_RankingItem::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetTier");

	Params::LVData_RankingItem_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetUserID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUserID                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserID ULVData_RankingItem::GetUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetUserID");

	Params::LVData_RankingItem_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.GetWin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const int32                             ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const int32 ULVData_RankingItem::GetWin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "GetWin");

	Params::LVData_RankingItem_GetWin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.LVData_RankingItem.IsMyRanking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool ULVData_RankingItem::IsMyRanking() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVData_RankingItem", "IsMyRanking");

	Params::LVData_RankingItem_IsMyRanking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MapEntryBlueprintLibrary.GetMapName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMapEntry                        _map_entry                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMapEntryBlueprintLibrary::GetMapName(const struct FMapEntry& _map_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MapEntryBlueprintLibrary", "GetMapName");

	Params::MapEntryBlueprintLibrary_GetMapName Parms{};

	Parms._map_entry = std::move(_map_entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.OnConditionDrivedSuccess
// (Final, Native, Protected)
// Parameters:
// class UMissionCondition*                _condition                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _fail_on_called                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMission::OnConditionDrivedSuccess(class UMissionCondition* _condition, const bool _fail_on_called)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "OnConditionDrivedSuccess");

	Params::Mission_OnConditionDrivedSuccess Parms{};

	Parms._condition = _condition;
	Parms._fail_on_called = _fail_on_called;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Mission.GetAllConditions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UMissionCondition*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UMissionCondition*> UMission::GetAllConditions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetAllConditions");

	Params::Mission_GetAllConditions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetCount");

	Params::Mission_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetCurrentCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetCurrentCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetCurrentCount");

	Params::Mission_GetCurrentCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetDefaultRepeatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetDefaultRepeatCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetDefaultRepeatCount");

	Params::Mission_GetDefaultRepeatCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetDefaultTargetCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetDefaultTargetCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetDefaultTargetCount");

	Params::Mission_GetDefaultTargetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetIdx
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetIdx() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetIdx");

	Params::Mission_GetIdx Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetInitCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetInitCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetInitCount");

	Params::Mission_GetInitCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetMissionID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID_Mission                  ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID_Mission UMission::GetMissionID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetMissionID");

	Params::Mission_GetMissionID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetProgressRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UMission::GetProgressRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetProgressRate");

	Params::Mission_GetProgressRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetProgressType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMissionProgressType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMissionProgressType UMission::GetProgressType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetProgressType");

	Params::Mission_GetProgressType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetRepeatCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetRepeatCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetRepeatCount");

	Params::Mission_GetRepeatCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetRewardCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMission::GetRewardCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetRewardCount");

	Params::Mission_GetRewardCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.GetTaskID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID UMission::GetTaskID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "GetTaskID");

	Params::Mission_GetTaskID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.IsBookmarked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMission::IsBookmarked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "IsBookmarked");

	Params::Mission_IsBookmarked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Mission.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMission::IsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Mission", "IsCompleted");

	Params::Mission_IsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MissionHelper.CreateMissionCondition
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMissionConditionInfo            _mission_condition_info                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UMissionCondition*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMissionCondition* UMissionHelper::CreateMissionCondition(class UObject* _outer, const struct FMissionConditionInfo& _mission_condition_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "CreateMissionCondition");

	Params::MissionHelper_CreateMissionCondition Parms{};

	Parms._outer = _outer;
	Parms._mission_condition_info = std::move(_mission_condition_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MissionHelper.GetDisplayMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMission*                         _mission                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _format                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMissionHelper::GetDisplayMission(const class UMission* _mission, const class FText& _format)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "GetDisplayMission");

	Params::MissionHelper_GetDisplayMission Parms{};

	Parms._mission = _mission;
	Parms._format = std::move(_format);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MissionHelper.GetDisplayMissionDefine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMissionDefine                   _mission_define                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _format                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMissionHelper::GetDisplayMissionDefine(class UObject* _outer, const struct FMissionDefine& _mission_define, const class FText& _format)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "GetDisplayMissionDefine");

	Params::MissionHelper_GetDisplayMissionDefine Parms{};

	Parms._outer = _outer;
	Parms._mission_define = std::move(_mission_define);
	Parms._format = std::move(_format);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MissionHelper.GetMissionConditionClassByConditionType
// (Final, Native, Static, Public)
// Parameters:
// EMissionConditionType                   _condition_type                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UMissionCondition>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UMissionCondition> UMissionHelper::GetMissionConditionClassByConditionType(const EMissionConditionType _condition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "GetMissionConditionClassByConditionType");

	Params::MissionHelper_GetMissionConditionClassByConditionType Parms{};

	Parms._condition_type = _condition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MissionHelper.GetMissionConditionSubTypeCategory
// (Final, Native, Static, Public)
// Parameters:
// EMissionConditionType                   _condition_type                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMissionConditionSubTypeCategory        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMissionConditionSubTypeCategory UMissionHelper::GetMissionConditionSubTypeCategory(const EMissionConditionType _condition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "GetMissionConditionSubTypeCategory");

	Params::MissionHelper_GetMissionConditionSubTypeCategory Parms{};

	Parms._condition_type = _condition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.MissionHelper.GoToMission
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _outer                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  _mission_id                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMissionHelper::GoToMission(class UObject* _outer, const struct FItemID_Mission& _mission_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "GoToMission");

	Params::MissionHelper_GoToMission Parms{};

	Parms._outer = _outer;
	Parms._mission_id = std::move(_mission_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.MissionHelper.IsPremiumMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMissionHelper::IsPremiumMission(const struct FItemID_Mission& _mission_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MissionHelper", "IsPremiumMission");

	Params::MissionHelper_IsPremiumMission Parms{};

	Parms._mission_id = std::move(_mission_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.NPC_Lemming.OnALL_Explode
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANPC_Lemming::OnALL_Explode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Lemming", "OnALL_Explode");

	Params::NPC_Lemming_OnALL_Explode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.NPC_Lemming.OnRep_IsExploded
// (Final, Native, Protected)

void ANPC_Lemming::OnRep_IsExploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Lemming", "OnRep_IsExploded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectPool.OnPooledBulletholeDespawn
// (Final, Native, Public)
// Parameters:
// class APooledBullethole*                PoolActor                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UObjectPool::OnPooledBulletholeDespawn(class APooledBullethole* PoolActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPool", "OnPooledBulletholeDespawn");

	Params::ObjectPool_OnPooledBulletholeDespawn Parms{};

	Parms.PoolActor = PoolActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.ObjectPool.SpawnPooledBullethole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APooledBullethole*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APooledBullethole* UObjectPool::SpawnPooledBullethole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ObjectPool", "SpawnPooledBullethole");

	Params::ObjectPool_SpawnPooledBullethole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OccupationArea.OnRep_IsActivated
// (Final, Native, Protected)

void AOccupationArea::OnRep_IsActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OccupationArea", "OnRep_IsActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OccupationArea.Setter_IsActivated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOccupationArea::Setter_IsActivated(bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OccupationArea", "Setter_IsActivated");

	Params::OccupationArea_Setter_IsActivated Parms{};

	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OccupationArea.GetMeshComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMeshComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMeshComponent* AOccupationArea::GetMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OccupationArea", "GetMeshComponent");

	Params::OccupationArea_GetMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Occupation_PlayerController.CLIENT_RequestRespawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _area_name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOccupation_PlayerController::CLIENT_RequestRespawn(const class FString& _area_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_PlayerController", "CLIENT_RequestRespawn");

	Params::Occupation_PlayerController_CLIENT_RequestRespawn Parms{};

	Parms._area_name = std::move(_area_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Occupation_PlayerController.RPC_ALL_OccupyArea
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _occupant                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  Prev_team                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AOccupationArea*                  _area                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOccupation_PlayerController::RPC_ALL_OccupyArea(class ACharaBase* _occupant, ETeams Prev_team, class AOccupationArea* _area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_PlayerController", "RPC_ALL_OccupyArea");

	Params::Occupation_PlayerController_RPC_ALL_OccupyArea Parms{};

	Parms._occupant = _occupant;
	Parms.Prev_team = Prev_team;
	Parms._area = _area;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Occupation_PlayerController.RPC_CLIENT_SelectRespawn
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void AOccupation_PlayerController::RPC_CLIENT_SelectRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_PlayerController", "RPC_CLIENT_SelectRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Occupation_PlayerController.RPC_SERVER_RequestRespawnArea
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class AOccupationArea*                  _area                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AOccupation_PlayerController::RPC_SERVER_RequestRespawnArea(class AOccupationArea* _area)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_PlayerController", "RPC_SERVER_RequestRespawnArea");

	Params::Occupation_PlayerController_RPC_SERVER_RequestRespawnArea Parms{};

	Parms._area = _area;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Occupation_PlayerController.ShowRespawnSelector
// (Event, Public, BlueprintEvent)

void AOccupation_PlayerController::ShowRespawnSelector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Occupation_PlayerController", "ShowRespawnSelector");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.OnlineMatch.DestroyServerSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOnlineMatch::DestroyServerSession(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineMatch", "DestroyServerSession");

	Params::OnlineMatch_DestroyServerSession Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OnlineMatch.GetJoinedSessionMapName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOnlineMatch::GetJoinedSessionMapName(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineMatch", "GetJoinedSessionMapName");

	Params::OnlineMatch_GetJoinedSessionMapName Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OnlineMatch.GetServerSessionStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerSessionStatus                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerSessionStatus UOnlineMatch::GetServerSessionStatus(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OnlineMatch", "GetServerSessionStatus");

	Params::OnlineMatch_GetServerSessionStatus Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.OpeningPlayerController.FinishSequence
// (Final, Native, Protected, BlueprintCallable)

void AOpeningPlayerController::FinishSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OpeningPlayerController", "FinishSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.OpeningPlayerController.StartSequence
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AOpeningPlayerController::StartSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OpeningPlayerController", "StartSequence");

	Params::OpeningPlayerController_StartSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefParty.AddMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _user                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBriefParty::AddMember(class UUserProfile* _user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefParty", "AddMember");

	Params::BriefParty_AddMember Parms{};

	Parms._user = _user;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefParty.RemoveMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* UBriefParty::RemoveMember(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefParty", "RemoveMember");

	Params::BriefParty_RemoveMember Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefParty.FindMember
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* UBriefParty::FindMember(const struct FUserID& _user_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefParty", "FindMember");

	Params::BriefParty_FindMember Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefParty.GetMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* UBriefParty::GetMember(int32 _zidx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefParty", "GetMember");

	Params::BriefParty_GetMember Parms{};

	Parms._zidx = _zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefParty.GetMemberAt
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _zidx                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _exception                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* UBriefParty::GetMemberAt(int32 _zidx, const struct FUserID& _exception) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefParty", "GetMemberAt");

	Params::BriefParty_GetMemberAt Parms{};

	Parms._zidx = _zidx;
	Parms._exception = std::move(_exception);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.BriefParty.GetMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBriefParty::GetMemberCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BriefParty", "GetMemberCount");

	Params::BriefParty_GetMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PartyIDBlueprintLibrary.IsEqualPartyID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPartyID                         _id1                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPartyID                         _id2                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPartyIDBlueprintLibrary::IsEqualPartyID(const struct FPartyID& _id1, const struct FPartyID& _id2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PartyIDBlueprintLibrary", "IsEqualPartyID");

	Params::PartyIDBlueprintLibrary_IsEqualPartyID Parms{};

	Parms._id1 = std::move(_id1);
	Parms._id2 = std::move(_id2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PingMarker.OnSetPing
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APingMarker::OnSetPing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PingMarker", "OnSetPing");

	Params::PingMarker_OnSetPing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.PingMarker.SetPing
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// EBattlePingType                         _ping_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _normal                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APingMarker::SetPing(EBattlePingType _ping_type, const struct FVector& _normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PingMarker", "SetPing");

	Params::PingMarker_SetPing Parms{};

	Parms._ping_type = _ping_type;
	Parms._normal = std::move(_normal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PlayerStart_AI.GetSpawnIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 APlayerStart_AI::GetSpawnIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStart_AI", "GetSpawnIndex");

	Params::PlayerStart_AI_GetSpawnIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PoisonArea.OnBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void APoisonArea::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoisonArea", "OnBeginOverlap");

	Params::PoisonArea_OnBeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PoisonArea.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APoisonArea::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoisonArea", "OnEndOverlap");

	Params::PoisonArea_OnEndOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PoisonArea.OnLoadSettings
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FConfig_PoisonArea               _settings                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void APoisonArea::OnLoadSettings(struct FConfig_PoisonArea* _settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoisonArea", "OnLoadSettings");

	Params::PoisonArea_OnLoadSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (_settings != nullptr)
		*_settings = std::move(Parms._settings);
}


// Function Stigma.PoisonArea.SetUniqueEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_effected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APoisonArea::SetUniqueEffect(class ACharaBase* _chara, bool _is_effected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoisonArea", "SetUniqueEffect");

	Params::PoisonArea_SetUniqueEffect Parms{};

	Parms._chara = _chara;
	Parms._is_effected = _is_effected;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.PoisonArea.Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _thrower                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AObjectBase*                      _weapon_obj                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionGraphOperatorID           _op_id                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APoisonArea::Start(class ACharaBase* _thrower, class AObjectBase* _weapon_obj, const struct FActionGraphOperatorID& _op_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoisonArea", "Start");

	Params::PoisonArea_Start Parms{};

	Parms._thrower = _thrower;
	Parms._weapon_obj = _weapon_obj;
	Parms._op_id = std::move(_op_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PoolActor.AddWave
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _ws_pos                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APoolActor::AddWave(const struct FVector& _ws_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoolActor", "AddWave");

	Params::PoolActor_AddWave Parms{};

	Parms._ws_pos = std::move(_ws_pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PoolActor.BeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void APoolActor::BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoolActor", "BeginOverlap");

	Params::PoolActor_BeginOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PoolActor.EndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APoolActor::EndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoolActor", "EndOverlap");

	Params::PoolActor_EndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.PoolActor.GetHeightRT
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _RT_idx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* APoolActor::GetHeightRT(int32 _RT_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoolActor", "GetHeightRT");

	Params::PoolActor_GetHeightRT Parms{};

	Parms._RT_idx = _RT_idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.PoolActor.GetLastHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _current_height_idx                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _num_frames_old                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* APoolActor::GetLastHeight(int32 _current_height_idx, int32 _num_frames_old)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoolActor", "GetLastHeight");

	Params::PoolActor_GetLastHeight Parms{};

	Parms._current_height_idx = _current_height_idx;
	Parms._num_frames_old = _num_frames_old;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Popup_Competition.InitWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UPopup_Competition::InitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Competition", "InitWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Popup_Competition.OnACK_GetCompetitionPlayers
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadCompetitionPlayers      _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UPopup_Competition::OnACK_GetCompetitionPlayers(EResultCode _rcode, const struct FACK_ReadCompetitionPlayers& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Competition", "OnACK_GetCompetitionPlayers");

	Params::Popup_Competition_OnACK_GetCompetitionPlayers Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Popup_Competition.Setter_CurCompetitionType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPopup_Competition::Setter_CurCompetitionType(ECompetitionType _competition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Competition", "Setter_CurCompetitionType");

	Params::Popup_Competition_Setter_CurCompetitionType Parms{};

	Parms._competition_type = _competition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Popup_Competition.UpdateRankingContext
// (Final, Native, Protected, BlueprintCallable)

void UPopup_Competition::UpdateRankingContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_Competition", "UpdateRankingContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Popup_EnterAccount.SetAccount
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           _account_id                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _pw                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPopup_EnterAccount::SetAccount(const class FString& _account_id, const class FString& _pw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_EnterAccount", "SetAccount");

	Params::Popup_EnterAccount_SetAccount Parms{};

	Parms._account_id = std::move(_account_id);
	Parms._pw = std::move(_pw);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Popup_EnterNickname.OnError
// (Event, Public, BlueprintEvent)
// Parameters:
// EResultCode                             _code                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPopup_EnterNickname::OnError(EResultCode _code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_EnterNickname", "OnError");

	Params::Popup_EnterNickname_OnError Parms{};

	Parms._code = _code;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.Popup_EnterNickname.SetNickname
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           _nick                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPopup_EnterNickname::SetNickname(const class FString& _nick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_EnterNickname", "SetNickname");

	Params::Popup_EnterNickname_SetNickname Parms{};

	Parms._nick = std::move(_nick);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Record_KillStreak_ListItemData.GetCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 URecord_KillStreak_ListItemData::GetCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Record_KillStreak_ListItemData", "GetCount");

	Params::Record_KillStreak_ListItemData_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Record_KillStreak_ListItemData.GetTooltipModeCountText
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText URecord_KillStreak_ListItemData::GetTooltipModeCountText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Record_KillStreak_ListItemData", "GetTooltipModeCountText");

	Params::Record_KillStreak_ListItemData_GetTooltipModeCountText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Record_KillStreak_ListItemData.GetKillStreak
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKillStreak                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EKillStreak URecord_KillStreak_ListItemData::GetKillStreak() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Record_KillStreak_ListItemData", "GetKillStreak");

	Params::Record_KillStreak_ListItemData_GetKillStreak Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Record_KillStreak_ListItemData.GetModeCounts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<EGameMode, int32>            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<EGameMode, int32> URecord_KillStreak_ListItemData::GetModeCounts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Record_KillStreak_ListItemData", "GetModeCounts");

	Params::Record_KillStreak_ListItemData_GetModeCounts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.RewardHelper.GetAllAccessoryID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FRewardItem>              _reward_items                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FItemID>                  _out_accessory_id                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URewardHelper::GetAllAccessoryID(const TArray<struct FRewardItem>& _reward_items, TArray<struct FItemID>* _out_accessory_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RewardHelper", "GetAllAccessoryID");

	Params::RewardHelper_GetAllAccessoryID Parms{};

	Parms._reward_items = std::move(_reward_items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_accessory_id != nullptr)
		*_out_accessory_id = std::move(Parms._out_accessory_id);

	return Parms.ReturnValue;
}


// Function Stigma.RewardHelper.GetAllGunPartsID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FRewardItem>              _reward_items                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FItemID>                  _out_parts_id                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URewardHelper::GetAllGunPartsID(const TArray<struct FRewardItem>& _reward_items, TArray<struct FItemID>* _out_parts_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RewardHelper", "GetAllGunPartsID");

	Params::RewardHelper_GetAllGunPartsID Parms{};

	Parms._reward_items = std::move(_reward_items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_parts_id != nullptr)
		*_out_parts_id = std::move(Parms._out_parts_id);

	return Parms.ReturnValue;
}


// Function Stigma.RewardHelper.IsRewardItemHasDuration
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRewardItem                      _reward_item                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _out_is_permanent                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool URewardHelper::IsRewardItemHasDuration(const struct FRewardItem& _reward_item, bool* _out_is_permanent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("RewardHelper", "IsRewardItemHasDuration");

	Params::RewardHelper_IsRewardItemHasDuration Parms{};

	Parms._reward_item = std::move(_reward_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_is_permanent != nullptr)
		*_out_is_permanent = Parms._out_is_permanent;

	return Parms.ReturnValue;
}


// Function Stigma.RollingBase.RPC_ALL_Hit_Rolling
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ARollingBase::RPC_ALL_Hit_Rolling(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RollingBase", "RPC_ALL_Hit_Rolling");

	Params::RollingBase_RPC_ALL_Hit_Rolling Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.RollingBase.RPC_ALL_StartRolling
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FRollingParams                   _rolling_params                                        (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void ARollingBase::RPC_ALL_StartRolling(const struct FRollingParams& _rolling_params)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RollingBase", "RPC_ALL_StartRolling");

	Params::RollingBase_RPC_ALL_StartRolling Parms{};

	Parms._rolling_params = std::move(_rolling_params);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.RollingBase.SERVER_RequestRolling
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           _Actor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttackType                             _attack_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          _target_point                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _max_dist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _Speed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _radius                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _gravity_scale                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ARollingBase::SERVER_RequestRolling(class AActor* _Actor, EAttackType _attack_type, const struct FVector& _target_point, float _max_dist, float _Speed, float _radius, float _gravity_scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RollingBase", "SERVER_RequestRolling");

	Params::RollingBase_SERVER_RequestRolling Parms{};

	Parms._Actor = _Actor;
	Parms._attack_type = _attack_type;
	Parms._target_point = std::move(_target_point);
	Parms._max_dist = _max_dist;
	Parms._Speed = _Speed;
	Parms._radius = _radius;
	Parms._gravity_scale = _gravity_scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SanctumArea.Activate
// (Final, Native, Public, BlueprintCallable)

void ASanctumArea::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SanctumArea", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SanctumArea.Deactivate
// (Final, Native, Public, BlueprintCallable)

void ASanctumArea::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SanctumArea", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SanctumArea.OnBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              _comp                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _other_actor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _other_comp                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx_body                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _from_sweep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ASanctumArea::OnBeginOverlap(class UPrimitiveComponent* _comp, class AActor* _other_actor, class UPrimitiveComponent* _other_comp, int32 _idx_body, bool _from_sweep, const struct FHitResult& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SanctumArea", "OnBeginOverlap");

	Params::SanctumArea_OnBeginOverlap Parms{};

	Parms._comp = _comp;
	Parms._other_actor = _other_actor;
	Parms._other_comp = _other_comp;
	Parms._idx_body = _idx_body;
	Parms._from_sweep = _from_sweep;
	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SanctumArea.OnEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              _comp                                                  (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _other_actor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              _other_comp                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx_body                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASanctumArea::OnEndOverlap(class UPrimitiveComponent* _comp, class AActor* _other_actor, class UPrimitiveComponent* _other_comp, int32 _idx_body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SanctumArea", "OnEndOverlap");

	Params::SanctumArea_OnEndOverlap Parms{};

	Parms._comp = _comp;
	Parms._other_actor = _other_actor;
	Parms._other_comp = _other_comp;
	Parms._idx_body = _idx_body;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ActivateBattlePass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_BattlePassActivate& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ActivateBattlePass(const class UObject* _world_ctx, const struct FItemID_BattlePass& _pass_id, TDelegate<void(EResultCode _rcode, struct FACK_BattlePassActivate& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ActivateBattlePass");

	Params::Service_ActivateBattlePass Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._pass_id = std::move(_pass_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ActivateCoupon
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _coupon_code                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ActivateCoupon& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ActivateCoupon(const class UObject* _world_ctx, const class FString& _coupon_code, const TDelegate<void(EResultCode _rcode, struct FACK_ActivateCoupon& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ActivateCoupon");

	Params::Service_ActivateCoupon Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._coupon_code = std::move(_coupon_code);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ActivateFunction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _code, struct FACK_ActivateFunction& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ActivateFunction(const class UObject* _world_ctx, class UInvenItem* _item, const TDelegate<void(EResultCode _code, struct FACK_ActivateFunction& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ActivateFunction");

	Params::Service_ActivateFunction Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item = _item;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.AddWishedGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::AddWishedGameMode(const class UObject* _world_ctx, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "AddWishedGameMode");

	Params::Service_AddWishedGameMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ApplyPreviewCharacterSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ApplyPreviewCharacterSettings(const class UObject* _world_ctx, const struct FUserID& _user_id, const TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ApplyPreviewCharacterSettings");

	Params::Service_ApplyPreviewCharacterSettings Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.AskFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_Friend& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::AskFriend(const class UObject* _world_ctx, const struct FUserID& _target_user_id, const struct FUserName& _nickname, TDelegate<void(EResultCode _rcode, struct FACK_Friend& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "AskFriend");

	Params::Service_AskFriend Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._target_user_id = std::move(_target_user_id);
	Parms._nickname = std::move(_nickname);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.AutoRewardMission
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::AutoRewardMission(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "AutoRewardMission");

	Params::Service_AutoRewardMission Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.BookmarkPassMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_MissionBookmark& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::BookmarkPassMission(const class UObject* _world_ctx, const struct FItemID_BattlePass& _pass_id, int32 _idx, const struct FItemID_Mission& _mission_id, TDelegate<void(EResultCode _rcode, struct FACK_MissionBookmark& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "BookmarkPassMission");

	Params::Service_BookmarkPassMission Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._pass_id = std::move(_pass_id);
	Parms._idx = _idx;
	Parms._mission_id = std::move(_mission_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.BuyGoods
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemIDPlain                     _goods_item                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCurrencyPlain                   _using_currency                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_BuyGoods& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::BuyGoods(const class UObject* _world_ctx, const struct FItemIDPlain& _goods_item, const struct FCurrencyPlain& _using_currency, TDelegate<void(EResultCode _rcode, struct FACK_BuyGoods& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "BuyGoods");

	Params::Service_BuyGoods Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._goods_item = std::move(_goods_item);
	Parms._using_currency = std::move(_using_currency);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.BuyRecruit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Recruit                  _recruit_id                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _recruit_count_index                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Currency                 _use_currency_id                                       (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _use_currency_amount                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_BuyRecruit& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::BuyRecruit(const class UObject* _world_ctx, const struct FItemID_Recruit& _recruit_id, int32 _recruit_count_index, const struct FItemID_Currency& _use_currency_id, int32 _use_currency_amount, const TDelegate<void(EResultCode _rcode, struct FACK_BuyRecruit& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "BuyRecruit");

	Params::Service_BuyRecruit Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._recruit_id = std::move(_recruit_id);
	Parms._recruit_count_index = _recruit_count_index;
	Parms._use_currency_id = std::move(_use_currency_id);
	Parms._use_currency_amount = _use_currency_amount;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.CancelMatchMaking
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::CancelMatchMaking(const class UObject* _world_ctx, const struct FUserID& _user_id, TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "CancelMatchMaking");

	Params::Service_CancelMatchMaking Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.CanStartMatchMaking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UService::CanStartMatchMaking(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "CanStartMatchMaking");

	Params::Service_CanStartMatchMaking Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.ChangeMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_MissionChange& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ChangeMission(const class UObject* _world_ctx, const struct FItemID& _task_id, int32 _idx, const struct FItemID_Mission& _mission_id, TDelegate<void(EResultCode _rcode, struct FACK_MissionChange& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ChangeMission");

	Params::Service_ChangeMission Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._mission_id = std::move(_mission_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ChangeNickname
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _nickname                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode)>     _proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ChangeNickname(const class UObject* _world_ctx, class UInvenItem* _item, const class FString& _nickname, const TDelegate<void(EResultCode _rcode)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ChangeNickname");

	Params::Service_ChangeNickname Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item = _item;
	Parms._nickname = std::move(_nickname);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.DeleteFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, const struct FUserID& _user_id)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::DeleteFriend(const class UObject* _world_ctx, const struct FUserID& _target_user_id, TDelegate<void(EResultCode _rcode, const struct FUserID& _user_id)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "DeleteFriend");

	Params::Service_DeleteFriend Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._target_user_id = std::move(_target_user_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.DISCORD_StartBattle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::DISCORD_StartBattle(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "DISCORD_StartBattle");

	Params::Service_DISCORD_StartBattle Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.DISCORD_StartLobby
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::DISCORD_StartLobby(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "DISCORD_StartLobby");

	Params::Service_DISCORD_StartLobby Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ExitParty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_PartyDelete& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UService::ExitParty(const class UObject* _world_ctx, TDelegate<void(EResultCode _rcode, struct FACK_PartyDelete& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ExitParty");

	Params::Service_ExitParty Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.FastStartCompetition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCurrencyPlain                   _currency                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ECompetitionType                        _competition_type                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_FastStartCompetition& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::FastStartCompetition(const class UObject* _world_ctx, const struct FCurrencyPlain& _currency, const ECompetitionType _competition_type, TDelegate<void(EResultCode _rcode, struct FACK_FastStartCompetition& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "FastStartCompetition");

	Params::Service_FastStartCompetition Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._currency = std::move(_currency);
	Parms._competition_type = _competition_type;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetChallengeRankingList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadChallengeRanking& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetChallengeRankingList(const class UObject* _world_ctx, int64 _start, int64 _count, TDelegate<void(EResultCode _rcode, struct FACK_ReadChallengeRanking& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetChallengeRankingList");

	Params::Service_GetChallengeRankingList Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._start = _start;
	Parms._count = _count;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetCompetitionPlayers
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadCompetitionPlayers& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetCompetitionPlayers(const class UObject* _world_ctx, TDelegate<void(EResultCode _rcode, struct FACK_ReadCompetitionPlayers& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetCompetitionPlayers");

	Params::Service_GetCompetitionPlayers Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetCurrentMatchMakingStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFindMatchStatus                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFindMatchStatus UService::GetCurrentMatchMakingStatus(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetCurrentMatchMakingStatus");

	Params::Service_GetCurrentMatchMakingStatus Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.GetFriendRankingList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSeasonID                        _season_id                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadFriendRanking& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetFriendRankingList(const class UObject* _world_ctx, int64 _start, int64 _count, const struct FSeasonID& _season_id, ERankingType _ranking_type, TDelegate<void(EResultCode _rcode, struct FACK_ReadFriendRanking& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetFriendRankingList");

	Params::Service_GetFriendRankingList Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._start = _start;
	Parms._count = _count;
	Parms._season_id = std::move(_season_id);
	Parms._ranking_type = _ranking_type;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetLoginNotice
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_LoginNotice& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetLoginNotice(const class UObject* _world_ctx, const TDelegate<void(EResultCode _rcode, struct FACK_LoginNotice& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetLoginNotice");

	Params::Service_GetLoginNotice Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetMatchMakingContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchContext              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMatchContext UService::GetMatchMakingContext(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetMatchMakingContext");

	Params::Service_GetMatchMakingContext Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.GetMatchMakingElapsedTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UService::GetMatchMakingElapsedTime(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetMatchMakingElapsedTime");

	Params::Service_GetMatchMakingElapsedTime Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.GetMatchMakingErrorMessage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UService::GetMatchMakingErrorMessage(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetMatchMakingErrorMessage");

	Params::Service_GetMatchMakingErrorMessage Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.GetMatchOption
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMatchOption               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMatchOption UService::GetMatchOption(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetMatchOption");

	Params::Service_GetMatchOption Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.GetRankingList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _start                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSeasonID                        _season_id                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadRanking& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetRankingList(const class UObject* _world_ctx, int64 _start, int64 _count, const struct FSeasonID& _season_id, ERankingType _ranking_type, TDelegate<void(EResultCode _rcode, struct FACK_ReadRanking& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetRankingList");

	Params::Service_GetRankingList Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._start = _start;
	Parms._count = _count;
	Parms._season_id = std::move(_season_id);
	Parms._ranking_type = _ranking_type;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetSearchedUserRankingList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSeasonID                        _season_id                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadSearchedUserRanking& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetSearchedUserRankingList(const class UObject* _world_ctx, const struct FUserID& _user_id, int64 _count, const struct FSeasonID& _season_id, ERankingType _ranking_type, TDelegate<void(EResultCode _rcode, struct FACK_ReadSearchedUserRanking& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetSearchedUserRankingList");

	Params::Service_GetSearchedUserRankingList Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._count = _count;
	Parms._season_id = std::move(_season_id);
	Parms._ranking_type = _ranking_type;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetSurvey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _survey_id                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetSurvey(const class UObject* _world_ctx, int32 _survey_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetSurvey");

	Params::Service_GetSurvey Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._survey_id = _survey_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetUserReportJWT
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _user_nickname                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _dedi_id                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _battle_id                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_GetUserReportJWT& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetUserReportJWT(const class UObject* _world_ctx, const struct FUserName& _user_nickname, const struct FUserID& _user_id, const class FString& _dedi_id, const class FString& _battle_id, TDelegate<void(EResultCode _rcode, struct FACK_GetUserReportJWT& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetUserReportJWT");

	Params::Service_GetUserReportJWT Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_nickname = std::move(_user_nickname);
	Parms._user_id = std::move(_user_id);
	Parms._dedi_id = std::move(_dedi_id);
	Parms._battle_id = std::move(_battle_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetUserTierInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSeasonID                        _season_id                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadUserTierInfo& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetUserTierInfo(const class UObject* _world_ctx, const struct FUserID& _user_id, const struct FSeasonID& _season_id, TDelegate<void(EResultCode _rcode, struct FACK_ReadUserTierInfo& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetUserTierInfo");

	Params::Service_GetUserTierInfo Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._season_id = std::move(_season_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetWeeklyBestRank
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSeasonID                        _season_id                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadWeeklyBestRank& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GetWeeklyBestRank(const class UObject* _world_ctx, const struct FSeasonID& _season_id, ERankingType _ranking_type, TDelegate<void(EResultCode _rcode, struct FACK_ReadWeeklyBestRank& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetWeeklyBestRank");

	Params::Service_GetWeeklyBestRank Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._season_id = std::move(_season_id);
	Parms._ranking_type = _ranking_type;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.GetWishedGameModes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<EGameMode>                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<EGameMode> UService::GetWishedGameModes(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GetWishedGameModes");

	Params::Service_GetWishedGameModes Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.GM_StalkRoom
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::GM_StalkRoom(const class UObject* _world_ctx, const struct FUserID& _target_user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "GM_StalkRoom");

	Params::Service_GM_StalkRoom Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._target_user_id = std::move(_target_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.InviteToBattle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _to                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _to_nick                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::InviteToBattle(const class UObject* _world_ctx, const struct FUserID& _to, const class FString& _to_nick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "InviteToBattle");

	Params::Service_InviteToBattle Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._to = std::move(_to);
	Parms._to_nick = std::move(_to_nick);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.IsInWishedGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UService::IsInWishedGameMode(const class UObject* _world_ctx, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "IsInWishedGameMode");

	Params::Service_IsInWishedGameMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.IsMatchMaking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UService::IsMatchMaking(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "IsMatchMaking");

	Params::Service_IsMatchMaking Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.IsMatchMakingCompleted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UService::IsMatchMakingCompleted(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "IsMatchMakingCompleted");

	Params::Service_IsMatchMakingCompleted Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.LoadUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::LoadUser(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "LoadUser");

	Params::Service_LoadUser Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.LoadUserCurrency
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::LoadUserCurrency(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "LoadUserCurrency");

	Params::Service_LoadUserCurrency Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.OpenInvenItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               _items                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _code, struct FACK_OpenInvenItems& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::OpenInvenItem(const class UObject* _world_ctx, const TArray<class UInvenItem*>& _items, const TDelegate<void(EResultCode _code, struct FACK_OpenInvenItems& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "OpenInvenItem");

	Params::Service_OpenInvenItem Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._items = std::move(_items);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.PickInitialCharacters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ECharaType>                      _picked_types                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UService::PickInitialCharacters(const class UObject* _world_ctx, const struct FUserID& _user_id, const TArray<ECharaType>& _picked_types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "PickInitialCharacters");

	Params::Service_PickInitialCharacters Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._picked_types = std::move(_picked_types);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.PlayBattleOnClientSide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _map_name                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _allow_all_chara                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_tutorial_match                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::PlayBattleOnClientSide(const class UObject* _world_ctx, EGameMode _mode, class FName _map_name, bool _allow_all_chara, bool _is_tutorial_match)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "PlayBattleOnClientSide");

	Params::Service_PlayBattleOnClientSide Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._mode = _mode;
	Parms._map_name = _map_name;
	Parms._allow_all_chara = _allow_all_chara;
	Parms._is_tutorial_match = _is_tutorial_match;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReadGoods
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoodsCategory                          _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReadGoods(const class UObject* _world_ctx, EGoodsCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReadGoods");

	Params::Service_ReadGoods Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReadHistoryRecruit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERecruitType                            _recruit_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _cursor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _req_count                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadHistoryRecruit& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReadHistoryRecruit(const class UObject* _world_ctx, ERecruitType _recruit_type, int32 _cursor, int32 _req_count, const TDelegate<void(EResultCode _rcode, struct FACK_ReadHistoryRecruit& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReadHistoryRecruit");

	Params::Service_ReadHistoryRecruit Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._recruit_type = _recruit_type;
	Parms._cursor = _cursor;
	Parms._req_count = _req_count;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReadMissions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemID>                  _task_ids                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_MissionRead& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReadMissions(const class UObject* _world_ctx, const TArray<struct FItemID>& _task_ids, TDelegate<void(EResultCode _rcode, struct FACK_MissionRead& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReadMissions");

	Params::Service_ReadMissions Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._task_ids = std::move(_task_ids);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReadProfileStatistic
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ProfileStatisticRead& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReadProfileStatistic(const class UObject* _world_ctx, const struct FUserID& _user_id, const TDelegate<void(EResultCode _rcode, struct FACK_ProfileStatisticRead& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReadProfileStatistic");

	Params::Service_ReadProfileStatistic Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReadRecruit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ReadRecruit& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReadRecruit(const class UObject* _world_ctx, const TDelegate<void(EResultCode _rcode, struct FACK_ReadRecruit& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReadRecruit");

	Params::Service_ReadRecruit Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.RegisterNotify_OnMatchChanged
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::RegisterNotify_OnMatchChanged(const class UObject* _world_ctx, const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "RegisterNotify_OnMatchChanged");

	Params::Service_RegisterNotify_OnMatchChanged Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.RemoveWishedGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::RemoveWishedGameMode(const class UObject* _world_ctx, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "RemoveWishedGameMode");

	Params::Service_RemoveWishedGameMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReplyFriendAsk
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nick                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _accept                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_FriendUpdate& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReplyFriendAsk(const class UObject* _world_ctx, const struct FUserID& _target_user_id, const struct FUserName& _nick, bool _accept, TDelegate<void(EResultCode _rcode, struct FACK_FriendUpdate& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReplyFriendAsk");

	Params::Service_ReplyFriendAsk Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._target_user_id = std::move(_target_user_id);
	Parms._nick = std::move(_nick);
	Parms._accept = _accept;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ReplyInviteToBattle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FREQ_InviteToBattle              _invite                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EInviteReply                            _Reply                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ReplyInviteToBattle(const class UObject* _world_ctx, const struct FREQ_InviteToBattle& _invite, EInviteReply _Reply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ReplyInviteToBattle");

	Params::Service_ReplyInviteToBattle Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._invite = std::move(_invite);
	Parms._Reply = _Reply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.ResetSkillPoint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _code, struct FACK_ResetSkillPoint& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::ResetSkillPoint(const class UObject* _world_ctx, class UInvenItem* _item, const TDelegate<void(EResultCode _code, struct FACK_ResetSkillPoint& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "ResetSkillPoint");

	Params::Service_ResetSkillPoint Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item = _item;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.RevertPreviewCharacterSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::RevertPreviewCharacterSettings(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "RevertPreviewCharacterSettings");

	Params::Service_RevertPreviewCharacterSettings Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.RewardBattlePass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_BattlePassReward& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::RewardBattlePass(const class UObject* _world_ctx, const struct FItemID_BattlePass& _pass_id, int32 _level, TDelegate<void(EResultCode _rcode, struct FACK_BattlePassReward& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "RewardBattlePass");

	Params::Service_RewardBattlePass Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._pass_id = std::move(_pass_id);
	Parms._level = _level;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.RewardEventPage
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_option                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_EventPageReward& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::RewardEventPage(const class UObject* _world_ctx, const struct FItemID_EventPage& _event_page_id, bool _is_option, TDelegate<void(EResultCode _rcode, struct FACK_EventPageReward& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "RewardEventPage");

	Params::Service_RewardEventPage Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._event_page_id = std::move(_event_page_id);
	Parms._is_option = _is_option;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.RewardMission
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Mission                  _mission_id                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_MissionReward& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::RewardMission(const class UObject* _world_ctx, const struct FItemID& _task_id, int32 _idx, const struct FItemID_Mission& _mission_id, TDelegate<void(EResultCode _rcode, struct FACK_MissionReward& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "RewardMission");

	Params::Service_RewardMission Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._mission_id = std::move(_mission_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SearchUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _search_nickname                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_SearchUser& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SearchUser(const class UObject* _world_ctx, const class FString& _search_nickname, TDelegate<void(EResultCode _rcode, struct FACK_SearchUser& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SearchUser");

	Params::Service_SearchUser Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._search_nickname = std::move(_search_nickname);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetCharacterSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetCharacterSetting(const class UObject* _world_ctx, const struct FUserID& _user_id, ECharaType _chara_type, const struct FItemID& _item_id, int32 _slot_zidx, TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetCharacterSetting");

	Params::Service_SetCharacterSetting Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._chara_type = _chara_type;
	Parms._item_id = std::move(_item_id);
	Parms._slot_zidx = _slot_zidx;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetCharacterSetting_NoAck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetCharacterSetting_NoAck(const class UObject* _world_ctx, const struct FUserID& _user_id, ECharaType _chara_type, const struct FItemID& _item_id, int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetCharacterSetting_NoAck");

	Params::Service_SetCharacterSetting_NoAck Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._chara_type = _chara_type;
	Parms._item_id = std::move(_item_id);
	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetCharacterSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemSetting>             _settings                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetCharacterSettings(const class UObject* _world_ctx, const struct FUserID& _user_id, ECharaType _chara_type, const TArray<struct FItemSetting>& _settings, TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetCharacterSettings");

	Params::Service_SetCharacterSettings Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._chara_type = _chara_type;
	Parms._settings = std::move(_settings);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetCharacterSettings_NoAck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemSetting>             _settings                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UService::SetCharacterSettings_NoAck(const class UObject* _world_ctx, const struct FUserID& _user_id, ECharaType _chara_type, const TArray<struct FItemSetting>& _settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetCharacterSettings_NoAck");

	Params::Service_SetCharacterSettings_NoAck Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._chara_type = _chara_type;
	Parms._settings = std::move(_settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetCurrentCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetCurrentCharacter(const class UObject* _world_ctx, const struct FUserID& _user_id, ECharaType _chara_type, TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetCurrentCharacter");

	Params::Service_SetCurrentCharacter Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._chara_type = _chara_type;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetGunSetting
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_object                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_UpdateGunSpec& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetGunSetting(const class UObject* _world_ctx, const class UGunObject* _gun_object, const TDelegate<void(EResultCode _rcode, struct FACK_UpdateGunSpec& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetGunSetting");

	Params::Service_SetGunSetting Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_object = _gun_object;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetGunType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetGunType(const class UObject* _world_ctx, const struct FUserID& _user_id, ECharaType _chara_type, const struct FGunPreset& _gun_preset, TDelegate<void(EResultCode _rcode, struct FApiResult& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetGunType");

	Params::Service_SetGunType Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._chara_type = _chara_type;
	Parms._gun_preset = std::move(_gun_preset);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetUserPlayingAt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUserPlayingAt                          _playing_at                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetUserPlayingAt(const class UObject* _world_ctx, EUserPlayingAt _playing_at)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetUserPlayingAt");

	Params::Service_SetUserPlayingAt Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._playing_at = _playing_at;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.SetWishedGameMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::SetWishedGameMode(const class UObject* _world_ctx, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "SetWishedGameMode");

	Params::Service_SetWishedGameMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.StartMatchMaking
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMatchOption                     _option                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_FindMatch& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::StartMatchMaking(const class UObject* _world_ctx, const struct FUserID& _user_id, EGameMode _game_mode, const struct FMatchOption& _option, TDelegate<void(EResultCode _rcode, struct FACK_FindMatch& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "StartMatchMaking");

	Params::Service_StartMatchMaking Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);
	Parms._game_mode = _game_mode;
	Parms._option = std::move(_option);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.Subscribe_OnUpdateUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<EUserEvent>                        _events                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EUserEvent _event)>      _proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::Subscribe_OnUpdateUser(const class UObject* _world_ctx, const TSet<EUserEvent>& _events, const TDelegate<void(EUserEvent _event)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "Subscribe_OnUpdateUser");

	Params::Service_Subscribe_OnUpdateUser Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._events = std::move(_events);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.UnregisterNotify_OnMatchChanged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::UnregisterNotify_OnMatchChanged(const class UObject* _world_ctx, const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "UnregisterNotify_OnMatchChanged");

	Params::Service_UnregisterNotify_OnMatchChanged Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.Unsubscribe_OnUpdateUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::Unsubscribe_OnUpdateUser(const class UObject* _world_ctx, const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "Unsubscribe_OnUpdateUser");

	Params::Service_Unsubscribe_OnUpdateUser Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.UpdateBooster
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot_index                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::UpdateBooster(const class UObject* _world_ctx, const int32 _slot_index, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "UpdateBooster");

	Params::Service_UpdateBooster Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._slot_index = _slot_index;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.UpdateEmblem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_EmblemUpdate& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::UpdateEmblem(const class UObject* _world_ctx, const struct FItemID& _item_id, const TDelegate<void(EResultCode _rcode, struct FACK_EmblemUpdate& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "UpdateEmblem");

	Params::Service_UpdateEmblem Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.UpdateNicknameFX
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_SingleItemUpdate& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::UpdateNicknameFX(const class UObject* _world_ctx, const struct FItemID& _item_id, const TDelegate<void(EResultCode _rcode, struct FACK_SingleItemUpdate& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "UpdateNicknameFX");

	Params::Service_UpdateNicknameFX Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Service.UpdatePartyGameMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UService::UpdatePartyGameMode(const class UObject* _world_ctx, const EGameMode& _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "UpdatePartyGameMode");

	Params::Service_UpdatePartyGameMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Service.UpdateProfileCard
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EResultCode _rcode, struct FACK_ProfileCardUpdate& _ack)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UService::UpdateProfileCard(const class UObject* _world_ctx, const struct FItemID& _item_id, const TDelegate<void(EResultCode _rcode, struct FACK_ProfileCardUpdate& _ack)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Service", "UpdateProfileCard");

	Params::Service_UpdateProfileCard Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SharedPlayerStateBlueprintLibrary.IsRoomLeader
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserInBattle                    _user                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USharedPlayerStateBlueprintLibrary::IsRoomLeader(const struct FUserInBattle& _user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SharedPlayerStateBlueprintLibrary", "IsRoomLeader");

	Params::SharedPlayerStateBlueprintLibrary_IsRoomLeader Parms{};

	Parms._user = std::move(_user);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SharedPlayerStateBlueprintLibrary.IsRoomManager
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserInBattle                    _user                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USharedPlayerStateBlueprintLibrary::IsRoomManager(const struct FUserInBattle& _user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SharedPlayerStateBlueprintLibrary", "IsRoomManager");

	Params::SharedPlayerStateBlueprintLibrary_IsRoomManager Parms{};

	Parms._user = std::move(_user);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ShopGoodsHelper.GetGoodsCategoryFromItemCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoodsCategory                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGoodsCategory UShopGoodsHelper::GetGoodsCategoryFromItemCategory(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ShopGoodsHelper", "GetGoodsCategoryFromItemCategory");

	Params::ShopGoodsHelper_GetGoodsCategoryFromItemCategory Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckCanInvitePartyTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckCanInvitePartyTarget(const struct FUserID& _target_user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckCanInvitePartyTarget");

	Params::SocialContext_CheckCanInvitePartyTarget Parms{};

	Parms._target_user_id = std::move(_target_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckImPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckImPartyLeader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckImPartyLeader");

	Params::SocialContext_CheckImPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckIsPartyLeader
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckIsPartyLeader(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckIsPartyLeader");

	Params::SocialContext_CheckIsPartyLeader Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.DequeueAskFriendNotify
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* USocialContext::DequeueAskFriendNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "DequeueAskFriendNotify");

	Params::SocialContext_DequeueAskFriendNotify Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.FindMyFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UUserProfile*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UUserProfile* USocialContext::FindMyFriend(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "FindMyFriend");

	Params::SocialContext_FindMyFriend Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.FindPartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* USocialContext::FindPartyMember(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "FindPartyMember");

	Params::SocialContext_FindPartyMember Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetPartyReqTimeMap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const TMap<struct FUserID, struct FDateTime>ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<struct FUserID, struct FDateTime> USocialContext::GetPartyReqTimeMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetPartyReqTimeMap");

	Params::SocialContext_GetPartyReqTimeMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetRemainAskFriendNotifyCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialContext::GetRemainAskFriendNotifyCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetRemainAskFriendNotifyCount");

	Params::SocialContext_GetRemainAskFriendNotifyCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetRemainFriendAskNotifyCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialContext::GetRemainFriendAskNotifyCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetRemainFriendAskNotifyCount");

	Params::SocialContext_GetRemainFriendAskNotifyCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetRemainPartyInviteNotifyCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialContext::GetRemainPartyInviteNotifyCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetRemainPartyInviteNotifyCount");

	Params::SocialContext_GetRemainPartyInviteNotifyCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.IsInAskFriendReqCoolTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::IsInAskFriendReqCoolTime(const struct FUserID& _user_id, const struct FUserName& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "IsInAskFriendReqCoolTime");

	Params::SocialContext_IsInAskFriendReqCoolTime Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.IsInInviteBattleCoolTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::IsInInviteBattleCoolTime(const struct FUserID& _user_id, const struct FUserName& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "IsInInviteBattleCoolTime");

	Params::SocialContext_IsInInviteBattleCoolTime Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.IsInPartyReqCoolTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::IsInPartyReqCoolTime(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "IsInPartyReqCoolTime");

	Params::SocialContext_IsInPartyReqCoolTime Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.NotifyPartyInviteCReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyID                         _party_id                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nick                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::NotifyPartyInviteCReq(const struct FPartyID& _party_id, const struct FUserID& _user_id, const struct FUserName& _nick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "NotifyPartyInviteCReq");

	Params::SocialContext_NotifyPartyInviteCReq Parms{};

	Parms._party_id = std::move(_party_id);
	Parms._user_id = std::move(_user_id);
	Parms._nick = std::move(_nick);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.NotifyUpdateMyFriends
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _friend_id                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _user_name                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_accepted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::NotifyUpdateMyFriends(const struct FUserID& _friend_id, const struct FUserName& _user_name, bool _is_accepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "NotifyUpdateMyFriends");

	Params::SocialContext_NotifyUpdateMyFriends Parms{};

	Parms._friend_id = std::move(_friend_id);
	Parms._user_name = std::move(_user_name);
	Parms._is_accepted = _is_accepted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RecordAskFriendReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RecordAskFriendReq(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RecordAskFriendReq");

	Params::SocialContext_RecordAskFriendReq Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RecordInviteBattleReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RecordInviteBattleReq(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RecordInviteBattleReq");

	Params::SocialContext_RecordInviteBattleReq Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RecordUserPartyReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RecordUserPartyReq(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RecordUserPartyReq");

	Params::SocialContext_RecordUserPartyReq Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnAskedFriendListUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnAskedFriendListUpdated(const TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnAskedFriendListUpdated");

	Params::SocialContext_RegisterOnAskedFriendListUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnFriendAskCreateBCRecv
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UUserProfile* _message)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnFriendAskCreateBCRecv(const TDelegate<void(class UUserProfile* _message)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnFriendAskCreateBCRecv");

	Params::SocialContext_RegisterOnFriendAskCreateBCRecv Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnFriendAskUpdateBCRecv
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UUserProfile* _user, bool _is_accept)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnFriendAskUpdateBCRecv(const TDelegate<void(class UUserProfile* _user, bool _is_accept)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnFriendAskUpdateBCRecv");

	Params::SocialContext_RegisterOnFriendAskUpdateBCRecv Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnFriendAskUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(TArray<class UUserProfile*>& _asked_users)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnFriendAskUpdated(const TDelegate<void(TArray<class UUserProfile*>& _asked_users)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnFriendAskUpdated");

	Params::SocialContext_RegisterOnFriendAskUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnFriendDeleted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UUserProfile* _removed)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnFriendDeleted(const TDelegate<void(class UUserProfile* _removed)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnFriendDeleted");

	Params::SocialContext_RegisterOnFriendDeleted Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnFriendReqCoolTime
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FUserID& _target_user_id, struct FUserName& _target_nickname)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnFriendReqCoolTime(const TDelegate<void(struct FUserID& _target_user_id, struct FUserName& _target_nickname)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnFriendReqCoolTime");

	Params::SocialContext_RegisterOnFriendReqCoolTime Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnMyFriendListUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnMyFriendListUpdated(const TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnMyFriendListUpdated");

	Params::SocialContext_RegisterOnMyFriendListUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnMyPartyEntered
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UBriefParty* _party)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnMyPartyEntered(const TDelegate<void(class UBriefParty* _party)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnMyPartyEntered");

	Params::SocialContext_RegisterOnMyPartyEntered Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnMyPartyExited
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnMyPartyExited(const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnMyPartyExited");

	Params::SocialContext_RegisterOnMyPartyExited Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnPartyCharaUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FUserID& _user_id, struct FCharSpec& _chara_info)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnPartyCharaUpdated(const TDelegate<void(struct FUserID& _user_id, struct FCharSpec& _chara_info)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnPartyCharaUpdated");

	Params::SocialContext_RegisterOnPartyCharaUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnPartyInviteCReqRecv
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FPartyID& _party_id, class UUserProfile* _from_user)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnPartyInviteCReqRecv(const TDelegate<void(struct FPartyID& _party_id, class UUserProfile* _from_user)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnPartyInviteCReqRecv");

	Params::SocialContext_RegisterOnPartyInviteCReqRecv Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnPartyInviteReq
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FUserID& _user_id)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnPartyInviteReq(const TDelegate<void(struct FUserID& _user_id)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnPartyInviteReq");

	Params::SocialContext_RegisterOnPartyInviteReq Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnPartyLeaderUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FUserID& _leader_id)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnPartyLeaderUpdated(const TDelegate<void(struct FUserID& _leader_id)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnPartyLeaderUpdated");

	Params::SocialContext_RegisterOnPartyLeaderUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnPartyMemberAdded
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UBriefParty* _party, class UUserProfile* _member)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnPartyMemberAdded(const TDelegate<void(class UBriefParty* _party, class UUserProfile* _member)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnPartyMemberAdded");

	Params::SocialContext_RegisterOnPartyMemberAdded Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnPartyMemberDeleted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UBriefParty* _party, struct FUserID& _user_id)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnPartyMemberDeleted(const TDelegate<void(class UBriefParty* _party, struct FUserID& _user_id)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnPartyMemberDeleted");

	Params::SocialContext_RegisterOnPartyMemberDeleted Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnRecentPlayerListUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnRecentPlayerListUpdated(const TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnRecentPlayerListUpdated");

	Params::SocialContext_RegisterOnRecentPlayerListUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RegisterOnSteamFriendListUpdated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RegisterOnSteamFriendListUpdated(const TDelegate<void(TArray<class UUserProfile*>& _steam_friends)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RegisterOnSteamFriendListUpdated");

	Params::SocialContext_RegisterOnSteamFriendListUpdated Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RemoveAskFriendReqRecord
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RemoveAskFriendReqRecord(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RemoveAskFriendReqRecord");

	Params::SocialContext_RemoveAskFriendReqRecord Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RemoveInviteBattleRecord
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RemoveInviteBattleRecord(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RemoveInviteBattleRecord");

	Params::SocialContext_RemoveInviteBattleRecord Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RemoveMyFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::RemoveMyFriend(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RemoveMyFriend");

	Params::SocialContext_RemoveMyFriend Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.RemoveMyParty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyID                         _party_id                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FUserID                          _remove_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RemoveMyParty(const struct FPartyID& _party_id, const struct FUserID& _remove_user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RemoveMyParty");

	Params::SocialContext_RemoveMyParty Parms{};

	Parms._party_id = std::move(_party_id);
	Parms._remove_user_id = std::move(_remove_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.RemovePartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyID                         _party_id                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _next_party_leader                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::RemovePartyMember(const struct FPartyID& _party_id, const struct FUserID& _user_id, const struct FUserID& _next_party_leader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RemovePartyMember");

	Params::SocialContext_RemovePartyMember Parms{};

	Parms._party_id = std::move(_party_id);
	Parms._user_id = std::move(_user_id);
	Parms._next_party_leader = std::move(_next_party_leader);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.RemoveUserPartyReqRecord
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::RemoveUserPartyReqRecord(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "RemoveUserPartyReqRecord");

	Params::SocialContext_RemoveUserPartyReqRecord Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.SetMyParty
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyID                         _party_id                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FUserID                          _leader_id                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FUserID>                  _members                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::SetMyParty(const struct FPartyID& _party_id, const struct FUserID& _leader_id, const EGameMode _game_mode, const TArray<struct FUserID>& _members)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "SetMyParty");

	Params::SocialContext_SetMyParty Parms{};

	Parms._party_id = std::move(_party_id);
	Parms._leader_id = std::move(_leader_id);
	Parms._game_mode = _game_mode;
	Parms._members = std::move(_members);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.SetPartyLeader
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyID                         _party_id                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FUserID                          _leader_id                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::SetPartyLeader(const struct FPartyID& _party_id, const struct FUserID& _leader_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "SetPartyLeader");

	Params::SocialContext_SetPartyLeader Parms{};

	Parms._party_id = std::move(_party_id);
	Parms._leader_id = std::move(_leader_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.SubscribeInviteToBattle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FREQ_InviteToBattle& _invite)>_proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::SubscribeInviteToBattle(const TDelegate<void(struct FREQ_InviteToBattle& _invite)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "SubscribeInviteToBattle");

	Params::SocialContext_SubscribeInviteToBattle Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.UnregisterAllCallbacks
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::UnregisterAllCallbacks(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "UnregisterAllCallbacks");

	Params::SocialContext_UnregisterAllCallbacks Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.UnsubscribeInviteToBattle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USocialContext::UnsubscribeInviteToBattle(const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "UnsubscribeInviteToBattle");

	Params::SocialContext_UnsubscribeInviteToBattle Parms{};

	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SocialContext.UpdatePartyCharacter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FPartyID                         _party_id                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FUserID                          _user_info                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharSpec                        _chara_info                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _invoke_callback                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::UpdatePartyCharacter(const struct FPartyID& _party_id, const struct FUserID& _user_info, const struct FCharSpec& _chara_info, bool _invoke_callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "UpdatePartyCharacter");

	Params::SocialContext_UpdatePartyCharacter Parms{};

	Parms._party_id = std::move(_party_id);
	Parms._user_info = std::move(_user_info);
	Parms._chara_info = std::move(_chara_info);
	Parms._invoke_callback = _invoke_callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckCanAskFriendTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckCanAskFriendTarget(const struct FUserID& _target_user_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckCanAskFriendTarget");

	Params::SocialContext_CheckCanAskFriendTarget Parms{};

	Parms._target_user_id = std::move(_target_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckCanJoinPartyTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _target_user_id                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckCanJoinPartyTarget(const struct FUserID& _target_user_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckCanJoinPartyTarget");

	Params::SocialContext_CheckCanJoinPartyTarget Parms{};

	Parms._target_user_id = std::move(_target_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckHasRestPartySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckHasRestPartySlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckHasRestPartySlot");

	Params::SocialContext_CheckHasRestPartySlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckIsAskedFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckIsAskedFriend(const struct FUserID& _user_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckIsAskedFriend");

	Params::SocialContext_CheckIsAskedFriend Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckIsMyFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckIsMyFriend(const struct FUserID& _user_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckIsMyFriend");

	Params::SocialContext_CheckIsMyFriend Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.CheckIsMyFriendNickname
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USocialContext::CheckIsMyFriendNickname(const struct FUserName& _nickname) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "CheckIsMyFriendNickname");

	Params::SocialContext_CheckIsMyFriendNickname Parms{};

	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetMaxPartyMemberCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USocialContext::GetMaxPartyMemberCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetMaxPartyMemberCount");

	Params::SocialContext_GetMaxPartyMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetMyParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UBriefParty*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBriefParty* USocialContext::GetMyParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetMyParty");

	Params::SocialContext_GetMyParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SocialContext.GetUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _user_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* USocialContext::GetUser(const struct FUserID& _user_id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SocialContext", "GetUser");

	Params::SocialContext_GetUser Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpectatorBase.ViewNext
// (Final, Native, Public, BlueprintCallable)

void ASpectatorBase::ViewNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorBase", "ViewNext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.BindChara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _owner                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::BindChara(class ACharaBase* _owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "BindChara");

	Params::SpecterAnimInstance_BindChara Parms{};

	Parms._owner = _owner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.CheckCanTransit1PVIdle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _from_idle_state                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _can_check                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpecterAnimInstance::CheckCanTransit1PVIdle(bool _from_idle_state, bool _can_check)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "CheckCanTransit1PVIdle");

	Params::SpecterAnimInstance_CheckCanTransit1PVIdle Parms{};

	Parms._from_idle_state = _from_idle_state;
	Parms._can_check = _can_check;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.CheckCanTransit3PVIdle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _from_idle_state                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _can_check                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpecterAnimInstance::CheckCanTransit3PVIdle(bool _from_idle_state, bool _can_check)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "CheckCanTransit3PVIdle");

	Params::SpecterAnimInstance_CheckCanTransit3PVIdle Parms{};

	Parms._from_idle_state = _from_idle_state;
	Parms._can_check = _can_check;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.CopyAnimationFrom
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class USpecterAnimInstance> Type                                                   (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::CopyAnimationFrom(TSubclassOf<class USpecterAnimInstance> Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "CopyAnimationFrom");

	Params::SpecterAnimInstance_CopyAnimationFrom Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.GetCutSceneOutroAnim
// (Final, Native, Public)
// Parameters:
// int32                                   _Pos                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* USpecterAnimInstance::GetCutSceneOutroAnim(int32 _Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "GetCutSceneOutroAnim");

	Params::SpecterAnimInstance_GetCutSceneOutroAnim Parms{};

	Parms._Pos = _Pos;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.GetCutSceneOutroCameraAnim
// (Final, Native, Public)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* USpecterAnimInstance::GetCutSceneOutroCameraAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "GetCutSceneOutroCameraAnim");

	Params::SpecterAnimInstance_GetCutSceneOutroCameraAnim Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.OnAnimNotify_EnterLowerAction
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EBodyLowerAction                        _new_action                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::OnAnimNotify_EnterLowerAction(EBodyLowerAction _new_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "OnAnimNotify_EnterLowerAction");

	Params::SpecterAnimInstance_OnAnimNotify_EnterLowerAction Parms{};

	Parms._new_action = _new_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.OnAnimNotify_MotionSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _begin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMotionSource                           _source                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERootMotionFrom                         _root_motion_mode                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _changer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::OnAnimNotify_MotionSource(bool _begin, EMotionSource _source, ERootMotionFrom _root_motion_mode, class UObject* _changer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "OnAnimNotify_MotionSource");

	Params::SpecterAnimInstance_OnAnimNotify_MotionSource Parms{};

	Parms._begin = _begin;
	Parms._source = _source;
	Parms._root_motion_mode = _root_motion_mode;
	Parms._changer = _changer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.OnAnimNotify_UpperBlendStrongly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _begin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _changer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::OnAnimNotify_UpperBlendStrongly(bool _begin, class UObject* _changer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "OnAnimNotify_UpperBlendStrongly");

	Params::SpecterAnimInstance_OnAnimNotify_UpperBlendStrongly Parms{};

	Parms._begin = _begin;
	Parms._changer = _changer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.OnDamaged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USpecterAnimInstance::OnDamaged(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "OnDamaged");

	Params::SpecterAnimInstance_OnDamaged Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.OnMontageFinished
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::OnMontageFinished(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "OnMontageFinished");

	Params::SpecterAnimInstance_OnMontageFinished Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.OnMontageStart
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::OnMontageStart(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "OnMontageStart");

	Params::SpecterAnimInstance_OnMontageStart Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.SetAimOffsetRotator
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         _Rot                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void USpecterAnimInstance::SetAimOffsetRotator(const struct FRotator& _Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "SetAimOffsetRotator");

	Params::SpecterAnimInstance_SetAimOffsetRotator Parms{};

	Parms._Rot = std::move(_Rot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.SetDamagedMotionPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _rate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::SetDamagedMotionPlayRate(float _rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "SetDamagedMotionPlayRate");

	Params::SpecterAnimInstance_SetDamagedMotionPlayRate Parms{};

	Parms._rate = _rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.SetFireBlendEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_enabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::SetFireBlendEnable(bool _is_enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "SetFireBlendEnable");

	Params::SpecterAnimInstance_SetFireBlendEnable Parms{};

	Parms._is_enabled = _is_enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.SetFireBlendWeight
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _zero                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _light                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _middle                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _heavy                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::SetFireBlendWeight(const float& _zero, const float& _light, const float& _middle, const float& _heavy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "SetFireBlendWeight");

	Params::SpecterAnimInstance_SetFireBlendWeight Parms{};

	Parms._zero = _zero;
	Parms._light = _light;
	Parms._middle = _middle;
	Parms._heavy = _heavy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.SetMotionSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMotionSource                           _source                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _changer                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _ctx                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::SetMotionSource(EMotionSource _source, class UObject* _changer, const class FString& _ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "SetMotionSource");

	Params::SpecterAnimInstance_SetMotionSource Parms{};

	Parms._source = _source;
	Parms._changer = _changer;
	Parms._ctx = std::move(_ctx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.SetSupportedAimOffsetInMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpecterAnimInstance::SetSupportedAimOffsetInMontage(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "SetSupportedAimOffsetInMontage");

	Params::SpecterAnimInstance_SetSupportedAimOffsetInMontage Parms{};

	Parms._enable = _enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SpecterAnimInstance.GetMotionSource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMotionSource                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMotionSource USpecterAnimInstance::GetMotionSource() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "GetMotionSource");

	Params::SpecterAnimInstance_GetMotionSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.GetPickupBlendRate
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USpecterAnimInstance::GetPickupBlendRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "GetPickupBlendRate");

	Params::SpecterAnimInstance_GetPickupBlendRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.GetZoomInBlendRate
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USpecterAnimInstance::GetZoomInBlendRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "GetZoomInBlendRate");

	Params::SpecterAnimInstance_GetZoomInBlendRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterAnimInstance.IsPlayingDamagedMotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USpecterAnimInstance::IsPlayingDamagedMotion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpecterAnimInstance", "IsPlayingDamagedMotion");

	Params::SpecterAnimInstance_IsPlayingDamagedMotion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SpecterSessionCallbackProxy.CreateSpecterSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                PlayerController                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PublicConnections                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseLAN                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _UseLobbiesIfAvailable                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USpecterSessionCallbackProxy*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpecterSessionCallbackProxy* USpecterSessionCallbackProxy::CreateSpecterSession(class UObject* WorldContextObject, class APlayerController* PlayerController, int32 PublicConnections, bool bUseLAN, bool _UseLobbiesIfAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SpecterSessionCallbackProxy", "CreateSpecterSession");

	Params::SpecterSessionCallbackProxy_CreateSpecterSession Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;
	Parms.PublicConnections = PublicConnections;
	Parms.bUseLAN = bUseLAN;
	Parms._UseLobbiesIfAvailable = _UseLobbiesIfAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.ActivateCrouchFighting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_activation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::ActivateCrouchFighting(bool _is_activation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "ActivateCrouchFighting");

	Params::StigmaAIController_ActivateCrouchFighting Parms{};

	Parms._is_activation = _is_activation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.ActivateSideStep
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::ActivateSideStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "ActivateSideStep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.BuildMesh_AI_Parts
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::BuildMesh_AI_Parts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "BuildMesh_AI_Parts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.DrivePerception
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::DrivePerception(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "DrivePerception");

	Params::StigmaAIController_DrivePerception Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.ExecuteFireCommand
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _out_maintain_command_time                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStigmaAIController::ExecuteFireCommand(float* _out_maintain_command_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "ExecuteFireCommand");

	Params::StigmaAIController_ExecuteFireCommand Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_maintain_command_time != nullptr)
		*_out_maintain_command_time = Parms._out_maintain_command_time;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.ExecuteProperAction
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::ExecuteProperAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "ExecuteProperAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.FireToTargetEnemy
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::FireToTargetEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "FireToTargetEnemy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.InitBlackboardByConfig
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::InitBlackboardByConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "InitBlackboardByConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.OnFinishBehavior
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::OnFinishBehavior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "OnFinishBehavior");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.RandomActivateAdditionalStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _inculde_action                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::RandomActivateAdditionalStep(bool _inculde_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "RandomActivateAdditionalStep");

	Params::StigmaAIController_RandomActivateAdditionalStep Parms{};

	Parms._inculde_action = _inculde_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.RequestChangeBehaviorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMainBehaviorType                       _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStigmaAIController::RequestChangeBehaviorType(EMainBehaviorType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "RequestChangeBehaviorType");

	Params::StigmaAIController_RequestChangeBehaviorType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.SetCharacteristics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _aggressive                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _skilled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::SetCharacteristics(float _aggressive, float _skilled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "SetCharacteristics");

	Params::StigmaAIController_SetCharacteristics Parms{};

	Parms._aggressive = _aggressive;
	Parms._skilled = _skilled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.SetOriginLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          _location                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::SetOriginLocation(const struct FVector& _location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "SetOriginLocation");

	Params::StigmaAIController_SetOriginLocation Parms{};

	Parms._location = std::move(_location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.SetRunType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_run_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::SetRunType(bool _is_run_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "SetRunType");

	Params::StigmaAIController_SetRunType Parms{};

	Parms._is_run_type = _is_run_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.SetTargetEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _Actor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::SetTargetEnemy(class AActor* _Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "SetTargetEnemy");

	Params::StigmaAIController_SetTargetEnemy Parms{};

	Parms._Actor = _Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.SetTargetEnemyImmediately
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _Actor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::SetTargetEnemyImmediately(class AActor* _Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "SetTargetEnemyImmediately");

	Params::StigmaAIController_SetTargetEnemyImmediately Parms{};

	Parms._Actor = _Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.SetupConfig
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FConfig_AI                       _config_ai                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AStigmaAIController::SetupConfig(const struct FConfig_AI& _config_ai)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "SetupConfig");

	Params::StigmaAIController_SetupConfig Parms{};

	Parms._config_ai = std::move(_config_ai);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.StepDownPerception
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::StepDownPerception()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "StepDownPerception");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.StepUpPerception
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPerceptionPhase                        _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStigmaAIController::StepUpPerception(EPerceptionPhase _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "StepUpPerception");

	Params::StigmaAIController_StepUpPerception Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.UpdateTargetEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           _perceived_actor                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStigmaAIController::UpdateTargetEnemy(class AActor* _perceived_actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "UpdateTargetEnemy");

	Params::StigmaAIController_UpdateTargetEnemy Parms{};

	Parms._perceived_actor = _perceived_actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.UpdateThreats
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           _perceived_actor                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus                      _stimul                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AStigmaAIController::UpdateThreats(class AActor* _perceived_actor, const struct FAIStimulus& _stimul)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "UpdateThreats");

	Params::StigmaAIController_UpdateThreats Parms{};

	Parms._perceived_actor = _perceived_actor;
	Parms._stimul = std::move(_stimul);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.UpdateVariable
// (Final, Native, Public, BlueprintCallable)

void AStigmaAIController::UpdateVariable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "UpdateVariable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaAIController.GetAvailableAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkillInfo_AI                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSkillInfo_AI AStigmaAIController::GetAvailableAction() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetAvailableAction");

	Params::StigmaAIController_GetAvailableAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetConfig_AI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FConfig_AI                 ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_AI AStigmaAIController::GetConfig_AI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetConfig_AI");

	Params::StigmaAIController_GetConfig_AI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetCurrentAccumlatedPerception
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AStigmaAIController::GetCurrentAccumlatedPerception() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetCurrentAccumlatedPerception");

	Params::StigmaAIController_GetCurrentAccumlatedPerception Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetCurrentPerceptionPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPerceptionPhase                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPerceptionPhase AStigmaAIController::GetCurrentPerceptionPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetCurrentPerceptionPhase");

	Params::StigmaAIController_GetCurrentPerceptionPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetLastTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FVector                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FVector AStigmaAIController::GetLastTargetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetLastTargetLocation");

	Params::StigmaAIController_GetLastTargetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetPerceptionLevelWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPerceptionPhase                        _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AStigmaAIController::GetPerceptionLevelWeight(EPerceptionPhase _phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetPerceptionLevelWeight");

	Params::StigmaAIController_GetPerceptionLevelWeight Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetPerceptionRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPerceptionPhase                        _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AStigmaAIController::GetPerceptionRequirements(EPerceptionPhase _phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetPerceptionRequirements");

	Params::StigmaAIController_GetPerceptionRequirements Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetTargetEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AStigmaAIController::GetTargetEnemy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetTargetEnemy");

	Params::StigmaAIController_GetTargetEnemy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.GetTotalAccumulatedPerception
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AStigmaAIController::GetTotalAccumulatedPerception() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "GetTotalAccumulatedPerception");

	Params::StigmaAIController_GetTotalAccumulatedPerception Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaAIController.IsImmediatelyTargetMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStigmaAIController::IsImmediatelyTargetMove() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaAIController", "IsImmediatelyTargetMove");

	Params::StigmaAIController_IsImmediatelyTargetMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.StigmaButtonBase.SetButtonText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStigmaButtonBase::SetButtonText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaButtonBase", "SetButtonText");

	Params::StigmaButtonBase_SetButtonText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaButtonBase.UpdateButtonStyle
// (Event, Protected, BlueprintEvent)

void UStigmaButtonBase::UpdateButtonStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaButtonBase", "UpdateButtonStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.StigmaButtonBase.UpdateButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UStigmaButtonBase::UpdateButtonText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaButtonBase", "UpdateButtonText");

	Params::StigmaButtonBase_UpdateButtonText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.StigmaCheatManager.Spt_ActivateInfiniteBullet
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ActivateInfiniteBullet(class ACharaBase* _target_chara, bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ActivateInfiniteBullet");

	Params::StigmaCheatManager_Spt_ActivateInfiniteBullet Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Annihilation
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _param                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Annihilation(class ACharaBase* _target_chara, const class FString& _Key, const class FString& _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Annihilation");

	Params::StigmaCheatManager_Spt_Annihilation Parms{};

	Parms._target_chara = _target_chara;
	Parms._Key = std::move(_Key);
	Parms._param = std::move(_param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_BattlePass_Clear
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _pass_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_BattlePass_Clear(int32 _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_BattlePass_Clear");

	Params::StigmaCheatManager_Spt_BattlePass_Clear Parms{};

	Parms._pass_id = _pass_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Booster
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _booster_slot_zidx                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _item_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Booster(class ACharaBase* _target_chara, int32 _booster_slot_zidx, int32 _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Booster");

	Params::StigmaCheatManager_Spt_Booster Parms{};

	Parms._target_chara = _target_chara;
	Parms._booster_slot_zidx = _booster_slot_zidx;
	Parms._item_id = _item_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Challenge
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _param                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Challenge(class ACharaBase* _target_chara, const class FString& _Key, const class FString& _param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Challenge");

	Params::StigmaCheatManager_Spt_Challenge Parms{};

	Parms._target_chara = _target_chara;
	Parms._Key = std::move(_Key);
	Parms._param = std::move(_param);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ChangeArmor
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ChangeArmor(class ACharaBase* _target_chara, const class FString& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ChangeArmor");

	Params::StigmaCheatManager_Spt_ChangeArmor Parms{};

	Parms._target_chara = _target_chara;
	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ChangeBullet
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ChangeBullet(class ACharaBase* _target_chara, const class FString& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ChangeBullet");

	Params::StigmaCheatManager_Spt_ChangeBullet Parms{};

	Parms._target_chara = _target_chara;
	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ChangeChara
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ChangeChara(class ACharaBase* _target_chara, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ChangeChara");

	Params::StigmaCheatManager_Spt_ChangeChara Parms{};

	Parms._target_chara = _target_chara;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ChangeParts
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ChangeParts(class ACharaBase* _target_chara, const class FString& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ChangeParts");

	Params::StigmaCheatManager_Spt_ChangeParts Parms{};

	Parms._target_chara = _target_chara;
	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Crash
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_Crash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Crash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Currency_Add
// (Final, Exec, Native, Public)
// Parameters:
// ECurrencyTypes                          _currency_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Amount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Currency_Add(ECurrencyTypes _currency_type, int32 _Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Currency_Add");

	Params::StigmaCheatManager_Spt_Currency_Add Parms{};

	Parms._currency_type = _currency_type;
	Parms._Amount = _Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Currency_Clear
// (Final, Exec, Native, Public)
// Parameters:
// ECurrencyTypes                          _currency_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Currency_Clear(ECurrencyTypes _currency_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Currency_Clear");

	Params::StigmaCheatManager_Spt_Currency_Clear Parms{};

	Parms._currency_type = _currency_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_DumpChara
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_DumpChara(class ACharaBase* _target_chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_DumpChara");

	Params::StigmaCheatManager_Spt_DumpChara Parms{};

	Parms._target_chara = _target_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ELO
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _elo                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ELO(int32 _elo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ELO");

	Params::StigmaCheatManager_Spt_ELO Parms{};

	Parms._elo = _elo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_EnableFootIK
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_enabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_EnableFootIK(class ACharaBase* _target_chara, bool _is_enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_EnableFootIK");

	Params::StigmaCheatManager_Spt_EnableFootIK Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_enabled = _is_enabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ESC
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_ESC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ESC");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_EventPage_AddCount
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _event_page_id                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_option                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_EventPage_AddCount(int32 _event_page_id, int32 _count, bool _is_option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_EventPage_AddCount");

	Params::StigmaCheatManager_Spt_EventPage_AddCount Parms{};

	Parms._event_page_id = _event_page_id;
	Parms._count = _count;
	Parms._is_option = _is_option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_EventPage_Clear
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _event_page_id                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_EventPage_Clear(int32 _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_EventPage_Clear");

	Params::StigmaCheatManager_Spt_EventPage_Clear Parms{};

	Parms._event_page_id = _event_page_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_EventPage_Reset
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_EventPage_Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_EventPage_Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Expire_ActiveFunction
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _sec                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Expire_ActiveFunction(int32 _sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Expire_ActiveFunction");

	Params::StigmaCheatManager_Spt_Expire_ActiveFunction Parms{};

	Parms._sec = _sec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_FillBot
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_FillBot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_FillBot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_FinishBattle
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_FinishBattle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_FinishBattle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Function_Add
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _item_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Function_Add(int32 _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Function_Add");

	Params::StigmaCheatManager_Spt_Function_Add Parms{};

	Parms._item_id = _item_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Function_Clear
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_Function_Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Function_Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_GameTime
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _time_sec                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_GameTime(int32 _time_sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_GameTime");

	Params::StigmaCheatManager_Spt_GameTime Parms{};

	Parms._time_sec = _time_sec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_InfStock
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_InfStock(class ACharaBase* _target_chara, bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_InfStock");

	Params::StigmaCheatManager_Spt_InfStock Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Item_Add
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _item_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _count_or_time                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Amount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Item_Add(int32 _item_id, const class FString& _count_or_time, int32 _Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Item_Add");

	Params::StigmaCheatManager_Spt_Item_Add Parms{};

	Parms._item_id = _item_id;
	Parms._count_or_time = std::move(_count_or_time);
	Parms._Amount = _Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Item_Clear
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _item_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Item_Clear(int32 _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Item_Clear");

	Params::StigmaCheatManager_Spt_Item_Clear Parms{};

	Parms._item_id = _item_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_LevelHack
// (Final, Exec, Native, Public)
// Parameters:
// float                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_LevelHack(float _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_LevelHack");

	Params::StigmaCheatManager_Spt_LevelHack Parms{};

	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_LoadVoiceOnInit
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _val                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_LoadVoiceOnInit(bool _val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_LoadVoiceOnInit");

	Params::StigmaCheatManager_Spt_LoadVoiceOnInit Parms{};

	Parms._val = _val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MannerPoint_Add
// (Final, Exec, Native, Public)
// Parameters:
// float                                   _point_delta                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MannerPoint_Add(float _point_delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MannerPoint_Add");

	Params::StigmaCheatManager_Spt_MannerPoint_Add Parms{};

	Parms._point_delta = _point_delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_AddCount
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_AddCount(ECharaType _chara_type, int32 _slot, int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_AddCount");

	Params::StigmaCheatManager_Spt_MasterMission_AddCount Parms{};

	Parms._chara_type = _chara_type;
	Parms._slot = _slot;
	Parms._count = _count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_Clear
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_Clear(ECharaType _chara_type, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_Clear");

	Params::StigmaCheatManager_Spt_MasterMission_Clear Parms{};

	Parms._chara_type = _chara_type;
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_ClearChangeCount
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_ClearChangeCount(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_ClearChangeCount");

	Params::StigmaCheatManager_Spt_MasterMission_ClearChangeCount Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_ExpAdd
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Exp                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_ExpAdd(ECharaType _chara_type, int32 _Exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_ExpAdd");

	Params::StigmaCheatManager_Spt_MasterMission_ExpAdd Parms{};

	Parms._chara_type = _chara_type;
	Parms._Exp = _Exp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_LevelAdd
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_LevelAdd(ECharaType _chara_type, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_LevelAdd");

	Params::StigmaCheatManager_Spt_MasterMission_LevelAdd Parms{};

	Parms._chara_type = _chara_type;
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_Success
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_Success(ECharaType _chara_type, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_Success");

	Params::StigmaCheatManager_Spt_MasterMission_Success Parms{};

	Parms._chara_type = _chara_type;
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_MasterMission_SuccessFirstMission
// (Final, Exec, Native, Public)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_MasterMission_SuccessFirstMission(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_MasterMission_SuccessFirstMission");

	Params::StigmaCheatManager_Spt_MasterMission_SuccessFirstMission Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Minimap
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Minimap(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Minimap");

	Params::StigmaCheatManager_Spt_Minimap Parms{};

	Parms._enable = _enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Mission_AddCount
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           _task_id                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Mission_AddCount(const class FString& _task_id, int32 _idx, int32 _slot, int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Mission_AddCount");

	Params::StigmaCheatManager_Spt_Mission_AddCount Parms{};

	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._slot = _slot;
	Parms._count = _count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Mission_Change
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           _task_id                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Mission_Change(const class FString& _task_id, int32 _idx, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Mission_Change");

	Params::StigmaCheatManager_Spt_Mission_Change Parms{};

	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Mission_Clear
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           _task_id                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Mission_Clear(const class FString& _task_id, int32 _idx, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Mission_Clear");

	Params::StigmaCheatManager_Spt_Mission_Clear Parms{};

	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Mission_Success
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           _task_id                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Mission_Success(const class FString& _task_id, int32 _idx, int32 _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Mission_Success");

	Params::StigmaCheatManager_Spt_Mission_Success Parms{};

	Parms._task_id = std::move(_task_id);
	Parms._idx = _idx;
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_PassiveSkill
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _skill_id                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_PassiveSkill(class ACharaBase* _target_chara, int32 _skill_id, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_PassiveSkill");

	Params::StigmaCheatManager_Spt_PassiveSkill Parms{};

	Parms._target_chara = _target_chara;
	Parms._skill_id = _skill_id;
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_RespawnChara
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_RespawnChara(class ACharaBase* _target_chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_RespawnChara");

	Params::StigmaCheatManager_Spt_RespawnChara Parms{};

	Parms._target_chara = _target_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Sanctum
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    _on                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Sanctum(bool _on)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Sanctum");

	Params::StigmaCheatManager_Spt_Sanctum Parms{};

	Parms._on = _on;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_SetBounty
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _bounty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_SetBounty(class ACharaBase* _target_chara, int32 _bounty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_SetBounty");

	Params::StigmaCheatManager_Spt_SetBounty Parms{};

	Parms._target_chara = _target_chara;
	Parms._bounty = _bounty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_SetInvincible
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_SetInvincible(class ACharaBase* _target_chara, bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_SetInvincible");

	Params::StigmaCheatManager_Spt_SetInvincible Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Show_Popup_CompetitionReward
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _Rank                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Show_Popup_CompetitionReward(int32 _Rank, float _point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Show_Popup_CompetitionReward");

	Params::StigmaCheatManager_Spt_Show_Popup_CompetitionReward Parms{};

	Parms._Rank = _Rank;
	Parms._point = _point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Show_Popup_SeasonReward
// (Final, Exec, Native, Public)
// Parameters:
// ETier                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Rank                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Show_Popup_SeasonReward(ETier _tier, int32 _Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Show_Popup_SeasonReward");

	Params::StigmaCheatManager_Spt_Show_Popup_SeasonReward Parms{};

	Parms._tier = _tier;
	Parms._Rank = _Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Show_Popup_TierPromotion
// (Final, Exec, Native, Public)
// Parameters:
// ETier                                   _previous_tier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETier                                   _current_tier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Show_Popup_TierPromotion(ETier _previous_tier, ETier _current_tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Show_Popup_TierPromotion");

	Params::StigmaCheatManager_Spt_Show_Popup_TierPromotion Parms{};

	Parms._previous_tier = _previous_tier;
	Parms._current_tier = _current_tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ShowAimDistance
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ShowAimDistance(class ACharaBase* _target_chara, bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ShowAimDistance");

	Params::StigmaCheatManager_Spt_ShowAimDistance Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ShowDamage
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDebug_DamageViewerType                 _damage_viewer_type                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ShowDamage(class ACharaBase* _target_chara, bool _is_activated, EDebug_DamageViewerType _damage_viewer_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ShowDamage");

	Params::StigmaCheatManager_Spt_ShowDamage Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_activated = _is_activated;
	Parms._damage_viewer_type = _damage_viewer_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ShowDebugUI
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ShowDebugUI(class ACharaBase* _target_chara, int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ShowDebugUI");

	Params::StigmaCheatManager_Spt_ShowDebugUI Parms{};

	Parms._target_chara = _target_chara;
	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ShowEachHUD
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_visible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ShowEachHUD(class ACharaBase* _target_chara, const class FString& Key, bool _is_visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ShowEachHUD");

	Params::StigmaCheatManager_Spt_ShowEachHUD Parms{};

	Parms._target_chara = _target_chara;
	Parms.Key = std::move(Key);
	Parms._is_visible = _is_visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ShowHUD
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_visible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ShowHUD(class ACharaBase* _target_chara, bool _is_visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ShowHUD");

	Params::StigmaCheatManager_Spt_ShowHUD Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_visible = _is_visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_ShowMeTheMoney
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Money                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_ShowMeTheMoney(class ACharaBase* _target_chara, int32 _Money)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_ShowMeTheMoney");

	Params::StigmaCheatManager_Spt_ShowMeTheMoney Parms{};

	Parms._target_chara = _target_chara;
	Parms._Money = _Money;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Slomo
// (Final, Exec, Native, Public)
// Parameters:
// float                                   _Key                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Slomo(float _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Slomo");

	Params::StigmaCheatManager_Spt_Slomo Parms{};

	Parms._Key = _Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_SpawnAIChara
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _row_name                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_SpawnAIChara(class ACharaBase* _target_chara, const class FString& _row_name, ETeams _Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_SpawnAIChara");

	Params::StigmaCheatManager_Spt_SpawnAIChara Parms{};

	Parms._target_chara = _target_chara;
	Parms._row_name = std::move(_row_name);
	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_StartWelcome
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _scenario                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_StartWelcome(int32 _scenario)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_StartWelcome");

	Params::StigmaCheatManager_Spt_StartWelcome Parms{};

	Parms._scenario = _scenario;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_StaticCamera
// (Final, Exec, Native, Public)
// Parameters:
// class ACharaBase*                       _target_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_StaticCamera(class ACharaBase* _target_chara, bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_StaticCamera");

	Params::StigmaCheatManager_Spt_StaticCamera Parms{};

	Parms._target_chara = _target_chara;
	Parms._is_activated = _is_activated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_TierPoint_Add
// (Final, Exec, Native, Public)
// Parameters:
// float                                   _tier_point                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_TierPoint_Add(float _tier_point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_TierPoint_Add");

	Params::StigmaCheatManager_Spt_TierPoint_Add Parms{};

	Parms._tier_point = _tier_point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Toggle_Mute
// (Final, Exec, Native, Public)

void UStigmaCheatManager::Spt_Toggle_Mute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Toggle_Mute");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaCheatManager.Spt_Tutorial
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   _tutorial                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaCheatManager::Spt_Tutorial(int32 _tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaCheatManager", "Spt_Tutorial");

	Params::StigmaCheatManager_Spt_Tutorial Parms{};

	Parms._tutorial = _tutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BodyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ProfileName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearNotFound                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaPhysicalAnimationComponent::ApplyPhysicalAnimationProfileBelow(class FName BodyName, class FName ProfileName, bool bIncludeSelf, bool bClearNotFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPhysicalAnimationComponent", "ApplyPhysicalAnimationProfileBelow");

	Params::StigmaPhysicalAnimationComponent_ApplyPhysicalAnimationProfileBelow Parms{};

	Parms.BodyName = BodyName;
	Parms.ProfileName = ProfileName;
	Parms.bIncludeSelf = bIncludeSelf;
	Parms.bClearNotFound = bClearNotFound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPhysicalAnimationComponent.ApplyPhysicalAnimationSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BodyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPhysicalAnimationData           PhysicalAnimationData                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UStigmaPhysicalAnimationComponent::ApplyPhysicalAnimationSettings(class FName BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPhysicalAnimationComponent", "ApplyPhysicalAnimationSettings");

	Params::StigmaPhysicalAnimationComponent_ApplyPhysicalAnimationSettings Parms{};

	Parms.BodyName = BodyName;
	Parms.PhysicalAnimationData = std::move(PhysicalAnimationData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BodyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPhysicalAnimationData           PhysicalAnimationData                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIncludeSelf                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaPhysicalAnimationComponent::ApplyPhysicalAnimationSettingsBelow(class FName BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData, bool bIncludeSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPhysicalAnimationComponent", "ApplyPhysicalAnimationSettingsBelow");

	Params::StigmaPhysicalAnimationComponent_ApplyPhysicalAnimationSettingsBelow Parms{};

	Parms.BodyName = BodyName;
	Parms.PhysicalAnimationData = std::move(PhysicalAnimationData);
	Parms.bIncludeSelf = bIncludeSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPhysicalAnimationComponent.SetSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           InSkeletalMeshComponent                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaPhysicalAnimationComponent::SetSkeletalMeshComponent(class USkeletalMeshComponent* InSkeletalMeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPhysicalAnimationComponent", "SetSkeletalMeshComponent");

	Params::StigmaPhysicalAnimationComponent_SetSkeletalMeshComponent Parms{};

	Parms.InSkeletalMeshComponent = InSkeletalMeshComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPhysicalAnimationComponent.SetStrengthMultiplyer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InStrengthMultiplyer                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStigmaPhysicalAnimationComponent::SetStrengthMultiplyer(float InStrengthMultiplyer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPhysicalAnimationComponent", "SetStrengthMultiplyer");

	Params::StigmaPhysicalAnimationComponent_SetStrengthMultiplyer Parms{};

	Parms.InStrengthMultiplyer = InStrengthMultiplyer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.StigmaPhysicalAnimationComponent.GetBodyTargetTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BodyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UStigmaPhysicalAnimationComponent::GetBodyTargetTransform(class FName BodyName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StigmaPhysicalAnimationComponent", "GetBodyTargetTransform");

	Params::StigmaPhysicalAnimationComponent_GetBodyTargetTransform Parms{};

	Parms.BodyName = BodyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.SupplyStore.SERVER_RequestPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _requester                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASupplyStore::SERVER_RequestPurchase(class ACharaBase* _requester, int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyStore", "SERVER_RequestPurchase");

	Params::SupplyStore_SERVER_RequestPurchase Parms{};

	Parms._requester = _requester;
	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.SupplyStore.SupplyFX
// (Final, Native, Public, BlueprintCallable)

void ASupplyStore::SupplyFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SupplyStore", "SupplyFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TableCache.FilterGunMainEntries
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _handy                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _balance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _power                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _include_developing                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGunEntry_Main>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGunEntry_Main> UTableCache::FilterGunMainEntries(bool _handy, bool _balance, bool _power, bool _include_developing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "FilterGunMainEntries");

	Params::TableCache_FilterGunMainEntries Parms{};

	Parms._handy = _handy;
	Parms._balance = _balance;
	Parms._power = _power;
	Parms._include_developing = _include_developing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.FindAllGunMainEntries
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunSearchGroup                         _group                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGunEntry_Main>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGunEntry_Main> UTableCache::FindAllGunMainEntries(EGunSearchGroup _group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "FindAllGunMainEntries");

	Params::TableCache_FindAllGunMainEntries Parms{};

	Parms._group = _group;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.FindAllRadioChatDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERadioChatCategory                      _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FConfig_RadioChat>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FConfig_RadioChat> UTableCache::FindAllRadioChatDefines(ERadioChatCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "FindAllRadioChatDefines");

	Params::TableCache_FindAllRadioChatDefines Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.FindBattleStoreEntryByIDAndMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBattleStoreEntry                _out_entry                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::FindBattleStoreEntryByIDAndMode(struct FBattleStoreEntry* _out_entry, const struct FItemID& _id, EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "FindBattleStoreEntryByIDAndMode");

	Params::TableCache_FindBattleStoreEntryByIDAndMode Parms{};

	Parms._id = std::move(_id);
	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_entry != nullptr)
		*_out_entry = std::move(Parms._out_entry);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.FindBodyDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EArmorType                              _Armor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPartsEntry_Body           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPartsEntry_Body UTableCache::FindBodyDefine(ECharaType _chara_type, EArmorType _Armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "FindBodyDefine");

	Params::TableCache_FindBodyDefine Parms{};

	Parms._chara_type = _chara_type;
	Parms._Armor = _Armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetActionGraph
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FActionGraphID                   _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActionGraphEntry                _out_entry                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetActionGraph(const struct FActionGraphID& _id, struct FActionGraphEntry* _out_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetActionGraph");

	Params::TableCache_GetActionGraph Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_entry != nullptr)
		*_out_entry = std::move(Parms._out_entry);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllActionGraphs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FActionGraphEntry>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FActionGraphEntry> UTableCache::GetAllActionGraphs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllActionGraphs");

	Params::TableCache_GetAllActionGraphs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllActionGraphsByType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EActionType                             _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FActionGraphEntry>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FActionGraphEntry> UTableCache::GetAllActionGraphsByType(EActionType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllActionGraphsByType");

	Params::TableCache_GetAllActionGraphsByType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllBodies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemEntry>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FItemEntry> UTableCache::GetAllBodies(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllBodies");

	Params::TableCache_GetAllBodies Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllBoosterDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FConfig_Booster>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FConfig_Booster> UTableCache::GetAllBoosterDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllBoosterDefines");

	Params::TableCache_GetAllBoosterDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllCharacterDefineByFightingStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFightingStyle                          _style                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _include_upcoming                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FCharacterDefine>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCharacterDefine> UTableCache::GetAllCharacterDefineByFightingStyle(EFightingStyle _style, bool _include_upcoming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllCharacterDefineByFightingStyle");

	Params::TableCache_GetAllCharacterDefineByFightingStyle Parms{};

	Parms._style = _style;
	Parms._include_upcoming = _include_upcoming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllCharacterDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCharacterDefine>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCharacterDefine> UTableCache::GetAllCharacterDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllCharacterDefines");

	Params::TableCache_GetAllCharacterDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllCharacterDefineSortedByFightingStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _include_upcoming                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FCharacterDefine>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCharacterDefine> UTableCache::GetAllCharacterDefineSortedByFightingStyle(bool _include_upcoming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllCharacterDefineSortedByFightingStyle");

	Params::TableCache_GetAllCharacterDefineSortedByFightingStyle Parms{};

	Parms._include_upcoming = _include_upcoming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllCurrencyDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCurrencyDef>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FCurrencyDef> UTableCache::GetAllCurrencyDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllCurrencyDefines");

	Params::TableCache_GetAllCurrencyDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllGoodsDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FConfig_Goods>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FConfig_Goods> UTableCache::GetAllGoodsDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllGoodsDefines");

	Params::TableCache_GetAllGoodsDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllGunMainEntries
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FGunEntry_Main>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGunEntry_Main> UTableCache::GetAllGunMainEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllGunMainEntries");

	Params::TableCache_GetAllGunMainEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllHeads
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemEntry>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FItemEntry> UTableCache::GetAllHeads(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllHeads");

	Params::TableCache_GetAllHeads Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllInputActionDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInputActionDefine>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInputActionDefine> UTableCache::GetAllInputActionDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllInputActionDefines");

	Params::TableCache_GetAllInputActionDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllMaps
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FMapEntry>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMapEntry> UTableCache::GetAllMaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllMaps");

	Params::TableCache_GetAllMaps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllMapsForGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMapEntry>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FMapEntry> UTableCache::GetAllMapsForGameMode(EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllMapsForGameMode");

	Params::TableCache_GetAllMapsForGameMode Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllMissionDefines
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EMissionType                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMissionDefine>           _out_list                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    _include_platform_mission                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTableCache::GetAllMissionDefines(EMissionType _type, TArray<struct FMissionDefine>* _out_list, bool _include_platform_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllMissionDefines");

	Params::TableCache_GetAllMissionDefines Parms{};

	Parms._type = _type;
	Parms._include_platform_mission = _include_platform_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_list != nullptr)
		*_out_list = std::move(Parms._out_list);
}


// Function Stigma.TableCache.GetAllPassiveSkillDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPassiveSkillEntry>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FPassiveSkillEntry> UTableCache::GetAllPassiveSkillDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllPassiveSkillDefines");

	Params::TableCache_GetAllPassiveSkillDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllPingDefines
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FConfig_Ping>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FConfig_Ping> UTableCache::GetAllPingDefines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllPingDefines");

	Params::TableCache_GetAllPingDefines Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllRadioChatCategories
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<ERadioChatCategory>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ERadioChatCategory> UTableCache::GetAllRadioChatCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllRadioChatCategories");

	Params::TableCache_GetAllRadioChatCategories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllRandomBoxesDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FConfig_RandomBox>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FConfig_RandomBox> UTableCache::GetAllRandomBoxesDefine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllRandomBoxesDefine");

	Params::TableCache_GetAllRandomBoxesDefine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllSeasonEntries
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FConfig_Season>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FConfig_Season> UTableCache::GetAllSeasonEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllSeasonEntries");

	Params::TableCache_GetAllSeasonEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllTierGroups
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const TArray<ETierGroup>                ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<ETierGroup> UTableCache::GetAllTierGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllTierGroups");

	Params::TableCache_GetAllTierGroups Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAllyColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTableCache::GetAllyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAllyColor");

	Params::TableCache_GetAllyColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetArmorDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EArmorType                              _Armor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Armor              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Armor UTableCache::GetArmorDefine(EArmorType _Armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetArmorDefine");

	Params::TableCache_GetArmorDefine Parms{};

	Parms._Armor = _Armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetArmorDisplayStats
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FDisplayStat>             _out_display_stats                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EArmorType                              _Armor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetArmorDisplayStats(TArray<struct FDisplayStat>* _out_display_stats, EArmorType _Armor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetArmorDisplayStats");

	Params::TableCache_GetArmorDisplayStats Parms{};

	Parms._Armor = _Armor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_display_stats != nullptr)
		*_out_display_stats = std::move(Parms._out_display_stats);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetArmorType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Armor                    _armor_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EArmorType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EArmorType UTableCache::GetArmorType(const struct FItemID_Armor& _armor_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetArmorType");

	Params::TableCache_GetArmorType Parms{};

	Parms._armor_id = std::move(_armor_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetAttackTypeDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAttackType                             _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAttackTypeDefine          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FAttackTypeDefine UTableCache::GetAttackTypeDefine(EAttackType _point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetAttackTypeDefine");

	Params::TableCache_GetAttackTypeDefine Parms{};

	Parms._point = _point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBasicPackage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FConfig_BasicPackage       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_BasicPackage UTableCache::GetBasicPackage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBasicPackage");

	Params::TableCache_GetBasicPackage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBattlePassDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _battle_pass_id                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBattlePassDefine          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBattlePassDefine UTableCache::GetBattlePassDefineByID(const struct FItemID_BattlePass& _battle_pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBattlePassDefineByID");

	Params::TableCache_GetBattlePassDefineByID Parms{};

	Parms._battle_pass_id = std::move(_battle_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBattlePassLevelConfigs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _battle_pass_id                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FBattlePassLevelConfig>_out_configs                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTableCache::GetBattlePassLevelConfigs(const struct FItemID_BattlePass& _battle_pass_id, TMap<int32, struct FBattlePassLevelConfig>* _out_configs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBattlePassLevelConfigs");

	Params::TableCache_GetBattlePassLevelConfigs Parms{};

	Parms._battle_pass_id = std::move(_battle_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_configs != nullptr)
		*_out_configs = std::move(Parms._out_configs);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBattlePassMissionConfigs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_BattlePass               _battle_pass_id                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FBattlePassMissionConfig>_out_configs                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTableCache::GetBattlePassMissionConfigs(const struct FItemID_BattlePass& _battle_pass_id, TMap<int32, struct FBattlePassMissionConfig>* _out_configs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBattlePassMissionConfigs");

	Params::TableCache_GetBattlePassMissionConfigs Parms{};

	Parms._battle_pass_id = std::move(_battle_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_configs != nullptr)
		*_out_configs = std::move(Parms._out_configs);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBattleStoreEntries
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FBattleStoreEntry>        _out_entries                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTableCache::GetBattleStoreEntries(TArray<struct FBattleStoreEntry>* _out_entries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBattleStoreEntries");

	Params::TableCache_GetBattleStoreEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_entries != nullptr)
		*_out_entries = std::move(Parms._out_entries);
}


// Function Stigma.TableCache.GetBattleStoreEntriesByMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FBattleStoreEntry>        _out_entries                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTableCache::GetBattleStoreEntriesByMode(TArray<struct FBattleStoreEntry>* _out_entries, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBattleStoreEntriesByMode");

	Params::TableCache_GetBattleStoreEntriesByMode Parms{};

	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_entries != nullptr)
		*_out_entries = std::move(Parms._out_entries);
}


// Function Stigma.TableCache.GetBodyDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Skin_Body                _body_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPartsEntry_Body           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPartsEntry_Body UTableCache::GetBodyDefine(const struct FItemID_Skin_Body& _body_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBodyDefine");

	Params::TableCache_GetBodyDefine Parms{};

	Parms._body_id = std::move(_body_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBodyPartDefine
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// EBodyParts                              _part                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBodyPartDefine            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBodyPartDefine UTableCache::GetBodyPartDefine(EBodyParts _part)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBodyPartDefine");

	Params::TableCache_GetBodyPartDefine Parms{};

	Parms._part = _part;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBoosterDefineByID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Booster                  _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Booster            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Booster UTableCache::GetBoosterDefineByID(const struct FItemID_Booster& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBoosterDefineByID");

	Params::TableCache_GetBoosterDefineByID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBoosterSlotActivatingLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTableCache::GetBoosterSlotActivatingLevel(int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBoosterSlotActivatingLevel");

	Params::TableCache_GetBoosterSlotActivatingLevel Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBulletCaliber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBulletType                             _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBulletTip                              _tip                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBulletCaliberDefine       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBulletCaliberDefine UTableCache::GetBulletCaliber(EBulletType _type, EBulletTip _tip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBulletCaliber");

	Params::TableCache_GetBulletCaliber Parms{};

	Parms._type = _type;
	Parms._tip = _tip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetBulletTipDefineByType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBulletTip                              _tip                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBulletTipDefine           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FBulletTipDefine UTableCache::GetBulletTipDefineByType(EBulletTip _tip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetBulletTipDefineByType");

	Params::TableCache_GetBulletTipDefineByType Parms{};

	Parms._tip = _tip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCharacterDefByName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _str                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterDefine                 _out_date                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetCharacterDefByName(const class FString& _str, struct FCharacterDefine* _out_date)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCharacterDefByName");

	Params::TableCache_GetCharacterDefByName Parms{};

	Parms._str = std::move(_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_date != nullptr)
		*_out_date = std::move(Parms._out_date);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCharacterDefByType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterDefine                 _out_data                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetCharacterDefByType(ECharaType _type, struct FCharacterDefine* _out_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCharacterDefByType");

	Params::TableCache_GetCharacterDefByType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_data != nullptr)
		*_out_data = std::move(Parms._out_data);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCommonStyleConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FConfig_CommonStyle        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_CommonStyle UTableCache::GetCommonStyleConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCommonStyleConfig");

	Params::TableCache_GetCommonStyleConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCompetitionGroupDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_GroupCompetition   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_GroupCompetition UTableCache::GetCompetitionGroupDefine(ECompetitionType _competition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCompetitionGroupDefine");

	Params::TableCache_GetCompetitionGroupDefine Parms{};

	Parms._competition_type = _competition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCompetitionRankReward
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Rank                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGroupCompetitionReward    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGroupCompetitionReward UTableCache::GetCompetitionRankReward(ECompetitionType _competition_type, int32 _Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCompetitionRankReward");

	Params::TableCache_GetCompetitionRankReward Parms{};

	Parms._competition_type = _competition_type;
	Parms._Rank = _Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCompetitionRewardDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECompetitionType                        _competition_type                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_GroupCompetitionRewardsReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_GroupCompetitionRewards UTableCache::GetCompetitionRewardDefine(ECompetitionType _competition_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCompetitionRewardDefine");

	Params::TableCache_GetCompetitionRewardDefine Parms{};

	Parms._competition_type = _competition_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCrossHairColors
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FLinearColor>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLinearColor> UTableCache::GetCrossHairColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCrossHairColors");

	Params::TableCache_GetCrossHairColors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCrossHairOutlineColors
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FLinearColor>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLinearColor> UTableCache::GetCrossHairOutlineColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCrossHairOutlineColors");

	Params::TableCache_GetCrossHairOutlineColors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCurrencyDefine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECurrencyTypes                          _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCurrencyDef                     _out_def                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetCurrencyDefine(ECurrencyTypes _type, struct FCurrencyDef* _out_def)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCurrencyDefine");

	Params::TableCache_GetCurrencyDefine Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_def != nullptr)
		*_out_def = std::move(Parms._out_def);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetCurrencyDefineFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Currency                 _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCurrencyDef                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCurrencyDef UTableCache::GetCurrencyDefineFromID(const struct FItemID_Currency& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetCurrencyDefineFromID");

	Params::TableCache_GetCurrencyDefineFromID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetDefaultCharacterInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _random                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCharacterInfo UTableCache::GetDefaultCharacterInfo(ECharaType _type, bool _random)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetDefaultCharacterInfo");

	Params::TableCache_GetDefaultCharacterInfo Parms{};

	Parms._type = _type;
	Parms._random = _random;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEmblemDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Emblem             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Emblem UTableCache::GetEmblemDefine(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEmblemDefine");

	Params::TableCache_GetEmblemDefine Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEmoticonDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Emoticon           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Emoticon UTableCache::GetEmoticonDefine(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEmoticonDefine");

	Params::TableCache_GetEmoticonDefine Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEnemyColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTableCache::GetEnemyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEnemyColor");

	Params::TableCache_GetEnemyColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEntriesByCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FItemEntry>               _item_array                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTableCache::GetEntriesByCategory(TArray<struct FItemEntry>* _item_array, EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEntriesByCategory");

	Params::TableCache_GetEntriesByCategory Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_item_array != nullptr)
		*_item_array = std::move(Parms._item_array);
}


// Function Stigma.TableCache.GetEntriesBySubCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FItemEntry>               _item_array                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _sub_category_type                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTableCache::GetEntriesBySubCategory(TArray<struct FItemEntry>* _item_array, EItemCategory _category, int32 _sub_category_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEntriesBySubCategory");

	Params::TableCache_GetEntriesBySubCategory Parms{};

	Parms._category = _category;
	Parms._sub_category_type = _sub_category_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_item_array != nullptr)
		*_item_array = std::move(Parms._item_array);
}


// Function Stigma.TableCache.GetEventAttendanceDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventAttendanceDefine     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventAttendanceDefine UTableCache::GetEventAttendanceDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventAttendanceDefineByID");

	Params::TableCache_GetEventAttendanceDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventCollectionDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventCollectionDefine     ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventCollectionDefine UTableCache::GetEventCollectionDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventCollectionDefineByID");

	Params::TableCache_GetEventCollectionDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventKeepConnectDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventKeepConnectDefine    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventKeepConnectDefine UTableCache::GetEventKeepConnectDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventKeepConnectDefineByID");

	Params::TableCache_GetEventKeepConnectDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventMasterMissionDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventMasterMissionDefine  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventMasterMissionDefine UTableCache::GetEventMasterMissionDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventMasterMissionDefineByID");

	Params::TableCache_GetEventMasterMissionDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventMasterMissionDefineByType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventMasterMissionDefine  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventMasterMissionDefine UTableCache::GetEventMasterMissionDefineByType(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventMasterMissionDefineByType");

	Params::TableCache_GetEventMasterMissionDefineByType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventMissionDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventMissionDefine        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventMissionDefine UTableCache::GetEventMissionDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventMissionDefineByID");

	Params::TableCache_GetEventMissionDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventPageDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventPageDefine           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventPageDefine UTableCache::GetEventPageDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventPageDefineByID");

	Params::TableCache_GetEventPageDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetEventTrackMissionDefineByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FEventTrackMissionDefine   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FEventTrackMissionDefine UTableCache::GetEventTrackMissionDefineByID(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetEventTrackMissionDefineByID");

	Params::TableCache_GetEventTrackMissionDefineByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetExpDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EExpType                                _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_Exp                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FConfig_Exp UTableCache::GetExpDefine(EExpType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetExpDefine");

	Params::TableCache_GetExpDefine Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetFightingStyleDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFightingStyle                          _style                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FFightingStyleDefine       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FFightingStyleDefine UTableCache::GetFightingStyleDefine(EFightingStyle _style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetFightingStyleDefine");

	Params::TableCache_GetFightingStyleDefine Parms{};

	Parms._style = _style;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetFightingStyleFromCharaType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFightingStyle                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFightingStyle UTableCache::GetFightingStyleFromCharaType(const ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetFightingStyleFromCharaType");

	Params::TableCache_GetFightingStyleFromCharaType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetFirstMissionOf
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UTableCache::GetFirstMissionOf(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetFirstMissionOf");

	Params::TableCache_GetFirstMissionOf Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetFunctionDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Function           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Function UTableCache::GetFunctionDefine(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetFunctionDefine");

	Params::TableCache_GetFunctionDefine Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGameConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FConfig_Game               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Game UTableCache::GetGameConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGameConfig");

	Params::TableCache_GetGameConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGameModeEntry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMode                      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMode UTableCache::GetGameModeEntry(EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGameModeEntry");

	Params::TableCache_GetGameModeEntry Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGameNotify
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             _name_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGameNotifyDefine          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameNotifyDefine UTableCache::GetGameNotify(const class FName& _name_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGameNotify");

	Params::TableCache_GetGameNotify Parms{};

	Parms._name_id = _name_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGearBodyParts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBodyParts                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBodyParts UTableCache::GetGearBodyParts(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGearBodyParts");

	Params::TableCache_GetGearBodyParts Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGearDisplayStats
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FDisplayStat>             _out_display_stats                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetGearDisplayStats(TArray<struct FDisplayStat>* _out_display_stats, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGearDisplayStats");

	Params::TableCache_GetGearDisplayStats Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_display_stats != nullptr)
		*_out_display_stats = std::move(Parms._out_display_stats);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGoodsDefineByID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGoodsID                         _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Goods              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Goods UTableCache::GetGoodsDefineByID(const struct FGoodsID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGoodsDefineByID");

	Params::TableCache_GetGoodsDefineByID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGradeDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemGrade                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGradeDef                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGradeDef UTableCache::GetGradeDefine(EItemGrade _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGradeDefine");

	Params::TableCache_GetGradeDefine Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunBodyEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Body                 _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Body             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Body UTableCache::GetGunBodyEntry(const struct FItemID_Gun_Body& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunBodyEntry");

	Params::TableCache_GetGunBodyEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunCharmEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Charm                _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Charm            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Charm UTableCache::GetGunCharmEntry(const struct FItemID_Gun_Charm& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunCharmEntry");

	Params::TableCache_GetGunCharmEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunFrontEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Front                _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Front            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Front UTableCache::GetGunFrontEntry(const struct FItemID_Gun_Front& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunFrontEntry");

	Params::TableCache_GetGunFrontEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunLists
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EGunType>                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EGunType> UTableCache::GetGunLists(class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunLists");

	Params::TableCache_GetGunLists Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunMagazineEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Magazine             _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Magazine         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Magazine UTableCache::GetGunMagazineEntry(const struct FItemID_Gun_Magazine& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunMagazineEntry");

	Params::TableCache_GetGunMagazineEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunMainEntry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Main             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Main UTableCache::GetGunMainEntry(EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunMainEntry");

	Params::TableCache_GetGunMainEntry Parms{};

	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunSightEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Sight                _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Sight            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Sight UTableCache::GetGunSightEntry(const struct FItemID_Gun_Sight& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunSightEntry");

	Params::TableCache_GetGunSightEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunSlideEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Slide                _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Slide            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Slide UTableCache::GetGunSlideEntry(const struct FItemID_Gun_Slide& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunSlideEntry");

	Params::TableCache_GetGunSlideEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetGunStickerEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Gun_Sticker              _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunEntry_Sticker          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunEntry_Sticker UTableCache::GetGunStickerEntry(const struct FItemID_Gun_Sticker& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetGunStickerEntry");

	Params::TableCache_GetGunStickerEntry Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetHeadDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Skin_Head                _head_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPartsEntry_Head           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPartsEntry_Head UTableCache::GetHeadDefine(const struct FItemID_Skin_Head& _head_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetHeadDefine");

	Params::TableCache_GetHeadDefine Parms{};

	Parms._head_id = std::move(_head_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetHitEffects
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitEffect                       _out_hit_effects                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// EAttackType                             _attack_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESurfaceMaterialType                    _surface_material_type                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBodyParts                              _body_parts                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBulletEffectScaleType                  _effect_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetHitEffects(struct FHitEffect* _out_hit_effects, EAttackType _attack_type, ESurfaceMaterialType _surface_material_type, EBodyParts _body_parts, EBulletEffectScaleType _effect_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetHitEffects");

	Params::TableCache_GetHitEffects Parms{};

	Parms._attack_type = _attack_type;
	Parms._surface_material_type = _surface_material_type;
	Parms._body_parts = _body_parts;
	Parms._effect_type = _effect_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_hit_effects != nullptr)
		*_out_hit_effects = std::move(Parms._out_hit_effects);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetInputActionDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputAction                            _input_action                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInputActionDefine         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FInputActionDefine UTableCache::GetInputActionDefine(EInputAction _input_action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetInputActionDefine");

	Params::TableCache_GetInputActionDefine Parms{};

	Parms._input_action = _input_action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetItemCategoryDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_ItemCategory       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_ItemCategory UTableCache::GetItemCategoryDefine(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetItemCategoryDefine");

	Params::TableCache_GetItemCategoryDefine Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetItemEntriesByFilter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemEntry>               _out_entries                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FItemFilterInfo                  _filter_info                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetItemEntriesByFilter(class UObject* _world_ctx, TArray<struct FItemEntry>* _out_entries, const struct FItemFilterInfo& _filter_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetItemEntriesByFilter");

	Params::TableCache_GetItemEntriesByFilter Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._filter_info = std::move(_filter_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_entries != nullptr)
		*_out_entries = std::move(Parms._out_entries);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetKillStreakDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EKillStreak                             _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKillStreakDefine          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FKillStreakDefine UTableCache::GetKillStreakDefine(EKillStreak _point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetKillStreakDefine");

	Params::TableCache_GetKillStreakDefine Parms{};

	Parms._point = _point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetLevelDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FLevelEntry                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FLevelEntry UTableCache::GetLevelDefine(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetLevelDefine");

	Params::TableCache_GetLevelDefine Parms{};

	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetLowTierGroupDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETierGroup                              _tier_group                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Tier               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Tier UTableCache::GetLowTierGroupDefine(ETierGroup _tier_group)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetLowTierGroupDefine");

	Params::TableCache_GetLowTierGroupDefine Parms{};

	Parms._tier_group = _tier_group;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMapEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             _map_name                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMapEntry                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FMapEntry UTableCache::GetMapEntry(const class FName& _map_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMapEntry");

	Params::TableCache_GetMapEntry Parms{};

	Parms._map_name = _map_name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMasterLevelConfigsByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FMasterLevelConfig>  _out_configs                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTableCache::GetMasterLevelConfigsByID(const struct FItemID_EventPage& _event_page_id, TMap<int32, struct FMasterLevelConfig>* _out_configs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMasterLevelConfigsByID");

	Params::TableCache_GetMasterLevelConfigsByID Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_configs != nullptr)
		*_out_configs = std::move(Parms._out_configs);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMasterLevelConfigsByType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FMasterLevelConfig>  _out_configs                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTableCache::GetMasterLevelConfigsByType(ECharaType _type, TMap<int32, struct FMasterLevelConfig>* _out_configs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMasterLevelConfigsByType");

	Params::TableCache_GetMasterLevelConfigsByType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_configs != nullptr)
		*_out_configs = std::move(Parms._out_configs);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMaxLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTableCache::GetMaxLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMaxLevel");

	Params::TableCache_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMeleeAttackPointDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMeleeAttackPoint                       _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMeleeAttackPointDefine    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMeleeAttackPointDefine UTableCache::GetMeleeAttackPointDefine(EMeleeAttackPoint _point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMeleeAttackPointDefine");

	Params::TableCache_GetMeleeAttackPointDefine Parms{};

	Parms._point = _point;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMissionDefineByID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Mission                  _misison_id                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMissionDefine             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FMissionDefine UTableCache::GetMissionDefineByID(const struct FItemID_Mission& _misison_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMissionDefineByID");

	Params::TableCache_GetMissionDefineByID Parms{};

	Parms._misison_id = std::move(_misison_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetMyColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTableCache::GetMyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetMyColor");

	Params::TableCache_GetMyColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetNicknameFXDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_NicknameFX         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_NicknameFX UTableCache::GetNicknameFXDefine(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetNicknameFXDefine");

	Params::TableCache_GetNicknameFXDefine Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetNonItemEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             _name_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNonItemEntry                    _out_non_item_entry                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetNonItemEntry(const class FName& _name_id, struct FNonItemEntry* _out_non_item_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetNonItemEntry");

	Params::TableCache_GetNonItemEntry Parms{};

	Parms._name_id = _name_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_non_item_entry != nullptr)
		*_out_non_item_entry = std::move(Parms._out_non_item_entry);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetOrganizationDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOrganization                           _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOrganizationDefine        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FOrganizationDefine UTableCache::GetOrganizationDefine(EOrganization _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetOrganizationDefine");

	Params::TableCache_GetOrganizationDefine Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetOrganizationFromCharaType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrganization                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrganization UTableCache::GetOrganizationFromCharaType(const ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetOrganizationFromCharaType");

	Params::TableCache_GetOrganizationFromCharaType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetPartyColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTableCache::GetPartyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetPartyColor");

	Params::TableCache_GetPartyColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetPassiveSkillDefineByID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPassiveSkillID                  _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FPassiveSkillEntry         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPassiveSkillEntry UTableCache::GetPassiveSkillDefineByID(const struct FPassiveSkillID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetPassiveSkillDefineByID");

	Params::TableCache_GetPassiveSkillDefineByID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetPassiveSkillSlotActivatingLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _slot_zidx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTableCache::GetPassiveSkillSlotActivatingLevel(int32 _slot_zidx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetPassiveSkillSlotActivatingLevel");

	Params::TableCache_GetPassiveSkillSlotActivatingLevel Parms{};

	Parms._slot_zidx = _slot_zidx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetPingDefine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EBattlePingType                         _ping_type                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_Ping                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FConfig_Ping UTableCache::GetPingDefine(const EBattlePingType& _ping_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetPingDefine");

	Params::TableCache_GetPingDefine Parms{};

	Parms._ping_type = _ping_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetProfileCardDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_ProfileCard        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_ProfileCard UTableCache::GetProfileCardDefine(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetProfileCardDefine");

	Params::TableCache_GetProfileCardDefine Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetRadioChatDefine
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ERadioChatCategory                      _category                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _order                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_RadioChat                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FConfig_RadioChat UTableCache::GetRadioChatDefine(const ERadioChatCategory& _category, const int32 _order)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetRadioChatDefine");

	Params::TableCache_GetRadioChatDefine Parms{};

	Parms._category = _category;
	Parms._order = _order;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetRandomBoxDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_RandomBox                _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_RandomBox          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_RandomBox UTableCache::GetRandomBoxDefine(const struct FItemID_RandomBox& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetRandomBoxDefine");

	Params::TableCache_GetRandomBoxDefine Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetRandomBoxRewards
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_RandomBox                _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRandomItemEntry>         _out_confirmed                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FRandomItemEntry>         _out_probabilitics                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableCache::GetRandomBoxRewards(const struct FItemID_RandomBox& _id, TArray<struct FRandomItemEntry>* _out_confirmed, TArray<struct FRandomItemEntry>* _out_probabilitics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetRandomBoxRewards");

	Params::TableCache_GetRandomBoxRewards Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_confirmed != nullptr)
		*_out_confirmed = std::move(Parms._out_confirmed);

	if (_out_probabilitics != nullptr)
		*_out_probabilitics = std::move(Parms._out_probabilitics);

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetRecruitDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FRecruitDefine             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FRecruitDefine UTableCache::GetRecruitDefine(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetRecruitDefine");

	Params::TableCache_GetRecruitDefine Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetRegion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _code                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Region             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Region UTableCache::GetRegion(const class FString& _code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetRegion");

	Params::TableCache_GetRegion Parms{};

	Parms._code = std::move(_code);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetSeasonDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSeasonID                        _season_id                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Season             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Season UTableCache::GetSeasonDefine(const struct FSeasonID& _season_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetSeasonDefine");

	Params::TableCache_GetSeasonDefine Parms{};

	Parms._season_id = std::move(_season_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetSeasonRewardByTier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSeasonID                        _season_id                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETier                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSeasonReward              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FSeasonReward UTableCache::GetSeasonRewardByTier(const struct FSeasonID& _season_id, ETier _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetSeasonRewardByTier");

	Params::TableCache_GetSeasonRewardByTier Parms{};

	Parms._season_id = std::move(_season_id);
	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetServiceConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ERunEnv                                 _run_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FServiceDefine             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FServiceDefine UTableCache::GetServiceConfig(ERunEnv _run_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetServiceConfig");

	Params::TableCache_GetServiceConfig Parms{};

	Parms._run_type = _run_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetStackItemDefine
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Stack                    _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Stack              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Stack UTableCache::GetStackItemDefine(const struct FItemID_Stack& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetStackItemDefine");

	Params::TableCache_GetStackItemDefine Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetTeamColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTableCache::GetTeamColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetTeamColor");

	Params::TableCache_GetTeamColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetTeamDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTeamDef                         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTeamDef UTableCache::GetTeamDefine(ETeams _Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetTeamDefine");

	Params::TableCache_GetTeamDefine Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetTierDefine
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETier                                   _tier                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FConfig_Tier               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FConfig_Tier UTableCache::GetTierDefine(ETier _tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetTierDefine");

	Params::TableCache_GetTierDefine Parms{};

	Parms._tier = _tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.GetTooltipWidgetClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETooltipType                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUI_Tooltip>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UUI_Tooltip> UTableCache::GetTooltipWidgetClass(ETooltipType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "GetTooltipWidgetClass");

	Params::TableCache_GetTooltipWidgetClass Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.IsMaxLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTableCache::IsMaxLevel(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "IsMaxLevel");

	Params::TableCache_IsMaxLevel Parms{};

	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TableCache.SaveGameConfig
// (Final, Native, Static, Public, BlueprintCallable)

void UTableCache::SaveGameConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "SaveGameConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TableCache.SetGameConfig_FOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   _FOV                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTableCache::SetGameConfig_FOV(float _FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "SetGameConfig_FOV");

	Params::TableCache_SetGameConfig_FOV Parms{};

	Parms._FOV = _FOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TableCache.SetGunFOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _FOV                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTableCache::SetGunFOV(EGunType _gun_type, float _FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableCache", "SetGunFOV");

	Params::TableCache_SetGunFOV Parms{};

	Parms._gun_type = _gun_type;
	Parms._FOV = _FOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TableEntryBlueprintLibrary.FindGunMainEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGunEntry_Main                   _out_config                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableEntryBlueprintLibrary::FindGunMainEntry(struct FGunEntry_Main* _out_config, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableEntryBlueprintLibrary", "FindGunMainEntry");

	Params::TableEntryBlueprintLibrary_FindGunMainEntry Parms{};

	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_config != nullptr)
		*_out_config = std::move(Parms._out_config);

	return Parms.ReturnValue;
}


// Function Stigma.TableEntryBlueprintLibrary.FindItemIconByItemID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTexture2D*                       Out_texture                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableEntryBlueprintLibrary::FindItemIconByItemID(class UTexture2D** Out_texture, const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableEntryBlueprintLibrary", "FindItemIconByItemID");

	Params::TableEntryBlueprintLibrary_FindItemIconByItemID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_texture != nullptr)
		*Out_texture = Parms.Out_texture;

	return Parms.ReturnValue;
}


// Function Stigma.TableEntryBlueprintLibrary.GetDisplayNameByItemID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             Out_name                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTableEntryBlueprintLibrary::GetDisplayNameByItemID(class FText* Out_name, const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableEntryBlueprintLibrary", "GetDisplayNameByItemID");

	Params::TableEntryBlueprintLibrary_GetDisplayNameByItemID Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Out_name != nullptr)
		*Out_name = std::move(Parms.Out_name);

	return Parms.ReturnValue;
}


// Function Stigma.TableEntryBlueprintLibrary.GetItemEntry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _id                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemEntry                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FItemEntry UTableEntryBlueprintLibrary::GetItemEntry(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TableEntryBlueprintLibrary", "GetItemEntry");

	Params::TableEntryBlueprintLibrary_GetItemEntry Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_GameState.OnRep_CurrentPhase
// (Final, Native, Protected)

void ATDM_GameState::OnRep_CurrentPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "OnRep_CurrentPhase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TDM_GameState.SetCurrentPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATDM_GameState::SetCurrentPhase(int32 _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "SetCurrentPhase");

	Params::TDM_GameState_SetCurrentPhase Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TDM_GameState.GetCurrentTDMPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 ATDM_GameState::GetCurrentTDMPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "GetCurrentTDMPhase");

	Params::TDM_GameState_GetCurrentTDMPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_GameState.GetCurrentTDMPhaseDefine
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTDMPhaseDefine            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTDMPhaseDefine ATDM_GameState::GetCurrentTDMPhaseDefine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "GetCurrentTDMPhaseDefine");

	Params::TDM_GameState_GetCurrentTDMPhaseDefine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_GameState.GetGoldRule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTDM_GoldRule              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FTDM_GoldRule ATDM_GameState::GetGoldRule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "GetGoldRule");

	Params::TDM_GameState_GetGoldRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_GameState.GetTargetKillCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATDM_GameState::GetTargetKillCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "GetTargetKillCount");

	Params::TDM_GameState_GetTargetKillCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_GameState.GetTDMRule
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FTDMRule                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FTDMRule ATDM_GameState::GetTDMRule() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "GetTDMRule");

	Params::TDM_GameState_GetTDMRule Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_GameState.GetTeamRemainKillCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ATDM_GameState::GetTeamRemainKillCount(ETeams _Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_GameState", "GetTeamRemainKillCount");

	Params::TDM_GameState_GetTeamRemainKillCount Parms{};

	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TDM_PlayerController.GetEnemyTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams ATDM_PlayerController::GetEnemyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TDM_PlayerController", "GetEnemyTeam");

	Params::TDM_PlayerController_GetEnemyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.ToastManager.ClearAllReservedToasts
// (Final, Native, Public, BlueprintCallable)

void UToastManager::ClearAllReservedToasts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ToastManager", "ClearAllReservedToasts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.AddDefaultAutoSystemChat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::AddDefaultAutoSystemChat(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AddDefaultAutoSystemChat");

	Params::Tools_AddDefaultAutoSystemChat Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.AddGameNotify
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _notify_name                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _text                                                  (Parm, NativeAccessSpecifierPublic)
// float                                   _overlap_life_time                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::AddGameNotify(const class UObject* _world_ctx, const class FName& _notify_name, const class FText& _text, float _overlap_life_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AddGameNotify");

	Params::Tools_AddGameNotify Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._notify_name = _notify_name;
	Parms._text = std::move(_text);
	Parms._overlap_life_time = _overlap_life_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.AddSystemChat
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _context                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::AddSystemChat(const class UObject* _world_ctx, const class FText& _context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AddSystemChat");

	Params::Tools_AddSystemChat Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._context = std::move(_context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.AddSystemChatWithColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _context                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::AddSystemChatWithColor(const class UObject* _world_ctx, const class FText& _context, const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AddSystemChatWithColor");

	Params::Tools_AddSystemChatWithColor Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._context = std::move(_context);
	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.AddToastMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _msg                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_urgent                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::AddToastMessage(const class UObject* _world_ctx, const class FString& _msg, bool _is_urgent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AddToastMessage");

	Params::Tools_AddToastMessage Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._msg = std::move(_msg);
	Parms._is_urgent = _is_urgent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.AddWidgetAsHUD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::AddWidgetAsHUD(const class UObject* _world_ctx, class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AddWidgetAsHUD");

	Params::Tools_AddWidgetAsHUD Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.AreYouSureToExitGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::AreYouSureToExitGame(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "AreYouSureToExitGame");

	Params::Tools_AreYouSureToExitGame Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.BuffValueToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBuffValueDisplayType                   _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _prev_prefix_text                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_positive_beneficial                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _additional_value                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::BuffValueToText(EBuffValueDisplayType _type, const class FString& _prev_prefix_text, float _value, bool _is_positive_beneficial, int32 _additional_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "BuffValueToText");

	Params::Tools_BuffValueToText Parms{};

	Parms._type = _type;
	Parms._prev_prefix_text = std::move(_prev_prefix_text);
	Parms._value = _value;
	Parms._is_positive_beneficial = _is_positive_beneficial;
	Parms._additional_value = _additional_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CalcPassiveSkillEffectValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _passive_id                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBuffEffectType                         _effect_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::CalcPassiveSkillEffectValue(const struct FItemID& _passive_id, int32 _level, EBuffEffectType _effect_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CalcPassiveSkillEffectValue");

	Params::Tools_CalcPassiveSkillEffectValue Parms{};

	Parms._passive_id = std::move(_passive_id);
	Parms._level = _level;
	Parms._effect_type = _effect_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CanIRequestMatchMaking
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CanIRequestMatchMaking(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CanIRequestMatchMaking");

	Params::Tools_CanIRequestMatchMaking Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CanUseMinimap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CanUseMinimap(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CanUseMinimap");

	Params::Tools_CanUseMinimap Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.ChangeMinimapSpot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMinimap*                         _Minimap                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::ChangeMinimapSpot(const class UObject* _world_ctx, class UMinimap* _Minimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ChangeMinimapSpot");

	Params::Tools_ChangeMinimapSpot Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Minimap = _Minimap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CheckImInParty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CheckImInParty(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CheckImInParty");

	Params::Tools_CheckImInParty Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CheckImPartyLeader
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CheckImPartyLeader(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CheckImPartyLeader");

	Params::Tools_CheckImPartyLeader Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CheckIsMyFriend
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CheckIsMyFriend(const class UObject* _world_ctx, const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CheckIsMyFriend");

	Params::Tools_CheckIsMyFriend Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CheckIsMyPartyMember
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CheckIsMyPartyMember(const class UObject* _world_ctx, const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CheckIsMyPartyMember");

	Params::Tools_CheckIsMyPartyMember Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CheckKoreaCountry
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::CheckKoreaCountry(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CheckKoreaCountry");

	Params::Tools_CheckKoreaCountry Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CheckNickname
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _nickname                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ENicknameTestResult                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ENicknameTestResult UTools::CheckNickname(const class UObject* _world_ctx, const class FString& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CheckNickname");

	Params::Tools_CheckNickname Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.ClearAllChatHistories
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::ClearAllChatHistories(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ClearAllChatHistories");

	Params::Tools_ClearAllChatHistories Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.Convert_CM_To_M
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::Convert_CM_To_M(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "Convert_CM_To_M");

	Params::Tools_Convert_CM_To_M Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.Convert_M_To_CM
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::Convert_M_To_CM(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "Convert_M_To_CM");

	Params::Tools_Convert_M_To_CM Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.Convert_Percentage_To_Weight
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::Convert_Percentage_To_Weight(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "Convert_Percentage_To_Weight");

	Params::Tools_Convert_Percentage_To_Weight Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.Convert_Weight_To_Percentage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::Convert_Weight_To_Percentage(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "Convert_Weight_To_Percentage");

	Params::Tools_Convert_Weight_To_Percentage Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.CreateUnownedGun
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGunObject* UTools::CreateUnownedGun(const class UObject* _world_ctx, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "CreateUnownedGun");

	Params::Tools_CreateUnownedGun Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.DamageToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDamagedData                     _damage                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTools::DamageToString(const struct FDamagedData& _damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "DamageToString");

	Params::Tools_DamageToString Parms{};

	Parms._damage = std::move(_damage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.EnableIMEOnWebUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::EnableIMEOnWebUI(class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "EnableIMEOnWebUI");

	Params::Tools_EnableIMEOnWebUI Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.ExtractBattleIDS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _str                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTools::ExtractBattleIDS(const class FString& _str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ExtractBattleIDS");

	Params::Tools_ExtractBattleIDS Parms{};

	Parms._str = std::move(_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.FindMatchServicedPlayerStateByUserID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerState*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMatchServicedPlayerState* UTools::FindMatchServicedPlayerStateByUserID(const class UObject* _world_ctx, const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "FindMatchServicedPlayerStateByUserID");

	Params::Tools_FindMatchServicedPlayerStateByUserID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.FindMyBattlePlayerState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class APlayerState*>             _player_array                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class ABattlePlayerState*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABattlePlayerState* UTools::FindMyBattlePlayerState(const TArray<class APlayerState*>& _player_array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "FindMyBattlePlayerState");

	Params::Tools_FindMyBattlePlayerState Parms{};

	Parms._player_array = std::move(_player_array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.FindPlayerControllerByUserID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerController*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMatchServicedPlayerController* UTools::FindPlayerControllerByUserID(const class UObject* _world_ctx, const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "FindPlayerControllerByUserID");

	Params::Tools_FindPlayerControllerByUserID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.FormatBattleIDS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _battle_ids                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTools::FormatBattleIDS(const class FString& _battle_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "FormatBattleIDS");

	Params::Tools_FormatBattleIDS Parms{};

	Parms._battle_ids = std::move(_battle_ids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetAllGunTypes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EGunType>                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EGunType> UTools::GetAllGunTypes(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetAllGunTypes");

	Params::Tools_GetAllGunTypes Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetAllPlayerCharacters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTeamPlayers>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FTeamPlayers> UTools::GetAllPlayerCharacters(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetAllPlayerCharacters");

	Params::Tools_GetAllPlayerCharacters Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetAllPlayers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class APlayerState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerState*> UTools::GetAllPlayers(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetAllPlayers");

	Params::Tools_GetAllPlayers Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetAllPlayersForTabUI
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABattlePlayerState*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABattlePlayerState*> UTools::GetAllPlayersForTabUI(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetAllPlayersForTabUI");

	Params::Tools_GetAllPlayersForTabUI Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBoostedPassiveSkillLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetBoostedPassiveSkillLevel(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBoostedPassiveSkillLevel");

	Params::Tools_GetBoostedPassiveSkillLevel Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBoosters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FItemID_Booster>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FItemID_Booster> UTools::GetBoosters(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBoosters");

	Params::Tools_GetBoosters Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffAbilityFloatValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _ability_name                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetBuffAbilityFloatValue(const class UObject* _world_ctx, const class FName& _ability_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffAbilityFloatValue");

	Params::Tools_GetBuffAbilityFloatValue Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._ability_name = _ability_name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffCalculatedResultStat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBuffEffectType                         _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetBuffCalculatedResultStat(const class UObject* _world_ctx, ECharaType _chara_type, EBuffEffectType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffCalculatedResultStat");

	Params::Tools_GetBuffCalculatedResultStat Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._chara_type = _chara_type;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffCalculatedResultStatFromCurrentCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBuffEffectType                         _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetBuffCalculatedResultStatFromCurrentCharacter(const class UObject* _world_ctx, EBuffEffectType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffCalculatedResultStatFromCurrentCharacter");

	Params::Tools_GetBuffCalculatedResultStatFromCurrentCharacter Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffDiffTextFormBuffOption
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBuffEffectOption                _option                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetBuffDiffTextFormBuffOption(const struct FBuffEffectOption& _option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffDiffTextFormBuffOption");

	Params::Tools_GetBuffDiffTextFormBuffOption Parms{};

	Parms._option = std::move(_option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffedEffects
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FEffectDetail>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FEffectDetail> UTools::GetBuffedEffects(const class UObject* _world_ctx, const struct FItemID& _item_id, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffedEffects");

	Params::Tools_GetBuffedEffects Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffNameFormBuffType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EBuffEffectType                         _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetBuffNameFormBuffType(EBuffEffectType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffNameFormBuffType");

	Params::Tools_GetBuffNameFormBuffType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffsByItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UBuffBase*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UBuffBase*> UTools::GetBuffsByItemID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffsByItemID");

	Params::Tools_GetBuffsByItemID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffTextInfoMapFromItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class FString, class FString> UTools::GetBuffTextInfoMapFromItemID(const class UObject* _world_ctx, const struct FItemID& _item_id, int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffTextInfoMapFromItemID");

	Params::Tools_GetBuffTextInfoMapFromItemID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);
	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffValueTextFormBuffOption
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBuffEffectOption                _option                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   _additional_value                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetBuffValueTextFormBuffOption(const struct FBuffEffectOption& _option, int32 _additional_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffValueTextFormBuffOption");

	Params::Tools_GetBuffValueTextFormBuffOption Parms{};

	Parms._option = std::move(_option);
	Parms._additional_value = _additional_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetBuffValueTextFromItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show_only_value                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _additional_value                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetBuffValueTextFromItemID(const class UObject* _world_ctx, bool _show_only_value, const struct FItemID& _item_id, int32 _level, int32 _additional_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetBuffValueTextFromItemID");

	Params::Tools_GetBuffValueTextFromItemID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._show_only_value = _show_only_value;
	Parms._item_id = std::move(_item_id);
	Parms._level = _level;
	Parms._additional_value = _additional_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCharacterInfo UTools::GetCharacter(const class UObject* WorldContextObject, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCharacter");

	Params::Tools_GetCharacter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCharacterTypesByGunType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ECharaType>                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<ECharaType> UTools::GetCharacterTypesByGunType(const class UObject* _world_ctx, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCharacterTypesByGunType");

	Params::Tools_GetCharacterTypesByGunType Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCharaIconByType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UTools::GetCharaIconByType(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCharaIconByType");

	Params::Tools_GetCharaIconByType Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetChatManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UChatManager*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UChatManager* UTools::GetChatManager(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetChatManager");

	Params::Tools_GetChatManager Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCurrencyValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECurrencyTypes                          _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetCurrencyValue(const class UObject* _world_ctx, ECurrencyTypes _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCurrencyValue");

	Params::Tools_GetCurrencyValue Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCurrencyValueFromID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Currency                 _currency_id                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetCurrencyValueFromID(const class UObject* _world_ctx, const struct FItemID_Currency& _currency_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCurrencyValueFromID");

	Params::Tools_GetCurrencyValueFromID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._currency_id = std::move(_currency_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCurrentCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharacterInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCharacterInfo UTools::GetCurrentCharacter(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCurrentCharacter");

	Params::Tools_GetCurrentCharacter Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCurrentCharacterType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UTools::GetCurrentCharacterType(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCurrentCharacterType");

	Params::Tools_GetCurrentCharacterType Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetCurrentGameModeType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _out_game_mode_type                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::GetCurrentGameModeType(const class UObject* _world_ctx, EGameMode* _out_game_mode_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetCurrentGameModeType");

	Params::Tools_GetCurrentGameModeType Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_out_game_mode_type != nullptr)
		*_out_game_mode_type = Parms._out_game_mode_type;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetDisplayCountFromBuffOptions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FBuffEffectOption>        _buff_options                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetDisplayCountFromBuffOptions(const TArray<struct FBuffEffectOption>& _buff_options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetDisplayCountFromBuffOptions");

	Params::Tools_GetDisplayCountFromBuffOptions Parms{};

	Parms._buff_options = std::move(_buff_options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetElapsedUtcTimeString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDateTimeISO                     _standard_time_utc                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTimeISO                     _current_time_utc                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTools::GetElapsedUtcTimeString(const struct FDateTimeISO& _standard_time_utc, const struct FDateTimeISO& _current_time_utc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetElapsedUtcTimeString");

	Params::Tools_GetElapsedUtcTimeString Parms{};

	Parms._standard_time_utc = std::move(_standard_time_utc);
	Parms._current_time_utc = std::move(_current_time_utc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetEquipedEffectValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBuffEffectType                         _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetEquipedEffectValue(const class UObject* _world_ctx, EBuffEffectType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetEquipedEffectValue");

	Params::Tools_GetEquipedEffectValue Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetEquipFilterTextMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<EItemEquipFilter, class FText>     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EItemEquipFilter, class FText> UTools::GetEquipFilterTextMap(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetEquipFilterTextMap");

	Params::Tools_GetEquipFilterTextMap Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetEquipPassiveAndBoosterBuffOptions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPassiveSkill>            _passive_skill_ids                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FItemID_Booster>          _item_ids                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FBuffEffectOption>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FBuffEffectOption> UTools::GetEquipPassiveAndBoosterBuffOptions(const class UObject* _world_ctx, const TArray<struct FPassiveSkill>& _passive_skill_ids, const TArray<struct FItemID_Booster>& _item_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetEquipPassiveAndBoosterBuffOptions");

	Params::Tools_GetEquipPassiveAndBoosterBuffOptions Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._passive_skill_ids = std::move(_passive_skill_ids);
	Parms._item_ids = std::move(_item_ids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetEquipPassiveAndBoosterBuffOptionsEx
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _prev_mounted_item_id                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _cur_mounted_item_id                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _ignore_item_id                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FPassiveSkill>            _passive_skill_ids                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FItemID_Booster>          _item_ids                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FBuffEffectOption>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FBuffEffectOption> UTools::GetEquipPassiveAndBoosterBuffOptionsEx(const class UObject* _world_ctx, const struct FItemID& _prev_mounted_item_id, const struct FItemID& _cur_mounted_item_id, const struct FItemID& _ignore_item_id, const TArray<struct FPassiveSkill>& _passive_skill_ids, const TArray<struct FItemID_Booster>& _item_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetEquipPassiveAndBoosterBuffOptionsEx");

	Params::Tools_GetEquipPassiveAndBoosterBuffOptionsEx Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._prev_mounted_item_id = std::move(_prev_mounted_item_id);
	Parms._cur_mounted_item_id = std::move(_cur_mounted_item_id);
	Parms._ignore_item_id = std::move(_ignore_item_id);
	Parms._passive_skill_ids = std::move(_passive_skill_ids);
	Parms._item_ids = std::move(_item_ids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetEventCounterSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UEventCounterSubsystem*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UEventCounterSubsystem* UTools::GetEventCounterSubsystem(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetEventCounterSubsystem");

	Params::Tools_GetEventCounterSubsystem Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetFriendAskedList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UUserProfile*>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UUserProfile*> UTools::GetFriendAskedList(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetFriendAskedList");

	Params::Tools_GetFriendAskedList Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetGameContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameContext*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameContext* UTools::GetGameContext(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetGameContext");

	Params::Tools_GetGameContext Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetGunPartsSlotText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetGunPartsSlotText(const class UObject* _world_ctx, EGunPartsSlot _gun_parts_slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetGunPartsSlotText");

	Params::Tools_GetGunPartsSlotText Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_parts_slot = _gun_parts_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetGunSpecFilterTextMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<EGunSpecFilter, class FText>       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EGunSpecFilter, class FText> UTools::GetGunSpecFilterTextMap(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetGunSpecFilterTextMap");

	Params::Tools_GetGunSpecFilterTextMap Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetInvatableFriendsCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetInvatableFriendsCount(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetInvatableFriendsCount");

	Params::Tools_GetInvatableFriendsCount Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetInvatableRecentUsersCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetInvatableRecentUsersCount(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetInvatableRecentUsersCount");

	Params::Tools_GetInvatableRecentUsersCount Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalInvenItemList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UInvenItem*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UInvenItem*> UTools::GetLocalInvenItemList(const class UObject* _world_ctx, const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalInvenItemList");

	Params::Tools_GetLocalInvenItemList Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalInvenItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItems*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItems* UTools::GetLocalInvenItems(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalInvenItems");

	Params::Tools_GetLocalInvenItems Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStigmaLocalPlayer*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStigmaLocalPlayer* UTools::GetLocalPlayer(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalPlayer");

	Params::Tools_GetLocalPlayer Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalPlayerCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* UTools::GetLocalPlayerCharacter(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalPlayerCharacter");

	Params::Tools_GetLocalPlayerCharacter Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalPlayerContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocalPlayerContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalPlayerContext* UTools::GetLocalPlayerContext(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalPlayerContext");

	Params::Tools_GetLocalPlayerContext Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AStigmaPlayerController*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AStigmaPlayerController* UTools::GetLocalPlayerController(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalPlayerController");

	Params::Tools_GetLocalPlayerController Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalPlayerState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerState* UTools::GetLocalPlayerState(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalPlayerState");

	Params::Tools_GetLocalPlayerState Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLocalRegistry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocalRegistry*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalRegistry* UTools::GetLocalRegistry(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLocalRegistry");

	Params::Tools_GetLocalRegistry Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetLoginElapsedSec
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetLoginElapsedSec(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetLoginElapsedSec");

	Params::Tools_GetLoginElapsedSec Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMasterObtainGuide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FObtainGuide                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FObtainGuide UTools::GetMasterObtainGuide(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMasterObtainGuide");

	Params::Tools_GetMasterObtainGuide Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMasterObtainGuideText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetMasterObtainGuideText(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMasterObtainGuideText");

	Params::Tools_GetMasterObtainGuideText Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMatchableTimeRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTools::GetMatchableTimeRange(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMatchableTimeRange");

	Params::Tools_GetMatchableTimeRange Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMatchMakingStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFindMatchStatus                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFindMatchStatus UTools::GetMatchMakingStatus(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMatchMakingStatus");

	Params::Tools_GetMatchMakingStatus Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMyFriendList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UUserProfile*>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UUserProfile*> UTools::GetMyFriendList(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMyFriendList");

	Params::Tools_GetMyFriendList Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMyPartyID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPartyID                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FPartyID UTools::GetMyPartyID(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMyPartyID");

	Params::Tools_GetMyPartyID Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetMyPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStigmaLocalPlayer*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStigmaLocalPlayer* UTools::GetMyPlayer(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetMyPlayer");

	Params::Tools_GetMyPlayer Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetNonBoostedPassiveSkillLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPassiveSkillID                  _skill_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetNonBoostedPassiveSkillLevel(const class UObject* _world_ctx, const struct FPassiveSkillID& _skill_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetNonBoostedPassiveSkillLevel");

	Params::Tools_GetNonBoostedPassiveSkillLevel Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._skill_id = std::move(_skill_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetPassiveSkills
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FPassiveSkill>      ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FPassiveSkill> UTools::GetPassiveSkills(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetPassiveSkills");

	Params::Tools_GetPassiveSkills Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetPhysicalMaterial
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitResult                       _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class USpecterPhysicalMaterial*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USpecterPhysicalMaterial* UTools::GetPhysicalMaterial(const struct FHitResult& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetPhysicalMaterial");

	Params::Tools_GetPhysicalMaterial Parms{};

	Parms._hit = std::move(_hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetPingQuality
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*                     _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPingQuality                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPingQuality UTools::GetPingQuality(class APlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetPingQuality");

	Params::Tools_GetPingQuality Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetPlayableCharacterCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetPlayableCharacterCount(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetPlayableCharacterCount");

	Params::Tools_GetPlayableCharacterCount Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetProperIconSizeWRTGuide
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        _icon_sz                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        _guide                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        _margin                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTools::GetProperIconSizeWRTGuide(const struct FVector2D& _icon_sz, const struct FVector2D& _guide, const struct FVector2D& _margin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetProperIconSizeWRTGuide");

	Params::Tools_GetProperIconSizeWRTGuide Parms{};

	Parms._icon_sz = std::move(_icon_sz);
	Parms._guide = std::move(_guide);
	Parms._margin = std::move(_margin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetRecentUserList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UUserProfile*>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UUserProfile*> UTools::GetRecentUserList(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetRecentUserList");

	Params::Tools_GetRecentUserList Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetSearchedUserList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UUserProfile*>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UUserProfile*> UTools::GetSearchedUserList(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetSearchedUserList");

	Params::Tools_GetSearchedUserList Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetServerStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EServerStatus                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EServerStatus UTools::GetServerStatus(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetServerStatus");

	Params::Tools_GetServerStatus Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetSlateVisibility_Development
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESlateVisibility                        _want                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UTools::GetSlateVisibility_Development(ESlateVisibility _want)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetSlateVisibility_Development");

	Params::Tools_GetSlateVisibility_Development Parms{};

	Parms._want = _want;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetSmallestTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_team                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams UTools::GetSmallestTeam(const class UObject* _world_ctx, int32 _max_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetSmallestTeam");

	Params::Tools_GetSmallestTeam Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._max_team = _max_team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetSocialContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USocialContext*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USocialContext* UTools::GetSocialContext(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetSocialContext");

	Params::Tools_GetSocialContext Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetSteamFriendList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<class UUserProfile*>       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UUserProfile*> UTools::GetSteamFriendList(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetSteamFriendList");

	Params::Tools_GetSteamFriendList Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetSurfaceMaterial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPhysicalMaterial*                _mat                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESurfaceMaterialType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESurfaceMaterialType UTools::GetSurfaceMaterial(const class UPhysicalMaterial* _mat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetSurfaceMaterial");

	Params::Tools_GetSurfaceMaterial Parms{};

	Parms._mat = _mat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTeamColorByPlayerState
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerState*        _player_state                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTools::GetTeamColorByPlayerState(const class UObject* _world_ctx, class AMatchServicedPlayerState* _player_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTeamColorByPlayerState");

	Params::Tools_GetTeamColorByPlayerState Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._player_state = _player_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTeamColorByTeam
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  _other_team                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTools::GetTeamColorByTeam(const class UObject* _world_ctx, ETeams _other_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTeamColorByTeam");

	Params::Tools_GetTeamColorByTeam Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._other_team = _other_team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTeamSide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamSide                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeamSide UTools::GetTeamSide(const class UObject* _world_ctx, ETeams _Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTeamSide");

	Params::Tools_GetTeamSide Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Team = _Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTeamWRTSide
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETeams                                  _base_team                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamSide                               _side                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_team                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeams                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETeams UTools::GetTeamWRTSide(ETeams _base_team, ETeamSide _side, int32 _max_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTeamWRTSide");

	Params::Tools_GetTeamWRTSide Parms{};

	Parms._base_team = _base_team;
	Parms._side = _side;
	Parms._max_team = _max_team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTextForCooltimeAndDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTools::GetTextForCooltimeAndDuration(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTextForCooltimeAndDuration");

	Params::Tools_GetTextForCooltimeAndDuration Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetToastManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UToastManager*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UToastManager* UTools::GetToastManager(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetToastManager");

	Params::Tools_GetToastManager Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTopLocalInvenItemByID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UInvenItem* UTools::GetTopLocalInvenItemByID(const class UObject* _world_ctx, const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTopLocalInvenItemByID");

	Params::Tools_GetTopLocalInvenItemByID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTopPopup
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPopupBase*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPopupBase* UTools::GetTopPopup(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTopPopup");

	Params::Tools_GetTopPopup Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetTraceValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _target_value                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _trace_value                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _time_add_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _time_sub_value                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _min                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _max                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetTraceValue(float _target_value, float _trace_value, float _time_add_value, float _time_sub_value, float _min, float _max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetTraceValue");

	Params::Tools_GetTraceValue Parms{};

	Parms._target_value = _target_value;
	Parms._trace_value = _trace_value;
	Parms._time_add_value = _time_add_value;
	Parms._time_sub_value = _time_sub_value;
	Parms._min = _min;
	Parms._max = _max;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserExp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetUserExp(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserExp");

	Params::Tools_GetUserExp Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserExpPercent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTools::GetUserExpPercent(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserExpPercent");

	Params::Tools_GetUserExpPercent Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UTools::GetUserID(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserID");

	Params::Tools_GetUserID Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetUserLevel(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserLevel");

	Params::Tools_GetUserLevel Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserNextExp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetUserNextExp(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserNextExp");

	Params::Tools_GetUserNextExp Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserNickName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserName                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUserName UTools::GetUserNickName(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserNickName");

	Params::Tools_GetUserNickName Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserOptionSubSystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserOption*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserOption* UTools::GetUserOptionSubSystem(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserOptionSubSystem");

	Params::Tools_GetUserOptionSubSystem Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserPassiveSkillLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPassiveSkillID                  _skill_id                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTools::GetUserPassiveSkillLevel(const class UObject* _world_ctx, const struct FPassiveSkillID& _skill_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserPassiveSkillLevel");

	Params::Tools_GetUserPassiveSkillLevel Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._skill_id = std::move(_skill_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.GetUserRole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FUserRole                  ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FUserRole UTools::GetUserRole(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "GetUserRole");

	Params::Tools_GetUserRole Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.HasCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::HasCharacter(const class UObject* _world_ctx, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "HasCharacter");

	Params::Tools_HasCharacter Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.HasGun
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::HasGun(const class UObject* _world_ctx, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "HasGun");

	Params::Tools_HasGun Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.HasItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::HasItem(const class UObject* _world_ctx, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "HasItem");

	Params::Tools_HasItem Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.HasUniqueItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::HasUniqueItem(const class UObject* _world_ctx, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "HasUniqueItem");

	Params::Tools_HasUniqueItem Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.HideAllGameNotifies
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _hide                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::HideAllGameNotifies(const class UObject* _world_ctx, bool _hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "HideAllGameNotifies");

	Params::Tools_HideAllGameNotifies Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._hide = _hide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.HideUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _hide                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::HideUI(const class UObject* _world_ctx, bool _hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "HideUI");

	Params::Tools_HideUI Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._hide = _hide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.IsCurrentCharaEquipedItemID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsCurrentCharaEquipedItemID(const class UObject* _world_ctx, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsCurrentCharaEquipedItemID");

	Params::Tools_IsCurrentCharaEquipedItemID Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsCustomGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsCustomGame(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsCustomGame");

	Params::Tools_IsCustomGame Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsEqual
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FNetID                           _net_id_a                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNetID                           _net_id_b                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsEqual(const struct FNetID& _net_id_a, const struct FNetID& _net_id_b)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsEqual");

	Params::Tools_IsEqual Parms{};

	Parms._net_id_a = std::move(_net_id_a);
	Parms._net_id_b = std::move(_net_id_b);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsEquipedPassiveAndBoosterFromCurrentCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsEquipedPassiveAndBoosterFromCurrentCharacter(const class UObject* _world_ctx, const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsEquipedPassiveAndBoosterFromCurrentCharacter");

	Params::Tools_IsEquipedPassiveAndBoosterFromCurrentCharacter Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsGoodAck
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FApiResult                       _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsGoodAck(const struct FApiResult& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsGoodAck");

	Params::Tools_IsGoodAck Parms{};

	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsGunAccessoryID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsGunAccessoryID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsGunAccessoryID");

	Params::Tools_IsGunAccessoryID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsMatchableTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsMatchableTime(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsMatchableTime");

	Params::Tools_IsMatchableTime Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsNowBattleMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _allow_only_real_battle                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsNowBattleMode(const class UObject* _world_ctx, bool _allow_only_real_battle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsNowBattleMode");

	Params::Tools_IsNowBattleMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._allow_only_real_battle = _allow_only_real_battle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsNPC
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsNPC(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsNPC");

	Params::Tools_IsNPC Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsPVPMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameMode                               _game_mode_type                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsPVPMode(EGameMode _game_mode_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsPVPMode");

	Params::Tools_IsPVPMode Parms{};

	Parms._game_mode_type = _game_mode_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsSelectableCharacterPickUI
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsSelectableCharacterPickUI(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsSelectableCharacterPickUI");

	Params::Tools_IsSelectableCharacterPickUI Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsSupportedArmor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Skin_Body                _body_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EArmorType                              _armor_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsSupportedArmor(const struct FItemID_Skin_Body& _body_id, EArmorType _armor_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsSupportedArmor");

	Params::Tools_IsSupportedArmor Parms{};

	Parms._body_id = std::move(_body_id);
	Parms._armor_type = _armor_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsTheOnlyMatachableGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsTheOnlyMatachableGameMode(const class UObject* _world_ctx, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsTheOnlyMatachableGameMode");

	Params::Tools_IsTheOnlyMatachableGameMode Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsUnlimitedBooster
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsUnlimitedBooster(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsUnlimitedBooster");

	Params::Tools_IsUnlimitedBooster Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsUpcommingCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsUpcommingCharacter(const class UObject* _world_ctx, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsUpcommingCharacter");

	Params::Tools_IsUpcommingCharacter Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsUpcommingItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemStage                              _stage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsUpcommingItem(EItemStage _stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsUpcommingItem");

	Params::Tools_IsUpcommingItem Parms{};

	Parms._stage = _stage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsUseableItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemStage                              _stage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsUseableItem(EItemStage _stage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsUseableItem");

	Params::Tools_IsUseableItem Parms{};

	Parms._stage = _stage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsUseableItemID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsUseableItemID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsUseableItemID");

	Params::Tools_IsUseableItemID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsVisibleRedDotOnAttachableParts
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsVisibleRedDotOnAttachableParts(const class UObject* _world_ctx, EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsVisibleRedDotOnAttachableParts");

	Params::Tools_IsVisibleRedDotOnAttachableParts Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.IsVisibleRedDotOnGun
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_object                                            (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::IsVisibleRedDotOnGun(const class UObject* _world_ctx, const class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "IsVisibleRedDotOnGun");

	Params::Tools_IsVisibleRedDotOnGun Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.JudgePingQuality
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _ping_ms                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPingQuality                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPingQuality UTools::JudgePingQuality(int32 _ping_ms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "JudgePingQuality");

	Params::Tools_JudgePingQuality Parms{};

	Parms._ping_ms = _ping_ms;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.MakeCrash
// (Final, Native, Static, Public, BlueprintCallable)

void UTools::MakeCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "MakeCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.NetReplyFromCode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EResultCode                             _code                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UTools::NetReplyFromCode(EResultCode _code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "NetReplyFromCode");

	Params::Tools_NetReplyFromCode Parms{};

	Parms._code = _code;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.NormalizeRandomBoxProbability
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRandomItemEntry>         _list                                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTools::NormalizeRandomBoxProbability(TArray<struct FRandomItemEntry>& _list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "NormalizeRandomBoxProbability");

	Params::Tools_NormalizeRandomBoxProbability Parms{};

	Parms._list = std::move(_list);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	_list = std::move(Parms._list);
}


// Function Stigma.Tools.OverrideWishedGameMode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMatchOption                     _option                                                (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::OverrideWishedGameMode(struct FMatchOption& _option, EGameMode _game_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "OverrideWishedGameMode");

	Params::Tools_OverrideWishedGameMode Parms{};

	Parms._option = std::move(_option);
	Parms._game_mode = _game_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	_option = std::move(Parms._option);
}


// Function Stigma.Tools.PopupESCMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::PopupESCMenu(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "PopupESCMenu");

	Params::Tools_PopupESCMenu Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.ProcessWebCommands
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _cmd_line                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::ProcessWebCommands(const class UObject* _world_ctx, const class FString& _cmd_line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ProcessWebCommands");

	Params::Tools_ProcessWebCommands Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._cmd_line = std::move(_cmd_line);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.ReBuildEnhancedInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputMappingRebuildType                _rebuild_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::ReBuildEnhancedInput(const class UObject* _world_ctx, EInputMappingRebuildType _rebuild_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ReBuildEnhancedInput");

	Params::Tools_ReBuildEnhancedInput Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._rebuild_type = _rebuild_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.RegisterNotify_OnLoad_Characters
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::RegisterNotify_OnLoad_Characters(const class UObject* _world_ctx, const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "RegisterNotify_OnLoad_Characters");

	Params::Tools_RegisterNotify_OnLoad_Characters Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.RegisterNotify_OnLoad_UserInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::RegisterNotify_OnLoad_UserInfo(const class UObject* _world_ctx, const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "RegisterNotify_OnLoad_UserInfo");

	Params::Tools_RegisterNotify_OnLoad_UserInfo Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.RemoveGameNotify
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _notify_name                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _force_remove                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::RemoveGameNotify(const class UObject* _world_ctx, const class FName& _notify_name, bool _force_remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "RemoveGameNotify");

	Params::Tools_RemoveGameNotify Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._notify_name = _notify_name;
	Parms._force_remove = _force_remove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.RemoveWidgetAsHUD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::RemoveWidgetAsHUD(const class UObject* _world_ctx, class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "RemoveWidgetAsHUD");

	Params::Tools_RemoveWidgetAsHUD Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetAskedFriends
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriend>                  _asked_friends                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::SetAskedFriends(const class UObject* _world_ctx, const TArray<struct FFriend>& _asked_friends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetAskedFriends");

	Params::Tools_SetAskedFriends Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._asked_friends = std::move(_asked_friends);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.SetButtonStyleImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UButton*                          _button                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       _normal_texture                                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       _hover_texture                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       _click_texture                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       _disable_texture                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _resize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SetButtonStyleImage(class UButton* _button, class UTexture2D* _normal_texture, class UTexture2D* _hover_texture, class UTexture2D* _click_texture, class UTexture2D* _disable_texture, bool _resize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetButtonStyleImage");

	Params::Tools_SetButtonStyleImage Parms{};

	Parms._button = _button;
	Parms._normal_texture = _normal_texture;
	Parms._hover_texture = _hover_texture;
	Parms._click_texture = _click_texture;
	Parms._disable_texture = _disable_texture;
	Parms._resize = _resize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetButtonStyleTintColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UButton*                          _button                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _normal_color                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _hover_color                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _click_color                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     _disabled_color                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SetButtonStyleTintColor(class UButton* _button, const struct FLinearColor& _normal_color, const struct FLinearColor& _hover_color, const struct FLinearColor& _click_color, const struct FLinearColor& _disabled_color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetButtonStyleTintColor");

	Params::Tools_SetButtonStyleTintColor Parms{};

	Parms._button = _button;
	Parms._normal_color = std::move(_normal_color);
	Parms._hover_color = std::move(_hover_color);
	Parms._click_color = std::move(_click_color);
	Parms._disabled_color = std::move(_disabled_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetInputBlocked
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_blocked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SetInputBlocked(const class UObject* _world_ctx, bool _is_blocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetInputBlocked");

	Params::Tools_SetInputBlocked Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._is_blocked = _is_blocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetLobbyCurrencyBox
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemID_Currency>         _currency_ids                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    _use_wallet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _use_quick_purchase                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SetLobbyCurrencyBox(const class UObject* _world_ctx, const TArray<struct FItemID_Currency>& _currency_ids, bool _use_wallet, bool _use_quick_purchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetLobbyCurrencyBox");

	Params::Tools_SetLobbyCurrencyBox Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._currency_ids = std::move(_currency_ids);
	Parms._use_wallet = _use_wallet;
	Parms._use_quick_purchase = _use_quick_purchase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetMannequinVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _visible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SetMannequinVisibility(const class UObject* _world_ctx, bool _visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetMannequinVisibility");

	Params::Tools_SetMannequinVisibility Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._visible = _visible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetMyFriends
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriend>                  _friends                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::SetMyFriends(const class UObject* _world_ctx, const TArray<struct FFriend>& _friends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetMyFriends");

	Params::Tools_SetMyFriends Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._friends = std::move(_friends);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.SetNicknameFX
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class URichTextBlock*                   _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _item_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _size                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SetNicknameFX(class URichTextBlock* _widget, const struct FItemID& _item_id, float _size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetNicknameFX");

	Params::Tools_SetNicknameFX Parms{};

	Parms._widget = _widget;
	Parms._item_id = std::move(_item_id);
	Parms._size = _size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SetRecentBattleUsers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriend>                  _battle_users                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::SetRecentBattleUsers(const class UObject* _world_ctx, const TArray<struct FFriend>& _battle_users)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetRecentBattleUsers");

	Params::Tools_SetRecentBattleUsers Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._battle_users = std::move(_battle_users);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.SetSearchedUsers
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FUserSearch>              _users                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::SetSearchedUsers(const class UObject* _world_ctx, const TArray<struct FUserSearch>& _users)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetSearchedUsers");

	Params::Tools_SetSearchedUsers Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._users = std::move(_users);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.SetSteamFriends
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriend>                  _steam_friends                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTools::SetSteamFriends(const class UObject* _world_ctx, const TArray<struct FFriend>& _steam_friends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SetSteamFriends");

	Params::Tools_SetSteamFriends Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._steam_friends = std::move(_steam_friends);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.ShowErrorBox
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _Title                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _msg                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTools::ShowErrorBox(const class UObject* _world_ctx, const class FText& _Title, const class FText& _msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ShowErrorBox");

	Params::Tools_ShowErrorBox Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Title = std::move(_Title);
	Parms._msg = std::move(_msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.ShowLobbyUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::ShowLobbyUI(const class UObject* _world_ctx, bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ShowLobbyUI");

	Params::Tools_ShowLobbyUI Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.ShowRewardPopup
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRewardPlain                     _rewards                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTools::ShowRewardPopup(const class UObject* _world_ctx, const struct FRewardPlain& _rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ShowRewardPopup");

	Params::Tools_ShowRewardPopup Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._rewards = std::move(_rewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.SlotToSocket_Accessory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSocket                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunPartsSocket UTools::SlotToSocket_Accessory(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SlotToSocket_Accessory");

	Params::Tools_SlotToSocket_Accessory Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.SortOwnedPriorityInvenItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UInvenItem*>               _items                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FItemID                          _priority_id                                           (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::SortOwnedPriorityInvenItem(TArray<class UInvenItem*>& _items, const struct FItemID& _priority_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SortOwnedPriorityInvenItem");

	Params::Tools_SortOwnedPriorityInvenItem Parms{};

	Parms._items = std::move(_items);
	Parms._priority_id = std::move(_priority_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	_items = std::move(Parms._items);
}


// Function Stigma.Tools.SplitMyNearRankingForAll
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FNetRankingEntry>         _ranking                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FNetRankingEntry>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FNetRankingEntry> UTools::SplitMyNearRankingForAll(const class UObject* _world_ctx, const TArray<struct FNetRankingEntry>& _ranking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SplitMyNearRankingForAll");

	Params::Tools_SplitMyNearRankingForAll Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._ranking = std::move(_ranking);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.SplitMyNearRankingForChallenge
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       _ranking                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FACK_ChallengeRead>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FACK_ChallengeRead> UTools::SplitMyNearRankingForChallenge(const class UObject* _world_ctx, const TArray<struct FACK_ChallengeRead>& _ranking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "SplitMyNearRankingForChallenge");

	Params::Tools_SplitMyNearRankingForChallenge Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._ranking = std::move(_ranking);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.Subscribe_OnUpdateUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSet<EUserEvent>                        _interested                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(EUserEvent _event)>      _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::Subscribe_OnUpdateUser(const class UObject* _world_ctx, const TSet<EUserEvent>& _interested, const TDelegate<void(EUserEvent _event)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "Subscribe_OnUpdateUser");

	Params::Tools_Subscribe_OnUpdateUser Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._interested = std::move(_interested);
	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.ToGunType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EGunType UTools::ToGunType(int32 _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ToGunType");

	Params::Tools_ToGunType Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.ToPlayerStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _val                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPlayerStatus                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerStatus UTools::ToPlayerStatus(int32 _val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "ToPlayerStatus");

	Params::Tools_ToPlayerStatus Parms{};

	Parms._val = _val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tools.UnregisterNotify_OnLoad_Characters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::UnregisterNotify_OnLoad_Characters(const class UObject* _world_ctx, const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "UnregisterNotify_OnLoad_Characters");

	Params::Tools_UnregisterNotify_OnLoad_Characters Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.UnregisterNotify_OnLoad_UserInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::UnregisterNotify_OnLoad_UserInfo(const class UObject* _world_ctx, const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "UnregisterNotify_OnLoad_UserInfo");

	Params::Tools_UnregisterNotify_OnLoad_UserInfo Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.Unsubscribe_OnUpdateUser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _obj                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::Unsubscribe_OnUpdateUser(const class UObject* _world_ctx, const class UObject* _obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "Unsubscribe_OnUpdateUser");

	Params::Tools_Unsubscribe_OnUpdateUser Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._obj = _obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.UpdateFlashBangRadar
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UImage*                           _target_img                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::UpdateFlashBangRadar(const class UObject* _world_ctx, class UImage* _target_img)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "UpdateFlashBangRadar");

	Params::Tools_UpdateFlashBangRadar Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._target_img = _target_img;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tools.UpdateGunOwnInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTools::UpdateGunOwnInfo(const class UObject* _world_ctx, class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("Tools", "UpdateGunOwnInfo");

	Params::Tools_UpdateGunOwnInfo Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.TooltipHelper.CreateTooltipWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          _owning_widget                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETooltipType                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUI_Tooltip*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_Tooltip* UTooltipHelper::CreateTooltipWidget(class UWidget* _owning_widget, ETooltipType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TooltipHelper", "CreateTooltipWidget");

	Params::TooltipHelper_CreateTooltipWidget Parms{};

	Parms._owning_widget = _owning_widget;
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.TooltipHelper.GetTooltipTypeFromItemCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETooltipType                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETooltipType UTooltipHelper::GetTooltipTypeFromItemCategory(EItemCategory _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TooltipHelper", "GetTooltipTypeFromItemCategory");

	Params::TooltipHelper_GetTooltipTypeFromItemCategory Parms{};

	Parms._category = _category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.AddRefWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorial::AddRefWidget(class UUserWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "AddRefWidget");

	Params::Tutorial_AddRefWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tutorial.OnQueryStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ETutorialStartResponse                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETutorialStartResponse UTutorial::OnQueryStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "OnQueryStart");

	Params::Tutorial_OnQueryStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.RemoveRefWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      _widget                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTutorial::RemoveRefWidget(const class UUserWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "RemoveRefWidget");

	Params::Tutorial_RemoveRefWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.Tutorial.Start
// (Event, Protected, BlueprintEvent)

void UTutorial::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.Tutorial.GetBattlePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBattleModePhase                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattleModePhase UTutorial::GetBattlePhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "GetBattlePhase");

	Params::Tutorial_GetBattlePhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.GetBattlePhaseElapsedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTutorial::GetBattlePhaseElapsedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "GetBattlePhaseElapsedTime");

	Params::Tutorial_GetBattlePhaseElapsedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.GetCurrentRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTutorial::GetCurrentRound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "GetCurrentRound");

	Params::Tutorial_GetCurrentRound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.GetHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTutorial::GetHP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "GetHP");

	Params::Tutorial_GetHP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.GetPlayedCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTutorial::GetPlayedCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "GetPlayedCount");

	Params::Tutorial_GetPlayedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.GetPlayedMatchCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTutorial::GetPlayedMatchCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "GetPlayedMatchCount");

	Params::Tutorial_GetPlayedMatchCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.IsAnyPopupOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorial::IsAnyPopupOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "IsAnyPopupOpened");

	Params::Tutorial_IsAnyPopupOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.IsBattlePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBattleModePhase                        _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorial::IsBattlePhase(EBattleModePhase _phase) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "IsBattlePhase");

	Params::Tutorial_IsBattlePhase Parms{};

	Parms._phase = _phase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.IsCurrentRound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _round                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorial::IsCurrentRound(int32 _round) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "IsCurrentRound");

	Params::Tutorial_IsCurrentRound Parms{};

	Parms._round = _round;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.Tutorial.IsPassOverTimeFromLastPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _secs                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTutorial::IsPassOverTimeFromLastPlaying(int32 _secs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial", "IsPassOverTimeFromLastPlaying");

	Params::Tutorial_IsPassOverTimeFromLastPlaying Parms{};

	Parms._secs = _secs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ClosePointUI.Tutorial_ClosePointUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ClosePointUI*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ClosePointUI* UUIGuide_ClosePointUI::Tutorial_ClosePointUI(class UTutorial* _tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ClosePointUI", "Tutorial_ClosePointUI");

	Params::UIGuide_ClosePointUI_Tutorial_ClosePointUI Parms{};

	Parms._tutorial = _tutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ShowMissionWidget.Tutorial_ShowMissionWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ShowMissionWidget*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ShowMissionWidget* UUIGuide_ShowMissionWidget::Tutorial_ShowMissionWidget(class UTutorial* _tutorial, bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ShowMissionWidget", "Tutorial_ShowMissionWidget");

	Params::UIGuide_ShowMissionWidget_Tutorial_ShowMissionWidget Parms{};

	Parms._tutorial = _tutorial;
	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ShowHelpWidget.Tutorial_ShowHelpWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _help_contents_key                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ShowHelpWidget*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ShowHelpWidget* UUIGuide_ShowHelpWidget::Tutorial_ShowHelpWidget(class UTutorial* _tutorial, bool _show, const class FString& _help_contents_key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ShowHelpWidget", "Tutorial_ShowHelpWidget");

	Params::UIGuide_ShowHelpWidget_Tutorial_ShowHelpWidget Parms{};

	Parms._tutorial = _tutorial;
	Parms._show = _show;
	Parms._help_contents_key = std::move(_help_contents_key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ShowHelpWidget.OnCloseHelp
// (Final, Native, Protected)

void UUIGuide_ShowHelpWidget::OnCloseHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIGuide_ShowHelpWidget", "OnCloseHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UIGuide_Finish.Tutorial_Finish
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_Finish*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_Finish* UUIGuide_Finish::Tutorial_Finish(class UTutorial* _tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_Finish", "Tutorial_Finish");

	Params::UIGuide_Finish_Tutorial_Finish Parms{};

	Parms._tutorial = _tutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_PauseGame.Tutorial_PauseGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _pause                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_PauseGame*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_PauseGame* UUIGuide_PauseGame::Tutorial_PauseGame(class UTutorial* _tutorial, bool _pause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_PauseGame", "Tutorial_PauseGame");

	Params::UIGuide_PauseGame_Tutorial_PauseGame Parms{};

	Parms._tutorial = _tutorial;
	Parms._pause = _pause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ShowBattleStore.Tutorial_ShowBattleStore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ShowBattleStore*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ShowBattleStore* UUIGuide_ShowBattleStore::Tutorial_ShowBattleStore(class UTutorial* _tutorial, bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ShowBattleStore", "Tutorial_ShowBattleStore");

	Params::UIGuide_ShowBattleStore_Tutorial_ShowBattleStore Parms{};

	Parms._tutorial = _tutorial;
	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ResumeTutorial.Tutorial_ResumeTutorial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ResumeTutorial*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ResumeTutorial* UUIGuide_ResumeTutorial::Tutorial_ResumeTutorial(class UTutorial* _tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ResumeTutorial", "Tutorial_ResumeTutorial");

	Params::UIGuide_ResumeTutorial_Tutorial_ResumeTutorial Parms{};

	Parms._tutorial = _tutorial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_WaitCharacterSelect.Tutorial_WaitCharacterSelect
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFightingStyle                          _fighting_style                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_WaitCharacterSelect*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_WaitCharacterSelect* UUIGuide_WaitCharacterSelect::Tutorial_WaitCharacterSelect(class UTutorial* _tutorial, EFightingStyle _fighting_style)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_WaitCharacterSelect", "Tutorial_WaitCharacterSelect");

	Params::UIGuide_WaitCharacterSelect_Tutorial_WaitCharacterSelect Parms{};

	Parms._tutorial = _tutorial;
	Parms._fighting_style = _fighting_style;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_ApplyFunction.Tutorial_ApplyFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemIDRef_Function              _func_id                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _remove                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_ApplyFunction*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_ApplyFunction* UUIGuide_ApplyFunction::Tutorial_ApplyFunction(class UTutorial* _tutorial, const struct FItemIDRef_Function& _func_id, bool _remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_ApplyFunction", "Tutorial_ApplyFunction");

	Params::UIGuide_ApplyFunction_Tutorial_ApplyFunction Parms{};

	Parms._tutorial = _tutorial;
	Parms._func_id = std::move(_func_id);
	Parms._remove = _remove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_PlayCutScene.Tutorial_PlayCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UWorld>            _level_path                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _sequence_name                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _hide_ui                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_PlayCutScene*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_PlayCutScene* UUIGuide_PlayCutScene::Tutorial_PlayCutScene(class UTutorial* _tutorial, TSoftObjectPtr<class UWorld> _level_path, const class FString& _sequence_name, bool _hide_ui)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_PlayCutScene", "Tutorial_PlayCutScene");

	Params::UIGuide_PlayCutScene_Tutorial_PlayCutScene Parms{};

	Parms._tutorial = _tutorial;
	Parms._level_path = _level_path;
	Parms._sequence_name = std::move(_sequence_name);
	Parms._hide_ui = _hide_ui;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_PlayCutScene.OnCutSceneFinished
// (Final, Native, Protected)

void UUIGuide_PlayCutScene::OnCutSceneFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIGuide_PlayCutScene", "OnCutSceneFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UIGuide_PlayCutScene.OnLoadComplete
// (Final, Native, Protected)

void UUIGuide_PlayCutScene::OnLoadComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIGuide_PlayCutScene", "OnLoadComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UIGuide_Wait.Tutorial_Wait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _time                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_Wait*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_Wait* UUIGuide_Wait::Tutorial_Wait(class UTutorial* _tutorial, float _time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_Wait", "Tutorial_Wait");

	Params::UIGuide_Wait_Tutorial_Wait Parms{};

	Parms._tutorial = _tutorial;
	Parms._time = _time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_Wait.OnWaitComplete
// (Final, Native, Protected)

void UUIGuide_Wait::OnWaitComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIGuide_Wait", "OnWaitComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UIGuide_PlayCharacterCutScene.Tutorial_PlayCharacterCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTutorial*                        _tutorial                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUIGuide_PlayCharacterCutScene*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUIGuide_PlayCharacterCutScene* UUIGuide_PlayCharacterCutScene::Tutorial_PlayCharacterCutScene(class UTutorial* _tutorial, ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UIGuide_PlayCharacterCutScene", "Tutorial_PlayCharacterCutScene");

	Params::UIGuide_PlayCharacterCutScene_Tutorial_PlayCharacterCutScene Parms{};

	Parms._tutorial = _tutorial;
	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIGuide_PlayCharacterCutScene.OnWaitComplete
// (Final, Native, Protected)

void UUIGuide_PlayCharacterCutScene::OnWaitComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIGuide_PlayCharacterCutScene", "OnWaitComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UIAnimInstance.CheckCanTransit
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    _from_idle_state                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _can_check                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUIAnimInstance::CheckCanTransit(bool _from_idle_state, bool _can_check)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIAnimInstance", "CheckCanTransit");

	Params::UIAnimInstance_CheckCanTransit Parms{};

	Parms._from_idle_state = _from_idle_state;
	Parms._can_check = _can_check;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIAnimInstance.GetCutSceneIntroAnim
// (Final, Native, Public)
// Parameters:
// int32                                   _Pos                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* UUIAnimInstance::GetCutSceneIntroAnim(int32 _Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIAnimInstance", "GetCutSceneIntroAnim");

	Params::UIAnimInstance_GetCutSceneIntroAnim Parms{};

	Parms._Pos = _Pos;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIAnimInstance.GetCutSceneIntroAnim_VS
// (Final, Native, Public)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* UUIAnimInstance::GetCutSceneIntroAnim_VS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIAnimInstance", "GetCutSceneIntroAnim_VS");

	Params::UIAnimInstance_GetCutSceneIntroAnim_VS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIAnimInstance.GetCutSceneLobbySelection
// (Final, Native, Public)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* UUIAnimInstance::GetCutSceneLobbySelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIAnimInstance", "GetCutSceneLobbySelection");

	Params::UIAnimInstance_GetCutSceneLobbySelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UIAnimInstance.GetCutSceneLobbySelection_Cam
// (Final, Native, Public)
// Parameters:
// class UAnimSequenceBase*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimSequenceBase* UUIAnimInstance::GetCutSceneLobbySelection_Cam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UIAnimInstance", "GetCutSceneLobbySelection_Cam");

	Params::UIAnimInstance_GetCutSceneLobbySelection_Cam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ActionWheelMenu.CalculateSectionBounds
// (Final, Native, Protected, BlueprintCallable)

void UUI_ActionWheelMenu::CalculateSectionBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActionWheelMenu", "CalculateSectionBounds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ActionWheelMenu.Init
// (Final, Native, Public, BlueprintCallable)

void UUI_ActionWheelMenu::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActionWheelMenu", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ActionWheelMenu.Update
// (Final, Native, Public, BlueprintCallable)

void UUI_ActionWheelMenu::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActionWheelMenu", "Update");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ActionWheelParts.SetValues
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _icon_name                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ActionWheelParts::SetValues(const TSoftObjectPtr<class UTexture2D>& _Icon, const class FText& _icon_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActionWheelParts", "SetValues");

	Params::UI_ActionWheelParts_SetValues Parms{};

	Parms._Icon = _Icon;
	Parms._icon_name = std::move(_icon_name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ActiveFunctionBase.SetCustomTooltipText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             _Title                                                 (Parm, NativeAccessSpecifierPublic)
// class FText                             _Desc                                                  (Parm, NativeAccessSpecifierPublic)

void UUI_ActiveFunctionBase::SetCustomTooltipText(const class FText& _Title, const class FText& _Desc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActiveFunctionBase", "SetCustomTooltipText");

	Params::UI_ActiveFunctionBase_SetCustomTooltipText Parms{};

	Parms._Title = std::move(_Title);
	Parms._Desc = std::move(_Desc);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ActiveFunctionBase.SetValues
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FItemID>                  _item_ids                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDateTime                        Param__expiry                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _GM_func_idn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ActiveFunctionBase::SetValues(const TArray<struct FItemID>& _item_ids, const struct FDateTime& Param__expiry, int32 _GM_func_idn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActiveFunctionBase", "SetValues");

	Params::UI_ActiveFunctionBase_SetValues Parms{};

	Parms._item_ids = std::move(_item_ids);
	Parms.Param__expiry = std::move(Param__expiry);
	Parms._GM_func_idn = _GM_func_idn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ActiveFunctionBase.UpdateUI
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_ActiveFunctionBase::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ActiveFunctionBase", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBrief.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBrief::InitWidget(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBrief", "InitWidget");

	Params::UI_BattlePassBrief_InitWidget Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefContainer.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBriefContainer::InitWidget(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefContainer", "InitWidget");

	Params::UI_BattlePassBriefContainer_InitWidget Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefContainer.OnClickSlot
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBriefContainer::OnClickSlot(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefContainer", "OnClickSlot");

	Params::UI_BattlePassBriefContainer_OnClickSlot Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefContainer.SwapAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _forward                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBriefContainer::SwapAnimation(bool _forward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefContainer", "SwapAnimation");

	Params::UI_BattlePassBriefContainer_SwapAnimation Parms{};

	Parms._forward = _forward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassBriefContainer.SwapPass
// (Final, Native, Protected, BlueprintCallable)

void UUI_BattlePassBriefContainer::SwapPass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefContainer", "SwapPass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBriefContainer.GetFrontPassSlotWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUI_BattlePassBriefSlot*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_BattlePassBriefSlot* UUI_BattlePassBriefContainer::GetFrontPassSlotWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBriefContainer", "GetFrontPassSlotWidget");

	Params::UI_BattlePassBriefContainer_GetFrontPassSlotWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BattlePassBuyPopup.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBuyPopup::InitWidget(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBuyPopup", "InitWidget");

	Params::UI_BattlePassBuyPopup_InitWidget Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBuyPopup.OnClickBuyBtn
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _btn                                                   (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassBuyPopup::OnClickBuyBtn(class UAnimatableWidget* _btn, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBuyPopup", "OnClickBuyBtn");

	Params::UI_BattlePassBuyPopup_OnClickBuyBtn Parms{};

	Parms._btn = _btn;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassBuyPopup.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BattlePassBuyPopup::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBuyPopup", "SetDesc");

	Params::UI_BattlePassBuyPopup_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassBuyPopup.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BattlePassBuyPopup::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassBuyPopup", "SetTitle");

	Params::UI_BattlePassBuyPopup_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoLevelRewardSlot.SetPremiumLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _locked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoLevelRewardSlot::SetPremiumLocked(bool _locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoLevelRewardSlot", "SetPremiumLocked");

	Params::UI_BattlePassInfoLevelRewardSlot_SetPremiumLocked Parms{};

	Parms._locked = _locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoLevelRewardSlot.SetPremiumTag
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_premium                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoLevelRewardSlot::SetPremiumTag(bool _is_premium)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoLevelRewardSlot", "SetPremiumTag");

	Params::UI_BattlePassInfoLevelRewardSlot_SetPremiumTag Parms{};

	Parms._is_premium = _is_premium;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoLevelRewardSlot.SetRewardState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERewardItemState                        _reward_state                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoLevelRewardSlot::SetRewardState(ERewardItemState _reward_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoLevelRewardSlot", "SetRewardState");

	Params::UI_BattlePassInfoLevelRewardSlot_SetRewardState Parms{};

	Parms._reward_state = _reward_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoLevelRewardSlot.SetTargetLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoLevelRewardSlot::SetTargetLevel(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoLevelRewardSlot", "SetTargetLevel");

	Params::UI_BattlePassInfoLevelRewardSlot_SetTargetLevel Parms{};

	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoPage.EnableLevelBuyBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::EnableLevelBuyBtn(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "EnableLevelBuyBtn");

	Params::UI_BattlePassInfoPage_EnableLevelBuyBtn Parms{};

	Parms._enable = _enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoPage.EnablePurchaseBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::EnablePurchaseBtn(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "EnablePurchaseBtn");

	Params::UI_BattlePassInfoPage_EnablePurchaseBtn Parms{};

	Parms._enable = _enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoPage.OnSwapPass
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::OnSwapPass(class UAnimatableWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "OnSwapPass");

	Params::UI_BattlePassInfoPage_OnSwapPass Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassInfoPage.OpenIntroPopup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_auto_opened                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::OpenIntroPopup(bool _is_auto_opened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "OpenIntroPopup");

	Params::UI_BattlePassInfoPage_OpenIntroPopup Parms{};

	Parms._is_auto_opened = _is_auto_opened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassInfoPage.OpenLevelBuyPopup
// (Final, Native, Protected, BlueprintCallable)

void UUI_BattlePassInfoPage::OpenLevelBuyPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "OpenLevelBuyPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassInfoPage.SetPreviewItemInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _Name                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EItemGrade                              _Grade                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _premium_locked                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::SetPreviewItemInfo(const class FText& _Name, EItemGrade _Grade, bool _premium_locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "SetPreviewItemInfo");

	Params::UI_BattlePassInfoPage_SetPreviewItemInfo Parms{};

	Parms._Name = std::move(_Name);
	Parms._Grade = _Grade;
	Parms._premium_locked = _premium_locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoPage.ShowActivateButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::ShowActivateButton(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "ShowActivateButton");

	Params::UI_BattlePassInfoPage_ShowActivateButton Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoPage.ShowAllRewardBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::ShowAllRewardBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "ShowAllRewardBtn");

	Params::UI_BattlePassInfoPage_ShowAllRewardBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoPage.ShowMain
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::ShowMain(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "ShowMain");

	Params::UI_BattlePassInfoPage_ShowMain Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassInfoPage.ShowPreviewItemInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoPage::ShowPreviewItemInfo(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoPage", "ShowPreviewItemInfo");

	Params::UI_BattlePassInfoPage_ShowPreviewItemInfo Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoTab.OnClickBtn
// (Final, Native, Protected, BlueprintCallable)

void UUI_BattlePassInfoTab::OnClickBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoTab", "OnClickBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassInfoTab.SetIsActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _activated                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoTab::SetIsActivated(bool _activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoTab", "SetIsActivated");

	Params::UI_BattlePassInfoTab_SetIsActivated Parms{};

	Parms._activated = _activated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoTab.SetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoTab::SetText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoTab", "SetText");

	Params::UI_BattlePassInfoTab_SetText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassInfoTab.ShowRemainTimer
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FDateTime                        _end_at                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _alert_hour                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassInfoTab::ShowRemainTimer(const struct FDateTime& _end_at, int32 _alert_hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassInfoTab", "ShowRemainTimer");

	Params::UI_BattlePassInfoTab_ShowRemainTimer Parms{};

	Parms._end_at = std::move(_end_at);
	Parms._alert_hour = _alert_hour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassIntroContainer.CheckDoNotOpen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassIntroContainer::CheckDoNotOpen(bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassIntroContainer", "CheckDoNotOpen");

	Params::UI_BattlePassIntroContainer_CheckDoNotOpen Parms{};

	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassIntroContainer.ShowDoNotOpenCheckBox
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassIntroContainer::ShowDoNotOpenCheckBox(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassIntroContainer", "ShowDoNotOpenCheckBox");

	Params::UI_BattlePassIntroContainer_ShowDoNotOpenCheckBox Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassIntroContainer.ShowMainPassPage
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _slot_widget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassIntroContainer::ShowMainPassPage(class UAnimatableWidget* _slot_widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassIntroContainer", "ShowMainPassPage");

	Params::UI_BattlePassIntroContainer_ShowMainPassPage Parms{};

	Parms._slot_widget = _slot_widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectBuffPanel.OnHoverBuffItem
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FBattleStoreEntry                _battle_store_entry                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_SelectBuffPanel::OnHoverBuffItem(const struct FBattleStoreEntry& _battle_store_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectBuffPanel", "OnHoverBuffItem");

	Params::UI_SelectBuffPanel_OnHoverBuffItem Parms{};

	Parms._battle_store_entry = std::move(_battle_store_entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SelectBuffPanel.UpdateDetail
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBattleStoreEntry                _battle_store_entry                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_SelectBuffPanel::UpdateDetail(const struct FBattleStoreEntry& _battle_store_entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SelectBuffPanel", "UpdateDetail");

	Params::UI_SelectBuffPanel_UpdateDetail Parms{};

	Parms._battle_store_entry = std::move(_battle_store_entry);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassIntroSlot.OnClickBtn
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassIntroSlot::OnClickBtn(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassIntroSlot", "OnClickBtn");

	Params::UI_BattlePassIntroSlot_OnClickBtn Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassIntroSlot.SetActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassIntroSlot::SetActivated(bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassIntroSlot", "SetActivated");

	Params::UI_BattlePassIntroSlot_SetActivated Parms{};

	Parms._is_activated = _is_activated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassLevelBuyPopup.InitBuySlider
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _slider_max_value                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassLevelBuyPopup::InitBuySlider(int32 _slider_max_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassLevelBuyPopup", "InitBuySlider");

	Params::UI_BattlePassLevelBuyPopup_InitBuySlider Parms{};

	Parms._slider_max_value = _slider_max_value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassLevelBuyPopup.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassLevelBuyPopup::InitWidget(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassLevelBuyPopup", "InitWidget");

	Params::UI_BattlePassLevelBuyPopup_InitWidget Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassLevelBuyPopup.OnBuyLevelChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassLevelBuyPopup::OnBuyLevelChanged(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassLevelBuyPopup", "OnBuyLevelChanged");

	Params::UI_BattlePassLevelBuyPopup_OnBuyLevelChanged Parms{};

	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassLevelBuyPopup.OnClickBuyBtn
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassLevelBuyPopup::OnClickBuyBtn(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassLevelBuyPopup", "OnClickBuyBtn");

	Params::UI_BattlePassLevelBuyPopup_OnClickBuyBtn Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassLevelBuyPopup.OnClickItem
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassLevelBuyPopup::OnClickItem(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassLevelBuyPopup", "OnClickItem");

	Params::UI_BattlePassLevelBuyPopup_OnClickItem Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopGridFilterButton.OnClickFilterButton
// (Final, Native, Protected)

void UUI_ShopGridFilterButton::OnClickFilterButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopGridFilterButton", "OnClickFilterButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassRewardPreviewPopup.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_BattlePass               _pass_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassRewardPreviewPopup::InitWidget(const struct FItemID_BattlePass& _pass_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassRewardPreviewPopup", "InitWidget");

	Params::UI_BattlePassRewardPreviewPopup_InitWidget Parms{};

	Parms._pass_id = std::move(_pass_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassRewardPreviewPopup.OnClickItem
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassRewardPreviewPopup::OnClickItem(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassRewardPreviewPopup", "OnClickItem");

	Params::UI_BattlePassRewardPreviewPopup_OnClickItem Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattlePassRewardPreviewPopup.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BattlePassRewardPreviewPopup::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassRewardPreviewPopup", "SetDesc");

	Params::UI_BattlePassRewardPreviewPopup_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattlePassRewardPreviewPopup.ShowBuyPremiumBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattlePassRewardPreviewPopup::ShowBuyPremiumBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattlePassRewardPreviewPopup", "ShowBuyPremiumBtn");

	Params::UI_BattlePassRewardPreviewPopup_ShowBuyPremiumBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattleStorePopup.OnChangedGun
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattleStorePopup::OnChangedGun(const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStorePopup", "OnChangedGun");

	Params::UI_BattleStorePopup_OnChangedGun Parms{};

	Parms._gun_preset = std::move(_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStorePopup.OnChangedMaster
// (Final, Native, Protected)
// Parameters:
// int32                                   _idx_master                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattleStorePopup::OnChangedMaster(int32 _idx_master)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStorePopup", "OnChangedMaster");

	Params::UI_BattleStorePopup_OnChangedMaster Parms{};

	Parms._idx_master = _idx_master;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStorePopup.OnTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattleStorePopup::OnTabChanged(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStorePopup", "OnTabChanged");

	Params::UI_BattleStorePopup_OnTabChanged Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStorePopup.OnUpdateBattleStore
// (Final, Native, Protected, BlueprintCallable)

void UUI_BattleStorePopup::OnUpdateBattleStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStorePopup", "OnUpdateBattleStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStorePopup.UpdateMasterDetail
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   _chara_idx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _gun_preset                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BattleStorePopup::UpdateMasterDetail(int32 _chara_idx, const struct FGunPreset& _gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStorePopup", "UpdateMasterDetail");

	Params::UI_BattleStorePopup_UpdateMasterDetail Parms{};

	Parms._chara_idx = _chara_idx;
	Parms._gun_preset = std::move(_gun_preset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BattleStore_ArmorItem.Clicked
// (Final, Native, Protected)

void UUI_BattleStore_ArmorItem::Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_ArmorItem", "Clicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_ArmorItem.Hovered
// (Final, Native, Protected)

void UUI_BattleStore_ArmorItem::Hovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_ArmorItem", "Hovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_ArmorItem.UnHovered
// (Final, Native, Protected)

void UUI_BattleStore_ArmorItem::UnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_ArmorItem", "UnHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_BuffItem.Clicked
// (Final, Native, Protected)

void UUI_BattleStore_BuffItem::Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_BuffItem", "Clicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_BuffItem.Hovered
// (Final, Native, Protected)

void UUI_BattleStore_BuffItem::Hovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_BuffItem", "Hovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_BuffItem.UnHovered
// (Final, Native, Protected)

void UUI_BattleStore_BuffItem::UnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_BuffItem", "UnHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_BuffItem.UpdateUI
// (Final, Native, Public, BlueprintCallable)

void UUI_BattleStore_BuffItem::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_BuffItem", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopQuickPurchase.GetCurrencyGoodsList
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemID_Currency                 _currency_type                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGoodsID>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGoodsID> UUI_ShopQuickPurchase::GetCurrencyGoodsList(const struct FItemID_Currency& _currency_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopQuickPurchase", "GetCurrencyGoodsList");

	Params::UI_ShopQuickPurchase_GetCurrencyGoodsList Parms{};

	Parms._currency_type = std::move(_currency_type);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ShopQuickPurchase.GetGunTypeGoodsList
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGoodsID>                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGoodsID> UUI_ShopQuickPurchase::GetGunTypeGoodsList(EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopQuickPurchase", "GetGunTypeGoodsList");

	Params::UI_ShopQuickPurchase_GetGunTypeGoodsList Parms{};

	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ShopQuickPurchase.Init
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGoodsID>                 _quick_purchase_goods_list                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EGoodsCategory                          _goods_category                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopQuickPurchase::Init(const TArray<struct FGoodsID>& _quick_purchase_goods_list, EGoodsCategory _goods_category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopQuickPurchase", "Init");

	Params::UI_ShopQuickPurchase_Init Parms{};

	Parms._quick_purchase_goods_list = std::move(_quick_purchase_goods_list);
	Parms._goods_category = _goods_category;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopQuickPurchase.OnUpdateGoods
// (Final, Native, Protected)
// Parameters:
// EUserEvent                              _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopQuickPurchase::OnUpdateGoods(EUserEvent _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopQuickPurchase", "OnUpdateGoods");

	Params::UI_ShopQuickPurchase_OnUpdateGoods Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_HistoryItem.Clicked
// (Final, Native, Protected)

void UUI_BattleStore_HistoryItem::Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_HistoryItem", "Clicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_HistoryItem.Hovered
// (Final, Native, Protected)

void UUI_BattleStore_HistoryItem::Hovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_HistoryItem", "Hovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BattleStore_HistoryItem.UnHovered
// (Final, Native, Protected)

void UUI_BattleStore_HistoryItem::UnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BattleStore_HistoryItem", "UnHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSelectMenuItem.InitBuffDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FConfig_Booster                  _booster_def                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BoosterSelectMenuItem::InitBuffDesc(const struct FConfig_Booster& _booster_def)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSelectMenuItem", "InitBuffDesc");

	Params::UI_BoosterSelectMenuItem_InitBuffDesc Parms{};

	Parms._booster_def = std::move(_booster_def);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BoosterSelectMenuItem.OnClickSelect
// (Final, Native, Protected)

void UUI_BoosterSelectMenuItem::OnClickSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSelectMenuItem", "OnClickSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSelectMenuItem.GetBoosterID
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FItemID UUI_BoosterSelectMenuItem::GetBoosterID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSelectMenuItem", "GetBoosterID");

	Params::UI_BoosterSelectMenuItem_GetBoosterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_SurveyWeb.OnOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           _url                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_SurveyWeb::OnOpen(const class FString& _url)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SurveyWeb", "OnOpen");

	Params::UI_SurveyWeb_OnOpen Parms{};

	Parms._url = std::move(_url);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_BoosterSlotList.OnAck_BoosterUpdate
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FACK_BoosterUpdate               _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BoosterSlotList::OnAck_BoosterUpdate(const struct FACK_BoosterUpdate& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlotList", "OnAck_BoosterUpdate");

	Params::UI_BoosterSlotList_OnAck_BoosterUpdate Parms{};

	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSlotList.OnCreateMenuWidget
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUI_BoosterSlotList::OnCreateMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlotList", "OnCreateMenuWidget");

	Params::UI_BoosterSlotList_OnCreateMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BoosterSlotList.OnMenuOpenChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_open                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BoosterSlotList::OnMenuOpenChanged(bool _is_open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlotList", "OnMenuOpenChanged");

	Params::UI_BoosterSlotList_OnMenuOpenChanged Parms{};

	Parms._is_open = _is_open;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BoosterSlotList.OnSelectBoosterSlot
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _slot_index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BoosterSlotList::OnSelectBoosterSlot(int32 _slot_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BoosterSlotList", "OnSelectBoosterSlot");

	Params::UI_BoosterSlotList_OnSelectBoosterSlot Parms{};

	Parms._slot_index = _slot_index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Bounty_Progress.CancelTimer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBountyActionType                       _bounty_action_type                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _hide_widget                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Bounty_Progress::CancelTimer(EBountyActionType _bounty_action_type, const bool _hide_widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Bounty_Progress", "CancelTimer");

	Params::UI_Bounty_Progress_CancelTimer Parms{};

	Parms._bounty_action_type = _bounty_action_type;
	Parms._hide_widget = _hide_widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Bounty_Progress.DriveTimer
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Bounty_Progress::DriveTimer(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Bounty_Progress", "DriveTimer");

	Params::UI_Bounty_Progress_DriveTimer Parms{};

	Parms._delta = _delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Bounty_Progress.ResetTimerVars
// (Native, Event, Public, BlueprintEvent)

void UUI_Bounty_Progress::ResetTimerVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Bounty_Progress", "ResetTimerVars");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Bounty_Progress.SetBountyActionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBountyActionType                       _bounty_action_type                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Bounty_Progress::SetBountyActionType(EBountyActionType _bounty_action_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Bounty_Progress", "SetBountyActionType");

	Params::UI_Bounty_Progress_SetBountyActionType Parms{};

	Parms._bounty_action_type = _bounty_action_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Bounty_Progress.StartTimer
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBountyActionType                       _bounty_action_type                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _start_time                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _max_time                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _reverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool _end_success)>      _proc                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Bounty_Progress::StartTimer(EBountyActionType _bounty_action_type, float _start_time, float _max_time, bool _reverse, const TDelegate<void(bool _end_success)>& _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Bounty_Progress", "StartTimer");

	Params::UI_Bounty_Progress_StartTimer Parms{};

	Parms._bounty_action_type = _bounty_action_type;
	Parms._start_time = _start_time;
	Parms._max_time = _max_time;
	Parms._reverse = _reverse;
	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BriefUserSlot.GetBriefToolTipEntries
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FHoverMenuEntry>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FHoverMenuEntry> UUI_BriefUserSlot::GetBriefToolTipEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "GetBriefToolTipEntries");

	Params::UI_BriefUserSlot_GetBriefToolTipEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BriefUserSlot.InitContext
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _brief_user                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUserProfileType                        _as                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::InitContext(class UUserProfile* _brief_user, EUserProfileType _as)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "InitContext");

	Params::UI_BriefUserSlot_InitContext Parms{};

	Parms._brief_user = _brief_user;
	Parms._as = _as;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BriefUserSlot.SetActivePartyInvitingText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::SetActivePartyInvitingText(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "SetActivePartyInvitingText");

	Params::UI_BriefUserSlot_SetActivePartyInvitingText Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BriefUserSlot.SetNickNameColor
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateColor                      _color                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::SetNickNameColor(const struct FSlateColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "SetNickNameColor");

	Params::UI_BriefUserSlot_SetNickNameColor Parms{};

	Parms._color = std::move(_color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BriefUserSlot.SetNickNameText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::SetNickNameText(const class FText& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "SetNickNameText");

	Params::UI_BriefUserSlot_SetNickNameText Parms{};

	Parms._nickname = std::move(_nickname);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BriefUserSlot.SetStateColor
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateColor                      _color                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::SetStateColor(const struct FSlateColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "SetStateColor");

	Params::UI_BriefUserSlot_SetStateColor Parms{};

	Parms._color = std::move(_color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BriefUserSlot.SetStateText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _state                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::SetStateText(const class FText& _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "SetStateText");

	Params::UI_BriefUserSlot_SetStateText Parms{};

	Parms._state = std::move(_state);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BriefUserSlot.UpdateContext
// (Final, Native, Public, BlueprintCallable)

void UUI_BriefUserSlot::UpdateContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "UpdateContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BriefUserSlot.UpdateProfileCard
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UUserProfile*                     _brief_user                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BriefUserSlot::UpdateProfileCard(class UUserProfile* _brief_user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "UpdateProfileCard");

	Params::UI_BriefUserSlot_UpdateProfileCard Parms{};

	Parms._brief_user = _brief_user;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BriefUserSlot.GetBriefUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UUserProfile*               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UUserProfile* UUI_BriefUserSlot::GetBriefUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BriefUserSlot", "GetBriefUser");

	Params::UI_BriefUserSlot_GetBriefUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BuffTypeBoxItem.SetTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _buff_category                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_BuffTypeBoxItem::SetTitle(const class FText& _buff_category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BuffTypeBoxItem", "SetTitle");

	Params::UI_BuffTypeBoxItem_SetTitle Parms{};

	Parms._buff_category = std::move(_buff_category);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_BulletTipBtn.CheckAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSet<EBulletTip>                        _available_bullet_tips                                 (Parm, NativeAccessSpecifierPublic)

void UUI_BulletTipBtn::CheckAvailable(const TSet<EBulletTip>& _available_bullet_tips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipBtn", "CheckAvailable");

	Params::UI_BulletTipBtn_CheckAvailable Parms{};

	Parms._available_bullet_tips = std::move(_available_bullet_tips);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BulletTipBtn.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BulletTipBtn::SetGunObject(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipBtn", "SetGunObject");

	Params::UI_BulletTipBtn_SetGunObject Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BulletTipBtn.UpdateUI
// (Final, Native, Public, BlueprintCallable)

void UUI_BulletTipBtn::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipBtn", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BulletTipSelection.AddToastMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBulletTip                              _bullet_tip                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BulletTipSelection::AddToastMessage(EBulletTip _bullet_tip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipSelection", "AddToastMessage");

	Params::UI_BulletTipSelection_AddToastMessage Parms{};

	Parms._bullet_tip = _bullet_tip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BulletTipSelection.CheckBuff
// (Final, Native, Public, BlueprintCallable)

void UUI_BulletTipSelection::CheckBuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipSelection", "CheckBuff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BulletTipSelection.OnUpdateGunAck
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_UpdateGunSpec               _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_BulletTipSelection::OnUpdateGunAck(EResultCode _rcode, const struct FACK_UpdateGunSpec& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipSelection", "OnUpdateGunAck");

	Params::UI_BulletTipSelection_OnUpdateGunAck Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_BulletTipSelection.SelectBulletTip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBulletTip                              _bullet_tip                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BulletTipSelection::SelectBulletTip(EBulletTip _bullet_tip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipSelection", "SelectBulletTip");

	Params::UI_BulletTipSelection_SelectBulletTip Parms{};

	Parms._bullet_tip = _bullet_tip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_BulletTipSelection.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_BulletTipSelection::SetGunObject(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BulletTipSelection", "SetGunObject");

	Params::UI_BulletTipSelection_SetGunObject Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CancellationPolicy.CheckCurrencyType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FItemID_Currency>         _currency_types                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_CancellationPolicy::CheckCurrencyType(const TArray<struct FItemID_Currency>& _currency_types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CancellationPolicy", "CheckCurrencyType");

	Params::UI_CancellationPolicy_CheckCurrencyType Parms{};

	Parms._currency_types = std::move(_currency_types);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CancellationPolicy.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FItemID_Currency>         _currency_types                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_CancellationPolicy::InitWidget(const TArray<struct FItemID_Currency>& _currency_types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CancellationPolicy", "InitWidget");

	Params::UI_CancellationPolicy_InitWidget Parms{};

	Parms._currency_types = std::move(_currency_types);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CancellationPolicy.OpenPolicyURL
// (Final, Native, Protected, BlueprintCallable)

void UUI_CancellationPolicy::OpenPolicyURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CancellationPolicy", "OpenPolicyURL");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CharacterPalette.OnUpdateSelectedCharacters
// (Event, Protected, BlueprintEvent)

void UUI_CharacterPalette::OnUpdateSelectedCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPalette", "OnUpdateSelectedCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_CharacterPalette.IsSelectedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CharacterPalette::IsSelectedCharacter(ECharaType _chara_type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPalette", "IsSelectedCharacter");

	Params::UI_CharacterPalette_IsSelectedCharacter Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CharacterPicker.Ready
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CharacterPicker::Ready()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPicker", "Ready");

	Params::UI_CharacterPicker_Ready Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CharacterPicker.SelectCharacter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CharacterPicker::SelectCharacter(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPicker", "SelectCharacter");

	Params::UI_CharacterPicker_SelectCharacter Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CharacterPicker.GetPickedCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FCharacterInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCharacterInfo UUI_CharacterPicker::GetPickedCharacter(int32 _idx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPicker", "GetPickedCharacter");

	Params::UI_CharacterPicker_GetPickedCharacter Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CharacterPicker.GetPickedCharacterGun
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FGunSpec                   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGunSpec UUI_CharacterPicker::GetPickedCharacterGun(int32 _idx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPicker", "GetPickedCharacterGun");

	Params::UI_CharacterPicker_GetPickedCharacterGun Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CharacterPicker.GetPickedCharacterType
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECharaType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECharaType UUI_CharacterPicker::GetPickedCharacterType(int32 _idx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CharacterPicker", "GetPickedCharacterType");

	Params::UI_CharacterPicker_GetPickedCharacterType Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.POPUP_ChangeMaster.InitEvent
// (Event, Public, BlueprintEvent)

void UPOPUP_ChangeMaster::InitEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("POPUP_ChangeMaster", "InitEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.POPUP_ChangeMaster.SetTimeLimit
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _limit_time_sec                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPOPUP_ChangeMaster::SetTimeLimit(int32 _limit_time_sec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("POPUP_ChangeMaster", "SetTimeLimit");

	Params::POPUP_ChangeMaster_SetTimeLimit Parms{};

	Parms._limit_time_sec = _limit_time_sec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ChatSlot.SetChannelTypeText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _channel_type_text                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetChannelTypeText(const class FText& _channel_type_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetChannelTypeText");

	Params::UI_ChatSlot_SetChannelTypeText Parms{};

	Parms._channel_type_text = std::move(_channel_type_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetChannelTypeTextColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetChannelTypeTextColor(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetChannelTypeTextColor");

	Params::UI_ChatSlot_SetChannelTypeTextColor Parms{};

	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetChat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EChatType                               _chat_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             _chat_text                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ChatSlot::SetChat(EChatType _chat_type, const class FText& _nickname, const class FText& _chat_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetChat");

	Params::UI_ChatSlot_SetChat Parms{};

	Parms._chat_type = _chat_type;
	Parms._nickname = std::move(_nickname);
	Parms._chat_text = std::move(_chat_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ChatSlot.SetChatTypeText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _chat_type_text                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetChatTypeText(const class FText& _chat_type_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetChatTypeText");

	Params::UI_ChatSlot_SetChatTypeText Parms{};

	Parms._chat_type_text = std::move(_chat_type_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetChatTypeTextColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetChatTypeTextColor(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetChatTypeTextColor");

	Params::UI_ChatSlot_SetChatTypeTextColor Parms{};

	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetContextTextColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetContextTextColor(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetContextTextColor");

	Params::UI_ChatSlot_SetContextTextColor Parms{};

	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetFont
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateFontInfo                   _font_info                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetFont(const struct FSlateFontInfo& _font_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetFont");

	Params::UI_ChatSlot_SetFont Parms{};

	Parms._font_info = std::move(_font_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetNicknameTextColor
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetNicknameTextColor(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetNicknameTextColor");

	Params::UI_ChatSlot_SetNicknameTextColor Parms{};

	Parms._color = std::move(_color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.SetUseChatTypeText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_use                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ChatSlot::SetUseChatTypeText(bool _is_use)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "SetUseChatTypeText");

	Params::UI_ChatSlot_SetUseChatTypeText Parms{};

	Parms._is_use = _is_use;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ChatSlot.UpdateBackgroundSize
// (Final, Native, Public, BlueprintCallable)

void UUI_ChatSlot::UpdateBackgroundSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ChatSlot", "UpdateBackgroundSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CheatBase.OnBindChara
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _pawn                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CheatBase::OnBindChara(class ACharaBase* _pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CheatBase", "OnBindChara");

	Params::UI_CheatBase_OnBindChara Parms{};

	Parms._pawn = _pawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_CLBStorePopup.OnClearAllItems
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CLBStorePopup::OnClearAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CLBStorePopup", "OnClearAllItems");

	Params::UI_CLBStorePopup_OnClearAllItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_CLBStorePopup.OnFinishAllItems
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CLBStorePopup::OnFinishAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CLBStorePopup", "OnFinishAllItems");

	Params::UI_CLBStorePopup_OnFinishAllItems Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_CLBStorePopup.OnInitializeItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCLB_StoreItem*                   Item                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Item_index                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CLBStorePopup::OnInitializeItem(class UCLB_StoreItem* Item, int32 Item_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CLBStorePopup", "OnInitializeItem");

	Params::UI_CLBStorePopup_OnInitializeItem Parms{};

	Parms.Item = Item;
	Parms.Item_index = Item_index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_CompetitionBrief.InitWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CompetitionBrief::InitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CompetitionBrief", "InitWidget");

	Params::UI_CompetitionBrief_InitWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CompetitionRankingListItem.UpdateUI
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CompetitionRankingListItem::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CompetitionRankingListItem", "UpdateUI");

	Params::UI_CompetitionRankingListItem_UpdateUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Comp_Indicator_HPBar.SetArmor
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _armor_percent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Comp_Indicator_HPBar::SetArmor(float _armor_percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Comp_Indicator_HPBar", "SetArmor");

	Params::UI_Comp_Indicator_HPBar_SetArmor Parms{};

	Parms._armor_percent = _armor_percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Comp_Indicator_HPBar.SetArmor_Interp
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _armor_percent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Comp_Indicator_HPBar::SetArmor_Interp(float _armor_percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Comp_Indicator_HPBar", "SetArmor_Interp");

	Params::UI_Comp_Indicator_HPBar_SetArmor_Interp Parms{};

	Parms._armor_percent = _armor_percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Comp_Indicator_HPBar.SetArmorTypeIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Comp_Indicator_HPBar::SetArmorTypeIcon(const TSoftObjectPtr<class UTexture2D>& _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Comp_Indicator_HPBar", "SetArmorTypeIcon");

	Params::UI_Comp_Indicator_HPBar_SetArmorTypeIcon Parms{};

	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Comp_Indicator_HPBar.SetHP
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _hp_percent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Comp_Indicator_HPBar::SetHP(float _hp_percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Comp_Indicator_HPBar", "SetHP");

	Params::UI_Comp_Indicator_HPBar_SetHP Parms{};

	Parms._hp_percent = _hp_percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Comp_Indicator_HPBar.SetHP_Interp
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _hp_percent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Comp_Indicator_HPBar::SetHP_Interp(float _hp_percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Comp_Indicator_HPBar", "SetHP_Interp");

	Params::UI_Comp_Indicator_HPBar_SetHP_Interp Parms{};

	Parms._hp_percent = _hp_percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Comp_Indicator_HPBar.UpdateDistance
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _distance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Comp_Indicator_HPBar::UpdateDistance(float _distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Comp_Indicator_HPBar", "UpdateDistance");

	Params::UI_Comp_Indicator_HPBar_UpdateDistance Parms{};

	Parms._distance = _distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ControlPowerMasterList.BuildMasterList
// (Final, Native, Public, BlueprintCallable)

void UUI_ControlPowerMasterList::BuildMasterList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ControlPowerMasterList", "BuildMasterList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ControlPowerMasterList.HasLackCPInSelectedMaster
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ControlPowerMasterList::HasLackCPInSelectedMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ControlPowerMasterList", "HasLackCPInSelectedMaster");

	Params::UI_ControlPowerMasterList_HasLackCPInSelectedMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ControlPowerMasterList.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ControlPowerMasterList::SetGunObject(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ControlPowerMasterList", "SetGunObject");

	Params::UI_ControlPowerMasterList_SetGunObject Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ControlPowerMasterList.UpdateUI
// (Event, Public, BlueprintEvent)
// Parameters:
// class ULVData_ControlPowerMaster*       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ControlPowerMasterList::UpdateUI(class ULVData_ControlPowerMaster* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ControlPowerMasterList", "UpdateUI");

	Params::UI_ControlPowerMasterList_UpdateUI Parms{};

	Parms._item = _item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_CurrencyBox.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemID_Currency                 _currency_type                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CurrencyBox::InitWidget(const struct FItemID_Currency& _currency_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CurrencyBox", "InitWidget");

	Params::UI_CurrencyBox_InitWidget Parms{};

	Parms._currency_type = std::move(_currency_type);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CurrencyBox.OnClickPurchaseCurrency
// (Final, Native, Protected)

void UUI_CurrencyBox::OnClickPurchaseCurrency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CurrencyBox", "OnClickPurchaseCurrency");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CurrencyBox.OnClickWallet
// (Final, Native, Protected)

void UUI_CurrencyBox::OnClickWallet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CurrencyBox", "OnClickWallet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CurrencyBox.OnUpdateUser
// (Final, Native, Protected)
// Parameters:
// EUserEvent                              _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CurrencyBox::OnUpdateUser(EUserEvent _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CurrencyBox", "OnUpdateUser");

	Params::UI_CurrencyBox_OnUpdateUser Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CustomGame_Slot.OnBanThisPlayer
// (Event, Protected, BlueprintEvent)

void UUI_CustomGame_Slot::OnBanThisPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "OnBanThisPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_CustomGame_Slot.OnUpdateSlot
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::OnUpdateSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "OnUpdateSlot");

	Params::UI_CustomGame_Slot_OnUpdateSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.OnUpdateState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::OnUpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "OnUpdateState");

	Params::UI_CustomGame_Slot_OnUpdateState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.RequestBan
// (Final, Native, Protected, BlueprintCallable)

void UUI_CustomGame_Slot::RequestBan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "RequestBan");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CustomGame_Slot.RequestCloseSlot
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _close                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CustomGame_Slot::RequestCloseSlot(bool _close)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "RequestCloseSlot");

	Params::UI_CustomGame_Slot_RequestCloseSlot Parms{};

	Parms._close = _close;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CustomGame_Slot.RequestMove
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCustomGameSlotIndex             _to                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CustomGame_Slot::RequestMove(const struct FCustomGameSlotIndex& _to)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "RequestMove");

	Params::UI_CustomGame_Slot_RequestMove Parms{};

	Parms._to = std::move(_to);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CustomGame_Slot.SetSlotIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CustomGame_Slot::SetSlotIndex(const struct FCustomGameSlotIndex& _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "SetSlotIndex");

	Params::UI_CustomGame_Slot_SetSlotIndex Parms{};

	Parms._idx = std::move(_idx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CustomGame_Slot.ToggleCloseSlot
// (Final, Native, Protected, BlueprintCallable)

void UUI_CustomGame_Slot::ToggleCloseSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "ToggleCloseSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_CustomGame_Slot.GameState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWaitingRoomGameState*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWaitingRoomGameState* UUI_CustomGame_Slot::GameState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GameState");

	Params::UI_CustomGame_Slot_GameState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.GetBoundPlayerState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWaitingRoomPlayerState*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWaitingRoomPlayerState* UUI_CustomGame_Slot::GetBoundPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GetBoundPlayerState");

	Params::UI_CustomGame_Slot_GetBoundPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.GetNickname
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserName                        ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserName UUI_CustomGame_Slot::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GetNickname");

	Params::UI_CustomGame_Slot_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.GetPC
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWaitingRoomPlayerController*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWaitingRoomPlayerController* UUI_CustomGame_Slot::GetPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GetPC");

	Params::UI_CustomGame_Slot_GetPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.GetSlot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCustomGameSlot            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FCustomGameSlot UUI_CustomGame_Slot::GetSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GetSlot");

	Params::UI_CustomGame_Slot_GetSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.GetSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCustomGameSlotIndex       ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FCustomGameSlotIndex UUI_CustomGame_Slot::GetSlotIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GetSlotIndex");

	Params::UI_CustomGame_Slot_GetSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.GetUserID
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UUI_CustomGame_Slot::GetUserID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "GetUserID");

	Params::UI_CustomGame_Slot_GetUserID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsBound
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsBound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsBound");

	Params::UI_CustomGame_Slot_IsBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsClosedSlot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsClosedSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsClosedSlot");

	Params::UI_CustomGame_Slot_IsClosedSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsFriend
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsFriend() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsFriend");

	Params::UI_CustomGame_Slot_IsFriend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsLocalRoomLeader
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsLocalRoomLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsLocalRoomLeader");

	Params::UI_CustomGame_Slot_IsLocalRoomLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsLocalRoomManager
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsLocalRoomManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsLocalRoomManager");

	Params::UI_CustomGame_Slot_IsLocalRoomManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsMine
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsMine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsMine");

	Params::UI_CustomGame_Slot_IsMine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsRoomLeader
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsRoomLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsRoomLeader");

	Params::UI_CustomGame_Slot_IsRoomLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomGame_Slot.IsRoomManager
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_CustomGame_Slot::IsRoomManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomGame_Slot", "IsRoomManager");

	Params::UI_CustomGame_Slot_IsRoomManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_CustomItemUsing.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_CustomItemUsing::Open(class UInvenItem* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CustomItemUsing", "Open");

	Params::UI_CustomItemUsing_Open Parms{};

	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_DamageViewer.OnShow
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FDamagedData                     _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_DamageViewer::OnShow(const struct FDamagedData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_DamageViewer", "OnShow");

	Params::UI_DamageViewer_OnShow Parms{};

	Parms._data = std::move(_data);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Debug_CharaBase.OnChangeSwitchIndex
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Debug_CharaBase::OnChangeSwitchIndex(int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Debug_CharaBase", "OnChangeSwitchIndex");

	Params::UI_Debug_CharaBase_OnChangeSwitchIndex Parms{};

	Parms._index = _index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Debug_CharaBase.OnChangeTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Debug_CharaBase::OnChangeTarget(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Debug_CharaBase", "OnChangeTarget");

	Params::UI_Debug_CharaBase_OnChangeTarget Parms{};

	Parms._chara = _chara;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Debug_CharaBase.SetSwitchIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _index                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Debug_CharaBase::SetSwitchIndex(int32 _index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Debug_CharaBase", "SetSwitchIndex");

	Params::UI_Debug_CharaBase_SetSwitchIndex Parms{};

	Parms._index = _index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Debug_CharaBase.GetSwitchIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUI_Debug_CharaBase::GetSwitchIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Debug_CharaBase", "GetSwitchIndex");

	Params::UI_Debug_CharaBase_GetSwitchIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ResultBase.ChangeLevelToLobby
// (Final, Native, Public, BlueprintCallable)

void UUI_ResultBase::ChangeLevelToLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ResultBase", "ChangeLevelToLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ResultBase.FillUpWithMockup
// (Final, Native, Public, BlueprintCallable)

void UUI_ResultBase::FillUpWithMockup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ResultBase", "FillUpWithMockup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ResultBase.GetFocusControl
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UUI_ResultBase::GetFocusControl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ResultBase", "GetFocusControl");

	Params::UI_ResultBase_GetFocusControl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_EquippedGunParts.OnUpdatedGunSpec
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EquippedGunParts::OnUpdatedGunSpec(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EquippedGunParts", "OnUpdatedGunSpec");

	Params::UI_EquippedGunParts_OnUpdatedGunSpec Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EquippedGunParts.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EquippedGunParts::SetGunObject(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EquippedGunParts", "SetGunObject");

	Params::UI_EquippedGunParts_SetGunObject Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventAttendance.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventAttendance::InitWidget(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventAttendance", "InitWidget");

	Params::UI_EventAttendance_InitWidget Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventAttendance.SetFromEventInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEventPageInfo                   _event_page_info                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventAttendance::SetFromEventInfo(const struct FEventPageInfo& _event_page_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventAttendance", "SetFromEventInfo");

	Params::UI_EventAttendance_SetFromEventInfo Parms{};

	Parms._event_page_info = std::move(_event_page_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventCollection.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventCollection::InitWidget(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventCollection", "InitWidget");

	Params::UI_EventCollection_InitWidget Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RewardContainer.CreateRewardWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UUI_RewardItem*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_RewardItem* UUI_RewardContainer::CreateRewardWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardContainer", "CreateRewardWidget");

	Params::UI_RewardContainer_CreateRewardWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_RewardContainer.SetRewardState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERewardItemState                        _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RewardContainer::SetRewardState(ERewardItemState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RewardContainer", "SetRewardState");

	Params::UI_RewardContainer_SetRewardState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventCurrencyTab.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventCurrencyTab::InitWidget(const struct FItemID_Currency& _currency_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventCurrencyTab", "InitWidget");

	Params::UI_EventCurrencyTab_InitWidget Parms{};

	Parms._currency_id = std::move(_currency_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventCurrencyTab.OpenEventShop
// (Final, Native, Protected, BlueprintCallable)

void UUI_EventCurrencyTab::OpenEventShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventCurrencyTab", "OpenEventShop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventCurrencyTab.SetAmount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _Amount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventCurrencyTab::SetAmount(int32 _Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventCurrencyTab", "SetAmount");

	Params::UI_EventCurrencyTab_SetAmount Parms{};

	Parms._Amount = _Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventCurrencyTab.SetIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventCurrencyTab::SetIcon(const TSoftObjectPtr<class UTexture2D>& _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventCurrencyTab", "SetIcon");

	Params::UI_EventCurrencyTab_SetIcon Parms{};

	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventKeepConnect.CheckReawrdItemStateUpdated
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_EventKeepConnect::CheckReawrdItemStateUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventKeepConnect", "CheckReawrdItemStateUpdated");

	Params::UI_EventKeepConnect_CheckReawrdItemStateUpdated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_EventKeepConnect.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventKeepConnect::InitWidget(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventKeepConnect", "InitWidget");

	Params::UI_EventKeepConnect_InitWidget Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventKeepConnect.SetFromEventInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEventPageInfo                   _event_page_info                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventKeepConnect::SetFromEventInfo(const struct FEventPageInfo& _event_page_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventKeepConnect", "SetFromEventInfo");

	Params::UI_EventKeepConnect_SetFromEventInfo Parms{};

	Parms._event_page_info = std::move(_event_page_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventKeepConnect.ShowNextRemainMinutes
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _minutes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventKeepConnect::ShowNextRemainMinutes(bool _show, int32 _minutes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventKeepConnect", "ShowNextRemainMinutes");

	Params::UI_EventKeepConnect_ShowNextRemainMinutes Parms{};

	Parms._show = _show;
	Parms._minutes = _minutes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventMission.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_EventPage                _event_page_id                                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventMission::InitWidget(const struct FItemID_EventPage& _event_page_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMission", "InitWidget");

	Params::UI_EventMission_InitWidget Parms{};

	Parms._event_page_id = std::move(_event_page_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventMission.SetFromEventInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FEventPageInfo                   _event_page_info                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventMission::SetFromEventInfo(const struct FEventPageInfo& _event_page_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMission", "SetFromEventInfo");

	Params::UI_EventMission_SetFromEventInfo Parms{};

	Parms._event_page_info = std::move(_event_page_info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventMissionSlot.OnUpdateMission
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventMissionSlot::OnUpdateMission(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "OnUpdateMission");

	Params::UI_EventMissionSlot_OnUpdateMission Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventMissionSlot.RequestReward
// (Final, Native, Protected, BlueprintCallable)

void UUI_EventMissionSlot::RequestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "RequestReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventMissionSlot.SetCanReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_reward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventMissionSlot::SetCanReward(bool _can_reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "SetCanReward");

	Params::UI_EventMissionSlot_SetCanReward Parms{};

	Parms._can_reward = _can_reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventMissionSlot.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventMissionSlot::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "SetDesc");

	Params::UI_EventMissionSlot_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventMissionSlot.SetProgress
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EMissionProgressType                    _progress_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _rate                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _target_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventMissionSlot::SetProgress(EMissionProgressType _progress_type, const float& _rate, int32 _count, int32 _target_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "SetProgress");

	Params::UI_EventMissionSlot_SetProgress Parms{};

	Parms._progress_type = _progress_type;
	Parms._rate = _rate;
	Parms._count = _count;
	Parms._target_count = _target_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventMissionSlot.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventMissionSlot::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "SetTitle");

	Params::UI_EventMissionSlot_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventMissionSlot.ShowGoToButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventMissionSlot::ShowGoToButton(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventMissionSlot", "ShowGoToButton");

	Params::UI_EventMissionSlot_ShowGoToButton Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopup.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_EventPagePopup::InitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopup", "InitWidget");

	Params::UI_EventPagePopup_InitWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_EventPagePopupContainer.EnableRewardButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_enable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::EnableRewardButton(bool _is_enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "EnableRewardButton");

	Params::UI_EventPagePopupContainer_EnableRewardButton Parms{};

	Parms._is_enable = _is_enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.OnClickRewardBtn
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_option                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::OnClickRewardBtn(bool _is_option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "OnClickRewardBtn");

	Params::UI_EventPagePopupContainer_OnClickRewardBtn Parms{};

	Parms._is_option = _is_option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventPagePopupContainer.OnInitWidget
// (Event, Protected, BlueprintEvent)

void UUI_EventPagePopupContainer::OnInitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "OnInitWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_EventPagePopupContainer.OnUpdateEventPageInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FEventPageInfo                   _event_page_info                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::OnUpdateEventPageInfo(const struct FEventPageInfo& _event_page_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "OnUpdateEventPageInfo");

	Params::UI_EventPagePopupContainer_OnUpdateEventPageInfo Parms{};

	Parms._event_page_info = std::move(_event_page_info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetCompleteCountRewardItems
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _reward_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetCompleteCountRewardItems(int32 _count, int32 _reward_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetCompleteCountRewardItems");

	Params::UI_EventPagePopupContainer_SetCompleteCountRewardItems Parms{};

	Parms._count = _count;
	Parms._reward_count = _reward_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetDailyResetTimer
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FDateTime                        _end_at                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _alert_hour                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetDailyResetTimer(const struct FDateTime& _end_at, int32 _alert_hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetDailyResetTimer");

	Params::UI_EventPagePopupContainer_SetDailyResetTimer Parms{};

	Parms._end_at = std::move(_end_at);
	Parms._alert_hour = _alert_hour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetDate
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           _start_at_str                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _end_at_str                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetDate(const class FString& _start_at_str, const class FString& _end_at_str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetDate");

	Params::UI_EventPagePopupContainer_SetDate Parms{};

	Parms._start_at_str = std::move(_start_at_str);
	Parms._end_at_str = std::move(_end_at_str);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetDesc");

	Params::UI_EventPagePopupContainer_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetEventCurrency
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetEventCurrency(const struct FItemID_Currency& _currency_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetEventCurrency");

	Params::UI_EventPagePopupContainer_SetEventCurrency Parms{};

	Parms._currency_id = std::move(_currency_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetRemainTimer
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FDateTime                        _end_at                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _alert_hour                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetRemainTimer(const struct FDateTime& _end_at, int32 _alert_hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetRemainTimer");

	Params::UI_EventPagePopupContainer_SetRemainTimer Parms{};

	Parms._end_at = std::move(_end_at);
	Parms._alert_hour = _alert_hour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetRepeatRewardItem
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FRewardItem                      _reward_item                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   _repeat_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _repeat_reward_count                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERewardItemState                        _reward_state                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetRepeatRewardItem(const struct FRewardItem& _reward_item, int32 _repeat_count, int32 _repeat_reward_count, ERewardItemState _reward_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetRepeatRewardItem");

	Params::UI_EventPagePopupContainer_SetRepeatRewardItem Parms{};

	Parms._reward_item = std::move(_reward_item);
	Parms._repeat_count = _repeat_count;
	Parms._repeat_reward_count = _repeat_reward_count;
	Parms._reward_state = _reward_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetTextures
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _bubble_image                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      _speecher_image                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetTextures(const struct FSlateBrush& _bubble_image, const struct FSlateBrush& _speecher_image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetTextures");

	Params::UI_EventPagePopupContainer_SetTextures Parms{};

	Parms._bubble_image = std::move(_bubble_image);
	Parms._speecher_image = std::move(_speecher_image);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventPagePopupContainer::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "SetTitle");

	Params::UI_EventPagePopupContainer_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupContainer.UpdateFromEventInfo
// (Final, Native, Protected, BlueprintCallable)

void UUI_EventPagePopupContainer::UpdateFromEventInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupContainer", "UpdateFromEventInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventPagePopupTab.OnButtonClicked
// (Final, Native, Protected, BlueprintCallable)

void UUI_EventPagePopupTab::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupTab", "OnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventPagePopupTab.SetBackground
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _brush                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventPagePopupTab::SetBackground(const struct FSlateBrush& _brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupTab", "SetBackground");

	Params::UI_EventPagePopupTab_SetBackground Parms{};

	Parms._brush = std::move(_brush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupTab.SetTitle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_EventPagePopupTab::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupTab", "SetTitle");

	Params::UI_EventPagePopupTab_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_EventPagePopupTab.ShowRedDot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPagePopupTab::ShowRedDot(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPagePopupTab", "ShowRedDot");

	Params::UI_EventPagePopupTab_ShowRedDot Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RoundCountDown.SetCount
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RoundCountDown::SetCount(int32 _count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RoundCountDown", "SetCount");

	Params::UI_RoundCountDown_SetCount Parms{};

	Parms._count = _count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventPageRewardItem.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERewardItemState                        _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_EventPageRewardItem::SetState(ERewardItemState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPageRewardItem", "SetState");

	Params::UI_EventPageRewardItem_SetState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_EventPageRewardItem.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERewardItemState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ERewardItemState UUI_EventPageRewardItem::GetState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPageRewardItem", "GetState");

	Params::UI_EventPageRewardItem_GetState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_EventPageRewardItem.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUI_EventPageRewardItem::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_EventPageRewardItem", "GetValue");

	Params::UI_EventPageRewardItem_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_FloatingGuide.ShowFloatingGuide
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _Name                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          _parent                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUI_FloatingGuide>    _Class                                                 (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFloatingGuidePosition                  _position                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        _Space                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UUserWidget>          _sub_widget_type                                       (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _help_url                                              (Parm, NativeAccessSpecifierPublic)
// float                                   _show_duration                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUI_FloatingGuide*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_FloatingGuide* UUI_FloatingGuide::ShowFloatingGuide(class UObject* _world_ctx, class FName _Name, class UWidget* _parent, TSubclassOf<class UUI_FloatingGuide> _Class, EFloatingGuidePosition _position, const struct FVector2D& _Space, TSubclassOf<class UUserWidget> _sub_widget_type, const class FText& _help_url, float _show_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UI_FloatingGuide", "ShowFloatingGuide");

	Params::UI_FloatingGuide_ShowFloatingGuide Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Name = _Name;
	Parms._parent = _parent;
	Parms._Class = _Class;
	Parms._position = _position;
	Parms._Space = std::move(_Space);
	Parms._sub_widget_type = _sub_widget_type;
	Parms._help_url = std::move(_help_url);
	Parms._show_duration = _show_duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_FloatingGuide.OnInsertSubWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUserWidget*                      _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_FloatingGuide::OnInsertSubWidget(class UUserWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FloatingGuide", "OnInsertSubWidget");

	Params::UI_FloatingGuide_OnInsertSubWidget Parms{};

	Parms._widget = _widget;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_NotifySlot.DriveLifeTimeGauge
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _percent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_NotifySlot::DriveLifeTimeGauge(float _percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NotifySlot", "DriveLifeTimeGauge");

	Params::UI_NotifySlot_DriveLifeTimeGauge Parms{};

	Parms._percent = _percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_NotifySlot.ForceFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _force_immediately                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_NotifySlot::ForceFinish(bool _force_immediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NotifySlot", "ForceFinish");

	Params::UI_NotifySlot_ForceFinish Parms{};

	Parms._force_immediately = _force_immediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_NotifySlot.ShowLifeTimeGauge
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_NotifySlot::ShowLifeTimeGauge(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NotifySlot", "ShowLifeTimeGauge");

	Params::UI_NotifySlot_ShowLifeTimeGauge Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.WIDGET_TutorialPointUI.OnUpdateArea
// (Event, Protected, BlueprintEvent)

void UWIDGET_TutorialPointUI::OnUpdateArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TutorialPointUI", "OnUpdateArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_FriendNotifySlot.SetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_FriendNotifySlot::SetText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FriendNotifySlot", "SetText");

	Params::UI_FriendNotifySlot_SetText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_GameNotify.InitWidget
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   _duration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GameNotify::InitWidget(const class FText& _text, float _duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameNotify", "InitWidget");

	Params::UI_GameNotify_InitWidget Parms{};

	Parms._text = std::move(_text);
	Parms._duration = _duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GameNotify_ContentUnlockerContainer.CloseAllUnlockers
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _select                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GameNotify_ContentUnlockerContainer::CloseAllUnlockers(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameNotify_ContentUnlockerContainer", "CloseAllUnlockers");

	Params::UI_GameNotify_ContentUnlockerContainer_CloseAllUnlockers Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GameResult_BackBase.InitWidget
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// ETeams                                  _my_team                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattleDecisionDetail            _result                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_GameResult_BackBase::InitWidget(ETeams _my_team, const struct FBattleDecisionDetail& _result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_BackBase", "InitWidget");

	Params::UI_GameResult_BackBase_InitWidget Parms{};

	Parms._my_team = _my_team;
	Parms._result = std::move(_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_GameResult_Report.ChangeLevelToLobby
// (Final, Native, Public, BlueprintCallable)

void UUI_GameResult_Report::ChangeLevelToLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "ChangeLevelToLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GameResult_Report.InitMissions
// (Final, Native, Protected, BlueprintCallable)

void UUI_GameResult_Report::InitMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "InitMissions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GameResult_Report.OnACK_GetUserTierInfo
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadUserTierInfo            _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_GameResult_Report::OnACK_GetUserTierInfo(EResultCode _rcode, const struct FACK_ReadUserTierInfo& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "OnACK_GetUserTierInfo");

	Params::UI_GameResult_Report_OnACK_GetUserTierInfo Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GameResult_Report.OnInit
// (Event, Public, BlueprintEvent)

void UUI_GameResult_Report::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_GameResult_Report.OnUpdateAttainmentUI
// (Event, Public, BlueprintEvent)

void UUI_GameResult_Report::OnUpdateAttainmentUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "OnUpdateAttainmentUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_GameResult_Report.SetDecision
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ETeams                                  _my_team                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _my_nickname                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBattleDecisionDetail            _decision                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_GameResult_Report::SetDecision(ETeams _my_team, const struct FUserName& _my_nickname, const struct FBattleDecisionDetail& _decision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "SetDecision");

	Params::UI_GameResult_Report_SetDecision Parms{};

	Parms._my_team = _my_team;
	Parms._my_nickname = std::move(_my_nickname);
	Parms._decision = std::move(_decision);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GameResult_Report.UpdateUI
// (Final, Native, Public, BlueprintCallable)

void UUI_GameResult_Report::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameResult_Report", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GNB_LobbyBase.OnUpdateUser
// (Event, Protected, BlueprintEvent)
// Parameters:
// EUserEvent                              _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GNB_LobbyBase::OnUpdateUser(EUserEvent _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GNB_LobbyBase", "OnUpdateUser");

	Params::UI_GNB_LobbyBase_OnUpdateUser Parms{};

	Parms._event = _event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_GNB_LobbyBase.SetCurrencyBoxList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FItemID_Currency>         _currency_ids                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    _use_wallet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _use_quick_purchase                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GNB_LobbyBase::SetCurrencyBoxList(const TArray<struct FItemID_Currency>& _currency_ids, bool _use_wallet, bool _use_quick_purchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GNB_LobbyBase", "SetCurrencyBoxList");

	Params::UI_GNB_LobbyBase_SetCurrencyBoxList Parms{};

	Parms._currency_ids = std::move(_currency_ids);
	Parms._use_wallet = _use_wallet;
	Parms._use_quick_purchase = _use_quick_purchase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GNB_LobbyBase.UpdateContext
// (Final, Native, Public, BlueprintCallable)

void UUI_GNB_LobbyBase::UpdateContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GNB_LobbyBase", "UpdateContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunCustomizePopupBase.Init
// (Native, Event, Protected, BlueprintEvent)

void UUI_GunCustomizePopupBase::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunCustomizePopupBase", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunCustomizePopupBase.OnBeforeClose_CallBack
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPopupBase*                       _popup                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _ctrl_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunCustomizePopupBase::OnBeforeClose_CallBack(const class UPopupBase* _popup, class FName _ctrl_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunCustomizePopupBase", "OnBeforeClose_CallBack");

	Params::UI_GunCustomizePopupBase_OnBeforeClose_CallBack Parms{};

	Parms._popup = _popup;
	Parms._ctrl_id = _ctrl_id;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_GunCustomizePopupBase.SetGunType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunCustomizePopupBase::SetGunType(EGunType _gun_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunCustomizePopupBase", "SetGunType");

	Params::UI_GunCustomizePopupBase_SetGunType Parms{};

	Parms._gun_type = _gun_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunListItem.IsSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_GunListItem::IsSelection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunListItem", "IsSelection");

	Params::UI_GunListItem_IsSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunNPartsListViews.BuildGunPartsListView
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EGunPartsSlot                           _gun_parts_slot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunType                                _gun_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _selected_parts_id                                     (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::BuildGunPartsListView(EGunPartsSlot _gun_parts_slot, EGunType _gun_type, const struct FItemID& _selected_parts_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "BuildGunPartsListView");

	Params::UI_GunNPartsListViews_BuildGunPartsListView Parms{};

	Parms._gun_parts_slot = _gun_parts_slot;
	Parms._gun_type = _gun_type;
	Parms._selected_parts_id = std::move(_selected_parts_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunNPartsListViews.ChangeListView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_selecting_parts                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::ChangeListView(bool _is_selecting_parts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "ChangeListView");

	Params::UI_GunNPartsListViews_ChangeListView Parms{};

	Parms._is_selecting_parts = _is_selecting_parts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunNPartsListViews.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _owner                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGunPreset                       _selected_gun_preset                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::Init(class UObject* _owner, const struct FGunPreset& _selected_gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "Init");

	Params::UI_GunNPartsListViews_Init Parms{};

	Parms._owner = _owner;
	Parms._selected_gun_preset = std::move(_selected_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunNPartsListViews.OnClickCloseBtn
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _select                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::OnClickCloseBtn(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "OnClickCloseBtn");

	Params::UI_GunNPartsListViews_OnClickCloseBtn Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunNPartsListViews.RefreshGunListView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGunPreset                       _selected_gun_preset                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::RefreshGunListView(const struct FGunPreset& _selected_gun_preset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "RefreshGunListView");

	Params::UI_GunNPartsListViews_RefreshGunListView Parms{};

	Parms._selected_gun_preset = std::move(_selected_gun_preset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunNPartsListViews.SetSelectGun
// (Event, Public, BlueprintEvent)
// Parameters:
// class ULVData_Gun*                      _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _from_ctrl                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::SetSelectGun(class ULVData_Gun* _item, bool _from_ctrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "SetSelectGun");

	Params::UI_GunNPartsListViews_SetSelectGun Parms{};

	Parms._item = _item;
	Parms._from_ctrl = _from_ctrl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_GunNPartsListViews.SetSelectGunParts
// (Event, Public, BlueprintEvent)
// Parameters:
// class ULVData_GunParts*                 _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _from_ctrl                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunNPartsListViews::SetSelectGunParts(class ULVData_GunParts* _item, bool _from_ctrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "SetSelectGunParts");

	Params::UI_GunNPartsListViews_SetSelectGunParts Parms{};

	Parms._item = _item;
	Parms._from_ctrl = _from_ctrl;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_GunNPartsListViews.UpdatePartsListState
// (Final, Native, Public)

void UUI_GunNPartsListViews::UpdatePartsListState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunNPartsListViews", "UpdatePartsListState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsListItem.BindItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGunPartsSlot                           _current_slot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _current_gun_obj                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsListItem::BindItem(EGunPartsSlot _current_slot, class UInvenItem* _item, class UGunObject* _current_gun_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsListItem", "BindItem");

	Params::UI_GunPartsListItem_BindItem Parms{};

	Parms._current_slot = _current_slot;
	Parms._item = _item;
	Parms._current_gun_obj = _current_gun_obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsListItem.OnCheckBoxStateChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsListItem::OnCheckBoxStateChanged(bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsListItem", "OnCheckBoxStateChanged");

	Params::UI_GunPartsListItem_OnCheckBoxStateChanged Parms{};

	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsListItem.SetSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsListItem::SetSelection(bool _is_selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsListItem", "SetSelection");

	Params::UI_GunPartsListItem_SetSelection Parms{};

	Parms._is_selected = _is_selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlot.BtnClicked
// (Final, Native, Protected)

void UUI_GunPartsSlot::BtnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlot", "BtnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlot.GetAttachablePartsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUI_GunPartsSlot::GetAttachablePartsCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlot", "GetAttachablePartsCount");

	Params::UI_GunPartsSlot_GetAttachablePartsCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPartsSlot.GetVisibility_Img_RedDot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UUI_GunPartsSlot::GetVisibility_Img_RedDot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlot", "GetVisibility_Img_RedDot");

	Params::UI_GunPartsSlot_GetVisibility_Img_RedDot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPartsSlot.GetVisibility_IsUnOwned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UUI_GunPartsSlot::GetVisibility_IsUnOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlot", "GetVisibility_IsUnOwned");

	Params::UI_GunPartsSlot_GetVisibility_IsUnOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPartsSlot.OnExpiredGunParts
// (Final, Native, Protected)

void UUI_GunPartsSlot::OnExpiredGunParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlot", "OnExpiredGunParts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlot.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsSlot::SetGunObject(class UGunObject* _gun_object, EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlot", "SetGunObject");

	Params::UI_GunPartsSlot_SetGunObject Parms{};

	Parms._gun_object = _gun_object;
	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlotAccessory.BtnClicked
// (Final, Native, Protected)

void UUI_GunPartsSlotAccessory::BtnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotAccessory", "BtnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlotAccessory.GetVisibility_Img_RedDot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UUI_GunPartsSlotAccessory::GetVisibility_Img_RedDot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotAccessory", "GetVisibility_Img_RedDot");

	Params::UI_GunPartsSlotAccessory_GetVisibility_Img_RedDot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPartsSlotAccessory.GetVisibility_IsUnOwned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UUI_GunPartsSlotAccessory::GetVisibility_IsUnOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotAccessory", "GetVisibility_IsUnOwned");

	Params::UI_GunPartsSlotAccessory_GetVisibility_IsUnOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPartsSlotAccessory.OnExpiredGunParts
// (Final, Native, Protected)

void UUI_GunPartsSlotAccessory::OnExpiredGunParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotAccessory", "OnExpiredGunParts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlotAccessory.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _parent_slot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGunPartsSlot                           _main_slot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsSlotAccessory::SetGunObject(class UGunObject* _gun_object, EGunPartsSlot _parent_slot, EGunPartsSlot _main_slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotAccessory", "SetGunObject");

	Params::UI_GunPartsSlotAccessory_SetGunObject Parms{};

	Parms._gun_object = _gun_object;
	Parms._parent_slot = _parent_slot;
	Parms._main_slot = _main_slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlotGroup.OnClickPartsSlot
// (Final, Native, Protected)
// Parameters:
// EGunPartsSlot                           _slot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsSlotGroup::OnClickPartsSlot(EGunPartsSlot _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotGroup", "OnClickPartsSlot");

	Params::UI_GunPartsSlotGroup_OnClickPartsSlot Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlotGroup.SetGunObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPartsSlotGroup::SetGunObject(class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotGroup", "SetGunObject");

	Params::UI_GunPartsSlotGroup_SetGunObject Parms{};

	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPartsSlotGroup.UpdateAccessoryGroup
// (Final, Native, Protected, BlueprintCallable)

void UUI_GunPartsSlotGroup::UpdateAccessoryGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPartsSlotGroup", "UpdateAccessoryGroup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPresetItem.BtnClicked
// (Final, Native, Protected)

void UUI_GunPresetItem::BtnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "BtnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPresetItem.BtnHovered
// (Final, Native, Protected)

void UUI_GunPresetItem::BtnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "BtnHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPresetItem.BtnUnHovered
// (Final, Native, Protected)

void UUI_GunPresetItem::BtnUnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "BtnUnHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPresetItem.OnAck_SetGunType
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FApiResult                       _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_GunPresetItem::OnAck_SetGunType(EResultCode _rcode, const struct FApiResult& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "OnAck_SetGunType");

	Params::UI_GunPresetItem_OnAck_SetGunType Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPresetItem.UpdateUI
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_GunPresetItem::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPresetItem.CanEquipGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_GunPresetItem::CanEquipGun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "CanEquipGun");

	Params::UI_GunPresetItem_CanEquipGun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPresetItem.IsSelectedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_GunPresetItem::IsSelectedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPresetItem", "IsSelectedItem");

	Params::UI_GunPresetItem_IsSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PreviewBase.ActivateSubLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _activate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PreviewBase::ActivateSubLevel(bool _activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewBase", "ActivateSubLevel");

	Params::UI_PreviewBase_ActivateSubLevel Parms{};

	Parms._activate = _activate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewBase.OnSubLevelHidden
// (Native, Event, Protected, BlueprintEvent)

void UUI_PreviewBase::OnSubLevelHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewBase", "OnSubLevelHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewBase.OnSubLevelShown
// (Native, Event, Protected, BlueprintEvent)

void UUI_PreviewBase::OnSubLevelShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewBase", "OnSubLevelShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewBase.SetPreviewCam
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             _tag                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PreviewBase::SetPreviewCam(const class FName& _tag, class AActor* _target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewBase", "SetPreviewCam");

	Params::UI_PreviewBase_SetPreviewCam Parms{};

	Parms._tag = _tag;
	Parms._target = _target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewBase.IsSubLevelActived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PreviewBase::IsSubLevelActived() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewBase", "IsSubLevelActived");

	Params::UI_PreviewBase_IsSubLevelActived Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_GunPreview.AllowRotationMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _allow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPreview::AllowRotationMode(bool _allow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPreview", "AllowRotationMode");

	Params::UI_GunPreview_AllowRotationMode Parms{};

	Parms._allow = _allow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPreview.RegisterOnSubLevelShown
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPreview::RegisterOnSubLevelShown(const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPreview", "RegisterOnSubLevelShown");

	Params::UI_GunPreview_RegisterOnSubLevelShown Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_GunPreview.SetGunPreviewer
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGunObject*                       _gun_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_GunPreview::SetGunPreviewer(class UGunObject* _gun_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GunPreview", "SetGunPreviewer");

	Params::UI_GunPreview_SetGunPreviewer Parms{};

	Parms._gun_obj = _gun_obj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HelpMenu.UpdateMenuState
// (Final, Native, Public)

void UUI_HelpMenu::UpdateMenuState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpMenu", "UpdateMenuState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.GetCategoryMenuWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _category                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUI_HelpPopup::GetCategoryMenuWidget(const class FString& _category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "GetCategoryMenuWidget");

	Params::UI_HelpPopup_GetCategoryMenuWidget Parms{};

	Parms._category = std::move(_category);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HelpPopup.GetContentsMenuWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _contents_key                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUI_HelpPopup::GetContentsMenuWidget(const class FString& _contents_key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "GetContentsMenuWidget");

	Params::UI_HelpPopup_GetContentsMenuWidget Parms{};

	Parms._contents_key = std::move(_contents_key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HelpPopup.OnClickClearSearch
// (Final, Native, Protected)

void UUI_HelpPopup::OnClickClearSearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "OnClickClearSearch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.OnClickSearch
// (Final, Native, Protected)

void UUI_HelpPopup::OnClickSearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "OnClickSearch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.OnTextChangedSearch
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_HelpPopup::OnTextChangedSearch(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "OnTextChangedSearch");

	Params::UI_HelpPopup_OnTextChangedSearch Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.OnTextCommittedSearch
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HelpPopup::OnTextCommittedSearch(const class FText& _text, ETextCommit _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "OnTextCommittedSearch");

	Params::UI_HelpPopup_OnTextCommittedSearch Parms{};

	Parms._text = std::move(_text);
	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.UpdateContents
// (Final, Native, Protected)
// Parameters:
// class FString                           _contents_key                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HelpPopup::UpdateContents(const class FString& _contents_key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "UpdateContents");

	Params::UI_HelpPopup_UpdateContents Parms{};

	Parms._contents_key = std::move(_contents_key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.UpdateMenuWidgetStates
// (Final, Native, Protected)

void UUI_HelpPopup::UpdateMenuWidgetStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "UpdateMenuWidgetStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.UpdateTargetTreeViewMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _contents_key                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HelpPopup::UpdateTargetTreeViewMenu(const class FString& _contents_key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "UpdateTargetTreeViewMenu");

	Params::UI_HelpPopup_UpdateTargetTreeViewMenu Parms{};

	Parms._contents_key = std::move(_contents_key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.UpdateTreeViewFilteredMenu
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _filtered_text                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_HelpPopup::UpdateTreeViewFilteredMenu(const class FText& _filtered_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "UpdateTreeViewFilteredMenu");

	Params::UI_HelpPopup_UpdateTreeViewFilteredMenu Parms{};

	Parms._filtered_text = std::move(_filtered_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HelpPopup.UpdateTreeViewMenu
// (Final, Native, Public, BlueprintCallable)

void UUI_HelpPopup::UpdateTreeViewMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HelpPopup", "UpdateTreeViewMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HoverMenuWidget.Init
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHoverMenuEntry                  _menu_entry                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _is_odd                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HoverMenuWidget::Init(const struct FHoverMenuEntry& _menu_entry, bool _is_odd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuWidget", "Init");

	Params::UI_HoverMenuWidget_Init Parms{};

	Parms._menu_entry = std::move(_menu_entry);
	Parms._is_odd = _is_odd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HoverMenuWidget.GetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UUI_HoverMenuWidget::GetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuWidget", "GetID");

	Params::UI_HoverMenuWidget_GetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ToastMessageContainerBase.AddSimpleToast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _msg                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ToastMessageContainerBase::AddSimpleToast(const class FString& _msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ToastMessageContainerBase", "AddSimpleToast");

	Params::UI_ToastMessageContainerBase_AddSimpleToast Parms{};

	Parms._msg = std::move(_msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ToastMessageContainerBase.GetRestToastCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUI_ToastMessageContainerBase::GetRestToastCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ToastMessageContainerBase", "GetRestToastCount");

	Params::UI_ToastMessageContainerBase_GetRestToastCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ToastMessageContainerBase.Init
// (Final, Native, Protected, BlueprintCallable)

void UUI_ToastMessageContainerBase::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ToastMessageContainerBase", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ToastMessageContainerBase.OnToastInactived
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ToastMessageContainerBase::OnToastInactived(class UAnimatableWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ToastMessageContainerBase", "OnToastInactived");

	Params::UI_ToastMessageContainerBase_OnToastInactived Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HoverMenuBase.Init
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HoverMenuBase::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuBase", "Init");

	Params::UI_HoverMenuBase_Init Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HoverMenuBase.SetMenuText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             _text                                                  (Parm, NativeAccessSpecifierPublic)

void UUI_HoverMenuBase::SetMenuText(class FName _id, const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuBase", "SetMenuText");

	Params::UI_HoverMenuBase_SetMenuText Parms{};

	Parms._id = _id;
	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HoverMenuBase.SetMenuVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HoverMenuBase::SetMenuVisibility(class FName _id, bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuBase", "SetMenuVisibility");

	Params::UI_HoverMenuBase_SetMenuVisibility Parms{};

	Parms._id = _id;
	Parms._show = _show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HoverMenuBase.Setup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FHoverMenuEntry>          _setting                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_HoverMenuBase::Setup(const TArray<struct FHoverMenuEntry>& _setting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuBase", "Setup");

	Params::UI_HoverMenuBase_Setup Parms{};

	Parms._setting = std::move(_setting);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HoverMenuBase.SetupWithReferer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FHoverMenuEntry>          _setting                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UObject*                          _refer_obj                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HoverMenuBase::SetupWithReferer(const TArray<struct FHoverMenuEntry>& _setting, class UObject* _refer_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HoverMenuBase", "SetupWithReferer");

	Params::UI_HoverMenuBase_SetupWithReferer Parms{};

	Parms._setting = std::move(_setting);
	Parms._refer_obj = _refer_obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HTMLHelpViewer.OpenHelp
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _url                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HTMLHelpViewer::OpenHelp(const class FText& _url)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HTMLHelpViewer", "OpenHelp");

	Params::UI_HTMLHelpViewer_OpenHelp Parms{};

	Parms._url = std::move(_url);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.AddActionLog_Bounty
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FActionLog_Bounty                _log                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::AddActionLog_Bounty(const struct FActionLog_Bounty& _log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "AddActionLog_Bounty");

	Params::UI_HUDBase_AddActionLog_Bounty Parms{};

	Parms._log = std::move(_log);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.AddChat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FChatMsg                         _chat_msg                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_HUDBase::AddChat(const struct FChatMsg& _chat_msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "AddChat");

	Params::UI_HUDBase_AddChat Parms{};

	Parms._chat_msg = std::move(_chat_msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.AddFullScreenWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::AddFullScreenWidget(class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "AddFullScreenWidget");

	Params::UI_HUDBase_AddFullScreenWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.AddHitData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitData                         _hit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::AddHitData(const struct FHitData& _hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "AddHitData");

	Params::UI_HUDBase_AddHitData Parms{};

	Parms._hit = std::move(_hit);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.AddKillLog
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKillLog                         _log                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::AddKillLog(const struct FKillLog& _log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "AddKillLog");

	Params::UI_HUDBase_AddKillLog Parms{};

	Parms._log = std::move(_log);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.AddKillLog_Revive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKillLog_ForRevive               _log                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::AddKillLog_Revive(const struct FKillLog_ForRevive& _log)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "AddKillLog_Revive");

	Params::UI_HUDBase_AddKillLog_Revive Parms{};

	Parms._log = std::move(_log);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.BindTargetChara
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::BindTargetChara(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "BindTargetChara");

	Params::UI_HUDBase_BindTargetChara Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.OnBindTargetChara
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnBindTargetChara(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnBindTargetChara");

	Params::UI_HUDBase_OnBindTargetChara Parms{};

	Parms._chara = _chara;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnChangeActionSetting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnChangeActionSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnChangeActionSetting");

	Params::UI_HUDBase_OnChangeActionSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnChangeGun
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AGunBase*                         _old_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AGunBase*                         _new_gun                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnChangeGun(class AGunBase* _old_gun, class AGunBase* _new_gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnChangeGun");

	Params::UI_HUDBase_OnChangeGun Parms{};

	Parms._old_gun = _old_gun;
	Parms._new_gun = _new_gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnChangeLinkedSkillKeyGuide
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FLinkedSkillGuide                _Key                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnChangeLinkedSkillKeyGuide(const struct FLinkedSkillGuide& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnChangeLinkedSkillKeyGuide");

	Params::UI_HUDBase_OnChangeLinkedSkillKeyGuide Parms{};

	Parms._Key = std::move(_Key);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnCreateFloatingHitMessageWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// EAbnormal                               _abnormal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UUI_HUDBase::OnCreateFloatingHitMessageWidget(EAbnormal _abnormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnCreateFloatingHitMessageWidget");

	Params::UI_HUDBase_OnCreateFloatingHitMessageWidget Parms{};

	Parms._abnormal = _abnormal;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnDiscoverEnemy
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _enemy                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _discovered                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnDiscoverEnemy(class ACharaBase* _enemy, bool _discovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnDiscoverEnemy");

	Params::UI_HUDBase_OnDiscoverEnemy Parms{};

	Parms._enemy = _enemy;
	Parms._discovered = _discovered;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnGetIngameMoney
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _inc_money                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGoldRewardType                         _reward_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::OnGetIngameMoney(int32 _inc_money, EGoldRewardType _reward_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnGetIngameMoney");

	Params::UI_HUDBase_OnGetIngameMoney Parms{};

	Parms._inc_money = _inc_money;
	Parms._reward_type = _reward_type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HUDBase.OnPointingActor
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           _Actor                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnPointingActor(class AActor* _Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnPointingActor");

	Params::UI_HUDBase_OnPointingActor Parms{};

	Parms._Actor = _Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnReloadEnd
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_cancel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnReloadEnd(class AGunBase* _gun, bool _is_cancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnReloadEnd");

	Params::UI_HUDBase_OnReloadEnd Parms{};

	Parms._gun = _gun;
	Parms._is_cancel = _is_cancel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnReloadStart
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnReloadStart(class AGunBase* _gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnReloadStart");

	Params::UI_HUDBase_OnReloadStart Parms{};

	Parms._gun = _gun;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnShowKillStreak
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKillStreakDefine                _streak                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnShowKillStreak(bool _show, const struct FKillStreakDefine& _streak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnShowKillStreak");

	Params::UI_HUDBase_OnShowKillStreak Parms{};

	Parms._show = _show;
	Parms._streak = std::move(_streak);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnStartChat
// (Final, Native, Public, BlueprintCallable)

void UUI_HUDBase::OnStartChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnStartChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.OnTargetCharaIsKilled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _killer                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnTargetCharaIsKilled(class ACharaBase* _killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnTargetCharaIsKilled");

	Params::UI_HUDBase_OnTargetCharaIsKilled Parms{};

	Parms._killer = _killer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnTargetCharaIsRespawned
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnTargetCharaIsRespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnTargetCharaIsRespawned");

	Params::UI_HUDBase_OnTargetCharaIsRespawned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnUpdateKillStreakAlpha
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   _t                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::OnUpdateKillStreakAlpha(float _t)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnUpdateKillStreakAlpha");

	Params::UI_HUDBase_OnUpdateKillStreakAlpha Parms{};

	Parms._t = _t;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnUseAutoBooster
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _is_used                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::OnUseAutoBooster(bool _is_used)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnUseAutoBooster");

	Params::UI_HUDBase_OnUseAutoBooster Parms{};

	Parms._is_used = _is_used;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HUDBase.RemoveFullScreenWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::RemoveFullScreenWidget(class UWidget* _widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "RemoveFullScreenWidget");

	Params::UI_HUDBase_RemoveFullScreenWidget Parms{};

	Parms._widget = _widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.Reset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "Reset");

	Params::UI_HUDBase_Reset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.SelectRadioChatCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::SelectRadioChatCategory(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "SelectRadioChatCategory");

	Params::UI_HUDBase_SelectRadioChatCategory Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.SelectRadioChatListItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::SelectRadioChatListItem(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "SelectRadioChatListItem");

	Params::UI_HUDBase_SelectRadioChatListItem Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.SetChatBox
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUI_ChatBox*                      _chat_box                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::SetChatBox(class UUI_ChatBox* _chat_box)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "SetChatBox");

	Params::UI_HUDBase_SetChatBox Parms{};

	Parms._chat_box = _chat_box;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.SetHUDMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUI_HUDMode*                      _hud_mode                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::SetHUDMode(class UUI_HUDMode* _hud_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "SetHUDMode");

	Params::UI_HUDBase_SetHUDMode Parms{};

	Parms._hud_mode = _hud_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.SetInteractionProgressBar
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _visibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _duration                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::SetInteractionProgressBar(bool _visibility, float _duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "SetInteractionProgressBar");

	Params::UI_HUDBase_SetInteractionProgressBar Parms{};

	Parms._visibility = _visibility;
	Parms._duration = _duration;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.SetShowEnemyDamageMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _show_enemy_damage                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::SetShowEnemyDamageMode(bool _show_enemy_damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "SetShowEnemyDamageMode");

	Params::UI_HUDBase_SetShowEnemyDamageMode Parms{};

	Parms._show_enemy_damage = _show_enemy_damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.ShowLoadingThrobber
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_HUDBase::ShowLoadingThrobber(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "ShowLoadingThrobber");

	Params::UI_HUDBase_ShowLoadingThrobber Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.TestShot
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGunBase*                         _gun                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDBase::TestShot(class AGunBase* _gun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "TestShot");

	Params::UI_HUDBase_TestShot Parms{};

	Parms._gun = _gun;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HUDBase.ToggleRadioChat
// (Final, Native, Public, BlueprintCallable)

void UUI_HUDBase::ToggleRadioChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "ToggleRadioChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDBase.ToggleSpectatingBanner
// (Event, Public, BlueprintEvent)

void UUI_HUDBase::ToggleSpectatingBanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "ToggleSpectatingBanner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_HUDBase.GetHUDMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUI_HUDMode*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_HUDMode* UUI_HUDBase::GetHUDMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "GetHUDMode");

	Params::UI_HUDBase_GetHUDMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.GetTargetChara
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ACharaBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ACharaBase* UUI_HUDBase::GetTargetChara() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "GetTargetChara");

	Params::UI_HUDBase_GetTargetChara Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDBase.OnGetVisibility_ValidTargetCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UUI_HUDBase::OnGetVisibility_ValidTargetCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDBase", "OnGetVisibility_ValidTargetCharacter");

	Params::UI_HUDBase_OnGetVisibility_ValidTargetCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_TrainingRoomHUD.OnLemmingsGame_ChangeGameState
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class ALemmingsGameZone*                _game                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLemmingsGameState               _state                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_TrainingRoomHUD::OnLemmingsGame_ChangeGameState(class ALemmingsGameZone* _game, const struct FLemmingsGameState& _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TrainingRoomHUD", "OnLemmingsGame_ChangeGameState");

	Params::UI_TrainingRoomHUD_OnLemmingsGame_ChangeGameState Parms{};

	Parms._game = _game;
	Parms._state = std::move(_state);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_TrainingRoomHUD.OnLemmingsGame_KillNPC
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ALemmingsGameZone*                _game                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ANPC_Lemming*                     _lemming                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_killed_by_player                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_TrainingRoomHUD::OnLemmingsGame_KillNPC(class ALemmingsGameZone* _game, class ANPC_Lemming* _lemming, bool _is_killed_by_player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TrainingRoomHUD", "OnLemmingsGame_KillNPC");

	Params::UI_TrainingRoomHUD_OnLemmingsGame_KillNPC Parms{};

	Parms._game = _game;
	Parms._lemming = _lemming;
	Parms._is_killed_by_player = _is_killed_by_player;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_HUDMode_Bounty.DriveHacking
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _owning_chara                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDMode_Bounty::DriveHacking(class ACharaBase* _owning_chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "DriveHacking");

	Params::UI_HUDMode_Bounty_DriveHacking Parms{};

	Parms._owning_chara = _owning_chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDMode_Bounty.HideProgressHacking
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_HUDMode_Bounty::HideProgressHacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "HideProgressHacking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_HUDMode_Bounty.HideProgressTransfer
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_HUDMode_Bounty::HideProgressTransfer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "HideProgressTransfer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_HUDMode_Bounty.HighlightWinningTeamScore
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETeams                                  _Team                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _highlight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDMode_Bounty::HighlightWinningTeamScore(ETeams _Team, bool _highlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "HighlightWinningTeamScore");

	Params::UI_HUDMode_Bounty_HighlightWinningTeamScore Parms{};

	Parms._Team = _Team;
	Parms._highlight = _highlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HUDMode_Bounty.OnHacking
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETeams                                  _target_team                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDMode_Bounty::OnHacking(ETeams _target_team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "OnHacking");

	Params::UI_HUDMode_Bounty_OnHacking Parms{};

	Parms._target_team = _target_team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_HUDMode_Bounty.OnStartHacking
// (Event, Protected, BlueprintEvent)

void UUI_HUDMode_Bounty::OnStartHacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "OnStartHacking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_HUDMode_Bounty.SetGettering
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   _Amount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDMode_Bounty::SetGettering(int32 _Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "SetGettering");

	Params::UI_HUDMode_Bounty_SetGettering Parms{};

	Parms._Amount = _Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDMode_Bounty.StartTransfer
// (Native, Event, Public, BlueprintEvent)

void UUI_HUDMode_Bounty::StartTransfer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "StartTransfer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_HUDMode_Bounty.UpdateGettering
// (Event, Public, BlueprintEvent)

void UUI_HUDMode_Bounty::UpdateGettering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "UpdateGettering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_HUDMode_Bounty.WarningBeHacking
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _be_hacking                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_HUDMode_Bounty::WarningBeHacking(bool _be_hacking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_HUDMode_Bounty", "WarningBeHacking");

	Params::UI_HUDMode_Bounty_WarningBeHacking Parms{};

	Parms._be_hacking = _be_hacking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Record_KillStreakListItem.OnSetKillStreakIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EKillStreak                             _kill_streak                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Record_KillStreakListItem::OnSetKillStreakIcon(EKillStreak _kill_streak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Record_KillStreakListItem", "OnSetKillStreakIcon");

	Params::UI_Record_KillStreakListItem_OnSetKillStreakIcon Parms{};

	Parms._kill_streak = _kill_streak;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Record_KillStreakListItem.GetSkillStreakItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class URecord_KillStreak_ListItemData*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class URecord_KillStreak_ListItemData* UUI_Record_KillStreakListItem::GetSkillStreakItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Record_KillStreakListItem", "GetSkillStreakItem");

	Params::UI_Record_KillStreakListItem_GetSkillStreakItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_IndicatorPingWidget.UpdateUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UUI_IndicatorPingWidget::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_IndicatorPingWidget", "UpdateUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_RecruitBuyButton.OnClickButton
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _select                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecruitBuyButton::OnClickButton(class UAnimatableWidget* _widget, bool _select)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitBuyButton", "OnClickButton");

	Params::UI_RecruitBuyButton_OnClickButton Parms{};

	Parms._widget = _widget;
	Parms._select = _select;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Interaction.HideInteractionUI
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Interaction::HideInteractionUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interaction", "HideInteractionUI");

	Params::UI_Interaction_HideInteractionUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Interaction.HideProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Interaction::HideProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interaction", "HideProgress");

	Params::UI_Interaction_HideProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Interaction.ShowInteractionUI
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInteractionData                 _data                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Interaction::ShowInteractionUI(class AActor* _target, const struct FInteractionData& _data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interaction", "ShowInteractionUI");

	Params::UI_Interaction_ShowInteractionUI Parms{};

	Parms._target = _target;
	Parms._data = std::move(_data);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Interaction.ShowProgress
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           _target                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _param                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _Delay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Interaction::ShowProgress(class AActor* _target, int32 _param, float _Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Interaction", "ShowProgress");

	Params::UI_Interaction_ShowProgress Parms{};

	Parms._target = _target;
	Parms._param = _param;
	Parms._Delay = _Delay;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_InvenSlotToolTipBase.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_InventoryItemSlotBase*        _slot                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_InvenSlotToolTipBase::Init(const class UUI_InventoryItemSlotBase* _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InvenSlotToolTipBase", "Init");

	Params::UI_InvenSlotToolTipBase_Init Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_InventoryItemSlotBase.SetActiveNoticeDot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_InventoryItemSlotBase::SetActiveNoticeDot(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InventoryItemSlotBase", "SetActiveNoticeDot");

	Params::UI_InventoryItemSlotBase_SetActiveNoticeDot Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_InviteBattleNotifySlot.OnClickYesNo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UPopupBase*                       _popup                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _ctrl_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_InviteBattleNotifySlot::OnClickYesNo(const class UPopupBase* _popup, class FName _ctrl_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InviteBattleNotifySlot", "OnClickYesNo");

	Params::UI_InviteBattleNotifySlot_OnClickYesNo Parms{};

	Parms._popup = _popup;
	Parms._ctrl_id = _ctrl_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_InviteBattleNotifySlot.SetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_InviteBattleNotifySlot::SetText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InviteBattleNotifySlot", "SetText");

	Params::UI_InviteBattleNotifySlot_SetText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ItemIDListViewItem.BindItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UInvenItem*                       _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::BindItem(class UInvenItem* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "BindItem");

	Params::UI_ItemIDListViewItem_BindItem Parms{};

	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.OnClickBtn
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::OnClickBtn(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "OnClickBtn");

	Params::UI_ItemIDListViewItem_OnClickBtn Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.OnUpdateItems
// (Event, Protected, BlueprintEvent)

void UUI_ItemIDListViewItem::OnUpdateItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "OnUpdateItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_ItemIDListViewItem.SetEquippedDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FItemID& _item_id)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetEquippedDelegate(const TDelegate<void(struct FItemID& _item_id)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetEquippedDelegate");

	Params::UI_ItemIDListViewItem_SetEquippedDelegate Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetOccupiedDelegate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FItemID& _item_id)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetOccupiedDelegate(const TDelegate<void(struct FItemID& _item_id)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetOccupiedDelegate");

	Params::UI_ItemIDListViewItem_SetOccupiedDelegate Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetPanelSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        _size                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetPanelSize(const struct FVector2D& _size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetPanelSize");

	Params::UI_ItemIDListViewItem_SetPanelSize Parms{};

	Parms._size = std::move(_size);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetSelection(bool _is_selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetSelection");

	Params::UI_ItemIDListViewItem_SetSelection Parms{};

	Parms._is_selected = _is_selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetShouldUpdateExpireTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetShouldUpdateExpireTime(bool _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetShouldUpdateExpireTime");

	Params::UI_ItemIDListViewItem_SetShouldUpdateExpireTime Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetShowRedDot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_show                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetShowRedDot(bool _is_show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetShowRedDot");

	Params::UI_ItemIDListViewItem_SetShowRedDot Parms{};

	Parms._is_show = _is_show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetShowTooltip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_show                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetShowTooltip(bool _is_show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetShowTooltip");

	Params::UI_ItemIDListViewItem_SetShowTooltip Parms{};

	Parms._is_show = _is_show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetShowTooltipKeyUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_show                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetShowTooltipKeyUI(bool _is_show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetShowTooltipKeyUI");

	Params::UI_ItemIDListViewItem_SetShowTooltipKeyUI Parms{};

	Parms._is_show = _is_show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDListViewItem.SetTags
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<EItemUITag>                      _tags                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_ItemIDListViewItem::SetTags(const TArray<EItemUITag>& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "SetTags");

	Params::UI_ItemIDListViewItem_SetTags Parms{};

	Parms._tags = std::move(_tags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ItemIDListViewItem.GetHoverImageVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UUI_ItemIDListViewItem::GetHoverImageVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "GetHoverImageVisibility");

	Params::UI_ItemIDListViewItem_GetHoverImageVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ItemIDListViewItem.IsEquippedItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ItemIDListViewItem::IsEquippedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "IsEquippedItem");

	Params::UI_ItemIDListViewItem_IsEquippedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ItemIDListViewItem.IsOccupiedItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FIsOccupiedResult                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FIsOccupiedResult UUI_ItemIDListViewItem::IsOccupiedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "IsOccupiedItem");

	Params::UI_ItemIDListViewItem_IsOccupiedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ItemIDListViewItem.IsOwnedItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ItemIDListViewItem::IsOwnedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDListViewItem", "IsOwnedItem");

	Params::UI_ItemIDListViewItem_IsOwnedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ItemIDTileView.InitializeTileViewEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::InitializeTileViewEntry(class UUserWidget* _widget, class UObject* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "InitializeTileViewEntry");

	Params::UI_ItemIDTileView_InitializeTileViewEntry Parms{};

	Parms._widget = _widget;
	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.RefreshTileView
// (Final, Native, Public, BlueprintCallable)

void UUI_ItemIDTileView::RefreshTileView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "RefreshTileView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SelectWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SelectWidget(const struct FItemID& _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SelectWidget");

	Params::UI_ItemIDTileView_SelectWidget Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetCustomFilter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FItemID& _item_id)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetCustomFilter(const TDelegate<void(struct FItemID& _item_id)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetCustomFilter");

	Params::UI_ItemIDTileView_SetCustomFilter Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetEquippedEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FItemID& _item_id)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetEquippedEvent(const TDelegate<void(struct FItemID& _item_id)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetEquippedEvent");

	Params::UI_ItemIDTileView_SetEquippedEvent Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemEquipFilter                        _equip_filter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetFilter(EItemEquipFilter _equip_filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetFilter");

	Params::UI_ItemIDTileView_SetFilter Parms{};

	Parms._equip_filter = _equip_filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetHasNullItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _has_item                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetHasNullItem(bool _has_item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetHasNullItem");

	Params::UI_ItemIDTileView_SetHasNullItem Parms{};

	Parms._has_item = _has_item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetItemCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           _category                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _sub_category                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_adding                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _rebuild_list                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _has_null_item                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetItemCategory(EItemCategory _category, int32 _sub_category, bool _is_adding, bool _rebuild_list, bool _has_null_item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetItemCategory");

	Params::UI_ItemIDTileView_SetItemCategory Parms{};

	Parms._category = _category;
	Parms._sub_category = _sub_category;
	Parms._is_adding = _is_adding;
	Parms._rebuild_list = _rebuild_list;
	Parms._has_null_item = _has_null_item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetOccupiedEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FItemID& _item_id)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetOccupiedEvent(const TDelegate<void(struct FItemID& _item_id)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetOccupiedEvent");

	Params::UI_ItemIDTileView_SetOccupiedEvent Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetOwnedEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FItemID& _item_id)>_event                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetOwnedEvent(const TDelegate<void(struct FItemID& _item_id)>& _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetOwnedEvent");

	Params::UI_ItemIDTileView_SetOwnedEvent Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SetVisibleItemCategoryImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        _visibility                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SetVisibleItemCategoryImage(ESlateVisibility _visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SetVisibleItemCategoryImage");

	Params::UI_ItemIDTileView_SetVisibleItemCategoryImage Parms{};

	Parms._visibility = _visibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SortExpiredDate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_descending_order                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SortExpiredDate(bool _is_descending_order)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SortExpiredDate");

	Params::UI_ItemIDTileView_SortExpiredDate Parms{};

	Parms._is_descending_order = _is_descending_order;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SortGrade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_descending_order                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SortGrade(bool _is_descending_order)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SortGrade");

	Params::UI_ItemIDTileView_SortGrade Parms{};

	Parms._is_descending_order = _is_descending_order;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SortGun
// (Final, Native, Public, BlueprintCallable)

void UUI_ItemIDTileView::SortGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SortGun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.SortLaunchingDate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_descending_order                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ItemIDTileView::SortLaunchingDate(bool _is_descending_order)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "SortLaunchingDate");

	Params::UI_ItemIDTileView_SortLaunchingDate Parms{};

	Parms._is_descending_order = _is_descending_order;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.UpdateWidgets
// (Final, Native, Public, BlueprintCallable)

void UUI_ItemIDTileView::UpdateWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "UpdateWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ItemIDTileView.IsFilteredItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemID                          _id                                                    (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_ItemIDTileView::IsFilteredItem(const struct FItemID& _id) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ItemIDTileView", "IsFilteredItem");

	Params::UI_ItemIDTileView_IsFilteredItem Parms{};

	Parms._id = std::move(_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_KeyMappingBase.UpdateUI
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_KeyMappingBase::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_KeyMappingBase", "UpdateUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_LackControlPower.CheckAndBindTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _target_cp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_object                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LackControlPower::CheckAndBindTarget(int32 _target_cp, class UGunObject* _gun_object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LackControlPower", "CheckAndBindTarget");

	Params::UI_LackControlPower_CheckAndBindTarget Parms{};

	Parms._target_cp = _target_cp;
	Parms._gun_object = _gun_object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LackControlPower.Clear
// (Final, Native, Public, BlueprintCallable)

void UUI_LackControlPower::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LackControlPower", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_LackControlPower.IsLackControlPower
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_LackControlPower::IsLackControlPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LackControlPower", "IsLackControlPower");

	Params::UI_LackControlPower_IsLackControlPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_LevelUp.InitWidget
// (Event, Protected, BlueprintEvent)

void UUI_LevelUp::InitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_LevelUp", "InitWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_Lobby.GetCurrentLobbyPage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUI_LobbyPage*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_LobbyPage* UUI_Lobby::GetCurrentLobbyPage(const class UObject* _world_ctx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UI_Lobby", "GetCurrentLobbyPage");

	Params::UI_Lobby_GetCurrentLobbyPage Parms{};

	Parms._world_ctx = _world_ctx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GotoLobbyPage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELobbyPage                              _page                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           _sub_option                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::GotoLobbyPage(const class UObject* _world_ctx, ELobbyPage _page, EItemCategory _sub_option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UI_Lobby", "GotoLobbyPage");

	Params::UI_Lobby_GotoLobbyPage Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._page = _page;
	Parms._sub_option = _sub_option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.ActivateCameraForPage
// (Final, Native, Public, BlueprintCallable)

void UUI_Lobby::ActivateCameraForPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "ActivateCameraForPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.CloseMailBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Lobby::CloseMailBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "CloseMailBox");

	Params::UI_Lobby_CloseMailBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GetChatBox
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUI_ChatBox*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_ChatBox* UUI_Lobby::GetChatBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GetChatBox");

	Params::UI_Lobby_GetChatBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GetCurrentPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELobbyPage                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELobbyPage UUI_Lobby::GetCurrentPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GetCurrentPage");

	Params::UI_Lobby_GetCurrentPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GetCurrentPageUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_LobbyPage*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_LobbyPage* UUI_Lobby::GetCurrentPageUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GetCurrentPageUI");

	Params::UI_Lobby_GetCurrentPageUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GetGNBLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUI_GNB_LobbyBase*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_GNB_LobbyBase* UUI_Lobby::GetGNBLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GetGNBLobby");

	Params::UI_Lobby_GetGNBLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GotoPage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ELobbyPage                              _page                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           _sub_option                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::GotoPage(ELobbyPage _page, EItemCategory _sub_option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GotoPage");

	Params::UI_Lobby_GotoPage Parms{};

	Parms._page = _page;
	Parms._sub_option = _sub_option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnGotoPage
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ELobbyPage                              _page                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           _sub_option                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Lobby::OnGotoPage(ELobbyPage _page, EItemCategory _sub_option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnGotoPage");

	Params::UI_Lobby_OnGotoPage Parms{};

	Parms._page = _page;
	Parms._sub_option = _sub_option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.OnInit
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Lobby::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnInit");

	Params::UI_Lobby_OnInit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.OnParty_CharacterUpdated
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCharSpec                        _chara                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Lobby::OnParty_CharacterUpdated(const struct FUserID& _user_id, const struct FCharSpec& _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnParty_CharacterUpdated");

	Params::UI_Lobby_OnParty_CharacterUpdated Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._chara = std::move(_chara);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnParty_LeaderUpdated
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FUserID                          _leader_id                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::OnParty_LeaderUpdated(const struct FUserID& _leader_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnParty_LeaderUpdated");

	Params::UI_Lobby_OnParty_LeaderUpdated Parms{};

	Parms._leader_id = std::move(_leader_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnParty_MemberAdded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     _member                                                (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::OnParty_MemberAdded(const class UBriefParty* _party, const class UUserProfile* _member)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnParty_MemberAdded");

	Params::UI_Lobby_OnParty_MemberAdded Parms{};

	Parms._party = _party;
	Parms._member = _member;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnParty_MemberDeleted
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::OnParty_MemberDeleted(const class UBriefParty* _party, const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnParty_MemberDeleted");

	Params::UI_Lobby_OnParty_MemberDeleted Parms{};

	Parms._party = _party;
	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnPartyEntered
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UBriefParty*                      _party                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::OnPartyEntered(const class UBriefParty* _party)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnPartyEntered");

	Params::UI_Lobby_OnPartyEntered Parms{};

	Parms._party = _party;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnPartyExited
// (Native, Event, Protected, BlueprintEvent)

void UUI_Lobby::OnPartyExited()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnPartyExited");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.OnUpdateCharaModel
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Lobby::OnUpdateCharaModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "OnUpdateCharaModel");

	Params::UI_Lobby_OnUpdateCharaModel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.RegisterOnLobbyPageChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(ELobbyPage _lobby_type)> _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::RegisterOnLobbyPageChanged(const TDelegate<void(ELobbyPage _lobby_type)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "RegisterOnLobbyPageChanged");

	Params::UI_Lobby_RegisterOnLobbyPageChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.RegisterSocialCallbacks
// (Final, Native, Protected, BlueprintCallable)

void UUI_Lobby::RegisterSocialCallbacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "RegisterSocialCallbacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.ShowMailBox
// (Final, Native, Protected, BlueprintCallable)

void UUI_Lobby::ShowMailBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "ShowMailBox");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.UnRegisterSocialCallbacks
// (Final, Native, Protected, BlueprintCallable)

void UUI_Lobby::UnRegisterSocialCallbacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "UnRegisterSocialCallbacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.UpdateAllMannequins
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELobbyPage                              _page                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Lobby::UpdateAllMannequins(ELobbyPage _page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "UpdateAllMannequins");

	Params::UI_Lobby_UpdateAllMannequins Parms{};

	Parms._page = _page;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Lobby.GetCamera
// (Final, Native, Public, Const)
// Parameters:
// class AFollowCameraActor*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFollowCameraActor* UUI_Lobby::GetCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GetCamera");

	Params::UI_Lobby_GetCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.GetCharaModel
// (Final, Native, Public, Const)
// Parameters:
// class AMannequin*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMannequin* UUI_Lobby::GetCharaModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "GetCharaModel");

	Params::UI_Lobby_GetCharaModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_Lobby.IsMannequinVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Lobby::IsMannequinVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Lobby", "IsMannequinVisible");

	Params::UI_Lobby_IsMannequinVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_MailBox.Close
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _play_animation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MailBox::Close(bool _play_animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "Close");

	Params::UI_MailBox_Close Parms{};

	Parms._play_animation = _play_animation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnAck_MailDelete
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FACK_MailDelete                  _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MailBox::OnAck_MailDelete(const struct FACK_MailDelete& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnAck_MailDelete");

	Params::UI_MailBox_OnAck_MailDelete Parms{};

	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnAck_MailRead
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FACK_MailRead                    _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MailBox::OnAck_MailRead(const struct FACK_MailRead& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnAck_MailRead");

	Params::UI_MailBox_OnAck_MailRead Parms{};

	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnAck_MailUpdate
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FACK_MailUpdate                  _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MailBox::OnAck_MailUpdate(const struct FACK_MailUpdate& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnAck_MailUpdate");

	Params::UI_MailBox_OnAck_MailUpdate Parms{};

	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnClickClose
// (Final, Native, Protected)

void UUI_MailBox::OnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnClickDelete
// (Final, Native, Protected)

void UUI_MailBox::OnClickDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnClickDelete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnClickReceiveAll
// (Final, Native, Protected)

void UUI_MailBox::OnClickReceiveAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnClickReceiveAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnClickRefresh
// (Final, Native, Protected)

void UUI_MailBox::OnClickRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnClickRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnClickSelectAll
// (Final, Native, Protected)
// Parameters:
// bool                                    _is_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MailBox::OnClickSelectAll(bool _is_selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnClickSelectAll");

	Params::UI_MailBox_OnClickSelectAll Parms{};

	Parms._is_selected = _is_selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnEndCloseAnimation
// (Final, Native, Protected)

void UUI_MailBox::OnEndCloseAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnEndCloseAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnMailRead
// (Final, Native, Protected)
// Parameters:
// int32                                   _mail_idn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MailBox::OnMailRead(int32 _mail_idn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnMailRead");

	Params::UI_MailBox_OnMailRead Parms{};

	Parms._mail_idn = _mail_idn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailBox.OnMailSelect
// (Final, Native, Protected)
// Parameters:
// int32                                   _mail_idn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_selected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MailBox::OnMailSelect(int32 _mail_idn, bool _is_selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailBox", "OnMailSelect");

	Params::UI_MailBox_OnMailSelect Parms{};

	Parms._mail_idn = _mail_idn;
	Parms._is_selected = _is_selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailContentDetailBox.OnClickClose
// (Final, Native, Protected)

void UUI_MailContentDetailBox::OnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailContentDetailBox", "OnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailContentDetailBox.OnClickDelete
// (Final, Native, Protected)

void UUI_MailContentDetailBox::OnClickDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailContentDetailBox", "OnClickDelete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailContentDetailBox.OnClickReceive
// (Final, Native, Protected)

void UUI_MailContentDetailBox::OnClickReceive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailContentDetailBox", "OnClickReceive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MailContentDetailBox.OnEndCloseAnimation
// (Final, Native, Protected)

void UUI_MailContentDetailBox::OnEndCloseAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MailContentDetailBox", "OnEndCloseAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MainBase.OnSetAnnouncements
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FAnnounce>                _announcements                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_MainBase::OnSetAnnouncements(const TArray<struct FAnnounce>& _announcements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MainBase", "OnSetAnnouncements");

	Params::UI_MainBase_OnSetAnnouncements Parms{};

	Parms._announcements = std::move(_announcements);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_MasterLevelRewardSlot.FillPercentBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _fill_left                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _fill_right                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterLevelRewardSlot::FillPercentBar(bool _fill_left, bool _fill_right)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterLevelRewardSlot", "FillPercentBar");

	Params::UI_MasterLevelRewardSlot_FillPercentBar Parms{};

	Parms._fill_left = _fill_left;
	Parms._fill_right = _fill_right;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterLevelRewardSlot.SetCheckPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _checked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterLevelRewardSlot::SetCheckPoint(bool _checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterLevelRewardSlot", "SetCheckPoint");

	Params::UI_MasterLevelRewardSlot_SetCheckPoint Parms{};

	Parms._checked = _checked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterLevelRewardSlot.SetLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterLevelRewardSlot::SetLevel(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterLevelRewardSlot", "SetLevel");

	Params::UI_MasterLevelRewardSlot_SetLevel Parms{};

	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterLevelRewardSlot.SetMasterImage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _soft_texture                                          (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterLevelRewardSlot::SetMasterImage(const TSoftObjectPtr<class UTexture2D>& _soft_texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterLevelRewardSlot", "SetMasterImage");

	Params::UI_MasterLevelRewardSlot_SetMasterImage Parms{};

	Parms._soft_texture = _soft_texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterMissionBrief.ClearLocked
// (Event, Protected, BlueprintEvent)

void UUI_MasterMissionBrief::ClearLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "ClearLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MasterMissionBrief.FirstMissionLocked
// (Event, Protected, BlueprintEvent)

void UUI_MasterMissionBrief::FirstMissionLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "FirstMissionLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MasterMissionBrief.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_MasterMissionBrief::InitWidget(ECharaType _chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "InitWidget");

	Params::UI_MasterMissionBrief_InitWidget Parms{};

	Parms._chara_type = _chara_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_MasterMissionBrief.MaxLevelLocked
// (Event, Protected, BlueprintEvent)

void UUI_MasterMissionBrief::MaxLevelLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "MaxLevelLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MasterMissionBrief.NoMasterLocked
// (Event, Protected, BlueprintEvent)

void UUI_MasterMissionBrief::NoMasterLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "NoMasterLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MasterMissionBrief.OpenMissionPopup
// (Final, Native, Protected, BlueprintCallable)

void UUI_MasterMissionBrief::OpenMissionPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "OpenMissionPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MasterMissionBrief.SetLockedIfFirstMissionEnabled
// (Final, Native, Public, BlueprintCallable)

void UUI_MasterMissionBrief::SetLockedIfFirstMissionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "SetLockedIfFirstMissionEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MasterMissionBrief.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MasterMissionBrief::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "SetTitle");

	Params::UI_MasterMissionBrief_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterMissionBrief.ShowRedDot
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterMissionBrief::ShowRedDot(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "ShowRedDot");

	Params::UI_MasterMissionBrief_ShowRedDot Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterMissionBrief.UserLevelLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterMissionBrief::UserLevelLocked(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionBrief", "UserLevelLocked");

	Params::UI_MasterMissionBrief_UserLevelLocked Parms{};

	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MasterMissionRewardPopup.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_EventPage                _master_event_id                                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterMissionRewardPopup::InitWidget(const struct FItemID_EventPage& _master_event_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionRewardPopup", "InitWidget");

	Params::UI_MasterMissionRewardPopup_InitWidget Parms{};

	Parms._master_event_id = std::move(_master_event_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MasterMissionRewardPopup.OnClickItem
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterMissionRewardPopup::OnClickItem(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionRewardPopup", "OnClickItem");

	Params::UI_MasterMissionRewardPopup_OnClickItem Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MasterMissionRewardPopup.SetTitle
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECharaType                              _chara_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_level                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MasterMissionRewardPopup::SetTitle(ECharaType _chara_type, int32 _max_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MasterMissionRewardPopup", "SetTitle");

	Params::UI_MasterMissionRewardPopup_SetTitle Parms{};

	Parms._chara_type = _chara_type;
	Parms._max_level = _max_level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBrief.OnShowTask
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FItemID                          _task_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBrief::OnShowTask(const struct FItemID& _task_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBrief", "OnShowTask");

	Params::UI_MissionBrief_OnShowTask Parms{};

	Parms._task_id = std::move(_task_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBrief.OpenMissionPopup
// (Final, Native, Protected, BlueprintCallable)

void UUI_MissionBrief::OpenMissionPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBrief", "OpenMissionPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBrief.ShowNextTask
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ESideViewSide                           _side                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBrief::ShowNextTask(ESideViewSide _side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBrief", "ShowNextTask");

	Params::UI_MissionBrief_ShowNextTask Parms{};

	Parms._side = _side;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBrief.GetCurrentTaskID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FItemID                    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FItemID UUI_MissionBrief::GetCurrentTaskID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBrief", "GetCurrentTaskID");

	Params::UI_MissionBrief_GetCurrentTaskID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_MissionBriefSlot.InitWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMission*                         _new_mission                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefSlot::InitWidget(class UMission* _new_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "InitWidget");

	Params::UI_MissionBriefSlot_InitWidget Parms{};

	Parms._new_mission = _new_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBriefSlot.OnUpdateMission
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefSlot::OnUpdateMission(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "OnUpdateMission");

	Params::UI_MissionBriefSlot_OnUpdateMission Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBriefSlot.RequestReward
// (Final, Native, Protected, BlueprintCallable)

void UUI_MissionBriefSlot::RequestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "RequestReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBriefSlot.SetCanReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_reward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefSlot::SetCanReward(bool _can_reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "SetCanReward");

	Params::UI_MissionBriefSlot_SetCanReward Parms{};

	Parms._can_reward = _can_reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBriefSlot.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionBriefSlot::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "SetDesc");

	Params::UI_MissionBriefSlot_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBriefSlot.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionBriefSlot::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "SetTitle");

	Params::UI_MissionBriefSlot_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBriefSlot.ShowGoToButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefSlot::ShowGoToButton(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefSlot", "ShowGoToButton");

	Params::UI_MissionBriefSlot_ShowGoToButton Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBriefTab.OnButtonClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESideViewSide                           _side                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefTab::OnButtonClicked(ESideViewSide _side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefTab", "OnButtonClicked");

	Params::UI_MissionBriefTab_OnButtonClicked Parms{};

	Parms._side = _side;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionBriefTab.SetIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefTab::SetIcon(const TSoftObjectPtr<class UTexture2D>& _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefTab", "SetIcon");

	Params::UI_MissionBriefTab_SetIcon Parms{};

	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBriefTab.SetTitleText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionBriefTab::SetTitleText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefTab", "SetTitleText");

	Params::UI_MissionBriefTab_SetTitleText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionBriefTab.ShowButtons
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionBriefTab::ShowButtons(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionBriefTab", "ShowButtons");

	Params::UI_MissionBriefTab_ShowButtons Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopup.InitWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _to_show_task_id                                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopup::InitWidget(const struct FItemID& _to_show_task_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopup", "InitWidget");

	Params::UI_MissionPopup_InitWidget Parms{};

	Parms._to_show_task_id = std::move(_to_show_task_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopup.OnTabSelected
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _tab_widget                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopup::OnTabSelected(class UAnimatableWidget* _tab_widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopup", "OnTabSelected");

	Params::UI_MissionPopup_OnTabSelected Parms{};

	Parms._tab_widget = _tab_widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopup.GetCurrentContainerWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPreviewableWidget*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPreviewableWidget* UUI_MissionPopup::GetCurrentContainerWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopup", "GetCurrentContainerWidget");

	Params::UI_MissionPopup_GetCurrentContainerWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_MissionPopupContainerBattlePass.SetIsActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_activated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerBattlePass::SetIsActivated(bool _is_activated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerBattlePass", "SetIsActivated");

	Params::UI_MissionPopupContainerBattlePass_SetIsActivated Parms{};

	Parms._is_activated = _is_activated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerBattlePass.SetNextReward
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FReward                          _free_reward                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FReward                          _premium_reward                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _is_max_level                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerBattlePass::SetNextReward(const struct FReward& _free_reward, const struct FReward& _premium_reward, bool _is_max_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerBattlePass", "SetNextReward");

	Params::UI_MissionPopupContainerBattlePass_SetNextReward Parms{};

	Parms._free_reward = std::move(_free_reward);
	Parms._premium_reward = std::move(_premium_reward);
	Parms._is_max_level = _is_max_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerBattlePass.SetTitleText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerBattlePass::SetTitleText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerBattlePass", "SetTitleText");

	Params::UI_MissionPopupContainerBattlePass_SetTitleText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerBattlePass.ShowBuyPremiumBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerBattlePass::ShowBuyPremiumBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerBattlePass", "ShowBuyPremiumBtn");

	Params::UI_MissionPopupContainerBattlePass_ShowBuyPremiumBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerBattlePass.ShowWeekMission
// (Final, Native, Protected)
// Parameters:
// int32                                   _new_week                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerBattlePass::ShowWeekMission(int32 _new_week)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerBattlePass", "ShowWeekMission");

	Params::UI_MissionPopupContainerBattlePass_ShowWeekMission Parms{};

	Parms._new_week = _new_week;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerDaily.OnMissionUpdated
// (Final, Native, Protected)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::OnMissionUpdated(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "OnMissionUpdated");

	Params::UI_MissionPopupContainerDaily_OnMissionUpdated Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerDaily.OnReadNewMission
// (Final, Native, Protected, BlueprintCallable)

void UUI_MissionPopupContainerDaily::OnReadNewMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "OnReadNewMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerDaily.ReadNewMission
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TDelegate<void(EResultCode _rcode, struct FACK_MissionRead& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::ReadNewMission(TDelegate<void(EResultCode _rcode, struct FACK_MissionRead& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "ReadNewMission");

	Params::UI_MissionPopupContainerDaily_ReadNewMission Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerDaily.RequestFinalReward
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TDelegate<void(EResultCode _rcode, struct FACK_MissionReward& _ack)>_proc                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::RequestFinalReward(TDelegate<void(EResultCode _rcode, struct FACK_MissionReward& _ack)> _proc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "RequestFinalReward");

	Params::UI_MissionPopupContainerDaily_RequestFinalReward Parms{};

	Parms._proc = _proc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerDaily.SetFinalMissionProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _current_count                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _target_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::SetFinalMissionProgress(int32 _current_count, int32 _target_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "SetFinalMissionProgress");

	Params::UI_MissionPopupContainerDaily_SetFinalMissionProgress Parms{};

	Parms._current_count = _current_count;
	Parms._target_count = _target_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerDaily.SetFinalMissionProgressType
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionProgressType                    _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::SetFinalMissionProgressType(EMissionProgressType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "SetFinalMissionProgressType");

	Params::UI_MissionPopupContainerDaily_SetFinalMissionProgressType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupContainerDaily.SetFinalMissionRewardText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::SetFinalMissionRewardText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "SetFinalMissionRewardText");

	Params::UI_MissionPopupContainerDaily_SetFinalMissionRewardText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerDaily.SetLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _locked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _limited_level                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::SetLocked(bool _locked, int32 _limited_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "SetLocked");

	Params::UI_MissionPopupContainerDaily_SetLocked Parms{};

	Parms._locked = _locked;
	Parms._limited_level = _limited_level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerDaily.SetMissionChangeCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _current_count                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::SetMissionChangeCount(int32 _current_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "SetMissionChangeCount");

	Params::UI_MissionPopupContainerDaily_SetMissionChangeCount Parms{};

	Parms._current_count = _current_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerDaily.SetUserLevelExp
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _cur_exp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _tar_exp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::SetUserLevelExp(int32 _level, int32 _cur_exp, int32 _tar_exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "SetUserLevelExp");

	Params::UI_MissionPopupContainerDaily_SetUserLevelExp Parms{};

	Parms._level = _level;
	Parms._cur_exp = _cur_exp;
	Parms._tar_exp = _tar_exp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerDaily.ShowChangeInfoText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::ShowChangeInfoText(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "ShowChangeInfoText");

	Params::UI_MissionPopupContainerDaily_ShowChangeInfoText Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupContainerDaily.ShowFinalMissionRewardBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupContainerDaily::ShowFinalMissionRewardBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupContainerDaily", "ShowFinalMissionRewardBtn");

	Params::UI_MissionPopupContainerDaily_ShowFinalMissionRewardBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.OnUpdateMission
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::OnUpdateMission(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "OnUpdateMission");

	Params::UI_MissionPopupSlotBattlePass_OnUpdateMission Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotBattlePass.RequestReward
// (Final, Native, Protected, BlueprintCallable)

void UUI_MissionPopupSlotBattlePass::RequestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "RequestReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotBattlePass.SetBookmark
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _bookmark                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::SetBookmark(bool _bookmark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "SetBookmark");

	Params::UI_MissionPopupSlotBattlePass_SetBookmark Parms{};

	Parms._bookmark = _bookmark;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.SetCanReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_reward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::SetCanReward(bool _can_reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "SetCanReward");

	Params::UI_MissionPopupSlotBattlePass_SetCanReward Parms{};

	Parms._can_reward = _can_reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "SetDesc");

	Params::UI_MissionPopupSlotBattlePass_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.SetLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _locked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::SetLocked(bool _locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "SetLocked");

	Params::UI_MissionPopupSlotBattlePass_SetLocked Parms{};

	Parms._locked = _locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.SetProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMissionProgressType                    _progress_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _target_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::SetProgress(EMissionProgressType _progress_type, int32 _count, int32 _target_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "SetProgress");

	Params::UI_MissionPopupSlotBattlePass_SetProgress Parms{};

	Parms._progress_type = _progress_type;
	Parms._count = _count;
	Parms._target_count = _target_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "SetTitle");

	Params::UI_MissionPopupSlotBattlePass_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotBattlePass.ShowBookmarkBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotBattlePass::ShowBookmarkBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotBattlePass", "ShowBookmarkBtn");

	Params::UI_MissionPopupSlotBattlePass_ShowBookmarkBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotDaily.OnUpdateMission
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::OnUpdateMission(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "OnUpdateMission");

	Params::UI_MissionPopupSlotDaily_OnUpdateMission Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotDaily.RequestReward
// (Final, Native, Protected, BlueprintCallable)

void UUI_MissionPopupSlotDaily::RequestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "RequestReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotDaily.SetCanReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_reward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::SetCanReward(bool _can_reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "SetCanReward");

	Params::UI_MissionPopupSlotDaily_SetCanReward Parms{};

	Parms._can_reward = _can_reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotDaily.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "SetDesc");

	Params::UI_MissionPopupSlotDaily_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotDaily.SetProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMissionProgressType                    _progress_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _target_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::SetProgress(EMissionProgressType _progress_type, int32 _count, int32 _target_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "SetProgress");

	Params::UI_MissionPopupSlotDaily_SetProgress Parms{};

	Parms._progress_type = _progress_type;
	Parms._count = _count;
	Parms._target_count = _target_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotDaily.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "SetTitle");

	Params::UI_MissionPopupSlotDaily_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotDaily.ShowChangeBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::ShowChangeBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "ShowChangeBtn");

	Params::UI_MissionPopupSlotDaily_ShowChangeBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotDaily.UpdateDailyInfo
// (Final, Native, Protected)
// Parameters:
// class UMission*                         _mission                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotDaily::UpdateDailyInfo(class UMission* _mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotDaily", "UpdateDailyInfo");

	Params::UI_MissionPopupSlotDaily_UpdateDailyInfo Parms{};

	Parms._mission = _mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotMaster.OnUpdateMission
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::OnUpdateMission(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "OnUpdateMission");

	Params::UI_MissionPopupSlotMaster_OnUpdateMission Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotMaster.RequestReward
// (Final, Native, Protected, BlueprintCallable)

void UUI_MissionPopupSlotMaster::RequestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "RequestReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupSlotMaster.SetCanReward
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_reward                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::SetCanReward(bool _can_reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "SetCanReward");

	Params::UI_MissionPopupSlotMaster_SetCanReward Parms{};

	Parms._can_reward = _can_reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotMaster.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "SetDesc");

	Params::UI_MissionPopupSlotMaster_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotMaster.SetProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMissionProgressType                    _progress_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _count                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _target_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::SetProgress(EMissionProgressType _progress_type, int32 _count, int32 _target_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "SetProgress");

	Params::UI_MissionPopupSlotMaster_SetProgress Parms{};

	Parms._progress_type = _progress_type;
	Parms._count = _count;
	Parms._target_count = _target_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotMaster.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "SetTitle");

	Params::UI_MissionPopupSlotMaster_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotMaster.ShowChangeBtn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::ShowChangeBtn(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "ShowChangeBtn");

	Params::UI_MissionPopupSlotMaster_ShowChangeBtn Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupSlotMaster.UpdateMasterInfo
// (Final, Native, Protected)
// Parameters:
// class UMission*                         _mission                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupSlotMaster::UpdateMasterInfo(class UMission* _mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupSlotMaster", "UpdateMasterInfo");

	Params::UI_MissionPopupSlotMaster_UpdateMasterInfo Parms{};

	Parms._mission = _mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupTab.HideWidgetSwithcer
// (Event, Protected, BlueprintEvent)

void UUI_MissionPopupTab::HideWidgetSwithcer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "HideWidgetSwithcer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_MissionPopupTab.OnUpdateMission
// (Final, Native, Protected)
// Parameters:
// EMissionUpdateType                      _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMission*                         _updated_mission                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::OnUpdateMission(EMissionUpdateType _type, class UMission* _updated_mission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "OnUpdateMission");

	Params::UI_MissionPopupTab_OnUpdateMission Parms{};

	Parms._type = _type;
	Parms._updated_mission = _updated_mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_MissionPopupTab.SetCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _completed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::SetCompleted(bool _completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "SetCompleted");

	Params::UI_MissionPopupTab_SetCompleted Parms{};

	Parms._completed = _completed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupTab.SetImminent
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    _imminent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        _remain_time_span                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::SetImminent(bool _imminent, const struct FTimespan& _remain_time_span)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "SetImminent");

	Params::UI_MissionPopupTab_SetImminent Parms{};

	Parms._imminent = _imminent;
	Parms._remain_time_span = std::move(_remain_time_span);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupTab.SetLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _locked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::SetLocked(bool _locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "SetLocked");

	Params::UI_MissionPopupTab_SetLocked Parms{};

	Parms._locked = _locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupTab.SetPassActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _activate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::SetPassActivate(bool _activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "SetPassActivate");

	Params::UI_MissionPopupTab_SetPassActivate Parms{};

	Parms._activate = _activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupTab.SetRedDot
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _red_dot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::SetRedDot(bool _red_dot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "SetRedDot");

	Params::UI_MissionPopupTab_SetRedDot Parms{};

	Parms._red_dot = _red_dot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionPopupTab.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionPopupTab::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionPopupTab", "SetTitle");

	Params::UI_MissionPopupTab_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionSuccessSlot.SetColor
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     _color                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionSuccessSlot::SetColor(const struct FLinearColor& _color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionSuccessSlot", "SetColor");

	Params::UI_MissionSuccessSlot_SetColor Parms{};

	Parms._color = std::move(_color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionSuccessSlot.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_MissionSuccessSlot::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionSuccessSlot", "SetTitle");

	Params::UI_MissionSuccessSlot_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_MissionSuccessSlot.SetType
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMissionType                            _mission_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_MissionSuccessSlot::SetType(EMissionType _mission_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_MissionSuccessSlot", "SetType");

	Params::UI_MissionSuccessSlot_SetType Parms{};

	Parms._mission_type = _mission_type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ModeRecordItem.SetValues
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FModeRecord                      _records                                               (Parm, NativeAccessSpecifierPublic)

void UUI_ModeRecordItem::SetValues(const struct FModeRecord& _records)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ModeRecordItem", "SetValues");

	Params::UI_ModeRecordItem_SetValues Parms{};

	Parms._records = std::move(_records);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Nickname.SetNickname
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Nickname::SetNickname(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Nickname", "SetNickname");

	Params::UI_Nickname_SetNickname Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_Nickname.SetPlayerSide
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerSide                             _side                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_Nickname::SetPlayerSide(EPlayerSide _side)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Nickname", "SetPlayerSide");

	Params::UI_Nickname_SetPlayerSide Parms{};

	Parms._side = _side;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_NoticePopup.CheckDoNotOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_checked                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_NoticePopup::CheckDoNotOpen(bool _is_checked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NoticePopup", "CheckDoNotOpen");

	Params::UI_NoticePopup_CheckDoNotOpen Parms{};

	Parms._is_checked = _is_checked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_NoticePopup.InitWidget
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FLoginNotice                     _packet                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _is_auto_open                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_NoticePopup::InitWidget(const struct FLoginNotice& _packet, bool _is_auto_open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NoticePopup", "InitWidget");

	Params::UI_NoticePopup_InitWidget Parms{};

	Parms._packet = std::move(_packet);
	Parms._is_auto_open = _is_auto_open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_OptionPageBase.ApplyCurTabOptionAsRealTime
// (Native, Protected, BlueprintCallable)

void UUI_OptionPageBase::ApplyCurTabOptionAsRealTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "ApplyCurTabOptionAsRealTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPageBase.GetPageType
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOptionCategoryType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOptionCategoryType UUI_OptionPageBase::GetPageType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "GetPageType");

	Params::UI_OptionPageBase_GetPageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_OptionPageBase.Init
// (Native, Public, BlueprintCallable)

void UUI_OptionPageBase::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPageBase.InvokeOnPageContextChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _apply_real_time                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionPageBase::InvokeOnPageContextChanged(bool _apply_real_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "InvokeOnPageContextChanged");

	Params::UI_OptionPageBase_InvokeOnPageContextChanged Parms{};

	Parms._apply_real_time = _apply_real_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPageBase.OnAfterApplyOptions
// (Native, Event, Public, BlueprintEvent)

void UUI_OptionPageBase::OnAfterApplyOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "OnAfterApplyOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPageBase.OnPanelHoverChanged
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UCtrl_OptionItemEntry*            _panel                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_hover                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionPageBase::OnPanelHoverChanged(const class UCtrl_OptionItemEntry* _panel, bool _is_hover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "OnPanelHoverChanged");

	Params::UI_OptionPageBase_OnPanelHoverChanged Parms{};

	Parms._panel = _panel;
	Parms._is_hover = _is_hover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPageBase.RegisterOnPageDataChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UUI_OptionPageBase* _page)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionPageBase::RegisterOnPageDataChanged(const TDelegate<void(class UUI_OptionPageBase* _page)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "RegisterOnPageDataChanged");

	Params::UI_OptionPageBase_RegisterOnPageDataChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPageBase.Setup
// (Native, Protected, BlueprintCallable)

void UUI_OptionPageBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPageBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPopupBase.OnClickApplyButton
// (Final, Native, Protected, BlueprintCallable)

void UUI_OptionPopupBase::OnClickApplyButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPopupBase", "OnClickApplyButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPopupBase.OnProcReset
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EOptionPopupResetType                   _reset_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionPopupBase::OnProcReset(EOptionPopupResetType _reset_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPopupBase", "OnProcReset");

	Params::UI_OptionPopupBase_OnProcReset Parms{};

	Parms._reset_type = _reset_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionPopupBase.ProcUpdateOptionContext
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _page_idx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionPopupBase::ProcUpdateOptionContext(int32 _page_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPopupBase", "ProcUpdateOptionContext");

	Params::UI_OptionPopupBase_ProcUpdateOptionContext Parms{};

	Parms._page_idx = _page_idx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_OptionPopupBase.UpdateApplyAndResetButtons
// (Event, Protected, BlueprintEvent)

void UUI_OptionPopupBase::UpdateApplyAndResetButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionPopupBase", "UpdateApplyAndResetButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_OptionResetMessageBoxBase.GetSelectedResetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOptionPopupResetType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOptionPopupResetType UUI_OptionResetMessageBoxBase::GetSelectedResetType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionResetMessageBoxBase", "GetSelectedResetType");

	Params::UI_OptionResetMessageBoxBase_GetSelectedResetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_OptionResetMessageBoxBase.SelectResetDefault
// (Final, Native, Protected, BlueprintCallable)

void UUI_OptionResetMessageBoxBase::SelectResetDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionResetMessageBoxBase", "SelectResetDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionResetMessageBoxBase.SelectRevertOriginal
// (Final, Native, Protected, BlueprintCallable)

void UUI_OptionResetMessageBoxBase::SelectRevertOriginal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionResetMessageBoxBase", "SelectRevertOriginal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionResetMessageBoxBase.SetActiveAdditionalAlertText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionResetMessageBoxBase::SetActiveAdditionalAlertText(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionResetMessageBoxBase", "SetActiveAdditionalAlertText");

	Params::UI_OptionResetMessageBoxBase_SetActiveAdditionalAlertText Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_OptionResetMessageBoxBase.SetCurrentTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOptionCategoryType                     _tab_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_OptionResetMessageBoxBase::SetCurrentTab(EOptionCategoryType _tab_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_OptionResetMessageBoxBase", "SetCurrentTab");

	Params::UI_OptionResetMessageBoxBase_SetCurrentTab Parms{};

	Parms._tab_type = _tab_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_ColorBlindDescBase.Setup
// (Final, Native, Protected, BlueprintCallable)

void UUI_Option_ColorBlindDescBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_ColorBlindDescBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_Control.InvokeOnKeyMappingChanged
// (Final, Native, Protected, BlueprintCallable)

void UUI_Option_Control::InvokeOnKeyMappingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_Control", "InvokeOnKeyMappingChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_Control.RegisterOnKeyMappingChanged
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       _callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Option_Control::RegisterOnKeyMappingChanged(const TDelegate<void()>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_Control", "RegisterOnKeyMappingChanged");

	Params::UI_Option_Control_RegisterOnKeyMappingChanged Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_Control.UnRegisterOnKeyMappingChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          _binder                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Option_Control::UnRegisterOnKeyMappingChanged(class UObject* _binder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_Control", "UnRegisterOnKeyMappingChanged");

	Params::UI_Option_Control_UnRegisterOnKeyMappingChanged Parms{};

	Parms._binder = _binder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_CrossHairDescBase.Setup
// (Final, Native, Protected, BlueprintCallable)

void UUI_Option_CrossHairDescBase::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_CrossHairDescBase", "Setup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Option_CrossHairDescBase.UpdateContext
// (Final, Native, Public, BlueprintCallable)

void UUI_Option_CrossHairDescBase::UpdateContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Option_CrossHairDescBase", "UpdateContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.HideNameTag
// (Final, Native, Public, BlueprintCallable)

void UUI_PanelPlayerBase::HideNameTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "HideNameTag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.InitializePanel
// (Final, Native, Public, BlueprintCallable)

void UUI_PanelPlayerBase::InitializePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "InitializePanel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.OnHoverInviteBtn
// (Final, Native, Public, BlueprintCallable)

void UUI_PanelPlayerBase::OnHoverInviteBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "OnHoverInviteBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.OnUnHoverInviteBtn
// (Final, Native, Public, BlueprintCallable)

void UUI_PanelPlayerBase::OnUnHoverInviteBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "OnUnHoverInviteBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.SetActiveInviteButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PanelPlayerBase::SetActiveInviteButton(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "SetActiveInviteButton");

	Params::UI_PanelPlayerBase_SetActiveInviteButton Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.SetActiveTooltip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _flag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PanelPlayerBase::SetActiveTooltip(bool _flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "SetActiveTooltip");

	Params::UI_PanelPlayerBase_SetActiveTooltip Parms{};

	Parms._flag = _flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.ShowNameTagByPartyMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _member                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_leader                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PanelPlayerBase::ShowNameTagByPartyMember(class UUserProfile* _member, bool _is_leader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "ShowNameTagByPartyMember");

	Params::UI_PanelPlayerBase_ShowNameTagByPartyMember Parms{};

	Parms._member = _member;
	Parms._is_leader = _is_leader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.UpdateInviteButtonAcitivity
// (Final, Native, Public, BlueprintCallable)

void UUI_PanelPlayerBase::UpdateInviteButtonAcitivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "UpdateInviteButtonAcitivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PanelPlayerBase.IsBoundMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PanelPlayerBase::IsBoundMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PanelPlayerBase", "IsBoundMember");

	Params::UI_PanelPlayerBase_IsBoundMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PartyMemberNameTag.ConstructInit
// (Final, Native, Protected, BlueprintCallable)

void UUI_PartyMemberNameTag::ConstructInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "ConstructInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyMemberNameTag.GetHoverToolTipEntries
// (Final, Native, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FHoverMenuEntry>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FHoverMenuEntry> UUI_PartyMemberNameTag::GetHoverToolTipEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "GetHoverToolTipEntries");

	Params::UI_PartyMemberNameTag_GetHoverToolTipEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PartyMemberNameTag.InitNameTag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserProfile*                     _party_member                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_leader                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PartyMemberNameTag::InitNameTag(class UUserProfile* _party_member, bool _is_leader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "InitNameTag");

	Params::UI_PartyMemberNameTag_InitNameTag Parms{};

	Parms._party_member = _party_member;
	Parms._is_leader = _is_leader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyMemberNameTag.OnAck_AcceptAskFriend
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _net_result_code                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_FriendUpdate                _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_PartyMemberNameTag::OnAck_AcceptAskFriend(EResultCode _net_result_code, const struct FACK_FriendUpdate& _response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "OnAck_AcceptAskFriend");

	Params::UI_PartyMemberNameTag_OnAck_AcceptAskFriend Parms{};

	Parms._net_result_code = _net_result_code;
	Parms._response = std::move(_response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PartyMemberNameTag.OnAck_AskFriend
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _net_result_code                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_Friend                      _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_PartyMemberNameTag::OnAck_AskFriend(EResultCode _net_result_code, const struct FACK_Friend& _response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "OnAck_AskFriend");

	Params::UI_PartyMemberNameTag_OnAck_AskFriend Parms{};

	Parms._net_result_code = _net_result_code;
	Parms._response = std::move(_response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PartyMemberNameTag.OnProcAskFriendClick
// (Final, Native, Protected, BlueprintCallable)

void UUI_PartyMemberNameTag::OnProcAskFriendClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "OnProcAskFriendClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyMemberNameTag.SetToHoverState
// (Final, Native, Protected, BlueprintCallable)

void UUI_PartyMemberNameTag::SetToHoverState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "SetToHoverState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyMemberNameTag.SetToNormalState
// (Final, Native, Protected, BlueprintCallable)

void UUI_PartyMemberNameTag::SetToNormalState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "SetToNormalState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyMemberNameTag.GetPartyMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserProfile*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserProfile* UUI_PartyMemberNameTag::GetPartyMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyMemberNameTag", "GetPartyMember");

	Params::UI_PartyMemberNameTag_GetPartyMember Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PartyNotifySlot.OnProcMsgBoxClick
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UPopupBase*                       _popup                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             _ctrl_id                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PartyNotifySlot::OnProcMsgBoxClick(const class UPopupBase* _popup, class FName _ctrl_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyNotifySlot", "OnProcMsgBoxClick");

	Params::UI_PartyNotifySlot_OnProcMsgBoxClick Parms{};

	Parms._popup = _popup;
	Parms._ctrl_id = _ctrl_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyNotifySlot.ReplyDenyPartyInvitation
// (Final, Native, Protected, BlueprintCallable)

void UUI_PartyNotifySlot::ReplyDenyPartyInvitation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyNotifySlot", "ReplyDenyPartyInvitation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyNotifySlot.ReplyInviteParty
// (Final, Native, Protected, BlueprintCallable)

void UUI_PartyNotifySlot::ReplyInviteParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyNotifySlot", "ReplyInviteParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PartyNotifySlot.SetBackground
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _texture                                               (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PartyNotifySlot::SetBackground(const TSoftObjectPtr<class UTexture2D>& _texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyNotifySlot", "SetBackground");

	Params::UI_PartyNotifySlot_SetBackground Parms{};

	Parms._texture = _texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PartyNotifySlot.SetText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PartyNotifySlot::SetText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PartyNotifySlot", "SetText");

	Params::UI_PartyNotifySlot_SetText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.Reset
// (Event, Protected, BlueprintEvent)

void UUI_PassiveSettingDetail::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_PassiveSettingDetail.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "SetDesc");

	Params::UI_PassiveSettingDetail_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.SetIsBuffed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_buffed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::SetIsBuffed(bool _is_buffed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "SetIsBuffed");

	Params::UI_PassiveSettingDetail_SetIsBuffed Parms{};

	Parms._is_buffed = _is_buffed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.SetIsCurrent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_current                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::SetIsCurrent(bool _is_current)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "SetIsCurrent");

	Params::UI_PassiveSettingDetail_SetIsCurrent Parms{};

	Parms._is_current = _is_current;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.SetIsMaxCanLevelUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_max                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::SetIsMaxCanLevelUp(bool _is_max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "SetIsMaxCanLevelUp");

	Params::UI_PassiveSettingDetail_SetIsMaxCanLevelUp Parms{};

	Parms._is_max = _is_max;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.SetLearned
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _learned                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::SetLearned(bool _learned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "SetLearned");

	Params::UI_PassiveSettingDetail_SetLearned Parms{};

	Parms._learned = _learned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.SetLevelLockText
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _lock_level                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::SetLevelLockText(int32 _lock_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "SetLevelLockText");

	Params::UI_PassiveSettingDetail_SetLevelLockText Parms{};

	Parms._lock_level = _lock_level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingDetail.ShowLevelLock
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingDetail::ShowLevelLock(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingDetail", "ShowLevelLock");

	Params::UI_PassiveSettingDetail_ShowLevelLock Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingPage.ApplyChanges
// (Final, Native, Protected, BlueprintCallable)

void UUI_PassiveSettingPage::ApplyChanges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingPage", "ApplyChanges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PassiveSettingPage.OnSelectSlot
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPassiveSkillID                  _skill_id                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingPage::OnSelectSlot(const struct FPassiveSkillID& _skill_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingPage", "OnSelectSlot");

	Params::UI_PassiveSettingPage_OnSelectSlot Parms{};

	Parms._skill_id = std::move(_skill_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingPage.OnUpdateUserEvent
// (Final, Native, Protected)
// Parameters:
// EUserEvent                              _event                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingPage::OnUpdateUserEvent(EUserEvent _event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingPage", "OnUpdateUserEvent");

	Params::UI_PassiveSettingPage_OnUpdateUserEvent Parms{};

	Parms._event = _event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PassiveSettingPage.SetCurrentPassiveSkillPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingPage::SetCurrentPassiveSkillPoint(int32 _point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingPage", "SetCurrentPassiveSkillPoint");

	Params::UI_PassiveSettingPage_SetCurrentPassiveSkillPoint Parms{};

	Parms._point = _point;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingPage.SetTotalPassiveSkillPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _point                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingPage::SetTotalPassiveSkillPoint(int32 _point)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingPage", "SetTotalPassiveSkillPoint");

	Params::UI_PassiveSettingPage_SetTotalPassiveSkillPoint Parms{};

	Parms._point = _point;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.OnClickButton
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::OnClickButton(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "OnClickButton");

	Params::UI_PassiveSettingSlot_OnClickButton Parms{};

	Parms._level = _level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PassiveSettingSlot.OnInitWidget
// (Event, Protected, BlueprintEvent)

void UUI_PassiveSettingSlot::OnInitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "OnInitWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_PassiveSettingSlot.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "SetDesc");

	Params::UI_PassiveSettingSlot_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.SetIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::SetIcon(const TSoftObjectPtr<class UTexture2D>& _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "SetIcon");

	Params::UI_PassiveSettingSlot_SetIcon Parms{};

	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.SetIsBoosted
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _is_boosted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::SetIsBoosted(bool _is_boosted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "SetIsBoosted");

	Params::UI_PassiveSettingSlot_SetIsBoosted Parms{};

	Parms._is_boosted = _is_boosted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.SetIsLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_locked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::SetIsLocked(bool _is_locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "SetIsLocked");

	Params::UI_PassiveSettingSlot_SetIsLocked Parms{};

	Parms._is_locked = _is_locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.SetLevelText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::SetLevelText(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "SetLevelText");

	Params::UI_PassiveSettingSlot_SetLevelText Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "SetTitle");

	Params::UI_PassiveSettingSlot_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.ShowMinusButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::ShowMinusButton(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "ShowMinusButton");

	Params::UI_PassiveSettingSlot_ShowMinusButton Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.ShowPlusButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _show                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::ShowPlusButton(bool _show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "ShowPlusButton");

	Params::UI_PassiveSettingSlot_ShowPlusButton Parms{};

	Parms._show = _show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassiveSettingSlot.UpdateTooltip
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _level                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassiveSettingSlot::UpdateTooltip(int32 _level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassiveSettingSlot", "UpdateTooltip");

	Params::UI_PassiveSettingSlot_UpdateTooltip Parms{};

	Parms._level = _level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_WaitingRoom_CharacterPick.GetCam
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFollowCameraActor*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFollowCameraActor* UUI_WaitingRoom_CharacterPick::GetCam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "GetCam");

	Params::UI_WaitingRoom_CharacterPick_GetCam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.MovePickedCharacter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _idx_move                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _offset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WaitingRoom_CharacterPick::MovePickedCharacter(int32 _idx_move, int32 _offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "MovePickedCharacter");

	Params::UI_WaitingRoom_CharacterPick_MovePickedCharacter Parms{};

	Parms._idx_move = _idx_move;
	Parms._offset = _offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.OnChange_CanReady
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _can_ready                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WaitingRoom_CharacterPick::OnChange_CanReady(bool _can_ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "OnChange_CanReady");

	Params::UI_WaitingRoom_CharacterPick_OnChange_CanReady Parms{};

	Parms._can_ready = _can_ready;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.OnChange_PickedCharacter
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WaitingRoom_CharacterPick::OnChange_PickedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "OnChange_PickedCharacter");

	Params::UI_WaitingRoom_CharacterPick_OnChange_PickedCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.OnLoad_Characters
// (Final, Native, Protected)

void UUI_WaitingRoom_CharacterPick::OnLoad_Characters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "OnLoad_Characters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.OnLOCAL_ChangeCharacterSetting
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WaitingRoom_CharacterPick::OnLOCAL_ChangeCharacterSetting(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "OnLOCAL_ChangeCharacterSetting");

	Params::UI_WaitingRoom_CharacterPick_OnLOCAL_ChangeCharacterSetting Parms{};

	Parms._ps = _ps;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.OnNotify_LoadCharacters
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_WaitingRoom_CharacterPick::OnNotify_LoadCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "OnNotify_LoadCharacters");

	Params::UI_WaitingRoom_CharacterPick_OnNotify_LoadCharacters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.SetCam
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AFollowCameraActor*               _follow_cam                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WaitingRoom_CharacterPick::SetCam(class AFollowCameraActor* _follow_cam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "SetCam");

	Params::UI_WaitingRoom_CharacterPick_SetCam Parms{};

	Parms._follow_cam = _follow_cam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.SetCurrentPickedCharacter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WaitingRoom_CharacterPick::SetCurrentPickedCharacter(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "SetCurrentPickedCharacter");

	Params::UI_WaitingRoom_CharacterPick_SetCurrentPickedCharacter Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WaitingRoom_CharacterPick.GetChatBox
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUI_ChatBox*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUI_ChatBox* UUI_WaitingRoom_CharacterPick::GetChatBox() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom_CharacterPick", "GetChatBox");

	Params::UI_WaitingRoom_CharacterPick_GetChatBox Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PassMissionWeekTab.OnClickWeekTab
// (Final, Native, Protected, BlueprintCallable)

void UUI_PassMissionWeekTab::OnClickWeekTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassMissionWeekTab", "OnClickWeekTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PassMissionWeekTab.SetLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _locked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassMissionWeekTab::SetLocked(bool _locked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassMissionWeekTab", "SetLocked");

	Params::UI_PassMissionWeekTab_SetLocked Parms{};

	Parms._locked = _locked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassMissionWeekTab.SetProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _current_count                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _target_count                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassMissionWeekTab::SetProgress(int32 _current_count, int32 _target_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassMissionWeekTab", "SetProgress");

	Params::UI_PassMissionWeekTab_SetProgress Parms{};

	Parms._current_count = _current_count;
	Parms._target_count = _target_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassMissionWeekTab.SetSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PassMissionWeekTab::SetSelected(bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassMissionWeekTab", "SetSelected");

	Params::UI_PassMissionWeekTab_SetSelected Parms{};

	Parms._selected = _selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PassMissionWeekTab.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PassMissionWeekTab::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PassMissionWeekTab", "SetTitle");

	Params::UI_PassMissionWeekTab_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PingMenu.ScrollPingType
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   _delta                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PingMenu::ScrollPingType(float _delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PingMenu", "ScrollPingType");

	Params::UI_PingMenu_ScrollPingType Parms{};

	Parms._delta = _delta;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_PingMenu.SetPingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBattlePingType                         _ping_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PingMenu::SetPingType(EBattlePingType _ping_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PingMenu", "SetPingType");

	Params::UI_PingMenu_SetPingType Parms{};

	Parms._ping_type = _ping_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PingMenu.UpdatEBattlePingType
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_PingMenu::UpdatEBattlePingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PingMenu", "UpdatEBattlePingType");

	Params::UI_PingMenu_UpdatEBattlePingType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Stigma.UI_PingMenu.GetPingType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBattlePingType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBattlePingType UUI_PingMenu::GetPingType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PingMenu", "GetPingType");

	Params::UI_PingMenu_GetPingType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PlayerProfilePopup.Init
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUserID                          _in_user_id                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _in_emblem_id                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID                          _in_profilecard_id                                     (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETier                                   _in_tier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _in_nickname                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _in_level                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerProfilePopup::Init(const struct FUserID& _in_user_id, const struct FItemID& _in_emblem_id, const struct FItemID& _in_profilecard_id, ETier _in_tier, const struct FUserName& _in_nickname, int32 _in_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerProfilePopup", "Init");

	Params::UI_PlayerProfilePopup_Init Parms{};

	Parms._in_user_id = std::move(_in_user_id);
	Parms._in_emblem_id = std::move(_in_emblem_id);
	Parms._in_profilecard_id = std::move(_in_profilecard_id);
	Parms._in_tier = _in_tier;
	Parms._in_nickname = std::move(_in_nickname);
	Parms._in_level = _in_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerProfilePopup.OnACK_ReadStatistic
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ProfileStatisticRead        _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_PlayerProfilePopup::OnACK_ReadStatistic(EResultCode _rcode, const struct FACK_ProfileStatisticRead& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerProfilePopup", "OnACK_ReadStatistic");

	Params::UI_PlayerProfilePopup_OnACK_ReadStatistic Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_PlayerReadyState.OnPlayerStateChanged
// (Final, Native, Protected)
// Parameters:
// EChangedPlayerState                     _reason                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerReadyState::OnPlayerStateChanged(EChangedPlayerState _reason, class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerReadyState", "OnPlayerStateChanged");

	Params::UI_PlayerReadyState_OnPlayerStateChanged Parms{};

	Parms._reason = _reason;
	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerReadyState.SetPlayerReadyState
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPlayerReadyState                       _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerReadyState::SetPlayerReadyState(EPlayerReadyState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerReadyState", "SetPlayerReadyState");

	Params::UI_PlayerReadyState_SetPlayerReadyState Parms{};

	Parms._state = _state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_WeeklyBestRecord.AddList
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeeklyBestRecordType                   _record_type                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _week                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _score                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WeeklyBestRecord::AddList(ERankingType _ranking_type, EWeeklyBestRecordType _record_type, int32 _week, int32 _value, float _score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WeeklyBestRecord", "AddList");

	Params::UI_WeeklyBestRecord_AddList Parms{};

	Parms._ranking_type = _ranking_type;
	Parms._record_type = _record_type;
	Parms._week = _week;
	Parms._value = _value;
	Parms._score = _score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_PlayerReadyStateContainer.AddPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerReadyStateContainer::AddPlayer(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerReadyStateContainer", "AddPlayer");

	Params::UI_PlayerReadyStateContainer_AddPlayer Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerReadyStateContainer.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGameMode                               _mode_type                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerReadyStateContainer::InitWidget(EGameMode _mode_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerReadyStateContainer", "InitWidget");

	Params::UI_PlayerReadyStateContainer_InitWidget Parms{};

	Parms._mode_type = _mode_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerReadyStateContainer.RemovePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AMatchServicedPlayerState*        _ps                                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PlayerReadyStateContainer::RemovePlayer(class AMatchServicedPlayerState* _ps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerReadyStateContainer", "RemovePlayer");

	Params::UI_PlayerReadyStateContainer_RemovePlayer Parms{};

	Parms._ps = _ps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PlayerResultItem.OnUpdateUI_ProfileCard
// (Event, Public, BlueprintEvent)

void UUI_PlayerResultItem::OnUpdateUI_ProfileCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerResultItem", "OnUpdateUI_ProfileCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_PlayerResultItem.UpdateUI
// (Final, Native, Public, BlueprintCallable)

void UUI_PlayerResultItem::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PlayerResultItem", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Preview.InitDefaultItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRewardItem>              _default_items                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Preview::InitDefaultItems(const TArray<struct FRewardItem>& _default_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "InitDefaultItems");

	Params::UI_Preview_InitDefaultItems Parms{};

	Parms._default_items = std::move(_default_items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Preview.OnShowPreviewType
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPreviewType                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Preview::OnShowPreviewType(EPreviewType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "OnShowPreviewType");

	Params::UI_Preview_OnShowPreviewType Parms{};

	Parms._type = _type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Preview.ResetPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _include_default_items                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Preview::ResetPreview(bool _include_default_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "ResetPreview");

	Params::UI_Preview_ResetPreview Parms{};

	Parms._include_default_items = _include_default_items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Preview.SetCharmPreviewer
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class APreviewActor*                    _previewer                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FItemID_Gun_Charm                _charm_id                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Preview::SetCharmPreviewer(class APreviewActor* _previewer, const struct FItemID_Gun_Charm& _charm_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "SetCharmPreviewer");

	Params::UI_Preview_SetCharmPreviewer Parms{};

	Parms._previewer = _previewer;
	Parms._charm_id = std::move(_charm_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Preview.SetGunPreviewer
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APreviewActor*                    _previewer                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGunObject*                       _gun_obj                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Preview::SetGunPreviewer(class APreviewActor* _previewer, class UGunObject* _gun_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "SetGunPreviewer");

	Params::UI_Preview_SetGunPreviewer Parms{};

	Parms._previewer = _previewer;
	Parms._gun_obj = _gun_obj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Preview.SetPreviewImage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FRewardItem                      _item                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Preview::SetPreviewImage(const struct FRewardItem& _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "SetPreviewImage");

	Params::UI_Preview_SetPreviewImage Parms{};

	Parms._item = std::move(_item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Preview.ShowPreview
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRewardItem                      _preview_item                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Preview::ShowPreview(const struct FRewardItem& _preview_item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "ShowPreview");

	Params::UI_Preview_ShowPreview Parms{};

	Parms._preview_item = std::move(_preview_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Preview.ShowPreviewButtons
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSet<EPreviewType>                      _preview_types                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Preview::ShowPreviewButtons(const TSet<EPreviewType>& _preview_types)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "ShowPreviewButtons");

	Params::UI_Preview_ShowPreviewButtons Parms{};

	Parms._preview_types = std::move(_preview_types);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Preview.ShowPreviewType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EPreviewType                            _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_Preview::ShowPreviewType(EPreviewType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Preview", "ShowPreviewType");

	Params::UI_Preview_ShowPreviewType Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.AddPreviewItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRewardItem                      _item                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::AddPreviewItem(const struct FRewardItem& _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "AddPreviewItem");

	Params::UI_PreviewPopupBase_AddPreviewItem Parms{};

	Parms._item = std::move(_item);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.AddUserCurrency
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID_Currency                 _currency_id                                           (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::AddUserCurrency(const struct FItemID_Currency& _currency_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "AddUserCurrency");

	Params::UI_PreviewPopupBase_AddUserCurrency Parms{};

	Parms._currency_id = std::move(_currency_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.ClearUserCurrencies
// (Final, Native, Public, BlueprintCallable)

void UUI_PreviewPopupBase::ClearUserCurrencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "ClearUserCurrencies");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.HideTime
// (Final, Native, Public, BlueprintCallable)

void UUI_PreviewPopupBase::HideTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "HideTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.InitPreview
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRewardItem>              _default_items                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::InitPreview(const TArray<struct FRewardItem>& _default_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "InitPreview");

	Params::UI_PreviewPopupBase_InitPreview Parms{};

	Parms._default_items = std::move(_default_items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.SetDate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           _start_at_str                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _end_at_str                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::SetDate(const class FString& _start_at_str, const class FString& _end_at_str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "SetDate");

	Params::UI_PreviewPopupBase_SetDate Parms{};

	Parms._start_at_str = std::move(_start_at_str);
	Parms._end_at_str = std::move(_end_at_str);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.SetDesc
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "SetDesc");

	Params::UI_PreviewPopupBase_SetDesc Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.SetPreviewResetMannequinOnClose
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _reset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::SetPreviewResetMannequinOnClose(bool _reset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "SetPreviewResetMannequinOnClose");

	Params::UI_PreviewPopupBase_SetPreviewResetMannequinOnClose Parms{};

	Parms._reset = _reset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.SetRemainTimer
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FDateTime                        _end_at                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _alert_hour                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::SetRemainTimer(const struct FDateTime& _end_at, int32 _alert_hour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "SetRemainTimer");

	Params::UI_PreviewPopupBase_SetRemainTimer Parms{};

	Parms._end_at = std::move(_end_at);
	Parms._alert_hour = _alert_hour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.SetTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EItemUITag>                      _tags                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::SetTags(const TArray<EItemUITag>& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "SetTags");

	Params::UI_PreviewPopupBase_SetTags Parms{};

	Parms._tags = std::move(_tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_PreviewPopupBase.SetTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_PreviewPopupBase::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_PreviewPopupBase", "SetTitle");

	Params::UI_PreviewPopupBase_SetTitle Parms{};

	Parms._text = std::move(_text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserNameBlueprintLibrary.GetName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserName                        _Name                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUserNameBlueprintLibrary::GetName(const struct FUserName& _Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserNameBlueprintLibrary", "GetName");

	Params::UserNameBlueprintLibrary_GetName Parms{};

	Parms._Name = std::move(_Name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserNameBlueprintLibrary.GetTag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserName                        _Name                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserNameBlueprintLibrary::GetTag(const struct FUserName& _Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserNameBlueprintLibrary", "GetTag");

	Params::UserNameBlueprintLibrary_GetTag Parms{};

	Parms._Name = std::move(_Name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserNameBlueprintLibrary.ToString
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserName                        _Name                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _with_tag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUserNameBlueprintLibrary::ToString(const struct FUserName& _Name, bool _with_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserNameBlueprintLibrary", "ToString");

	Params::UserNameBlueprintLibrary_ToString Parms{};

	Parms._Name = std::move(_Name);
	Parms._with_tag = _with_tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserNameBlueprintLibrary.ToText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserName                        _Name                                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _with_tag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUserNameBlueprintLibrary::ToText(const struct FUserName& _Name, bool _with_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserNameBlueprintLibrary", "ToText");

	Params::UserNameBlueprintLibrary_ToText Parms{};

	Parms._Name = std::move(_Name);
	Parms._with_tag = _with_tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ProfileCard.Bind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalUserProfile*                _user_obj                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::Bind(class ULocalUserProfile* _user_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "Bind");

	Params::UI_ProfileCard_Bind Parms{};

	Parms._user_obj = _user_obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.GetBriefToolTipEntries
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHoverMenuEntry>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FHoverMenuEntry> UUI_ProfileCard::GetBriefToolTipEntries(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "GetBriefToolTipEntries");

	Params::UI_ProfileCard_GetBriefToolTipEntries Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ProfileCard.OnUpdateNicknameFX
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FItemID                          _nickfx_id                                             (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::OnUpdateNicknameFX(const struct FItemID& _nickfx_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "OnUpdateNicknameFX");

	Params::UI_ProfileCard_OnUpdateNicknameFX Parms{};

	Parms._nickfx_id = std::move(_nickfx_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ProfileCard.SetEmblemIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::SetEmblemIcon(const TSoftObjectPtr<class UTexture2D>& _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "SetEmblemIcon");

	Params::UI_ProfileCard_SetEmblemIcon Parms{};

	Parms._Icon = _Icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.SetEmblemID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::SetEmblemID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "SetEmblemID");

	Params::UI_ProfileCard_SetEmblemID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.SetNicknameFXID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::SetNicknameFXID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "SetNicknameFXID");

	Params::UI_ProfileCard_SetNicknameFXID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.SetProfileCardID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FItemID                          _item_id                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::SetProfileCardID(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "SetProfileCardID");

	Params::UI_ProfileCard_SetProfileCardID Parms{};

	Parms._item_id = std::move(_item_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.Update
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _is_set_master_icon                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ProfileCard::Update(bool _is_set_master_icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "Update");

	Params::UI_ProfileCard_Update Parms{};

	Parms._is_set_master_icon = _is_set_master_icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.UpdateEmblem
// (Final, Native, Protected, BlueprintCallable)

void UUI_ProfileCard::UpdateEmblem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "UpdateEmblem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.UpdateNicknameFX
// (Final, Native, Protected, BlueprintCallable)

void UUI_ProfileCard::UpdateNicknameFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "UpdateNicknameFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.UpdateProfileCard
// (Final, Native, Protected, BlueprintCallable)

void UUI_ProfileCard::UpdateProfileCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "UpdateProfileCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ProfileCard.GetUserObj
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalUserProfile*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULocalUserProfile* UUI_ProfileCard::GetUserObj() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ProfileCard", "GetUserObj");

	Params::UI_ProfileCard_GetUserObj Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RadioChatBox.IsOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_RadioChatBox::IsOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadioChatBox", "IsOpen");

	Params::UI_RadioChatBox_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RadioChatBox.SelectRadioChatCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RadioChatBox::SelectRadioChatCategory(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadioChatBox", "SelectRadioChatCategory");

	Params::UI_RadioChatBox_SelectRadioChatCategory Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RadioChatBox.SelectRadioChatList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERadioChatPhase                         _phase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RadioChatBox::SelectRadioChatList(ERadioChatPhase _phase, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadioChatBox", "SelectRadioChatList");

	Params::UI_RadioChatBox_SelectRadioChatList Parms{};

	Parms._phase = _phase;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RadioChatBox.SelectRadioChatMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RadioChatBox::SelectRadioChatMsg(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadioChatBox", "SelectRadioChatMsg");

	Params::UI_RadioChatBox_SelectRadioChatMsg Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RadioChatBox.Update
// (Event, Public, BlueprintEvent)

void UUI_RadioChatBox::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RadioChatBox", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_RankingListItem.OnSearchedUser
// (Event, Protected, BlueprintEvent)

void UUI_RankingListItem::OnSearchedUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RankingListItem", "OnSearchedUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_RankingListItem.SetUISize
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   _size_x                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _size_y                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RankingListItem::SetUISize(float _size_x, float _size_y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RankingListItem", "SetUISize");

	Params::UI_RankingListItem_SetUISize Parms{};

	Parms._size_x = _size_x;
	Parms._size_y = _size_y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RankingListItem.UpdateUI_ProfileCard
// (Event, Protected, BlueprintEvent)

void UUI_RankingListItem::UpdateUI_ProfileCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RankingListItem", "UpdateUI_ProfileCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_RankingListItem.UpdateUI_RankDiff
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    _is_new_rank                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _diff                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RankingListItem::UpdateUI_RankDiff(bool _is_new_rank, int32 _diff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RankingListItem", "UpdateUI_RankDiff");

	Params::UI_RankingListItem_UpdateUI_RankDiff Parms{};

	Parms._is_new_rank = _is_new_rank;
	Parms._diff = _diff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_RankingListView.AddRankingItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULVData_RankingItem*              _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RankingListView::AddRankingItem(class ULVData_RankingItem* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RankingListView", "AddRankingItem");

	Params::UI_RankingListView_AddRankingItem Parms{};

	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserProfiles.ReadRegistryINT32
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Section                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Entry                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Default_value                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserProfiles::ReadRegistryINT32(const class FString& Section, const class FString& Entry, int32 Default_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserProfiles", "ReadRegistryINT32");

	Params::UserProfiles_ReadRegistryINT32 Parms{};

	Parms.Section = std::move(Section);
	Parms.Entry = std::move(Entry);
	Parms.Default_value = Default_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfiles.ReadRegistryString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Section                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Entry                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Default_value                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUserProfiles::ReadRegistryString(const class FString& Section, const class FString& Entry, const class FString& Default_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserProfiles", "ReadRegistryString");

	Params::UserProfiles_ReadRegistryString Parms{};

	Parms.Section = std::move(Section);
	Parms.Entry = std::move(Entry);
	Parms.Default_value = std::move(Default_value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserProfiles.WriteRegistryINT32
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Section                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Entry                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserProfiles::WriteRegistryINT32(const class FString& Section, const class FString& Entry, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserProfiles", "WriteRegistryINT32");

	Params::UserProfiles_WriteRegistryINT32 Parms{};

	Parms.Section = std::move(Section);
	Parms.Entry = std::move(Entry);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserProfiles.WriteRegistryString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Section                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Entry                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserProfiles::WriteRegistryString(const class FString& Section, const class FString& Entry, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserProfiles", "WriteRegistryString");

	Params::UserProfiles_WriteRegistryString Parms{};

	Parms.Section = std::move(Section);
	Parms.Entry = std::move(Entry);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.OnACK_GetChallengeRankingList
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadChallengeRanking        _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Ranking::OnACK_GetChallengeRankingList(EResultCode _rcode, const struct FACK_ReadChallengeRanking& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnACK_GetChallengeRankingList");

	Params::UI_RecordPage_Ranking_OnACK_GetChallengeRankingList Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Ranking.OnACK_GetFriendRankingList
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadFriendRanking           _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Ranking::OnACK_GetFriendRankingList(EResultCode _rcode, const struct FACK_ReadFriendRanking& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnACK_GetFriendRankingList");

	Params::UI_RecordPage_Ranking_OnACK_GetFriendRankingList Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Ranking.OnACK_GetRankingList
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadRanking                 _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Ranking::OnACK_GetRankingList(EResultCode _rcode, const struct FACK_ReadRanking& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnACK_GetRankingList");

	Params::UI_RecordPage_Ranking_OnACK_GetRankingList Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Ranking.OnACK_GetSearchedUserRankingList
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadSearchedUserRanking     _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Ranking::OnACK_GetSearchedUserRankingList(EResultCode _rcode, const struct FACK_ReadSearchedUserRanking& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnACK_GetSearchedUserRankingList");

	Params::UI_RecordPage_Ranking_OnACK_GetSearchedUserRankingList Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Ranking.OnACK_GetWeeklyBestRank
// (Final, Native, Protected, HasOutParams)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadWeeklyBestRank          _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Ranking::OnACK_GetWeeklyBestRank(EResultCode _rcode, const struct FACK_ReadWeeklyBestRank& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnACK_GetWeeklyBestRank");

	Params::UI_RecordPage_Ranking_OnACK_GetWeeklyBestRank Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Ranking.OnClickNext10Page
// (Final, Native, Protected)

void UUI_RecordPage_Ranking::OnClickNext10Page()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnClickNext10Page");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.OnClickNextPage
// (Final, Native, Protected)

void UUI_RecordPage_Ranking::OnClickNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnClickNextPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.OnClickPrev10Page
// (Final, Native, Protected)

void UUI_RecordPage_Ranking::OnClickPrev10Page()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnClickPrev10Page");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.OnClickPrevPage
// (Final, Native, Protected)

void UUI_RecordPage_Ranking::OnClickPrevPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnClickPrevPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.OnModeTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Ranking::OnModeTabChanged(class FName _id, int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnModeTabChanged");

	Params::UI_RecordPage_Ranking_OnModeTabChanged Parms{};

	Parms._id = _id;
	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.OnUpdateRankingType
// (Event, Protected, BlueprintEvent)

void UUI_RecordPage_Ranking::OnUpdateRankingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "OnUpdateRankingType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_RecordPage_Ranking.SetShowOnlyFriendRanking
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    _is_shown_only_friend_ranking                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _update_ranking_context                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Ranking::SetShowOnlyFriendRanking(bool _is_shown_only_friend_ranking, bool _update_ranking_context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "SetShowOnlyFriendRanking");

	Params::UI_RecordPage_Ranking_SetShowOnlyFriendRanking Parms{};

	Parms._is_shown_only_friend_ranking = _is_shown_only_friend_ranking;
	Parms._update_ranking_context = _update_ranking_context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.Setter_CurRankingType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Ranking::Setter_CurRankingType(ERankingType _ranking_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "Setter_CurRankingType");

	Params::UI_RecordPage_Ranking_Setter_CurRankingType Parms{};

	Parms._ranking_type = _ranking_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.Setter_SeasonID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FSeasonID                        _selected_season_id                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Ranking::Setter_SeasonID(const struct FSeasonID& _selected_season_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "Setter_SeasonID");

	Params::UI_RecordPage_Ranking_Setter_SeasonID Parms{};

	Parms._selected_season_id = std::move(_selected_season_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.UpdateFriendRankingContext
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _page_offset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Ranking::UpdateFriendRankingContext(int32 _page_offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "UpdateFriendRankingContext");

	Params::UI_RecordPage_Ranking_UpdateFriendRankingContext Parms{};

	Parms._page_offset = _page_offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Ranking.UpdateRankingContext
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ERankingType                            _ranking_type                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _page_offset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserProfile*                     _search_user                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Ranking::UpdateRankingContext(ERankingType _ranking_type, int32 _page_offset, class UUserProfile* _search_user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Ranking", "UpdateRankingContext");

	Params::UI_RecordPage_Ranking_UpdateRankingContext Parms{};

	Parms._ranking_type = _ranking_type;
	Parms._page_offset = _page_offset;
	Parms._search_user = _search_user;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Tier.Init
// (Native, Event, Protected, BlueprintEvent)

void UUI_RecordPage_Tier::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "Init");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Tier.OnACK_GetSearchedUserRankingList
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadSearchedUserRanking     _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Tier::OnACK_GetSearchedUserRankingList(EResultCode _rcode, const struct FACK_ReadSearchedUserRanking& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "OnACK_GetSearchedUserRankingList");

	Params::UI_RecordPage_Tier_OnACK_GetSearchedUserRankingList Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Tier.OnACK_GetUserTierInfo
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EResultCode                             _rcode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_ReadUserTierInfo            _ack                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_RecordPage_Tier::OnACK_GetUserTierInfo(EResultCode _rcode, const struct FACK_ReadUserTierInfo& _ack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "OnACK_GetUserTierInfo");

	Params::UI_RecordPage_Tier_OnACK_GetUserTierInfo Parms{};

	Parms._rcode = _rcode;
	Parms._ack = std::move(_ack);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_RecordPage_Tier.ScrollToItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UListView*                        _list_view                                             (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          _item                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Tier::ScrollToItem(class UListView* _list_view, class UObject* _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "ScrollToItem");

	Params::UI_RecordPage_Tier_ScrollToItem Parms{};

	Parms._list_view = _list_view;
	Parms._item = _item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Tier.Setter_SeasonID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FSeasonID                        _selected_season_id                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Tier::Setter_SeasonID(const struct FSeasonID& _selected_season_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "Setter_SeasonID");

	Params::UI_RecordPage_Tier_Setter_SeasonID Parms{};

	Parms._selected_season_id = std::move(_selected_season_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Tier.Setter_TierContextIdx
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   _tier_ctx_idx                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_RecordPage_Tier::Setter_TierContextIdx(int32 _tier_ctx_idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "Setter_TierContextIdx");

	Params::UI_RecordPage_Tier_Setter_TierContextIdx Parms{};

	Parms._tier_ctx_idx = _tier_ctx_idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecordPage_Tier.UpdateSeasonContext
// (Native, Event, Protected, BlueprintEvent)

void UUI_RecordPage_Tier::UpdateSeasonContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecordPage_Tier", "UpdateSeasonContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_RecruitRewardItem.OnClickArea
// (Final, Native, Protected)

void UUI_RecruitRewardItem::OnClickArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RecruitRewardItem", "OnClickArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_Result_Mission.SetDesc
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Result_Mission::SetDesc(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Result_Mission", "SetDesc");

	Params::UI_Result_Mission_SetDesc Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_Result_Mission.SetTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _text                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_Result_Mission::SetTitle(const class FText& _text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Result_Mission", "SetTitle");

	Params::UI_Result_Mission_SetTitle Parms{};

	Parms._text = std::move(_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_SearchUserPopup.HideSearchFailedText
// (Final, Native, Protected, BlueprintCallable)

void UUI_SearchUserPopup::HideSearchFailedText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SearchUserPopup", "HideSearchFailedText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SearchUserPopup.IsFriendAskableUser
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_SearchUserPopup::IsFriendAskableUser(const struct FUserName& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SearchUserPopup", "IsFriendAskableUser");

	Params::UI_SearchUserPopup_IsFriendAskableUser Parms{};

	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_SearchUserPopup.SetPopupMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESearchUserPopupMode                    _popup_mode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SearchUserPopup::SetPopupMode(ESearchUserPopupMode _popup_mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SearchUserPopup", "SetPopupMode");

	Params::UI_SearchUserPopup_SetPopupMode Parms{};

	Parms._popup_mode = _popup_mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SearchUserPopup.ShowSearchFailedText
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           _nickname                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SearchUserPopup::ShowSearchFailedText(const class FString& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SearchUserPopup", "ShowSearchFailedText");

	Params::UI_SearchUserPopup_ShowSearchFailedText Parms{};

	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SearchUserPopup.CheckIsInAskFriendCoolTime
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserName                        _nickname                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUI_SearchUserPopup::CheckIsInAskFriendCoolTime(const struct FUserID& _user_id, const struct FUserName& _nickname) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SearchUserPopup", "CheckIsInAskFriendCoolTime");

	Params::UI_SearchUserPopup_CheckIsInAskFriendCoolTime Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_ShopBundlePopup.InitBuySlider
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _slider_max_value                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopBundlePopup::InitBuySlider(int32 _slider_max_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "InitBuySlider");

	Params::UI_ShopBundlePopup_InitBuySlider Parms{};

	Parms._slider_max_value = _slider_max_value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ShopBundlePopup.InitPriceBtn
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UGoodsObject*                     _goods_obj                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FConfig_Goods                    _goods_def                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    _set_enabled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopBundlePopup::InitPriceBtn(class UGoodsObject* _goods_obj, const struct FConfig_Goods& _goods_def, bool _set_enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "InitPriceBtn");

	Params::UI_ShopBundlePopup_InitPriceBtn Parms{};

	Parms._goods_obj = _goods_obj;
	Parms._goods_def = std::move(_goods_def);
	Parms._set_enabled = _set_enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ShopBundlePopup.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGoodsObject*                     _goods_obj                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopBundlePopup::InitWidget(class UGoodsObject* _goods_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "InitWidget");

	Params::UI_ShopBundlePopup_InitWidget Parms{};

	Parms._goods_obj = _goods_obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopBundlePopup.OnClickItem
// (Final, Native, Protected)
// Parameters:
// class UAnimatableWidget*                _widget                                                (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _selected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopBundlePopup::OnClickItem(class UAnimatableWidget* _widget, bool _selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "OnClickItem");

	Params::UI_ShopBundlePopup_OnClickItem Parms{};

	Parms._widget = _widget;
	Parms._selected = _selected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_ShopBundlePopup.SetBuyLimitText
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBuyLimitType                           _limit_type                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _current_count                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_count                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopBundlePopup::SetBuyLimitText(EBuyLimitType _limit_type, int32 _current_count, int32 _max_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "SetBuyLimitText");

	Params::UI_ShopBundlePopup_SetBuyLimitText Parms{};

	Parms._limit_type = _limit_type;
	Parms._current_count = _current_count;
	Parms._max_count = _max_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ShopBundlePopup.SetPriceBtnOwned
// (Event, Protected, BlueprintEvent)

void UUI_ShopBundlePopup::SetPriceBtnOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "SetPriceBtnOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_ShopBundlePopup.SetPriceBtnPurchased
// (Event, Protected, BlueprintEvent)

void UUI_ShopBundlePopup::SetPriceBtnPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "SetPriceBtnPurchased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_ShopBundlePopup.UpdatePriceBtnByCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   _buy_count                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopBundlePopup::UpdatePriceBtnByCount(int32 _buy_count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopBundlePopup", "UpdatePriceBtnByCount");

	Params::UI_ShopBundlePopup_UpdatePriceBtnByCount Parms{};

	Parms._buy_count = _buy_count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_ShopMasterFilter.OnSelectedMasterFilter
// (Final, Native, Protected)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_ShopMasterFilter::OnSelectedMasterFilter(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ShopMasterFilter", "OnSelectedMasterFilter");

	Params::UI_ShopMasterFilter_OnSelectedMasterFilter Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.InitializePopup
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::InitializePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "InitializePopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.Net_ReqUpdateUserOptions
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::Net_ReqUpdateUserOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "Net_ReqUpdateUserOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnAck_AskFriend
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _net_result_code                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_Friend                      _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_SocialPopup::OnAck_AskFriend(EResultCode _net_result_code, const struct FACK_Friend& _response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAck_AskFriend");

	Params::UI_SocialPopup_OnAck_AskFriend Parms{};

	Parms._net_result_code = _net_result_code;
	Parms._response = std::move(_response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_SocialPopup.OnAck_FriendAccept
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _net_result_code                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_FriendUpdate                _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_SocialPopup::OnAck_FriendAccept(EResultCode _net_result_code, const struct FACK_FriendUpdate& _response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAck_FriendAccept");

	Params::UI_SocialPopup_OnAck_FriendAccept Parms{};

	Parms._net_result_code = _net_result_code;
	Parms._response = std::move(_response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_SocialPopup.OnAck_FriendRefuse
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// EResultCode                             _net_result_code                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FACK_FriendUpdate                _response                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FNetReply                        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FNetReply UUI_SocialPopup::OnAck_FriendRefuse(EResultCode _net_result_code, const struct FACK_FriendUpdate& _response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAck_FriendRefuse");

	Params::UI_SocialPopup_OnAck_FriendRefuse Parms{};

	Parms._net_result_code = _net_result_code;
	Parms._response = std::move(_response);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_SocialPopup.OnAllowFriendJoinPartyOptionStateChanged
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::OnAllowFriendJoinPartyOptionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAllowFriendJoinPartyOptionStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnAllowLoginNotifyToFriendOptionStateChanged
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::OnAllowLoginNotifyToFriendOptionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAllowLoginNotifyToFriendOptionStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnAllowPartyInviteOptionStateChanged
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::OnAllowPartyInviteOptionStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAllowPartyInviteOptionStateChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnAskFriendAllowOptionLeftClick
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::OnAskFriendAllowOptionLeftClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAskFriendAllowOptionLeftClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnAskFriendAllowOptionRightClick
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::OnAskFriendAllowOptionRightClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnAskFriendAllowOptionRightClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnBriefSlotFriendDeleteRequested
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _target_user                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialPopup::OnBriefSlotFriendDeleteRequested(const class UUserProfile* _target_user)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnBriefSlotFriendDeleteRequested");

	Params::UI_SocialPopup_OnBriefSlotFriendDeleteRequested Parms{};

	Parms._target_user = _target_user;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnRefreshButtonClick
// (Final, Native, Protected, BlueprintCallable)

void UUI_SocialPopup::OnRefreshButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnRefreshButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnSlotFriendAcceptClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _slot                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialPopup::OnSlotFriendAcceptClicked(const class UUserProfile* _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnSlotFriendAcceptClicked");

	Params::UI_SocialPopup_OnSlotFriendAcceptClicked Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnSlotFriendLeftClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _slot                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialPopup::OnSlotFriendLeftClicked(const class UUserProfile* _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnSlotFriendLeftClicked");

	Params::UI_SocialPopup_OnSlotFriendLeftClicked Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnSlotFriendRefuseClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _slot                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialPopup::OnSlotFriendRefuseClicked(const class UUserProfile* _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnSlotFriendRefuseClicked");

	Params::UI_SocialPopup_OnSlotFriendRefuseClicked Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.OnSlotFriendRightClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UUserProfile*                     _slot                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialPopup::OnSlotFriendRightClicked(const class UUserProfile* _slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "OnSlotFriendRightClicked");

	Params::UI_SocialPopup_OnSlotFriendRightClicked Parms{};

	Parms._slot = _slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.SelectTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESocialPopupTabType                     _tab_type                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_SocialPopup::SelectTab(ESocialPopupTabType _tab_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "SelectTab");

	Params::UI_SocialPopup_SelectTab Parms{};

	Parms._tab_type = _tab_type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.UpdateOptionContexts
// (Final, Native, Public, BlueprintCallable)

void UUI_SocialPopup::UpdateOptionContexts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "UpdateOptionContexts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_SocialPopup.FindCurDisplayedUserSlot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserProfile*                     _user                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UUI_BriefUserSlot*          ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UUI_BriefUserSlot* UUI_SocialPopup::FindCurDisplayedUserSlot(const class UUserProfile* _user) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_SocialPopup", "FindCurDisplayedUserSlot");

	Params::UI_SocialPopup_FindCurDisplayedUserSlot Parms{};

	Parms._user = _user;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_TabInspector.ActivateSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _idx                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TabInspector::ActivateSlot(int32 _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabInspector", "ActivateSlot");

	Params::UI_TabInspector_ActivateSlot Parms{};

	Parms._idx = _idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TabInspector.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _size                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TabInspector::InitWidget(int32 _size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TabInspector", "InitWidget");

	Params::UI_TabInspector_InitWidget Parms{};

	Parms._size = _size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_TDM_SubScoreSlot.SetTeamBrush
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      _brush                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_TDM_SubScoreSlot::SetTeamBrush(const struct FSlateBrush& _brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TDM_SubScoreSlot", "SetTeamBrush");

	Params::UI_TDM_SubScoreSlot_SetTeamBrush Parms{};

	Parms._brush = std::move(_brush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_TierPromotionPopup.SetValue
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FBC_TierUpdate                   _packet                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UUI_TierPromotionPopup::SetValue(const struct FBC_TierUpdate& _packet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TierPromotionPopup", "SetValue");

	Params::UI_TierPromotionPopup_SetValue Parms{};

	Parms._packet = std::move(_packet);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_TooltipKey.SetInfoText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             _info_text                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_TooltipKey::SetInfoText(const class FText& _info_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKey", "SetInfoText");

	Params::UI_TooltipKey_SetInfoText Parms{};

	Parms._info_text = std::move(_info_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_TooltipKey.SetKey
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FKey                             _Key                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_TooltipKey::SetKey(const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_TooltipKey", "SetKey");

	Params::UI_TooltipKey_SetKey Parms{};

	Parms._Key = std::move(_Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_WaitingRoom.AddChat
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FChatMsg                         _chat_msg                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUI_WaitingRoom::AddChat(const struct FChatMsg& _chat_msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom", "AddChat");

	Params::UI_WaitingRoom_AddChat Parms{};

	Parms._chat_msg = std::move(_chat_msg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Stigma.UI_WaitingRoom.GetRootCanvasPanel
// (Final, Native, Public)
// Parameters:
// class UCanvasPanel*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCanvasPanel* UUI_WaitingRoom::GetRootCanvasPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom", "GetRootCanvasPanel");

	Params::UI_WaitingRoom_GetRootCanvasPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UI_WaitingRoom.InitEvent
// (Event, Protected, BlueprintEvent)

void UUI_WaitingRoom::InitEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom", "InitEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_WaitingRoom.InitUI
// (Final, Native, Protected, BlueprintCallable)

void UUI_WaitingRoom::InitUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom", "InitUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WaitingRoom.OnChangeWaitingRoomState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EWaitingRoomState                       _state                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUI_WaitingRoom::OnChangeWaitingRoomState(EWaitingRoomState _state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom", "OnChangeWaitingRoomState");

	Params::UI_WaitingRoom_OnChangeWaitingRoomState Parms{};

	Parms._state = _state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WaitingRoom.OnStartChat
// (Event, Public, BlueprintEvent)

void UUI_WaitingRoom::OnStartChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WaitingRoom", "OnStartChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Stigma.UI_Wallet.OnClickClose
// (Final, Native, Protected)

void UUI_Wallet::OnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Wallet", "OnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UI_WalletListItem.OnClickPurchase
// (Final, Native, Protected)

void UUI_WalletListItem::OnClickPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_WalletListItem", "OnClickPurchase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserIDBlueprintLibrary.IsEqualUserID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUserID                          _id1                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          _id2                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserIDBlueprintLibrary::IsEqualUserID(const struct FUserID& _id1, const struct FUserID& _id2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserIDBlueprintLibrary", "IsEqualUserID");

	Params::UserIDBlueprintLibrary_IsEqualUserID Parms{};

	Parms._id1 = std::move(_id1);
	Parms._id2 = std::move(_id2);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserIDBlueprintLibrary.MakeUserID
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _id                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUserID                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUserID UUserIDBlueprintLibrary::MakeUserID(int32 _id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UserIDBlueprintLibrary", "MakeUserID");

	Params::UserIDBlueprintLibrary_MakeUserID Parms{};

	Parms._id = _id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.AddControlOptionForMaster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FControlOption                   _option                                                (Parm, NativeAccessSpecifierPublic)

void UUserOption::AddControlOptionForMaster(const struct FControlOption& _option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "AddControlOptionForMaster");

	Params::UserOption_AddControlOptionForMaster Parms{};

	Parms._option = std::move(_option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.GetAnnouncerType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAnnouncerType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAnnouncerType UUserOption::GetAnnouncerType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetAnnouncerType");

	Params::UserOption_GetAnnouncerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetBgmVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetBgmVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetBgmVolume");

	Params::UserOption_GetBgmVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetBrightness
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetBrightness()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetBrightness");

	Params::UserOption_GetBrightness Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetControlOptionForMaster
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FControlOption                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FControlOption UUserOption::GetControlOptionForMaster(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetControlOptionForMaster");

	Params::UserOption_GetControlOptionForMaster Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetControlOptionForMasters
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FControlOption>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FControlOption> UUserOption::GetControlOptionForMasters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetControlOptionForMasters");

	Params::UserOption_GetControlOptionForMasters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetControlOptionMasterCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserOption::GetControlOptionMasterCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetControlOptionMasterCount");

	Params::UserOption_GetControlOptionMasterCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetControlOptionRefForMaster
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FControlOption                   _result_opt                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::GetControlOptionRefForMaster(ECharaType _type, struct FControlOption* _result_opt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetControlOptionRefForMaster");

	Params::UserOption_GetControlOptionRefForMaster Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_result_opt != nullptr)
		*_result_opt = std::move(Parms._result_opt);

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetCurrentLanguage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOptionLanguage                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOptionLanguage UUserOption::GetCurrentLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetCurrentLanguage");

	Params::UserOption_GetCurrentLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetCurrentVoiceLanguage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOptionLanguage                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOptionLanguage UUserOption::GetCurrentVoiceLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetCurrentVoiceLanguage");

	Params::UserOption_GetCurrentVoiceLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetEffectVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetEffectVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetEffectVolume");

	Params::UserOption_GetEffectVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetFOV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetFOV");

	Params::UserOption_GetFOV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetGraphicQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserOption::GetGraphicQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetGraphicQuality");

	Params::UserOption_GetGraphicQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMasterVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMasterVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMasterVolume");

	Params::UserOption_GetMasterVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseAimingSensitive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseAimingSensitive(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseAimingSensitive");

	Params::UserOption_GetMouseAimingSensitive Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseAimingSensitiveX
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseAimingSensitiveX(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseAimingSensitiveX");

	Params::UserOption_GetMouseAimingSensitiveX Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseAimingSensitiveY
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseAimingSensitiveY(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseAimingSensitiveY");

	Params::UserOption_GetMouseAimingSensitiveY Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseNomalSensitive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseNomalSensitive(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseNomalSensitive");

	Params::UserOption_GetMouseNomalSensitive Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseNomalSensitiveX
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseNomalSensitiveX(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseNomalSensitiveX");

	Params::UserOption_GetMouseNomalSensitiveX Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseNomalSensitiveY
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseNomalSensitiveY(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseNomalSensitiveY");

	Params::UserOption_GetMouseNomalSensitiveY Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseSnipeAimingSensitive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseSnipeAimingSensitive(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseSnipeAimingSensitive");

	Params::UserOption_GetMouseSnipeAimingSensitive Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseSnipeAimingSensitiveX
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseSnipeAimingSensitiveX(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseSnipeAimingSensitiveX");

	Params::UserOption_GetMouseSnipeAimingSensitiveX Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetMouseSnipeAimingSensitiveY
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetMouseSnipeAimingSensitiveY(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetMouseSnipeAimingSensitiveY");

	Params::UserOption_GetMouseSnipeAimingSensitiveY Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetRadarMapScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetRadarMapScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetRadarMapScale");

	Params::UserOption_GetRadarMapScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetResolutionHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserOption::GetResolutionHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetResolutionHeight");

	Params::UserOption_GetResolutionHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetResolutionWidth
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserOption::GetResolutionWidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetResolutionWidth");

	Params::UserOption_GetResolutionWidth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetTotalOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameOption                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameOption UUserOption::GetTotalOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetTotalOption");

	Params::UserOption_GetTotalOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetVoiceVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UUserOption::GetVoiceVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetVoiceVolume");

	Params::UserOption_GetVoiceVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.GetWindowMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EWindowMode                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWindowMode UUserOption::GetWindowMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetWindowMode");

	Params::UserOption_GetWindowMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.HasAnythingChangedExists
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::HasAnythingChangedExists()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "HasAnythingChangedExists");

	Params::UserOption_HasAnythingChangedExists Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.HasChangedExistInPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOptionCategoryType                     _page                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::HasChangedExistInPage(EOptionCategoryType _page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "HasChangedExistInPage");

	Params::UserOption_HasChangedExistInPage Parms{};

	Parms._page = _page;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.InitializeOption
// (Final, Native, Public, BlueprintCallable)

void UUserOption::InitializeOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "InitializeOption");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.IsAddedControlOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsAddedControlOption(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsAddedControlOption");

	Params::UserOption_IsAddedControlOption Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsShowAlliesNameTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsShowAlliesNameTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsShowAlliesNameTag");

	Params::UserOption_IsShowAlliesNameTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsShowEnemyDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsShowEnemyDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsShowEnemyDamage");

	Params::UserOption_IsShowEnemyDamage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsShowFPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsShowFPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsShowFPS");

	Params::UserOption_IsShowFPS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsShowHitFloating
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsShowHitFloating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsShowHitFloating");

	Params::UserOption_IsShowHitFloating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsUsedAutoBoosters
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsUsedAutoBoosters(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsUsedAutoBoosters");

	Params::UserOption_IsUsedAutoBoosters Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsUsedHoldAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsUsedHoldAiming(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsUsedHoldAiming");

	Params::UserOption_IsUsedHoldAiming Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsUsedHoldCrouch
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsUsedHoldCrouch(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsUsedHoldCrouch");

	Params::UserOption_IsUsedHoldCrouch Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsUsedHoldShowStatusBoard
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsUsedHoldShowStatusBoard(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsUsedHoldShowStatusBoard");

	Params::UserOption_IsUsedHoldShowStatusBoard Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.IsUsedNoticeActiveSkillCombo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::IsUsedNoticeActiveSkillCombo(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "IsUsedNoticeActiveSkillCombo");

	Params::UserOption_IsUsedNoticeActiveSkillCombo Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.LoadGameOption
// (Final, Native, Public, BlueprintCallable)

void UUserOption::LoadGameOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "LoadGameOption");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.OnChangeLevel
// (Final, Native, Public, BlueprintCallable)

void UUserOption::OnChangeLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "OnChangeLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RegisterOnUserOptionApplied
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(EOptionCategoryType _category)>_callback                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::RegisterOnUserOptionApplied(const TDelegate<void(EOptionCategoryType _category)>& _callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RegisterOnUserOptionApplied");

	Params::UserOption_RegisterOnUserOptionApplied Parms{};

	Parms._callback = _callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RemoveControlOptionForMaster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharaType                              _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::RemoveControlOptionForMaster(ECharaType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RemoveControlOptionForMaster");

	Params::UserOption_RemoveControlOptionForMaster Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.ResetAllGameOptionToDefault
// (Final, Native, Public, BlueprintCallable)

void UUserOption::ResetAllGameOptionToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "ResetAllGameOptionToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.ResetAudioGameOptionToDefault
// (Final, Native, Public, BlueprintCallable)

void UUserOption::ResetAudioGameOptionToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "ResetAudioGameOptionToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.ResetControlGameOptionToDefault
// (Final, Native, Public, BlueprintCallable)

void UUserOption::ResetControlGameOptionToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "ResetControlGameOptionToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.ResetGeneralGameOptionToDefault
// (Final, Native, Public, BlueprintCallable)

void UUserOption::ResetGeneralGameOptionToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "ResetGeneralGameOptionToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.ResetGraphicGameOptionToDefault
// (Final, Native, Public, BlueprintCallable)

void UUserOption::ResetGraphicGameOptionToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "ResetGraphicGameOptionToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RevertAllGameOptionToBackUp
// (Final, Native, Public, BlueprintCallable)

void UUserOption::RevertAllGameOptionToBackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RevertAllGameOptionToBackUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RevertAudioGameOptionToBackUp
// (Final, Native, Public, BlueprintCallable)

void UUserOption::RevertAudioGameOptionToBackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RevertAudioGameOptionToBackUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RevertControlGameOptionToBackUp
// (Final, Native, Public, BlueprintCallable)

void UUserOption::RevertControlGameOptionToBackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RevertControlGameOptionToBackUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RevertGeneralGameOptionToBackUp
// (Final, Native, Public, BlueprintCallable)

void UUserOption::RevertGeneralGameOptionToBackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RevertGeneralGameOptionToBackUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.RevertGraphicGameOptionToBackUp
// (Final, Native, Public, BlueprintCallable)

void UUserOption::RevertGraphicGameOptionToBackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "RevertGraphicGameOptionToBackUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.SaveGameOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _need_to_update                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::SaveGameOption(bool _need_to_update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SaveGameOption");

	Params::UserOption_SaveGameOption Parms{};

	Parms._need_to_update = _need_to_update;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.SetBrightness
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetBrightness(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetBrightness");

	Params::UserOption_SetBrightness Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.SetContrast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetContrast(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetContrast");

	Params::UserOption_SetContrast Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.SetGamma
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   _value                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetGamma(float _value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetGamma");

	Params::UserOption_SetGamma Parms{};

	Parms._value = _value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.SetGraphicQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_auto                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Scalability_level                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetGraphicQuality(bool _is_auto, int32 Scalability_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetGraphicQuality");

	Params::UserOption_SetGraphicQuality Parms{};

	Parms._is_auto = _is_auto;
	Parms.Scalability_level = Scalability_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.SetScreenResoultion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   _width                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _height                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetScreenResoultion(int32 _width, int32 _height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetScreenResoultion");

	Params::UserOption_SetScreenResoultion Parms{};

	Parms._width = _width;
	Parms._height = _height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.SetShowEnemyDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _enable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::SetShowEnemyDamage(bool _enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetShowEnemyDamage");

	Params::UserOption_SetShowEnemyDamage Parms{};

	Parms._enable = _enable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.SetSoundVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundMix*                        Sound_mix                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundClass*                      Sound_class                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Pitch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Fade_in_time                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetSoundVolume(class USoundMix* Sound_mix, class USoundClass* Sound_class, float Volume, float Pitch, float Fade_in_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetSoundVolume");

	Params::UserOption_SetSoundVolume Parms{};

	Parms.Sound_mix = Sound_mix;
	Parms.Sound_class = Sound_class;
	Parms.Volume = Volume;
	Parms.Pitch = Pitch;
	Parms.Fade_in_time = Fade_in_time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.SetWindowMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWindowMode                             _type                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUserOption::SetWindowMode(EWindowMode _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "SetWindowMode");

	Params::UserOption_SetWindowMode Parms{};

	Parms._type = _type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UserOption.UpdateGameOption
// (Final, Native, Public, BlueprintCallable)

void UUserOption::UpdateGameOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "UpdateGameOption");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.UpdateOptionForAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_user_setting_apply                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::UpdateOptionForAudio(bool _is_user_setting_apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "UpdateOptionForAudio");

	Params::UserOption_UpdateOptionForAudio Parms{};

	Parms._is_user_setting_apply = _is_user_setting_apply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.UpdateOptionForControl
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_user_setting_apply                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::UpdateOptionForControl(bool _is_user_setting_apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "UpdateOptionForControl");

	Params::UserOption_UpdateOptionForControl Parms{};

	Parms._is_user_setting_apply = _is_user_setting_apply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.UpdateOptionForGeneral
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_user_setting_apply                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::UpdateOptionForGeneral(bool _is_user_setting_apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "UpdateOptionForGeneral");

	Params::UserOption_UpdateOptionForGeneral Parms{};

	Parms._is_user_setting_apply = _is_user_setting_apply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.UpdateOptionForGraphic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    _is_user_setting_apply                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserOption::UpdateOptionForGraphic(bool _is_user_setting_apply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "UpdateOptionForGraphic");

	Params::UserOption_UpdateOptionForGraphic Parms{};

	Parms._is_user_setting_apply = _is_user_setting_apply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.UserOption.GetWishedRegionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUserOption::GetWishedRegionCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserOption", "GetWishedRegionCount");

	Params::UserOption_GetWishedRegionCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.ConvertContractionNumber
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _number                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::ConvertContractionNumber(int32 _number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "ConvertContractionNumber");

	Params::UtilText_ConvertContractionNumber Parms{};

	Parms._number = _number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetCurrencyRichText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECurrencyTypes                          _currency_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Amount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetCurrencyRichText(ECurrencyTypes _currency_type, int32 _Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetCurrencyRichText");

	Params::UtilText_GetCurrencyRichText Parms{};

	Parms._currency_type = _currency_type;
	Parms._Amount = _Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetKeyDisplayText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          _world_ctx                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             _Key                                                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetKeyDisplayText(const class UObject* _world_ctx, const struct FKey& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetKeyDisplayText");

	Params::UtilText_GetKeyDisplayText Parms{};

	Parms._world_ctx = _world_ctx;
	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetLevelConditionText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _start_level                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _end_level                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetLevelConditionText(int32 _start_level, int32 _end_level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetLevelConditionText");

	Params::UtilText_GetLevelConditionText Parms{};

	Parms._start_level = _start_level;
	Parms._end_level = _end_level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetPurchaseText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECurrencyTypes                          _currency_type                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _Amount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetPurchaseText(ECurrencyTypes _currency_type, int32 _Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetPurchaseText");

	Params::UtilText_GetPurchaseText Parms{};

	Parms._currency_type = _currency_type;
	Parms._Amount = _Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetRemainTimeText
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTimespan                        _span                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _time_digits                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show_zero_value                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max_time_units_to_show                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetRemainTimeText(const struct FTimespan& _span, const int32 _time_digits, const bool _show_zero_value, const int32 Max_time_units_to_show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetRemainTimeText");

	Params::UtilText_GetRemainTimeText Parms{};

	Parms._span = std::move(_span);
	Parms._time_digits = _time_digits;
	Parms._show_zero_value = _show_zero_value;
	Parms.Max_time_units_to_show = Max_time_units_to_show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetStringTableText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _id                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetStringTableText(const class FString& _id, const class FString& _Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetStringTableText");

	Params::UtilText_GetStringTableText Parms{};

	Parms._id = std::move(_id);
	Parms._Key = std::move(_Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetStringTableTextWithArguments
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           _id                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _Key                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class FString, class FString>      _arguments                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUtilText::GetStringTableTextWithArguments(const class FString& _id, const class FString& _Key, const TMap<class FString, class FString>& _arguments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetStringTableTextWithArguments");

	Params::UtilText_GetStringTableTextWithArguments Parms{};

	Parms._id = std::move(_id);
	Parms._Key = std::move(_Key);
	Parms._arguments = std::move(_arguments);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.UtilText.GetTimeText_HMS
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   _total_seconds                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _max_time_units_to_show                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _show_zero_value                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUtilText::GetTimeText_HMS(int32 _total_seconds, int32 _max_time_units_to_show, bool _show_zero_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UtilText", "GetTimeText_HMS");

	Params::UtilText_GetTimeText_HMS Parms{};

	Parms._total_seconds = _total_seconds;
	Parms._max_time_units_to_show = _max_time_units_to_show;
	Parms._show_zero_value = _show_zero_value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomGameState.OnRep_ATeam
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_ATeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_ATeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_ATeamCoach
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_ATeamCoach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_ATeamCoach");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_BTeam
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_BTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_BTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_BTeamCoach
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_BTeamCoach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_BTeamCoach");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_CTeam
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_CTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_CTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_CTeamCoach
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_CTeamCoach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_CTeamCoach");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_LeftSeconds
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_LeftSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_LeftSeconds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_Observers
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_Observers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_Observers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.OnRep_State
// (Final, Native, Protected)

void AWaitingRoomGameState::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "OnRep_State");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.SERVER_CustomGame_CloseSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWaitingRoomPlayerController*     _asker                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _close                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomGameState::SERVER_CustomGame_CloseSlot(class AWaitingRoomPlayerController* _asker, const struct FCustomGameSlotIndex& _idx, bool _close)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "SERVER_CustomGame_CloseSlot");

	Params::WaitingRoomGameState_SERVER_CustomGame_CloseSlot Parms{};

	Parms._asker = _asker;
	Parms._idx = std::move(_idx);
	Parms._close = _close;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.SERVER_CustomGame_MoveTo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWaitingRoomPlayerController*     _asker                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomGameSlotIndex             _idx_from                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomGameSlotIndex             _idx_to                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomGameState::SERVER_CustomGame_MoveTo(class AWaitingRoomPlayerController* _asker, const struct FCustomGameSlotIndex& _idx_from, const struct FCustomGameSlotIndex& _idx_to)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "SERVER_CustomGame_MoveTo");

	Params::WaitingRoomGameState_SERVER_CustomGame_MoveTo Parms{};

	Parms._asker = _asker;
	Parms._idx_from = std::move(_idx_from);
	Parms._idx_to = std::move(_idx_to);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.SERVER_CustomGame_SetIsClosed
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_closed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomGameState::SERVER_CustomGame_SetIsClosed(const struct FCustomGameSlotIndex& _idx, bool _is_closed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "SERVER_CustomGame_SetIsClosed");

	Params::WaitingRoomGameState_SERVER_CustomGame_SetIsClosed Parms{};

	Parms._idx = std::move(_idx);
	Parms._is_closed = _is_closed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.Setter_State
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EWaitingRoomState                       _new_state                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomGameState::Setter_State(EWaitingRoomState _new_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "Setter_State");

	Params::WaitingRoomGameState_Setter_State Parms{};

	Parms._new_state = _new_state;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomGameState.TakeCustomGameSlotChangedState
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWaitingRoomGameState::TakeCustomGameSlotChangedState(const struct FCustomGameSlotIndex& _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "TakeCustomGameSlotChangedState");

	Params::WaitingRoomGameState_TakeCustomGameSlotChangedState Parms{};

	Parms._idx = std::move(_idx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomGameState.CanStartCustomGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWaitingRoomGameState::CanStartCustomGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "CanStartCustomGame");

	Params::WaitingRoomGameState_CanStartCustomGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomGameState.GetCustomGameSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FCustomGameSlot            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FCustomGameSlot AWaitingRoomGameState::GetCustomGameSlot(const struct FCustomGameSlotIndex& _idx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "GetCustomGameSlot");

	Params::WaitingRoomGameState_GetCustomGameSlot Parms{};

	Parms._idx = std::move(_idx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomGameState.GetLeftSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWaitingRoomGameState::GetLeftSeconds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "GetLeftSeconds");

	Params::WaitingRoomGameState_GetLeftSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomGameState.GetMaxObserverCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWaitingRoomGameState::GetMaxObserverCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomGameState", "GetMaxObserverCount");

	Params::WaitingRoomGameState_GetMaxObserverCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Stigma.WaitingRoomPlayerController.LoadIntroLevel
// (Final, Native, Protected)

void AWaitingRoomPlayerController::LoadIntroLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "LoadIntroLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.PlayAnnouncerIntroVoice
// (Final, Native, Public, BlueprintCallable)

void AWaitingRoomPlayerController::PlayAnnouncerIntroVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "PlayAnnouncerIntroVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.PlayCharaIntroVoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharaBase*                       _chara                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::PlayCharaIntroVoice(class ACharaBase* _chara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "PlayCharaIntroVoice");

	Params::WaitingRoomPlayerController_PlayCharaIntroVoice Parms{};

	Parms._chara = _chara;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.PlayStartCutScene
// (Final, Native, Protected)

void AWaitingRoomPlayerController::PlayStartCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "PlayStartCutScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_CLIENT_BalanceTeam
// (Net, Native, Event, NetMulticast, Public, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_CLIENT_BalanceTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_CLIENT_BalanceTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_CLIENT_DelegateRoomLeader
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUserName                        _nickname                                              (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_CLIENT_DelegateRoomLeader(const struct FUserName& _nickname)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_CLIENT_DelegateRoomLeader");

	Params::WaitingRoomPlayerController_RPC_CLIENT_DelegateRoomLeader Parms{};

	Parms._nickname = std::move(_nickname);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_CLIENT_YouAreBanned
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_CLIENT_YouAreBanned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_CLIENT_YouAreBanned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_BalanceTeam
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_SERVER_BalanceTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_BalanceTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_DEBUG_AddBOT
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_SERVER_DEBUG_AddBOT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_DEBUG_AddBOT");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_DEBUG_ChangeToCustomGame
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_SERVER_DEBUG_ChangeToCustomGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_DEBUG_ChangeToCustomGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_DEBUG_SetGameSetting
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable)
// Parameters:
// bool                                    _is_custom_game                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameMode                               _game_mode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           _map_name                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_DEBUG_SetGameSetting(bool _is_custom_game, EGameMode _game_mode, const class FString& _map_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_DEBUG_SetGameSetting");

	Params::WaitingRoomPlayerController_RPC_SERVER_DEBUG_SetGameSetting Parms{};

	Parms._is_custom_game = _is_custom_game;
	Parms._game_mode = _game_mode;
	Parms._map_name = std::move(_map_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_DelegateRoomLeader
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_DelegateRoomLeader(const struct FUserID& _user_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_DelegateRoomLeader");

	Params::WaitingRoomPlayerController_RPC_SERVER_DelegateRoomLeader Parms{};

	Parms._user_id = std::move(_user_id);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_RequestBan
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_RequestBan(const struct FCustomGameSlotIndex& _idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_RequestBan");

	Params::WaitingRoomPlayerController_RPC_SERVER_RequestBan Parms{};

	Parms._idx = std::move(_idx);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_RequestCloseSlot
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FCustomGameSlotIndex             _idx                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _close                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_RequestCloseSlot(const struct FCustomGameSlotIndex& _idx, bool _close)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_RequestCloseSlot");

	Params::WaitingRoomPlayerController_RPC_SERVER_RequestCloseSlot Parms{};

	Parms._idx = std::move(_idx);
	Parms._close = _close;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_RequestMoveSlot
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// struct FCustomGameSlotIndex             _from                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCustomGameSlotIndex             _to                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_RequestMoveSlot(const struct FCustomGameSlotIndex& _from, const struct FCustomGameSlotIndex& _to)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_RequestMoveSlot");

	Params::WaitingRoomPlayerController_RPC_SERVER_RequestMoveSlot Parms{};

	Parms._from = std::move(_from);
	Parms._to = std::move(_to);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_SetGameMode
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// EGameMode                               _mode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_SetGameMode(EGameMode _mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_SetGameMode");

	Params::WaitingRoomPlayerController_RPC_SERVER_SetGameMode Parms{};

	Parms._mode = _mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_SetMap
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// class FString                           _map_name                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_SetMap(const class FString& _map_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_SetMap");

	Params::WaitingRoomPlayerController_RPC_SERVER_SetMap Parms{};

	Parms._map_name = std::move(_map_name);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_SetRoomManager
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)
// Parameters:
// struct FUserID                          _user_id                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _is_manager                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWaitingRoomPlayerController::RPC_SERVER_SetRoomManager(const struct FUserID& _user_id, bool _is_manager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_SetRoomManager");

	Params::WaitingRoomPlayerController_RPC_SERVER_SetRoomManager Parms{};

	Parms._user_id = std::move(_user_id);
	Parms._is_manager = _is_manager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_StartCharacterPick
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_SERVER_StartCharacterPick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_StartCharacterPick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_ToggleAllowJoin
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_SERVER_ToggleAllowJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_ToggleAllowJoin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Stigma.WaitingRoomPlayerController.RPC_SERVER_ToggleObserverChat
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable)

void AWaitingRoomPlayerController::RPC_SERVER_ToggleObserverChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WaitingRoomPlayerController", "RPC_SERVER_ToggleObserverChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

