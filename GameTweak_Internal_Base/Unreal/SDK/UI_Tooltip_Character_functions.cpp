#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_Character

#include "Basic.hpp"

#include "UI_Tooltip_Character_classes.hpp"
#include "UI_Tooltip_Character_parameters.hpp"


namespace SDK
{

// Function UI_Tooltip_Character.UI_Tooltip_Character_C.GetCharaCP
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharaType                              _chara_type                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DefaultCharaCP                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalCharaCP                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Tooltip_Character_C::GetCharaCP(ECharaType _chara_type, int32* DefaultCharaCP, int32* TotalCharaCP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_Character_C", "GetCharaCP");

	Params::UI_Tooltip_Character_C_GetCharaCP Parms{};

	Parms._chara_type = _chara_type;

	UObject::ProcessEvent(Func, &Parms);

	if (DefaultCharaCP != nullptr)
		*DefaultCharaCP = Parms.DefaultCharaCP;

	if (TotalCharaCP != nullptr)
		*TotalCharaCP = Parms.TotalCharaCP;
}


// Function UI_Tooltip_Character.UI_Tooltip_Character_C.InitWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemID                          _item_id                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_Tooltip_Character_C::InitWidget(const struct FItemID& _item_id)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_Character_C", "InitWidget");

	Params::UI_Tooltip_Character_C_InitWidget Parms{};

	Parms._item_id = std::move(_item_id);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Tooltip_Character.UI_Tooltip_Character_C.OnShowTooltip
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Tooltip_Character_C::OnShowTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_Character_C", "OnShowTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Tooltip_Character.UI_Tooltip_Character_C.SetCompareGun
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGunObject*                       _compared_gun                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    _force_show_gun_cp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Tooltip_Character_C::SetCompareGun(class UGunObject* _compared_gun, bool _force_show_gun_cp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_Character_C", "SetCompareGun");

	Params::UI_Tooltip_Character_C_SetCompareGun Parms{};

	Parms._compared_gun = _compared_gun;
	Parms._force_show_gun_cp = _force_show_gun_cp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Tooltip_Character.UI_Tooltip_Character_C.UpdateUpcommingCharacter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharaType                              Chara_type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Tooltip_Character_C::UpdateUpcommingCharacter(ECharaType Chara_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Tooltip_Character_C", "UpdateUpcommingCharacter");

	Params::UI_Tooltip_Character_C_UpdateUpcommingCharacter Parms{};

	Parms.Chara_type = Chara_type;

	UObject::ProcessEvent(Func, &Parms);
}

}

