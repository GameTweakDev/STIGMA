#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Challenge_RoundSelectPopup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Challenge_RoundSelectPopup.UI_Challenge_RoundSelectPopup_C
// 0x0048 (0x05B8 - 0x0570)
class UUI_Challenge_RoundSelectPopup_C final : public UPopupBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Best_Round_TXT;                                    // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButton_Intensity_C*         BTN_Cancel;                                        // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButton_Intensity_C*         BTN_OK;                                            // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_BestRound;                                // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_InitiailRound;                            // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line_Bottom;                                   // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Line_Top;                                      // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_110;                                     // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	class FText GetBestRoundText();
	void ExecuteUbergraph_UI_Challenge_RoundSelectPopup(int32 EntryPoint);
	void BndEvt__UI_Challenge_RoundSelectPopup_CheckBox_K2Node_ComponentBoundEvent_4_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__UI_Challenge_RoundSelectPopup_CheckBox_348_K2Node_ComponentBoundEvent_3_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__UI_Challenge_RoundSelectPopup_BTN_OK_K2Node_ComponentBoundEvent_6_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__UI_Challenge_RoundSelectPopup_BTN_Cancel_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Challenge_RoundSelectPopup_C">();
	}
	static class UUI_Challenge_RoundSelectPopup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Challenge_RoundSelectPopup_C>();
	}
};
static_assert(alignof(UUI_Challenge_RoundSelectPopup_C) == 0x000008, "Wrong alignment on UUI_Challenge_RoundSelectPopup_C");
static_assert(sizeof(UUI_Challenge_RoundSelectPopup_C) == 0x0005B8, "Wrong size on UUI_Challenge_RoundSelectPopup_C");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, UberGraphFrame) == 0x000570, "Member 'UUI_Challenge_RoundSelectPopup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, Best_Round_TXT) == 0x000578, "Member 'UUI_Challenge_RoundSelectPopup_C::Best_Round_TXT' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, BTN_Cancel) == 0x000580, "Member 'UUI_Challenge_RoundSelectPopup_C::BTN_Cancel' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, BTN_OK) == 0x000588, "Member 'UUI_Challenge_RoundSelectPopup_C::BTN_OK' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, CheckBox_BestRound) == 0x000590, "Member 'UUI_Challenge_RoundSelectPopup_C::CheckBox_BestRound' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, CheckBox_InitiailRound) == 0x000598, "Member 'UUI_Challenge_RoundSelectPopup_C::CheckBox_InitiailRound' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, Img_Line_Bottom) == 0x0005A0, "Member 'UUI_Challenge_RoundSelectPopup_C::Img_Line_Bottom' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, Img_Line_Top) == 0x0005A8, "Member 'UUI_Challenge_RoundSelectPopup_C::Img_Line_Top' has a wrong offset!");
static_assert(offsetof(UUI_Challenge_RoundSelectPopup_C, TextBlock_110) == 0x0005B0, "Member 'UUI_Challenge_RoundSelectPopup_C::TextBlock_110' has a wrong offset!");

}

