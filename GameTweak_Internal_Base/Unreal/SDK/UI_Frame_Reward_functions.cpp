#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Frame_Reward

#include "Basic.hpp"

#include "UI_Frame_Reward_classes.hpp"
#include "UI_Frame_Reward_parameters.hpp"


namespace SDK
{

// Function UI_Frame_Reward.UI_Frame_Reward_C.OnSynchronizeProperties
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUI_Frame_Reward_C::OnSynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "OnSynchronizeProperties");

	Params::UI_Frame_Reward_C_OnSynchronizeProperties Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.ExecuteUbergraph_UI_Frame_Reward
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Frame_Reward_C::ExecuteUbergraph_UI_Frame_Reward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "ExecuteUbergraph_UI_Frame_Reward");

	Params::UI_Frame_Reward_C_ExecuteUbergraph_UI_Frame_Reward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.BP_OnItemSelectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Frame_Reward_C::BP_OnItemSelectionChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "BP_OnItemSelectionChanged");

	Params::UI_Frame_Reward_C_BP_OnItemSelectionChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Frame_Reward_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "BP_OnItemExpansionChanged");

	Params::UI_Frame_Reward_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.BP_OnEntryReleased
// (Event, Protected, BlueprintEvent)

void UUI_Frame_Reward_C::BP_OnEntryReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "BP_OnEntryReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.BindTier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             _tier_name                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   _TRP_min                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  _top_ratio                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UTexture2D>        _Icon                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UUI_Frame_Reward_C::BindTier(const class FText& _tier_name, int32 _TRP_min, double _top_ratio, TSoftObjectPtr<class UTexture2D> _Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "BindTier");

	Params::UI_Frame_Reward_C_BindTier Parms{};

	Parms._tier_name = std::move(_tier_name);
	Parms._TRP_min = _TRP_min;
	Parms._top_ratio = _top_ratio;
	Parms._Icon = _Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.BindItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRewardItem                      _item                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_Frame_Reward_C::BindItem(const struct FRewardItem& _item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "BindItem");

	Params::UI_Frame_Reward_C_BindItem Parms{};

	Parms._item = std::move(_item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Frame_Reward.UI_Frame_Reward_C.Bind Currency
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRewardItem                      _currency                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_Frame_Reward_C::Bind_Currency(const struct FRewardItem& _currency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Frame_Reward_C", "Bind Currency");

	Params::UI_Frame_Reward_C_Bind_Currency Parms{};

	Parms._currency = std::move(_currency);

	UObject::ProcessEvent(Func, &Parms);
}

}

