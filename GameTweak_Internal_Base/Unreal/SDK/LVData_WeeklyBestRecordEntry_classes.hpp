#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LVData_WeeklyBestRecordEntry

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LVData_WeeklyBestRecordEntry.LVData_WeeklyBestRecordEntry_C
// 0x0020 (0x0048 - 0x0028)
class ULVData_WeeklyBestRecordEntry_C final : public UObject
{
public:
	EWeeklyBestRecordType                         WeeklyBestRecordType;                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_40C3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Week;                                              // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_40C4[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        Score;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ERankingType                                  CurRankingType;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LVData_WeeklyBestRecordEntry_C">();
	}
	static class ULVData_WeeklyBestRecordEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULVData_WeeklyBestRecordEntry_C>();
	}
};
static_assert(alignof(ULVData_WeeklyBestRecordEntry_C) == 0x000008, "Wrong alignment on ULVData_WeeklyBestRecordEntry_C");
static_assert(sizeof(ULVData_WeeklyBestRecordEntry_C) == 0x000048, "Wrong size on ULVData_WeeklyBestRecordEntry_C");
static_assert(offsetof(ULVData_WeeklyBestRecordEntry_C, WeeklyBestRecordType) == 0x000028, "Member 'ULVData_WeeklyBestRecordEntry_C::WeeklyBestRecordType' has a wrong offset!");
static_assert(offsetof(ULVData_WeeklyBestRecordEntry_C, Week) == 0x00002C, "Member 'ULVData_WeeklyBestRecordEntry_C::Week' has a wrong offset!");
static_assert(offsetof(ULVData_WeeklyBestRecordEntry_C, Value) == 0x000030, "Member 'ULVData_WeeklyBestRecordEntry_C::Value' has a wrong offset!");
static_assert(offsetof(ULVData_WeeklyBestRecordEntry_C, Score) == 0x000038, "Member 'ULVData_WeeklyBestRecordEntry_C::Score' has a wrong offset!");
static_assert(offsetof(ULVData_WeeklyBestRecordEntry_C, CurRankingType) == 0x000040, "Member 'ULVData_WeeklyBestRecordEntry_C::CurRankingType' has a wrong offset!");

}

