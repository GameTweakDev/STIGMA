#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Item_EquippedGunPart

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Item_EquippedGunPart.Item_EquippedGunPart_C.OnSynchronizeProperties
// 0x0010 (0x0010 - 0x0000)
struct Item_EquippedGunPart_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UTexture2D*                             Icon;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_EquippedGunPart_C_OnSynchronizeProperties) == 0x000008, "Wrong alignment on Item_EquippedGunPart_C_OnSynchronizeProperties");
static_assert(sizeof(Item_EquippedGunPart_C_OnSynchronizeProperties) == 0x000010, "Wrong size on Item_EquippedGunPart_C_OnSynchronizeProperties");
static_assert(offsetof(Item_EquippedGunPart_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Item_EquippedGunPart_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_OnSynchronizeProperties, Icon) == 0x000008, "Member 'Item_EquippedGunPart_C_OnSynchronizeProperties::Icon' has a wrong offset!");

// Function Item_EquippedGunPart.Item_EquippedGunPart_C.SetGunObject
// 0x0160 (0x0160 - 0x0000)
struct Item_EquippedGunPart_C_SetGunObject final
{
public:
	class UGunObject*                             _gun_object;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGunObject*                             Gun_object;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatedSlot_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C3F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_GetGunPartsID_ReturnValue;                // 0x0018(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C40[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemEntry                             CallFunc_GetItemEntry_ReturnValue;                 // 0x0030(0x0130)()
};
static_assert(alignof(Item_EquippedGunPart_C_SetGunObject) == 0x000008, "Wrong alignment on Item_EquippedGunPart_C_SetGunObject");
static_assert(sizeof(Item_EquippedGunPart_C_SetGunObject) == 0x000160, "Wrong size on Item_EquippedGunPart_C_SetGunObject");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, _gun_object) == 0x000000, "Member 'Item_EquippedGunPart_C_SetGunObject::_gun_object' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, Gun_object) == 0x000008, "Member 'Item_EquippedGunPart_C_SetGunObject::Gun_object' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Item_EquippedGunPart_C_SetGunObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, CallFunc_IsActivatedSlot_ReturnValue) == 0x000011, "Member 'Item_EquippedGunPart_C_SetGunObject::CallFunc_IsActivatedSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, CallFunc_GetGunPartsID_ReturnValue) == 0x000018, "Member 'Item_EquippedGunPart_C_SetGunObject::CallFunc_GetGunPartsID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, CallFunc_IsValidItemID_ReturnValue) == 0x000028, "Member 'Item_EquippedGunPart_C_SetGunObject::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetGunObject, CallFunc_GetItemEntry_ReturnValue) == 0x000030, "Member 'Item_EquippedGunPart_C_SetGunObject::CallFunc_GetItemEntry_ReturnValue' has a wrong offset!");

// Function Item_EquippedGunPart.Item_EquippedGunPart_C.SetIconEmptyParts
// 0x0010 (0x0010 - 0x0000)
struct Item_EquippedGunPart_C_SetIconEmptyParts final
{
public:
	class UTexture2D*                             Icon;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_EquippedGunPart_C_SetIconEmptyParts) == 0x000008, "Wrong alignment on Item_EquippedGunPart_C_SetIconEmptyParts");
static_assert(sizeof(Item_EquippedGunPart_C_SetIconEmptyParts) == 0x000010, "Wrong size on Item_EquippedGunPart_C_SetIconEmptyParts");
static_assert(offsetof(Item_EquippedGunPart_C_SetIconEmptyParts, Icon) == 0x000000, "Member 'Item_EquippedGunPart_C_SetIconEmptyParts::Icon' has a wrong offset!");
static_assert(offsetof(Item_EquippedGunPart_C_SetIconEmptyParts, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'Item_EquippedGunPart_C_SetIconEmptyParts::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

