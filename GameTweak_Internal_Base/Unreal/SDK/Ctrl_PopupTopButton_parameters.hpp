#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_PopupTopButton

#include "Basic.hpp"

#include "PopupTopEntry_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_PopupTopButton.Ctrl_PopupTopButton_C.Config
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_PopupTopButton_C_Config final
{
public:
	struct FPopupTopEntry                         _info;                                             // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTopButton_C_Config) == 0x000008, "Wrong alignment on Ctrl_PopupTopButton_C_Config");
static_assert(sizeof(Ctrl_PopupTopButton_C_Config) == 0x000030, "Wrong size on Ctrl_PopupTopButton_C_Config");
static_assert(offsetof(Ctrl_PopupTopButton_C_Config, _info) == 0x000000, "Member 'Ctrl_PopupTopButton_C_Config::_info' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTopButton_C_Config, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ctrl_PopupTopButton_C_Config::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTopButton_C_Config, CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast) == 0x000028, "Member 'Ctrl_PopupTopButton_C_Config::CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast' has a wrong offset!");

// Function Ctrl_PopupTopButton.Ctrl_PopupTopButton_C.ExecuteUbergraph_Ctrl_PopupTopButton
// 0x002C (0x002C - 0x0000)
struct Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
};
static_assert(alignof(Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton) == 0x000004, "Wrong alignment on Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton");
static_assert(sizeof(Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton) == 0x00002C, "Wrong size on Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton");
static_assert(offsetof(Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton, EntryPoint) == 0x000000, "Member 'Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'Ctrl_PopupTopButton_C_ExecuteUbergraph_Ctrl_PopupTopButton::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function Ctrl_PopupTopButton.Ctrl_PopupTopButton_C.OnClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_PopupTopButton_C_OnClick__DelegateSignature final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTopButton_C_OnClick__DelegateSignature) == 0x000004, "Wrong alignment on Ctrl_PopupTopButton_C_OnClick__DelegateSignature");
static_assert(sizeof(Ctrl_PopupTopButton_C_OnClick__DelegateSignature) == 0x000008, "Wrong size on Ctrl_PopupTopButton_C_OnClick__DelegateSignature");
static_assert(offsetof(Ctrl_PopupTopButton_C_OnClick__DelegateSignature, _id) == 0x000000, "Member 'Ctrl_PopupTopButton_C_OnClick__DelegateSignature::_id' has a wrong offset!");

// Function Ctrl_PopupTopButton.Ctrl_PopupTopButton_C.Select
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_PopupTopButton_C_Select final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTopButton_C_Select) == 0x000001, "Wrong alignment on Ctrl_PopupTopButton_C_Select");
static_assert(sizeof(Ctrl_PopupTopButton_C_Select) == 0x000001, "Wrong size on Ctrl_PopupTopButton_C_Select");
static_assert(offsetof(Ctrl_PopupTopButton_C_Select, _selected) == 0x000000, "Member 'Ctrl_PopupTopButton_C_Select::_selected' has a wrong offset!");

// Function Ctrl_PopupTopButton.Ctrl_PopupTopButton_C.GetID
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_PopupTopButton_C_GetID final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PopupTopButton_C_GetID) == 0x000004, "Wrong alignment on Ctrl_PopupTopButton_C_GetID");
static_assert(sizeof(Ctrl_PopupTopButton_C_GetID) == 0x000008, "Wrong size on Ctrl_PopupTopButton_C_GetID");
static_assert(offsetof(Ctrl_PopupTopButton_C_GetID, _id) == 0x000000, "Member 'Ctrl_PopupTopButton_C_GetID::_id' has a wrong offset!");

}

