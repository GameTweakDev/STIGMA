#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: PANEL_Booster

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PANEL_Booster.PANEL_Booster_C.ExecuteUbergraph_PANEL_Booster
// 0x0004 (0x0004 - 0x0000)
struct PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster) == 0x000004, "Wrong alignment on PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster");
static_assert(sizeof(PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster) == 0x000004, "Wrong size on PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster");
static_assert(offsetof(PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster, EntryPoint) == 0x000000, "Member 'PANEL_Booster_C_ExecuteUbergraph_PANEL_Booster::EntryPoint' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.GetToolTip_BTN_BoosterTicket
// 0x01D0 (0x01D0 - 0x0000)
struct PANEL_Booster_C_GetToolTip_BTN_BoosterTicket final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_ItemID_Default_C*           ToolTip;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo;                  // 0x0010(0x0030)()
	bool                                          CallFunc_Is_Change_Master_UIOpened__open;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D70[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCurrencyDef                           CallFunc_GetCurrencyDefine__out_def;               // 0x0048(0x0168)()
	bool                                          CallFunc_GetCurrencyDefine_ReturnValue;            // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D71[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_ItemID_Default_C*           K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default;   // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket) == 0x000008, "Wrong alignment on PANEL_Booster_C_GetToolTip_BTN_BoosterTicket");
static_assert(sizeof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket) == 0x0001D0, "Wrong size on PANEL_Booster_C_GetToolTip_BTN_BoosterTicket");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, ReturnValue) == 0x000000, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, ToolTip) == 0x000008, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::ToolTip' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, K2Node_MakeStruct_TooltipKeyInfo) == 0x000010, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::K2Node_MakeStruct_TooltipKeyInfo' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, CallFunc_Is_Change_Master_UIOpened__open) == 0x000040, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::CallFunc_Is_Change_Master_UIOpened__open' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, CallFunc_GetCurrencyDefine__out_def) == 0x000048, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::CallFunc_GetCurrencyDefine__out_def' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, CallFunc_GetCurrencyDefine_ReturnValue) == 0x0001B0, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::CallFunc_GetCurrencyDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, CallFunc_CreateTooltipWidget_ReturnValue) == 0x0001B8, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default) == 0x0001C0, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_BoosterTicket, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'PANEL_Booster_C_GetToolTip_BTN_BoosterTicket::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.GetToolTip_BTN_Warning_TicketLack
// 0x0080 (0x0080 - 0x0000)
struct PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            ToolTip;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Change_Master_UIOpened__open;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D72[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo;                  // 0x0018(0x0030)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0048(0x0018)()
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0068(0x0018)()
};
static_assert(alignof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack) == 0x000008, "Wrong alignment on PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack");
static_assert(sizeof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack) == 0x000080, "Wrong size on PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, ReturnValue) == 0x000000, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, ToolTip) == 0x000008, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::ToolTip' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, CallFunc_Is_Change_Master_UIOpened__open) == 0x000010, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::CallFunc_Is_Change_Master_UIOpened__open' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, K2Node_MakeStruct_TooltipKeyInfo) == 0x000018, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::K2Node_MakeStruct_TooltipKeyInfo' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, CallFunc_MakeLiteralText_ReturnValue) == 0x000048, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000060, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000068, "Member 'PANEL_Booster_C_GetToolTip_BTN_Warning_TicketLack::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.Init
// 0x00B0 (0x00B0 - 0x0000)
struct PANEL_Booster_C_Init final
{
public:
	TSet<EUserEvent>                              Interests;                                         // 0x0000(0x0050)(Edit, BlueprintVisible)
	TSet<EUserEvent>                              K2Node_MakeVariable_MakeVariableOutput;            // 0x0050(0x0050)()
	TDelegate<void(EUserEvent _event)>            K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_Init) == 0x000008, "Wrong alignment on PANEL_Booster_C_Init");
static_assert(sizeof(PANEL_Booster_C_Init) == 0x0000B0, "Wrong size on PANEL_Booster_C_Init");
static_assert(offsetof(PANEL_Booster_C_Init, Interests) == 0x000000, "Member 'PANEL_Booster_C_Init::Interests' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_Init, K2Node_MakeVariable_MakeVariableOutput) == 0x000050, "Member 'PANEL_Booster_C_Init::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'PANEL_Booster_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.Is Change Master UIOpened
// 0x0020 (0x0020 - 0x0000)
struct PANEL_Booster_C_Is_Change_Master_UIOpened final
{
public:
	bool                                          _open;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D73[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChangeMasterUIOpened_ReturnValue;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_Is_Change_Master_UIOpened) == 0x000008, "Wrong alignment on PANEL_Booster_C_Is_Change_Master_UIOpened");
static_assert(sizeof(PANEL_Booster_C_Is_Change_Master_UIOpened) == 0x000020, "Wrong size on PANEL_Booster_C_Is_Change_Master_UIOpened");
static_assert(offsetof(PANEL_Booster_C_Is_Change_Master_UIOpened, _open) == 0x000000, "Member 'PANEL_Booster_C_Is_Change_Master_UIOpened::_open' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_Is_Change_Master_UIOpened, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'PANEL_Booster_C_Is_Change_Master_UIOpened::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_Is_Change_Master_UIOpened, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000010, "Member 'PANEL_Booster_C_Is_Change_Master_UIOpened::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_Is_Change_Master_UIOpened, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PANEL_Booster_C_Is_Change_Master_UIOpened::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_Is_Change_Master_UIOpened, CallFunc_IsChangeMasterUIOpened_ReturnValue) == 0x000019, "Member 'PANEL_Booster_C_Is_Change_Master_UIOpened::CallFunc_IsChangeMasterUIOpened_ReturnValue' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.OnBuyGoods
// 0x0018 (0x0018 - 0x0000)
struct PANEL_Booster_C_OnBuyGoods final
{
public:
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMatchServicedPlayerController*         K2Node_DynamicCast_AsMatch_Serviced_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_OnBuyGoods) == 0x000008, "Wrong alignment on PANEL_Booster_C_OnBuyGoods");
static_assert(sizeof(PANEL_Booster_C_OnBuyGoods) == 0x000018, "Wrong size on PANEL_Booster_C_OnBuyGoods");
static_assert(offsetof(PANEL_Booster_C_OnBuyGoods, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000000, "Member 'PANEL_Booster_C_OnBuyGoods::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnBuyGoods, K2Node_DynamicCast_AsMatch_Serviced_Player_Controller) == 0x000008, "Member 'PANEL_Booster_C_OnBuyGoods::K2Node_DynamicCast_AsMatch_Serviced_Player_Controller' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnBuyGoods, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PANEL_Booster_C_OnBuyGoods::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.OnClick_BuyBoosterTicket
// 0x0040 (0x0040 - 0x0000)
struct PANEL_Booster_C_OnClick_BuyBoosterTicket final
{
public:
	struct FGoodsID                               Aaas;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Change_Master_UIOpened__open;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D74[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_ShopQuickPurchase*                  K2Node_DynamicCast_AsUI_Shop_Quick_Purchase;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D75[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FGoodsID>                       CallFunc_GetCurrencyGoodsList_ReturnValue;         // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(PANEL_Booster_C_OnClick_BuyBoosterTicket) == 0x000008, "Wrong alignment on PANEL_Booster_C_OnClick_BuyBoosterTicket");
static_assert(sizeof(PANEL_Booster_C_OnClick_BuyBoosterTicket) == 0x000040, "Wrong size on PANEL_Booster_C_OnClick_BuyBoosterTicket");
static_assert(offsetof(PANEL_Booster_C_OnClick_BuyBoosterTicket, Aaas) == 0x000000, "Member 'PANEL_Booster_C_OnClick_BuyBoosterTicket::Aaas' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnClick_BuyBoosterTicket, CallFunc_DoModal_ReturnValue) == 0x000010, "Member 'PANEL_Booster_C_OnClick_BuyBoosterTicket::CallFunc_DoModal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnClick_BuyBoosterTicket, CallFunc_Is_Change_Master_UIOpened__open) == 0x000018, "Member 'PANEL_Booster_C_OnClick_BuyBoosterTicket::CallFunc_Is_Change_Master_UIOpened__open' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnClick_BuyBoosterTicket, K2Node_DynamicCast_AsUI_Shop_Quick_Purchase) == 0x000020, "Member 'PANEL_Booster_C_OnClick_BuyBoosterTicket::K2Node_DynamicCast_AsUI_Shop_Quick_Purchase' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnClick_BuyBoosterTicket, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PANEL_Booster_C_OnClick_BuyBoosterTicket::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnClick_BuyBoosterTicket, CallFunc_GetCurrencyGoodsList_ReturnValue) == 0x000030, "Member 'PANEL_Booster_C_OnClick_BuyBoosterTicket::CallFunc_GetCurrencyGoodsList_ReturnValue' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct PANEL_Booster_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on PANEL_Booster_C_OnSynchronizeProperties");
static_assert(sizeof(PANEL_Booster_C_OnSynchronizeProperties) == 0x000001, "Wrong size on PANEL_Booster_C_OnSynchronizeProperties");
static_assert(offsetof(PANEL_Booster_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'PANEL_Booster_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.OnUpdateUser
// 0x0002 (0x0002 - 0x0000)
struct PANEL_Booster_C_OnUpdateUser final
{
public:
	EUserEvent                                    _event;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_OnUpdateUser) == 0x000001, "Wrong alignment on PANEL_Booster_C_OnUpdateUser");
static_assert(sizeof(PANEL_Booster_C_OnUpdateUser) == 0x000002, "Wrong size on PANEL_Booster_C_OnUpdateUser");
static_assert(offsetof(PANEL_Booster_C_OnUpdateUser, _event) == 0x000000, "Member 'PANEL_Booster_C_OnUpdateUser::_event' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_OnUpdateUser, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'PANEL_Booster_C_OnUpdateUser::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PANEL_Booster.PANEL_Booster_C.UpdateBoosterLicense
// 0x0080 (0x0080 - 0x0000)
struct PANEL_Booster_C_UpdateBoosterLicense final
{
public:
	int32                                         Cnt_booster_ticket;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	int32                                         CallFunc_GetCurrencyValue_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0030(0x0014)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D76[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0048(0x0014)()
	uint8                                         Pad_3D77[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_Booster_C_UpdateBoosterLicense) == 0x000008, "Wrong alignment on PANEL_Booster_C_UpdateBoosterLicense");
static_assert(sizeof(PANEL_Booster_C_UpdateBoosterLicense) == 0x000080, "Wrong size on PANEL_Booster_C_UpdateBoosterLicense");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, Cnt_booster_ticket) == 0x000000, "Member 'PANEL_Booster_C_UpdateBoosterLicense::Cnt_booster_ticket' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'PANEL_Booster_C_UpdateBoosterLicense::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, CallFunc_GetCurrencyValue_ReturnValue) == 0x000018, "Member 'PANEL_Booster_C_UpdateBoosterLicense::CallFunc_GetCurrencyValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, K2Node_MakeStruct_SlateColor_1) == 0x00001C, "Member 'PANEL_Booster_C_UpdateBoosterLicense::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, K2Node_MakeStruct_SlateColor_2) == 0x000030, "Member 'PANEL_Booster_C_UpdateBoosterLicense::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PANEL_Booster_C_UpdateBoosterLicense::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, K2Node_MakeStruct_SlateColor_3) == 0x000048, "Member 'PANEL_Booster_C_UpdateBoosterLicense::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'PANEL_Booster_C_UpdateBoosterLicense::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'PANEL_Booster_C_UpdateBoosterLicense::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PANEL_Booster_C_UpdateBoosterLicense, CallFunc_Greater_IntInt_ReturnValue) == 0x000079, "Member 'PANEL_Booster_C_UpdateBoosterLicense::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

