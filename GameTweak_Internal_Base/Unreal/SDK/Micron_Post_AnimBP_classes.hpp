#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Micron_Post_AnimBP

#include "Basic.hpp"

#include "KawaiiPhysics_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Micron_Post_AnimBP.Micron_Post_AnimBP_C
// 0x1440 (0x1790 - 0x0350)
class UMicron_Post_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_40A7[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0368(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0388(0x0020)()
	struct FAnimNode_Constraint                   AnimGraphNode_Constraint;                          // 0x03A8(0x0108)()
	struct FAnimNode_SpringBone                   AnimGraphNode_SpringBone_1;                        // 0x04B0(0x0168)()
	struct FAnimNode_SpringBone                   AnimGraphNode_SpringBone;                          // 0x0618(0x0168)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0780(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0838(0x0020)()
	uint8                                         Pad_40A8[0x8];                                     // 0x0858(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x0860(0x0790)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x0FF0(0x0790)()
	double                                        DynamicAlpha;                                      // 0x1780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Micron_Post_AnimBP(int32 EntryPoint);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Micron_Post_AnimBP_C">();
	}
	static class UMicron_Post_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMicron_Post_AnimBP_C>();
	}
};
static_assert(alignof(UMicron_Post_AnimBP_C) == 0x000010, "Wrong alignment on UMicron_Post_AnimBP_C");
static_assert(sizeof(UMicron_Post_AnimBP_C) == 0x001790, "Wrong size on UMicron_Post_AnimBP_C");
static_assert(offsetof(UMicron_Post_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UMicron_Post_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UMicron_Post_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UMicron_Post_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000368, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x000388, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_Constraint) == 0x0003A8, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_Constraint' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_SpringBone_1) == 0x0004B0, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_SpringBone_1' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_SpringBone) == 0x000618, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_SpringBone' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x000780, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_Root) == 0x000838, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_1) == 0x000860, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics) == 0x000FF0, "Member 'UMicron_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UMicron_Post_AnimBP_C, DynamicAlpha) == 0x001780, "Member 'UMicron_Post_AnimBP_C::DynamicAlpha' has a wrong offset!");

}

