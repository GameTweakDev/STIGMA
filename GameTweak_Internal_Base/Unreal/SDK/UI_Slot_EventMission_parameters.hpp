#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Slot_EventMission

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_ConfirmReward_K2Node_ComponentBoundEvent_4_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'UI_Slot_EventMission_C_BndEvt__UI_Slot_EventMission_Btn_GoTo_K2Node_ComponentBoundEvent_2_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.ExecuteUbergraph_UI_Slot_EventMission
// 0x0078 (0x0078 - 0x0000)
struct UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3586[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3587[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   K2Node_Event__text_1;                              // 0x0018(0x0018)(ConstParm)
	class FText                                   K2Node_Event__text;                                // 0x0030(0x0018)(ConstParm)
	EMissionProgressType                          K2Node_Event__progress_type;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3588[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         K2Node_Event__rate;                                // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__count;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__target_count;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__show;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__can_reward;                          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3589[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget_1;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select_1;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_SetProgressRate__rate_ImplicitCast;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission) == 0x000008, "Wrong alignment on UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission");
static_assert(sizeof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission) == 0x000078, "Wrong size on UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, EntryPoint) == 0x000000, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__text_1) == 0x000018, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__text_1' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__text) == 0x000030, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__text' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__progress_type) == 0x000048, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__progress_type' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__rate) == 0x00004C, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__rate' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__count) == 0x000050, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__count' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__target_count) == 0x000054, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__target_count' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__show) == 0x000059, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__show' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_Event__can_reward) == 0x00005A, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_Event__can_reward' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_ComponentBoundEvent__widget_1) == 0x000060, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_ComponentBoundEvent__widget_1' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, K2Node_ComponentBoundEvent__select_1) == 0x000068, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::K2Node_ComponentBoundEvent__select_1' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission, CallFunc_SetProgressRate__rate_ImplicitCast) == 0x000070, "Member 'UI_Slot_EventMission_C_ExecuteUbergraph_UI_Slot_EventMission::CallFunc_SetProgressRate__rate_ImplicitCast' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.Set Progresss Type
// 0x0002 (0x0002 - 0x0000)
struct UI_Slot_EventMission_C_Set_Progresss_Type final
{
public:
	EMissionProgressType                          ProgressType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_Set_Progresss_Type) == 0x000001, "Wrong alignment on UI_Slot_EventMission_C_Set_Progresss_Type");
static_assert(sizeof(UI_Slot_EventMission_C_Set_Progresss_Type) == 0x000002, "Wrong size on UI_Slot_EventMission_C_Set_Progresss_Type");
static_assert(offsetof(UI_Slot_EventMission_C_Set_Progresss_Type, ProgressType) == 0x000000, "Member 'UI_Slot_EventMission_C_Set_Progresss_Type::ProgressType' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_Set_Progresss_Type, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_Slot_EventMission_C_Set_Progresss_Type::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.SetCanReward
// 0x0001 (0x0001 - 0x0000)
struct UI_Slot_EventMission_C_SetCanReward final
{
public:
	bool                                          _can_reward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_SetCanReward) == 0x000001, "Wrong alignment on UI_Slot_EventMission_C_SetCanReward");
static_assert(sizeof(UI_Slot_EventMission_C_SetCanReward) == 0x000001, "Wrong size on UI_Slot_EventMission_C_SetCanReward");
static_assert(offsetof(UI_Slot_EventMission_C_SetCanReward, _can_reward) == 0x000000, "Member 'UI_Slot_EventMission_C_SetCanReward::_can_reward' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.SetDesc
// 0x0018 (0x0018 - 0x0000)
struct UI_Slot_EventMission_C_SetDesc final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Slot_EventMission_C_SetDesc) == 0x000008, "Wrong alignment on UI_Slot_EventMission_C_SetDesc");
static_assert(sizeof(UI_Slot_EventMission_C_SetDesc) == 0x000018, "Wrong size on UI_Slot_EventMission_C_SetDesc");
static_assert(offsetof(UI_Slot_EventMission_C_SetDesc, _text) == 0x000000, "Member 'UI_Slot_EventMission_C_SetDesc::_text' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.SetProgress
// 0x0010 (0x0010 - 0x0000)
struct UI_Slot_EventMission_C_SetProgress final
{
public:
	EMissionProgressType                          _progress_type;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         _rate;                                             // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _count;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _target_count;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_SetProgress) == 0x000004, "Wrong alignment on UI_Slot_EventMission_C_SetProgress");
static_assert(sizeof(UI_Slot_EventMission_C_SetProgress) == 0x000010, "Wrong size on UI_Slot_EventMission_C_SetProgress");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgress, _progress_type) == 0x000000, "Member 'UI_Slot_EventMission_C_SetProgress::_progress_type' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgress, _rate) == 0x000004, "Member 'UI_Slot_EventMission_C_SetProgress::_rate' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgress, _count) == 0x000008, "Member 'UI_Slot_EventMission_C_SetProgress::_count' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgress, _target_count) == 0x00000C, "Member 'UI_Slot_EventMission_C_SetProgress::_target_count' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.SetProgressRate
// 0x00F0 (0x00F0 - 0x0000)
struct UI_Slot_EventMission_C_SetProgressRate final
{
public:
	double                                        _rate;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _count;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _target_count;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_SetProgressRate) == 0x000008, "Wrong alignment on UI_Slot_EventMission_C_SetProgressRate");
static_assert(sizeof(UI_Slot_EventMission_C_SetProgressRate) == 0x0000F0, "Wrong size on UI_Slot_EventMission_C_SetProgressRate");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, _rate) == 0x000000, "Member 'UI_Slot_EventMission_C_SetProgressRate::_rate' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, _count) == 0x000008, "Member 'UI_Slot_EventMission_C_SetProgressRate::_count' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, _target_count) == 0x00000C, "Member 'UI_Slot_EventMission_C_SetProgressRate::_target_count' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'UI_Slot_EventMission_C_SetProgressRate::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000018, "Member 'UI_Slot_EventMission_C_SetProgressRate::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UI_Slot_EventMission_C_SetProgressRate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'UI_Slot_EventMission_C_SetProgressRate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, K2Node_MakeArray_Array) == 0x0000C0, "Member 'UI_Slot_EventMission_C_SetProgressRate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'UI_Slot_EventMission_C_SetProgressRate::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Slot_EventMission_C_SetProgressRate, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0000E8, "Member 'UI_Slot_EventMission_C_SetProgressRate::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.SetTitle
// 0x0018 (0x0018 - 0x0000)
struct UI_Slot_EventMission_C_SetTitle final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Slot_EventMission_C_SetTitle) == 0x000008, "Wrong alignment on UI_Slot_EventMission_C_SetTitle");
static_assert(sizeof(UI_Slot_EventMission_C_SetTitle) == 0x000018, "Wrong size on UI_Slot_EventMission_C_SetTitle");
static_assert(offsetof(UI_Slot_EventMission_C_SetTitle, _text) == 0x000000, "Member 'UI_Slot_EventMission_C_SetTitle::_text' has a wrong offset!");

// Function UI_Slot_EventMission.UI_Slot_EventMission_C.ShowGoToButton
// 0x0001 (0x0001 - 0x0000)
struct UI_Slot_EventMission_C_ShowGoToButton final
{
public:
	bool                                          _show;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Slot_EventMission_C_ShowGoToButton) == 0x000001, "Wrong alignment on UI_Slot_EventMission_C_ShowGoToButton");
static_assert(sizeof(UI_Slot_EventMission_C_ShowGoToButton) == 0x000001, "Wrong size on UI_Slot_EventMission_C_ShowGoToButton");
static_assert(offsetof(UI_Slot_EventMission_C_ShowGoToButton, _show) == 0x000000, "Member 'UI_Slot_EventMission_C_ShowGoToButton::_show' has a wrong offset!");

}

