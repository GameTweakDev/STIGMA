#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: TrainingRoom_PlayerController_BP

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.ExecuteUbergraph_TrainingRoom_PlayerController_BP
// 0x00B0 (0x00B0 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B06[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0050(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B07[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0070(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B08[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0090(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyPopupOpened_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP) == 0x0000B0, "Wrong size on TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, EntryPoint) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, Temp_struct_Variable) == 0x000008, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, K2Node_InputKeyEvent_Key_1) == 0x000020, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, K2Node_InputKeyEvent_Key) == 0x000038, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, Temp_struct_Variable_1) == 0x000050, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000068, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, K2Node_InputKeyEvent_Key_2) == 0x000070, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, Temp_bool_IsClosed_Variable) == 0x000088, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000089, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, Temp_bool_IsClosed_Variable_1) == 0x00008A, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, K2Node_InputKeyEvent_Key_3) == 0x000090, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP, CallFunc_IsAnyPopupOpened_ReturnValue) == 0x0000A8, "Member 'TrainingRoom_PlayerController_BP_C_ExecuteUbergraph_TrainingRoom_PlayerController_BP::CallFunc_IsAnyPopupOpened_ReturnValue' has a wrong offset!");

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.InpActEvt_F3_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.InpActEvt_F3_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_InpActEvt_F3_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.InpActEvt_F4_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.InpActEvt_F4_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_InpActEvt_F4_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.POPUP_SkillHelp
// 0x0020 (0x0020 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp final
{
public:
	class UPOPUP_SkillHelp_C*                     Popup;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPOPUP_SkillHelp_C*                     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentCharaType__chara_type;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B09[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UPopupBase*                             CallFunc_DoModal_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp) == 0x000020, "Wrong size on TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp, Popup) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp::Popup' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp, CallFunc_Create_ReturnValue) == 0x000008, "Member 'TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp, CallFunc_GetCurrentCharaType__chara_type) == 0x000010, "Member 'TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp::CallFunc_GetCurrentCharaType__chara_type' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp, CallFunc_DoModal_ReturnValue) == 0x000018, "Member 'TrainingRoom_PlayerController_BP_C_POPUP_SkillHelp::CallFunc_DoModal_ReturnValue' has a wrong offset!");

// Function TrainingRoom_PlayerController_BP.TrainingRoom_PlayerController_BP_C.GetCurrentCharaType
// 0x0018 (0x0018 - 0x0000)
struct TrainingRoom_PlayerController_BP_C_GetCurrentCharaType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentCharaType_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TrainingRoom_PlayerController_BP_C_GetCurrentCharaType) == 0x000008, "Wrong alignment on TrainingRoom_PlayerController_BP_C_GetCurrentCharaType");
static_assert(sizeof(TrainingRoom_PlayerController_BP_C_GetCurrentCharaType) == 0x000018, "Wrong size on TrainingRoom_PlayerController_BP_C_GetCurrentCharaType");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_GetCurrentCharaType, _chara_type) == 0x000000, "Member 'TrainingRoom_PlayerController_BP_C_GetCurrentCharaType::_chara_type' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_GetCurrentCharaType, K2Node_DynamicCast_AsBattle_Player_State) == 0x000008, "Member 'TrainingRoom_PlayerController_BP_C_GetCurrentCharaType::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_GetCurrentCharaType, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TrainingRoom_PlayerController_BP_C_GetCurrentCharaType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TrainingRoom_PlayerController_BP_C_GetCurrentCharaType, CallFunc_GetCurrentCharaType_ReturnValue) == 0x000011, "Member 'TrainingRoom_PlayerController_BP_C_GetCurrentCharaType::CallFunc_GetCurrentCharaType_ReturnValue' has a wrong offset!");

}

