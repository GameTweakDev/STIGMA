#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: TDM_PlayerController_BP

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.ExecuteUbergraph_TDM_PlayerController_BP
// 0x0298 (0x0298 - 0x0000)
struct TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_3;                   // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_3;           // 0x0038(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_2;                   // 0x0058(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_2;           // 0x0070(0x0020)(NoDestructor)
	struct FInputActionValue                      Temp_struct_Variable;                              // 0x0090(0x0020)(NoDestructor)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key_1;                   // 0x00C8(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue_1;           // 0x00E0(0x0020)(NoDestructor)
	struct FKey                                   K2Node_InputDebugKeyEvent_Key;                     // 0x0100(0x0018)(HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_InputDebugKeyEvent_ActionValue;             // 0x0118(0x0020)(NoDestructor)
	struct FInputActionValue                      Temp_struct_Variable_2;                            // 0x0138(0x0020)(NoDestructor)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0158(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPIE_ReturnValue;                      // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B00[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_HUD_Radar_C*                      K2Node_DynamicCast_AsCtrl_HUD_Radar;               // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B01[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCtrl_HUD_Radar_C*                      K2Node_DynamicCast_AsCtrl_HUD_Radar_1;             // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B02[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_3;        // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0210(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPIE_ReturnValue_1;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPIE_ReturnValue_2;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B03[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0240(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B04[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0268(0x0018)(HasGetValueTypeHash)
	class ABattleGameModeBase*                    K2Node_DynamicCast_AsBattle_Game_Mode_Base;        // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B05[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_SetColorVisionDeficiencyType_Severity_ImplicitCast; // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetColorVisionDeficiencyType_Severity_ImplicitCast_1; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP");
static_assert(sizeof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP) == 0x000298, "Wrong size on TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, EntryPoint) == 0x000000, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputKeyEvent_Key_4) == 0x000008, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_Key_3) == 0x000020, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_3) == 0x000038, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_Key_2) == 0x000058, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_2) == 0x000070, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_struct_Variable) == 0x000090, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_struct_Variable_1) == 0x0000B0, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_Key_1) == 0x0000C8, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue_1) == 0x0000E0, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_Key) == 0x000100, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputDebugKeyEvent_ActionValue) == 0x000118, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputDebugKeyEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_struct_Variable_2) == 0x000138, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_struct_Variable_3) == 0x000158, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000170, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_bool_IsClosed_Variable) == 0x000171, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000172, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_IsInPIE_ReturnValue) == 0x000173, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_IsInPIE_ReturnValue' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000178, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000188, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_DynamicCast_AsCtrl_HUD_Radar) == 0x000190, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_DynamicCast_AsCtrl_HUD_Radar' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0001A0, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x0001B8, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x0001C8, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_DynamicCast_AsCtrl_HUD_Radar_1) == 0x0001D8, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_DynamicCast_AsCtrl_HUD_Radar_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Conv_DoubleToString_ReturnValue_3) == 0x0001E8, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Conv_DoubleToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputKeyEvent_Key) == 0x0001F8, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputKeyEvent_Key_1) == 0x000210, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000230, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_IsInPIE_ReturnValue_1) == 0x000238, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_IsInPIE_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_IsInPIE_ReturnValue_2) == 0x000239, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_IsInPIE_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputKeyEvent_Key_2) == 0x000240, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, Temp_bool_IsClosed_Variable_1) == 0x000258, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_GetGameMode_ReturnValue) == 0x000260, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_InputKeyEvent_Key_3) == 0x000268, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_DynamicCast_AsBattle_Game_Mode_Base) == 0x000280, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_DynamicCast_AsBattle_Game_Mode_Base' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, K2Node_DynamicCast_bSuccess_2) == 0x000288, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_SetColorVisionDeficiencyType_Severity_ImplicitCast) == 0x00028C, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_SetColorVisionDeficiencyType_Severity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP, CallFunc_SetColorVisionDeficiencyType_Severity_ImplicitCast_1) == 0x000290, "Member 'TDM_PlayerController_BP_C_ExecuteUbergraph_TDM_PlayerController_BP::CallFunc_SetColorVisionDeficiencyType_Severity_ImplicitCast_1' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_Add_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_Add_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_BackSpace_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_BackSpace_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0
// 0x0038 (0x0038 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0) == 0x000038, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0::Key' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0, ActionValue) == 0x000018, "Member 'TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_0::ActionValue' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1
// 0x0038 (0x0038 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1) == 0x000038, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1::Key' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1, ActionValue) == 0x000018, "Member 'TDM_PlayerController_BP_C_InpActEvt_Ctrl_U_K2Node_InputDebugKeyEvent_1::ActionValue' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_O_K2Node_InputDebugKeyEvent_2
// 0x0038 (0x0038 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2) == 0x000038, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2::Key' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2, ActionValue) == 0x000018, "Member 'TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_2::ActionValue' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_O_K2Node_InputDebugKeyEvent_3
// 0x0038 (0x0038 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionValue                      ActionValue;                                       // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3) == 0x000038, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3::Key' has a wrong offset!");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3, ActionValue) == 0x000018, "Member 'TDM_PlayerController_BP_C_InpActEvt_O_K2Node_InputDebugKeyEvent_3::ActionValue' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_Subtract_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_Subtract_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_X_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_X_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function TDM_PlayerController_BP.TDM_PlayerController_BP_C.InpActEvt_Z_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1");
static_assert(sizeof(TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1");
static_assert(offsetof(TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'TDM_PlayerController_BP_C_InpActEvt_Z_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

}

