#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Safe_BP

#include "Basic.hpp"

#include "BPGLib_structs.hpp"
#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Safe_BP.Safe_BP_C.BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3806[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.ExecuteUbergraph_Safe_BP
// 0x0190 (0x0190 - 0x0000)
struct Safe_BP_C_ExecuteUbergraph_Safe_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddIndicator_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3807[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattleGameStateBase*                   K2Node_DynamicCast_AsBattle_Game_State_Base;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3808[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetRemainTime__out_min;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainTime__out_sec;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3809[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380A[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0058(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UNiagaraSystem*                         CallFunc_GetAsset_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_BP_C*                        K2Node_DynamicCast_AsChara_Base_BP;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380B[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380C[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase_BP_C*                        K2Node_DynamicCast_AsChara_Base_BP_1;              // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDisplay_ReturnValue;                   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDisplay_ReturnValue_1;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_ExecuteUbergraph_Safe_BP) == 0x000008, "Wrong alignment on Safe_BP_C_ExecuteUbergraph_Safe_BP");
static_assert(sizeof(Safe_BP_C_ExecuteUbergraph_Safe_BP) == 0x000190, "Wrong size on Safe_BP_C_ExecuteUbergraph_Safe_BP");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, EntryPoint) == 0x000000, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_AddIndicator_ReturnValue) == 0x000005, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_AddIndicator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_HasAuthority_ReturnValue) == 0x000006, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_HasAuthority_ReturnValue_1) == 0x000007, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_DynamicCast_AsBattle_Game_State_Base) == 0x000018, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_DynamicCast_AsBattle_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_GetRemainTime__out_min) == 0x000024, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_GetRemainTime__out_min' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_GetRemainTime__out_sec) == 0x000028, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_GetRemainTime__out_sec' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_Multiply_IntInt_ReturnValue) == 0x00002C, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000038, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000040, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000048, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000050, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000054, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000058, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_GetAsset_ReturnValue) == 0x000140, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_DynamicCast_AsChara_Base_BP) == 0x000148, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_DynamicCast_AsChara_Base_BP' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000158, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000160, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000168, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000170, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000178, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, Temp_bool_IsClosed_Variable) == 0x00017C, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_DynamicCast_AsChara_Base_BP_1) == 0x000180, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_DynamicCast_AsChara_Base_BP_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, K2Node_DynamicCast_bSuccess_2) == 0x000188, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_HasDisplay_ReturnValue) == 0x000189, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_HasDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_ExecuteUbergraph_Safe_BP, CallFunc_HasDisplay_ReturnValue_1) == 0x00018A, "Member 'Safe_BP_C_ExecuteUbergraph_Safe_BP::CallFunc_HasDisplay_ReturnValue_1' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.GetIndicatorPosComponent
// 0x0008 (0x0008 - 0x0000)
struct Safe_BP_C_GetIndicatorPosComponent final
{
public:
	class UIndicatorPosComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_GetIndicatorPosComponent) == 0x000008, "Wrong alignment on Safe_BP_C_GetIndicatorPosComponent");
static_assert(sizeof(Safe_BP_C_GetIndicatorPosComponent) == 0x000008, "Wrong size on Safe_BP_C_GetIndicatorPosComponent");
static_assert(offsetof(Safe_BP_C_GetIndicatorPosComponent, ReturnValue) == 0x000000, "Member 'Safe_BP_C_GetIndicatorPosComponent::ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.OnQueryAddIndiactor
// 0x0608 (0x0608 - 0x0000)
struct Safe_BP_C_OnQueryAddIndiactor final
{
public:
	class ABPGPlayerController*                   Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EIndicatorType                                _type;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FIndicatorData                         _out_detail;                                       // 0x0010(0x0028)(Parm, OutParm, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Game                           CallFunc_GetGameConfig_ReturnValue;                // 0x0040(0x0560)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_380F[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Indicator_Ping_Default_C*           CallFunc_Create_ReturnValue;                       // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Indicator_Bounty_Safe_C*            CallFunc_Create_ReturnValue_1;                     // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FIndicatorData                         K2Node_MakeStruct_IndicatorData;                   // 0x05B8(0x0028)(NoDestructor, ContainsInstancedReference)
	struct FIndicatorData                         K2Node_MakeStruct_IndicatorData_1;                 // 0x05E0(0x0028)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Safe_BP_C_OnQueryAddIndiactor) == 0x000008, "Wrong alignment on Safe_BP_C_OnQueryAddIndiactor");
static_assert(sizeof(Safe_BP_C_OnQueryAddIndiactor) == 0x000608, "Wrong size on Safe_BP_C_OnQueryAddIndiactor");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, Controller) == 0x000000, "Member 'Safe_BP_C_OnQueryAddIndiactor::Controller' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, _type) == 0x000008, "Member 'Safe_BP_C_OnQueryAddIndiactor::_type' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, _out_detail) == 0x000010, "Member 'Safe_BP_C_OnQueryAddIndiactor::_out_detail' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, ReturnValue) == 0x000038, "Member 'Safe_BP_C_OnQueryAddIndiactor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, CallFunc_GetGameConfig_ReturnValue) == 0x000040, "Member 'Safe_BP_C_OnQueryAddIndiactor::CallFunc_GetGameConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, K2Node_SwitchEnum_CmpSuccess) == 0x0005A0, "Member 'Safe_BP_C_OnQueryAddIndiactor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, CallFunc_Create_ReturnValue) == 0x0005A8, "Member 'Safe_BP_C_OnQueryAddIndiactor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, CallFunc_Create_ReturnValue_1) == 0x0005B0, "Member 'Safe_BP_C_OnQueryAddIndiactor::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, K2Node_MakeStruct_IndicatorData) == 0x0005B8, "Member 'Safe_BP_C_OnQueryAddIndiactor::K2Node_MakeStruct_IndicatorData' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryAddIndiactor, K2Node_MakeStruct_IndicatorData_1) == 0x0005E0, "Member 'Safe_BP_C_OnQueryAddIndiactor::K2Node_MakeStruct_IndicatorData_1' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.OnQueryGetDisplayName
// 0x0038 (0x0038 - 0x0000)
struct Safe_BP_C_OnQueryGetDisplayName final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3810[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_OnQueryGetDisplayName) == 0x000008, "Wrong alignment on Safe_BP_C_OnQueryGetDisplayName");
static_assert(sizeof(Safe_BP_C_OnQueryGetDisplayName) == 0x000038, "Wrong size on Safe_BP_C_OnQueryGetDisplayName");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, _type) == 0x000000, "Member 'Safe_BP_C_OnQueryGetDisplayName::_type' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, ReturnValue) == 0x000008, "Member 'Safe_BP_C_OnQueryGetDisplayName::ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000020, "Member 'Safe_BP_C_OnQueryGetDisplayName::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000028, "Member 'Safe_BP_C_OnQueryGetDisplayName::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Safe_BP_C_OnQueryGetDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, CallFunc_GetTeam_ReturnValue) == 0x000031, "Member 'Safe_BP_C_OnQueryGetDisplayName::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryGetDisplayName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'Safe_BP_C_OnQueryGetDisplayName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.OnQueryInteractionPoint
// 0x0038 (0x0038 - 0x0000)
struct Safe_BP_C_OnQueryInteractionPoint final
{
public:
	class ACharaBase*                             _involver;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInteractionPoint                      ReturnValue;                                       // 0x0008(0x0030)(Parm, OutParm, ReturnParm, NoDestructor)
};
static_assert(alignof(Safe_BP_C_OnQueryInteractionPoint) == 0x000008, "Wrong alignment on Safe_BP_C_OnQueryInteractionPoint");
static_assert(sizeof(Safe_BP_C_OnQueryInteractionPoint) == 0x000038, "Wrong size on Safe_BP_C_OnQueryInteractionPoint");
static_assert(offsetof(Safe_BP_C_OnQueryInteractionPoint, _involver) == 0x000000, "Member 'Safe_BP_C_OnQueryInteractionPoint::_involver' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryInteractionPoint, ReturnValue) == 0x000008, "Member 'Safe_BP_C_OnQueryInteractionPoint::ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.OnQueryVisibility
// 0x0030 (0x0030 - 0x0000)
struct Safe_BP_C_OnQueryVisibility final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3811[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerState*                     K2Node_DynamicCast_AsBattle_Player_State;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3812[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_OnQueryVisibility) == 0x000008, "Wrong alignment on Safe_BP_C_OnQueryVisibility");
static_assert(sizeof(Safe_BP_C_OnQueryVisibility) == 0x000030, "Wrong size on Safe_BP_C_OnQueryVisibility");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, _type) == 0x000000, "Member 'Safe_BP_C_OnQueryVisibility::_type' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, ReturnValue) == 0x000001, "Member 'Safe_BP_C_OnQueryVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000008, "Member 'Safe_BP_C_OnQueryVisibility::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, K2Node_DynamicCast_AsBattle_Player_State) == 0x000010, "Member 'Safe_BP_C_OnQueryVisibility::K2Node_DynamicCast_AsBattle_Player_State' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Safe_BP_C_OnQueryVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000020, "Member 'Safe_BP_C_OnQueryVisibility::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Safe_BP_C_OnQueryVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'Safe_BP_C_OnQueryVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'Safe_BP_C_OnQueryVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.OnQueryWorldTransform
// 0x00D0 (0x00D0 - 0x0000)
struct Safe_BP_C_OnQueryWorldTransform final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3813[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_OnQueryWorldTransform) == 0x000010, "Wrong alignment on Safe_BP_C_OnQueryWorldTransform");
static_assert(sizeof(Safe_BP_C_OnQueryWorldTransform) == 0x0000D0, "Wrong size on Safe_BP_C_OnQueryWorldTransform");
static_assert(offsetof(Safe_BP_C_OnQueryWorldTransform, _type) == 0x000000, "Member 'Safe_BP_C_OnQueryWorldTransform::_type' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryWorldTransform, ReturnValue) == 0x000010, "Member 'Safe_BP_C_OnQueryWorldTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_OnQueryWorldTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'Safe_BP_C_OnQueryWorldTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Safe_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on Safe_BP_C_ReceiveTick");
static_assert(sizeof(Safe_BP_C_ReceiveTick) == 0x000004, "Wrong size on Safe_BP_C_ReceiveTick");
static_assert(offsetof(Safe_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Safe_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.SetHackingScreen
// 0x0028 (0x0028 - 0x0000)
struct Safe_BP_C_SetHackingScreen final
{
public:
	bool                                          IsHacking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3814[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_As_________;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3815[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_SetHackingScreen) == 0x000008, "Wrong alignment on Safe_BP_C_SetHackingScreen");
static_assert(sizeof(Safe_BP_C_SetHackingScreen) == 0x000028, "Wrong size on Safe_BP_C_SetHackingScreen");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, IsHacking) == 0x000000, "Member 'Safe_BP_C_SetHackingScreen::IsHacking' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, Temp_bool_Has_Been_Initd_Variable) == 0x000001, "Member 'Safe_BP_C_SetHackingScreen::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, Temp_bool_IsClosed_Variable) == 0x000002, "Member 'Safe_BP_C_SetHackingScreen::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, Temp_bool_Has_Been_Initd_Variable_1) == 0x000003, "Member 'Safe_BP_C_SetHackingScreen::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, Temp_bool_IsClosed_Variable_1) == 0x000004, "Member 'Safe_BP_C_SetHackingScreen::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Safe_BP_C_SetHackingScreen::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, K2Node_DynamicCast_As_________) == 0x000010, "Member 'Safe_BP_C_SetHackingScreen::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Safe_BP_C_SetHackingScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_SetHackingScreen, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'Safe_BP_C_SetHackingScreen::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.GetActorDisplayName
// 0x0038 (0x0038 - 0x0000)
struct Safe_BP_C_GetActorDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	ETeams                                        CallFunc_GetOwnTeam_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3816[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_GetActorDisplayName) == 0x000008, "Wrong alignment on Safe_BP_C_GetActorDisplayName");
static_assert(sizeof(Safe_BP_C_GetActorDisplayName) == 0x000038, "Wrong size on Safe_BP_C_GetActorDisplayName");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, ReturnValue) == 0x000000, "Member 'Safe_BP_C_GetActorDisplayName::ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, CallFunc_GetOwnTeam_ReturnValue) == 0x000018, "Member 'Safe_BP_C_GetActorDisplayName::CallFunc_GetOwnTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'Safe_BP_C_GetActorDisplayName::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000028, "Member 'Safe_BP_C_GetActorDisplayName::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Safe_BP_C_GetActorDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, CallFunc_GetTeam_ReturnValue) == 0x000031, "Member 'Safe_BP_C_GetActorDisplayName::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetActorDisplayName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'Safe_BP_C_GetActorDisplayName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.GetActorIcon
// 0x0008 (0x0008 - 0x0000)
struct Safe_BP_C_GetActorIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_GetActorIcon) == 0x000008, "Wrong alignment on Safe_BP_C_GetActorIcon");
static_assert(sizeof(Safe_BP_C_GetActorIcon) == 0x000008, "Wrong size on Safe_BP_C_GetActorIcon");
static_assert(offsetof(Safe_BP_C_GetActorIcon, ReturnValue) == 0x000000, "Member 'Safe_BP_C_GetActorIcon::ReturnValue' has a wrong offset!");

// Function Safe_BP.Safe_BP_C.GetDisplayText
// 0x0028 (0x0028 - 0x0000)
struct Safe_BP_C_GetDisplayText final
{
public:
	class ACharaBase*                             _involver;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetOwnTeam_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Safe_BP_C_GetDisplayText) == 0x000008, "Wrong alignment on Safe_BP_C_GetDisplayText");
static_assert(sizeof(Safe_BP_C_GetDisplayText) == 0x000028, "Wrong size on Safe_BP_C_GetDisplayText");
static_assert(offsetof(Safe_BP_C_GetDisplayText, _involver) == 0x000000, "Member 'Safe_BP_C_GetDisplayText::_involver' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetDisplayText, ReturnValue) == 0x000008, "Member 'Safe_BP_C_GetDisplayText::ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetDisplayText, CallFunc_GetTeam_ReturnValue) == 0x000020, "Member 'Safe_BP_C_GetDisplayText::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetDisplayText, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Safe_BP_C_GetDisplayText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetDisplayText, CallFunc_GetOwnTeam_ReturnValue) == 0x000022, "Member 'Safe_BP_C_GetDisplayText::CallFunc_GetOwnTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Safe_BP_C_GetDisplayText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000023, "Member 'Safe_BP_C_GetDisplayText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

