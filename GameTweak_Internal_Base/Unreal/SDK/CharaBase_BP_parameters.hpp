#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: CharaBase_BP

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function CharaBase_BP.CharaBase_BP_C.DEBUG_GetDamageViewerClass
// 0x0008 (0x0008 - 0x0000)
struct CharaBase_BP_C_DEBUG_GetDamageViewerClass final
{
public:
	TSubclassOf<class UDebug_DamageViewerComponent> ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_DEBUG_GetDamageViewerClass) == 0x000008, "Wrong alignment on CharaBase_BP_C_DEBUG_GetDamageViewerClass");
static_assert(sizeof(CharaBase_BP_C_DEBUG_GetDamageViewerClass) == 0x000008, "Wrong size on CharaBase_BP_C_DEBUG_GetDamageViewerClass");
static_assert(offsetof(CharaBase_BP_C_DEBUG_GetDamageViewerClass, ReturnValue) == 0x000000, "Member 'CharaBase_BP_C_DEBUG_GetDamageViewerClass::ReturnValue' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.ExecuteUbergraph_CharaBase_BP
// 0x00D8 (0x00D8 - 0x0000)
struct CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0078(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F1[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0098(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsInPIE_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F2[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x00B8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsInPIE_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPIE_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP) == 0x000008, "Wrong alignment on CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP");
static_assert(sizeof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP) == 0x0000D8, "Wrong size on CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, EntryPoint) == 0x000000, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_struct_Variable) == 0x000008, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, K2Node_InputKeyEvent_Key) == 0x000020, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_bool_Has_Been_Initd_Variable) == 0x000038, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, K2Node_InputKeyEvent_Key_1) == 0x000040, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000058, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_bool_Variable) == 0x000059, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_bool_IsClosed_Variable) == 0x00005B, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, K2Node_InputKeyEvent_Key_2) == 0x000060, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_struct_Variable_1) == 0x000078, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, Temp_bool_IsClosed_Variable_1) == 0x000090, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, K2Node_InputKeyEvent_Key_3) == 0x000098, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, CallFunc_IsInPIE_ReturnValue) == 0x0000B0, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::CallFunc_IsInPIE_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, K2Node_InputKeyEvent_Key_4) == 0x0000B8, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, CallFunc_IsInPIE_ReturnValue_1) == 0x0000D0, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::CallFunc_IsInPIE_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP, CallFunc_IsInPIE_ReturnValue_2) == 0x0000D1, "Member 'CharaBase_BP_C_ExecuteUbergraph_CharaBase_BP::CallFunc_IsInPIE_ReturnValue_2' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.InpActEvt_Equals_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1");
static_assert(sizeof(CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1");
static_assert(offsetof(CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.InpActEvt_Equals_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2");
static_assert(sizeof(CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2");
static_assert(offsetof(CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'CharaBase_BP_C_InpActEvt_Equals_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.InpActEvt_F11_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3");
static_assert(sizeof(CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3");
static_assert(offsetof(CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.InpActEvt_F11_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4");
static_assert(sizeof(CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4");
static_assert(offsetof(CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'CharaBase_BP_C_InpActEvt_F11_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.InpActEvt_G_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0");
static_assert(sizeof(CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0");
static_assert(offsetof(CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'CharaBase_BP_C_InpActEvt_G_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function CharaBase_BP.CharaBase_BP_C.ResetForRespawn
// 0x0007 (0x0007 - 0x0000)
struct CharaBase_BP_C_ResetForRespawn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDediServer_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetForRespawn_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBase_BP_C_ResetForRespawn) == 0x000001, "Wrong alignment on CharaBase_BP_C_ResetForRespawn");
static_assert(sizeof(CharaBase_BP_C_ResetForRespawn) == 0x000007, "Wrong size on CharaBase_BP_C_ResetForRespawn");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, ReturnValue) == 0x000000, "Member 'CharaBase_BP_C_ResetForRespawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, CallFunc_IsDediServer_ReturnValue) == 0x000001, "Member 'CharaBase_BP_C_ResetForRespawn::CallFunc_IsDediServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'CharaBase_BP_C_ResetForRespawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'CharaBase_BP_C_ResetForRespawn::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, CallFunc_IsPlayerControlled_ReturnValue) == 0x000004, "Member 'CharaBase_BP_C_ResetForRespawn::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, CallFunc_ResetForRespawn_ReturnValue) == 0x000005, "Member 'CharaBase_BP_C_ResetForRespawn::CallFunc_ResetForRespawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBase_BP_C_ResetForRespawn, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'CharaBase_BP_C_ResetForRespawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

