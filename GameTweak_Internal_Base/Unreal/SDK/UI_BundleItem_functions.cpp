#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_BundleItem

#include "Basic.hpp"

#include "UI_BundleItem_classes.hpp"
#include "UI_BundleItem_parameters.hpp"


namespace SDK
{

// Function UI_BundleItem.UI_BundleItem_C.DoNotHover
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_BundleItem_C::DoNotHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "DoNotHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_BundleItem.UI_BundleItem_C.ExecuteUbergraph_UI_BundleItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_BundleItem_C::ExecuteUbergraph_UI_BundleItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "ExecuteUbergraph_UI_BundleItem");

	Params::UI_BundleItem_C_ExecuteUbergraph_UI_BundleItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BundleItem.UI_BundleItem_C.Get_IMG_RedDot_Visibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UUI_BundleItem_C::Get_IMG_RedDot_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "Get_IMG_RedDot_Visibility");

	Params::UI_BundleItem_C_Get_IMG_RedDot_Visibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_BundleItem.UI_BundleItem_C.GetTooltipWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UUI_BundleItem_C::GetTooltipWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "GetTooltipWidget");

	Params::UI_BundleItem_C_GetTooltipWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_BundleItem.UI_BundleItem_C.InitWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BonusItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInvenItem*                       InvenItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UUI_BundleItem_C::InitWidget(bool BonusItem, class UInvenItem*& InvenItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "InitWidget");

	Params::UI_BundleItem_C_InitWidget Parms{};

	Parms.BonusItem = BonusItem;
	Parms.InvenItem = InvenItem;

	UObject::ProcessEvent(Func, &Parms);

	InvenItem = Parms.InvenItem;
}


// Function UI_BundleItem.UI_BundleItem_C.OnClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI_BundleItem_C*                 bundle_item                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUI_BundleItem_C::OnClicked__DelegateSignature(class UUI_BundleItem_C* bundle_item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "OnClicked__DelegateSignature");

	Params::UI_BundleItem_C_OnClicked__DelegateSignature Parms{};

	Parms.bundle_item = bundle_item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_BundleItem.UI_BundleItem_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_BundleItem_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "OnMouseButtonDown");

	Params::UI_BundleItem_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_BundleItem.UI_BundleItem_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_BundleItem_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "OnMouseButtonUp");

	Params::UI_BundleItem_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_BundleItem.UI_BundleItem_C.OnUpdateItems
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_BundleItem_C::OnUpdateItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "OnUpdateItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_BundleItem.UI_BundleItem_C.SetTags
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<EItemUITag>                      _tags                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_BundleItem_C::SetTags(const TArray<EItemUITag>& _tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_BundleItem_C", "SetTags");

	Params::UI_BundleItem_C_SetTags Parms{};

	Parms._tags = std::move(_tags);

	UObject::ProcessEvent(Func, &Parms);
}

}

