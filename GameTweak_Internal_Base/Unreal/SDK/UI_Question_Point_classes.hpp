#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Question_Point

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Question_Point.UI_Question_Point_C
// 0x00A8 (0x0618 - 0x0570)
class UUI_Question_Point_C final : public UCtrl_QuestionBase
{
public:
	class UHorizontalBox*                         Points;                                            // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Max;                                           // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Min;                                           // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSurveyQuestion                        Question;                                          // 0x0588(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UCtrl_SurveyPoint_C*>            Ctrls;                                             // 0x0600(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         SelectedPoint;                                     // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetQuestion(struct FSurveyQuestion& _question);
	void OnPointClicked(int32 _point);
	struct FSurveyAnswer OnGetAnswer();
	void ExclusiveSelectPoint(int32 _point);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Question_Point_C">();
	}
	static class UUI_Question_Point_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Question_Point_C>();
	}
};
static_assert(alignof(UUI_Question_Point_C) == 0x000008, "Wrong alignment on UUI_Question_Point_C");
static_assert(sizeof(UUI_Question_Point_C) == 0x000618, "Wrong size on UUI_Question_Point_C");
static_assert(offsetof(UUI_Question_Point_C, Points) == 0x000570, "Member 'UUI_Question_Point_C::Points' has a wrong offset!");
static_assert(offsetof(UUI_Question_Point_C, Txt_Max) == 0x000578, "Member 'UUI_Question_Point_C::Txt_Max' has a wrong offset!");
static_assert(offsetof(UUI_Question_Point_C, TXT_Min) == 0x000580, "Member 'UUI_Question_Point_C::TXT_Min' has a wrong offset!");
static_assert(offsetof(UUI_Question_Point_C, Question) == 0x000588, "Member 'UUI_Question_Point_C::Question' has a wrong offset!");
static_assert(offsetof(UUI_Question_Point_C, Ctrls) == 0x000600, "Member 'UUI_Question_Point_C::Ctrls' has a wrong offset!");
static_assert(offsetof(UUI_Question_Point_C, SelectedPoint) == 0x000610, "Member 'UUI_Question_Point_C::SelectedPoint' has a wrong offset!");

}

