#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Challenge_MissionPopup

#include "Basic.hpp"

#include "Challenge_MissionPopup_classes.hpp"
#include "Challenge_MissionPopup_parameters.hpp"


namespace SDK
{

// Function Challenge_MissionPopup.Challenge_MissionPopup_C.CheckCanClose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_MissionPopup_C::CheckCanClose(bool Force)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "CheckCanClose");

	Params::Challenge_MissionPopup_C_CheckCanClose Parms{};

	Parms.Force = Force;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.ClosePopup
// (BlueprintCallable, BlueprintEvent)

void UChallenge_MissionPopup_C::ClosePopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "ClosePopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallenge_MissionPopup_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.DelayClose
// (BlueprintCallable, BlueprintEvent)

void UChallenge_MissionPopup_C::DelayClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "DelayClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallenge_MissionPopup_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.ExecuteUbergraph_Challenge_MissionPopup
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallenge_MissionPopup_C::ExecuteUbergraph_Challenge_MissionPopup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "ExecuteUbergraph_Challenge_MissionPopup");

	Params::Challenge_MissionPopup_C_ExecuteUbergraph_Challenge_MissionPopup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.InitializeMissions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UChallenge_MissionPopup_C::InitializeMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "InitializeMissions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.InitWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UChallenge_MissionPopup_C::InitWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "InitWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UChallenge_MissionPopup_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "OnKeyDown");

	Params::Challenge_MissionPopup_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Challenge_MissionPopup.Challenge_MissionPopup_C.SetTitle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UChallenge_MissionPopup_C::SetTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Challenge_MissionPopup_C", "SetTitle");

	UObject::ProcessEvent(Func, nullptr);
}

}

