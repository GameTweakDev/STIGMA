#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_MasterLevelRewardSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_MasterLevelRewardSlot.Ctrl_MasterLevelRewardSlot_C.ExecuteUbergraph_Ctrl_MasterLevelRewardSlot
// 0x00B8 (0x00B8 - 0x0000)
struct Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__checked;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Event__soft_texture;                        // 0x0008(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	int32                                         K2Node_Event__level;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
};
static_assert(alignof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot) == 0x000008, "Wrong alignment on Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot");
static_assert(sizeof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot) == 0x0000B8, "Wrong size on Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, EntryPoint) == 0x000000, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, K2Node_Event__checked) == 0x000004, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::K2Node_Event__checked' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, K2Node_Event__soft_texture) == 0x000008, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::K2Node_Event__soft_texture' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, K2Node_Event__level) == 0x000030, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::K2Node_Event__level' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, K2Node_MakeArray_Array) == 0x000090, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'Ctrl_MasterLevelRewardSlot_C_ExecuteUbergraph_Ctrl_MasterLevelRewardSlot::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_MasterLevelRewardSlot.Ctrl_MasterLevelRewardSlot_C.SetCheckPoint
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_MasterLevelRewardSlot_C_SetCheckPoint final
{
public:
	bool                                          _checked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_MasterLevelRewardSlot_C_SetCheckPoint) == 0x000001, "Wrong alignment on Ctrl_MasterLevelRewardSlot_C_SetCheckPoint");
static_assert(sizeof(Ctrl_MasterLevelRewardSlot_C_SetCheckPoint) == 0x000001, "Wrong size on Ctrl_MasterLevelRewardSlot_C_SetCheckPoint");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_SetCheckPoint, _checked) == 0x000000, "Member 'Ctrl_MasterLevelRewardSlot_C_SetCheckPoint::_checked' has a wrong offset!");

// Function Ctrl_MasterLevelRewardSlot.Ctrl_MasterLevelRewardSlot_C.SetLevel
// 0x0004 (0x0004 - 0x0000)
struct Ctrl_MasterLevelRewardSlot_C_SetLevel final
{
public:
	int32                                         _level;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_MasterLevelRewardSlot_C_SetLevel) == 0x000004, "Wrong alignment on Ctrl_MasterLevelRewardSlot_C_SetLevel");
static_assert(sizeof(Ctrl_MasterLevelRewardSlot_C_SetLevel) == 0x000004, "Wrong size on Ctrl_MasterLevelRewardSlot_C_SetLevel");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_SetLevel, _level) == 0x000000, "Member 'Ctrl_MasterLevelRewardSlot_C_SetLevel::_level' has a wrong offset!");

// Function Ctrl_MasterLevelRewardSlot.Ctrl_MasterLevelRewardSlot_C.SetMasterImage
// 0x0028 (0x0028 - 0x0000)
struct Ctrl_MasterLevelRewardSlot_C_SetMasterImage final
{
public:
	TSoftObjectPtr<class UTexture2D>              _soft_texture;                                     // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_MasterLevelRewardSlot_C_SetMasterImage) == 0x000008, "Wrong alignment on Ctrl_MasterLevelRewardSlot_C_SetMasterImage");
static_assert(sizeof(Ctrl_MasterLevelRewardSlot_C_SetMasterImage) == 0x000028, "Wrong size on Ctrl_MasterLevelRewardSlot_C_SetMasterImage");
static_assert(offsetof(Ctrl_MasterLevelRewardSlot_C_SetMasterImage, _soft_texture) == 0x000000, "Member 'Ctrl_MasterLevelRewardSlot_C_SetMasterImage::_soft_texture' has a wrong offset!");

}

