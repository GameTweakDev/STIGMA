#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: ANS_ActivateSmears_BPG

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ANS_ActivateSmears_BPG.ANS_ActivateSmears_BPG_C
// 0x0068 (0x0098 - 0x0030)
class UANS_ActivateSmears_BPG_C final : public UAnimNotifyState
{
public:
	TArray<class FName>                           TrackedBones;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           Negating_Bones;                                    // 0x0040(0x0010)(Edit, BlueprintVisible)
	double                                        MaxDistanceFromBone;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Density;                                           // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Midpoint;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PullAngle;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpikeVariation;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Catchup_Speed;                                     // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_Out_duration;                                 // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bone_to_Smear_Max_Angle;                           // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle_Catchup_Speed;                               // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ANS_ActivateSmears_BPG_C">();
	}
	static class UANS_ActivateSmears_BPG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UANS_ActivateSmears_BPG_C>();
	}
};
static_assert(alignof(UANS_ActivateSmears_BPG_C) == 0x000008, "Wrong alignment on UANS_ActivateSmears_BPG_C");
static_assert(sizeof(UANS_ActivateSmears_BPG_C) == 0x000098, "Wrong size on UANS_ActivateSmears_BPG_C");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, TrackedBones) == 0x000030, "Member 'UANS_ActivateSmears_BPG_C::TrackedBones' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Negating_Bones) == 0x000040, "Member 'UANS_ActivateSmears_BPG_C::Negating_Bones' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, MaxDistanceFromBone) == 0x000050, "Member 'UANS_ActivateSmears_BPG_C::MaxDistanceFromBone' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Density) == 0x000058, "Member 'UANS_ActivateSmears_BPG_C::Density' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Midpoint) == 0x000060, "Member 'UANS_ActivateSmears_BPG_C::Midpoint' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, PullAngle) == 0x000068, "Member 'UANS_ActivateSmears_BPG_C::PullAngle' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, SpikeVariation) == 0x000070, "Member 'UANS_ActivateSmears_BPG_C::SpikeVariation' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Catchup_Speed) == 0x000078, "Member 'UANS_ActivateSmears_BPG_C::Catchup_Speed' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Fade_Out_duration) == 0x000080, "Member 'UANS_ActivateSmears_BPG_C::Fade_Out_duration' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Bone_to_Smear_Max_Angle) == 0x000088, "Member 'UANS_ActivateSmears_BPG_C::Bone_to_Smear_Max_Angle' has a wrong offset!");
static_assert(offsetof(UANS_ActivateSmears_BPG_C, Angle_Catchup_Speed) == 0x000090, "Member 'UANS_ActivateSmears_BPG_C::Angle_Catchup_Speed' has a wrong offset!");

}

