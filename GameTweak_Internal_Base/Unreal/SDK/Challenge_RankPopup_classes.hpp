#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Challenge_RankPopup

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Challenge_RankPopup.Challenge_RankPopup_C
// 0x0098 (0x0608 - 0x0570)
class UChallenge_RankPopup_C final : public UPopupBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_KeyIcon_C*                        Ctrl_KeyIcon;                                      // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_254;                                         // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Background;                                    // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_LeftLine;                                      // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_RightLine;                                     // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_TopBackground;                                 // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RankingListView_C*                  LV_Rankers;                                        // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RankingListView_C*                  LV_Top3;                                           // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        UI_RankerSlot_Mine_SizeY;                          // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClosing;                                         // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanClose;                                          // 0x05C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3881[0x6];                                     // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FBattleResult_Challenge                CurrentBattleResult;                               // 0x05C8(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Add_Rankers(TArray<struct FACK_ChallengeRead>& Rankers, bool _is_top3);
	void CheckCanClose();
	void Construct();
	void DelayClose();
	void Destruct();
	void ExecuteUbergraph_Challenge_RankPopup(int32 EntryPoint);
	void UpdateRanks(TArray<struct FACK_ChallengeRead>& Top3, TArray<struct FACK_ChallengeRead>& Rankers);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Challenge_RankPopup_C">();
	}
	static class UChallenge_RankPopup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallenge_RankPopup_C>();
	}
};
static_assert(alignof(UChallenge_RankPopup_C) == 0x000008, "Wrong alignment on UChallenge_RankPopup_C");
static_assert(sizeof(UChallenge_RankPopup_C) == 0x000608, "Wrong size on UChallenge_RankPopup_C");
static_assert(offsetof(UChallenge_RankPopup_C, UberGraphFrame) == 0x000570, "Member 'UChallenge_RankPopup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, Ctrl_KeyIcon) == 0x000578, "Member 'UChallenge_RankPopup_C::Ctrl_KeyIcon' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, Image_254) == 0x000580, "Member 'UChallenge_RankPopup_C::Image_254' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, IMG_Background) == 0x000588, "Member 'UChallenge_RankPopup_C::IMG_Background' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, IMG_LeftLine) == 0x000590, "Member 'UChallenge_RankPopup_C::IMG_LeftLine' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, IMG_RightLine) == 0x000598, "Member 'UChallenge_RankPopup_C::IMG_RightLine' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, IMG_TopBackground) == 0x0005A0, "Member 'UChallenge_RankPopup_C::IMG_TopBackground' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, LV_Rankers) == 0x0005A8, "Member 'UChallenge_RankPopup_C::LV_Rankers' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, LV_Top3) == 0x0005B0, "Member 'UChallenge_RankPopup_C::LV_Top3' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, UI_RankerSlot_Mine_SizeY) == 0x0005B8, "Member 'UChallenge_RankPopup_C::UI_RankerSlot_Mine_SizeY' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, IsClosing) == 0x0005C0, "Member 'UChallenge_RankPopup_C::IsClosing' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, CanClose) == 0x0005C1, "Member 'UChallenge_RankPopup_C::CanClose' has a wrong offset!");
static_assert(offsetof(UChallenge_RankPopup_C, CurrentBattleResult) == 0x0005C8, "Member 'UChallenge_RankPopup_C::CurrentBattleResult' has a wrong offset!");

}

