#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Panel_Characters

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Panel_Characters.Panel_Characters_C.BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong alignment on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong size on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Disruptor_K2Node_ComponentBoundEvent_2_OnCharacterSelected__DelegateSignature::_chara_type' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong alignment on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong size on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Infiltrator_K2Node_ComponentBoundEvent_3_OnCharacterSelected__DelegateSignature::_chara_type' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong alignment on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong size on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Marksman_K2Node_ComponentBoundEvent_4_OnCharacterSelected__DelegateSignature::_chara_type' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong alignment on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong size on Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_Characters_C_BndEvt__Panel_Characters_GROUP_Striker_K2Node_ComponentBoundEvent_5_OnCharacterSelected__DelegateSignature::_chara_type' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.ClearSelections
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_ClearSelections final
{
public:
	bool                                          _selected_panel;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_ClearSelections) == 0x000001, "Wrong alignment on Panel_Characters_C_ClearSelections");
static_assert(sizeof(Panel_Characters_C_ClearSelections) == 0x000001, "Wrong size on Panel_Characters_C_ClearSelections");
static_assert(offsetof(Panel_Characters_C_ClearSelections, _selected_panel) == 0x000000, "Member 'Panel_Characters_C_ClearSelections::_selected_panel' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.EnableUpcomingCharacters
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_EnableUpcomingCharacters final
{
public:
	bool                                          _enable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_EnableUpcomingCharacters) == 0x000001, "Wrong alignment on Panel_Characters_C_EnableUpcomingCharacters");
static_assert(sizeof(Panel_Characters_C_EnableUpcomingCharacters) == 0x000001, "Wrong size on Panel_Characters_C_EnableUpcomingCharacters");
static_assert(offsetof(Panel_Characters_C_EnableUpcomingCharacters, _enable) == 0x000000, "Member 'Panel_Characters_C_EnableUpcomingCharacters::_enable' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.ExecuteUbergraph_Panel_Characters
// 0x0014 (0x0014 - 0x0000)
struct Panel_Characters_C_ExecuteUbergraph_Panel_Characters final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    K2Node_ComponentBoundEvent__chara_type_3;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    K2Node_ComponentBoundEvent__chara_type_2;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    K2Node_ComponentBoundEvent__chara_type_1;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    K2Node_ComponentBoundEvent__chara_type;            // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     CallFunc_GetCurrentGameModeType__out_game_mode_type; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentGameModeType_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters) == 0x000004, "Wrong alignment on Panel_Characters_C_ExecuteUbergraph_Panel_Characters");
static_assert(sizeof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters) == 0x000014, "Wrong size on Panel_Characters_C_ExecuteUbergraph_Panel_Characters");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, EntryPoint) == 0x000000, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::EntryPoint' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, Temp_name_Variable) == 0x000004, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, K2Node_ComponentBoundEvent__chara_type_3) == 0x00000C, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::K2Node_ComponentBoundEvent__chara_type_3' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, K2Node_ComponentBoundEvent__chara_type_2) == 0x00000D, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::K2Node_ComponentBoundEvent__chara_type_2' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, K2Node_ComponentBoundEvent__chara_type_1) == 0x00000E, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::K2Node_ComponentBoundEvent__chara_type_1' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, K2Node_ComponentBoundEvent__chara_type) == 0x00000F, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::K2Node_ComponentBoundEvent__chara_type' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, CallFunc_GetCurrentGameModeType__out_game_mode_type) == 0x000010, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::CallFunc_GetCurrentGameModeType__out_game_mode_type' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, CallFunc_GetCurrentGameModeType_ReturnValue) == 0x000011, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::CallFunc_GetCurrentGameModeType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_ExecuteUbergraph_Panel_Characters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Panel_Characters_C_ExecuteUbergraph_Panel_Characters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.OnCharacterSelected__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_OnCharacterSelected__DelegateSignature final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong alignment on Panel_Characters_C_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(Panel_Characters_C_OnCharacterSelected__DelegateSignature) == 0x000001, "Wrong size on Panel_Characters_C_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(Panel_Characters_C_OnCharacterSelected__DelegateSignature, _chara_type) == 0x000000, "Member 'Panel_Characters_C_OnCharacterSelected__DelegateSignature::_chara_type' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.OnCharaPicked
// 0x0A20 (0x0A20 - 0x0000)
struct Panel_Characters_C_OnCharaPicked final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFightingStyle                                Fight_style;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8C[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0038(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_OnCharaPicked) == 0x000008, "Wrong alignment on Panel_Characters_C_OnCharaPicked");
static_assert(sizeof(Panel_Characters_C_OnCharaPicked) == 0x000A20, "Wrong size on Panel_Characters_C_OnCharaPicked");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, _chara_type) == 0x000000, "Member 'Panel_Characters_C_OnCharaPicked::_chara_type' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, Fight_style) == 0x000001, "Member 'Panel_Characters_C_OnCharaPicked::Fight_style' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, Temp_name_Variable) == 0x000004, "Member 'Panel_Characters_C_OnCharaPicked::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'Panel_Characters_C_OnCharaPicked::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'Panel_Characters_C_OnCharaPicked::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, CallFunc_GetCharacterDefByType__out_data) == 0x000038, "Member 'Panel_Characters_C_OnCharaPicked::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_OnCharaPicked, CallFunc_GetCharacterDefByType_ReturnValue) == 0x000A18, "Member 'Panel_Characters_C_OnCharaPicked::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.PlaySelectedVoice
// 0x0048 (0x0048 - 0x0000)
struct Panel_Characters_C_PlaySelectedVoice final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                Local_pc;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D90[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D91[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UVoiceSubsystem*                        CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_PlaySelectedVoice) == 0x000008, "Wrong alignment on Panel_Characters_C_PlaySelectedVoice");
static_assert(sizeof(Panel_Characters_C_PlaySelectedVoice) == 0x000048, "Wrong size on Panel_Characters_C_PlaySelectedVoice");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, _chara_type) == 0x000000, "Member 'Panel_Characters_C_PlaySelectedVoice::_chara_type' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, Local_pc) == 0x000008, "Member 'Panel_Characters_C_PlaySelectedVoice::Local_pc' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000018, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000020, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000028, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000038, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Panel_Characters_C_PlaySelectedVoice, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'Panel_Characters_C_PlaySelectedVoice::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Panel_Characters.Panel_Characters_C.SelectCurrentCharacterType
// 0x0001 (0x0001 - 0x0000)
struct Panel_Characters_C_SelectCurrentCharacterType final
{
public:
	ECharaType                                    _chara_type;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Panel_Characters_C_SelectCurrentCharacterType) == 0x000001, "Wrong alignment on Panel_Characters_C_SelectCurrentCharacterType");
static_assert(sizeof(Panel_Characters_C_SelectCurrentCharacterType) == 0x000001, "Wrong size on Panel_Characters_C_SelectCurrentCharacterType");
static_assert(offsetof(Panel_Characters_C_SelectCurrentCharacterType, _chara_type) == 0x000000, "Member 'Panel_Characters_C_SelectCurrentCharacterType::_chara_type' has a wrong offset!");

}

