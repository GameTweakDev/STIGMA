#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_Competition

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Popup_Competition.Popup_Competition_C.UpdateMyHistory
// 0x001C (0x001C - 0x0000)
struct Popup_Competition_C_UpdateMyHistory final
{
public:
	int32                                         CallFunc_GetRewardCount_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetWin1Count_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCompetCount_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTopRank_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWin2Count_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_UpdateMyHistory) == 0x000004, "Wrong alignment on Popup_Competition_C_UpdateMyHistory");
static_assert(sizeof(Popup_Competition_C_UpdateMyHistory) == 0x00001C, "Wrong size on Popup_Competition_C_UpdateMyHistory");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_GetRewardCount_ReturnValue) == 0x000000, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_GetRewardCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_GetWin1Count_ReturnValue) == 0x000008, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_GetWin1Count_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_GetCompetCount_ReturnValue) == 0x00000C, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_GetCompetCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_GetTopRank_ReturnValue) == 0x000010, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_GetTopRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_GetWin2Count_ReturnValue) == 0x000014, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_GetWin2Count_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateMyHistory, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'Popup_Competition_C_UpdateMyHistory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.UpdateFastStartDia
// 0x0038 (0x0038 - 0x0000)
struct Popup_Competition_C_UpdateFastStartDia final
{
public:
	struct FCurrencyPlain                         CallFunc_CalcCurrency_OnFastStart_currency;        // 0x0000(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(Popup_Competition_C_UpdateFastStartDia) == 0x000008, "Wrong alignment on Popup_Competition_C_UpdateFastStartDia");
static_assert(sizeof(Popup_Competition_C_UpdateFastStartDia) == 0x000038, "Wrong size on Popup_Competition_C_UpdateFastStartDia");
static_assert(offsetof(Popup_Competition_C_UpdateFastStartDia, CallFunc_CalcCurrency_OnFastStart_currency) == 0x000000, "Member 'Popup_Competition_C_UpdateFastStartDia::CallFunc_CalcCurrency_OnFastStart_currency' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateFastStartDia, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Popup_Competition_C_UpdateFastStartDia::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateFastStartDia, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'Popup_Competition_C_UpdateFastStartDia::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.UpdateCompetitionInfo
// 0x0290 (0x0290 - 0x0000)
struct Popup_Competition_C_UpdateCompetitionInfo final
{
public:
	struct FConfig_GroupCompetition               CallFunc_GetCompetitionGroupDefine_ReturnValue;    // 0x0000(0x0040)(ConstParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0128(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0150(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0240(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0250(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0260(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0278(0x0018)()
};
static_assert(alignof(Popup_Competition_C_UpdateCompetitionInfo) == 0x000008, "Wrong alignment on Popup_Competition_C_UpdateCompetitionInfo");
static_assert(sizeof(Popup_Competition_C_UpdateCompetitionInfo) == 0x000290, "Wrong size on Popup_Competition_C_UpdateCompetitionInfo");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_GetCompetitionGroupDefine_ReturnValue) == 0x000000, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_GetCompetitionGroupDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000048, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeArray_Array) == 0x0000F0, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeArray_Array_1) == 0x000100, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Format_ReturnValue) == 0x000110, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Format_ReturnValue_1) == 0x000128, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000140, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000148, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000150, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001F0, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeArray_Array_2) == 0x000240, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, K2Node_MakeArray_Array_3) == 0x000250, "Member 'Popup_Competition_C_UpdateCompetitionInfo::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Format_ReturnValue_2) == 0x000260, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_UpdateCompetitionInfo, CallFunc_Format_ReturnValue_3) == 0x000278, "Member 'Popup_Competition_C_UpdateCompetitionInfo::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.Update
// 0x0028 (0x0028 - 0x0000)
struct Popup_Competition_C_Update final
{
public:
	ECompetitionState                             _cur_state;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UCompetitionInfoManager*                CallFunc_GetCompetitionInfoManager_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_GetEndAt_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompetitionState                             CallFunc_GetPlayerState_ReturnValue;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_Update) == 0x000008, "Wrong alignment on Popup_Competition_C_Update");
static_assert(sizeof(Popup_Competition_C_Update) == 0x000028, "Wrong size on Popup_Competition_C_Update");
static_assert(offsetof(Popup_Competition_C_Update, _cur_state) == 0x000000, "Member 'Popup_Competition_C_Update::_cur_state' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_GetCompetitionInfoManager_ReturnValue) == 0x000008, "Member 'Popup_Competition_C_Update::CallFunc_GetCompetitionInfoManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Popup_Competition_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'Popup_Competition_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_GetEndAt_ReturnValue) == 0x000018, "Member 'Popup_Competition_C_Update::CallFunc_GetEndAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_IsEnable_ReturnValue) == 0x000020, "Member 'Popup_Competition_C_Update::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'Popup_Competition_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_IsValid_ReturnValue_2) == 0x000022, "Member 'Popup_Competition_C_Update::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_Update, CallFunc_GetPlayerState_ReturnValue) == 0x000023, "Member 'Popup_Competition_C_Update::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.ShowRanking_Rank
// 0x0004 (0x0004 - 0x0000)
struct Popup_Competition_C_ShowRanking_Rank final
{
public:
	ECompetitionType                              _competition_type;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompetitionState                             CallFunc_GetPlayerState_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_ShowRanking_Rank) == 0x000001, "Wrong alignment on Popup_Competition_C_ShowRanking_Rank");
static_assert(sizeof(Popup_Competition_C_ShowRanking_Rank) == 0x000004, "Wrong size on Popup_Competition_C_ShowRanking_Rank");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Rank, _competition_type) == 0x000000, "Member 'Popup_Competition_C_ShowRanking_Rank::_competition_type' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Rank, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Popup_Competition_C_ShowRanking_Rank::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Rank, CallFunc_GetPlayerState_ReturnValue) == 0x000002, "Member 'Popup_Competition_C_ShowRanking_Rank::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Rank, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'Popup_Competition_C_ShowRanking_Rank::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.ShowRanking_Info
// 0x0160 (0x0160 - 0x0000)
struct Popup_Competition_C_ShowRanking_Info final
{
public:
	ECompetitionType                              _competition_type;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4150[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         My_rank;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCtrl_Competition_RewardInfo_Row_C*     CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FConfig_GroupCompetitionRewards        CallFunc_GetCompetitionRewardDefine_ReturnValue;   // 0x0010(0x0020)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4151[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4152[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGroupCompetitionReward                CallFunc_Array_Get_Item;                           // 0x0048(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4153[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_GetBreakEndAt_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4154[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetRank_ReturnValue;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompetitionState                             CallFunc_GetPlayerState_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4155[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_GroupCompetition               CallFunc_GetCompetitionGroupDefine_ReturnValue;    // 0x0098(0x0040)(ConstParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_ShowRanking_Info) == 0x000008, "Wrong alignment on Popup_Competition_C_ShowRanking_Info");
static_assert(sizeof(Popup_Competition_C_ShowRanking_Info) == 0x000160, "Wrong size on Popup_Competition_C_ShowRanking_Info");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, _competition_type) == 0x000000, "Member 'Popup_Competition_C_ShowRanking_Info::_competition_type' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, My_rank) == 0x000004, "Member 'Popup_Competition_C_ShowRanking_Info::My_rank' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Create_ReturnValue) == 0x000008, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_GetCompetitionRewardDefine_ReturnValue) == 0x000010, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_GetCompetitionRewardDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'Popup_Competition_C_ShowRanking_Info::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Popup_Competition_C_ShowRanking_Info::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Array_Get_Item) == 0x000048, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'Popup_Competition_C_ShowRanking_Info::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_GetBreakEndAt_ReturnValue) == 0x000080, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_GetBreakEndAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_GetRank_ReturnValue) == 0x00008C, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_GetRank_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_GetPlayerState_ReturnValue) == 0x000091, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, K2Node_SwitchEnum_CmpSuccess) == 0x000092, "Member 'Popup_Competition_C_ShowRanking_Info::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_GetCompetitionGroupDefine_ReturnValue) == 0x000098, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_GetCompetitionGroupDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000D8, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'Popup_Competition_C_ShowRanking_Info::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, K2Node_MakeArray_Array) == 0x000130, "Member 'Popup_Competition_C_ShowRanking_Info::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_Format_ReturnValue) == 0x000140, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowRanking_Info, CallFunc_AddChild_ReturnValue) == 0x000158, "Member 'Popup_Competition_C_ShowRanking_Info::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.ShowGuide
// 0x00D8 (0x00D8 - 0x0000)
struct Popup_Competition_C_ShowGuide final
{
public:
	struct FConfig_GroupCompetition               CallFunc_GetCompetitionGroupDefine_ReturnValue;    // 0x0000(0x0040)(ConstParm)
	class UCompetitionInfoManager*                CallFunc_GetCompetitionInfoManager_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4156[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4157[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
};
static_assert(alignof(Popup_Competition_C_ShowGuide) == 0x000008, "Wrong alignment on Popup_Competition_C_ShowGuide");
static_assert(sizeof(Popup_Competition_C_ShowGuide) == 0x0000D8, "Wrong size on Popup_Competition_C_ShowGuide");
static_assert(offsetof(Popup_Competition_C_ShowGuide, CallFunc_GetCompetitionGroupDefine_ReturnValue) == 0x000000, "Member 'Popup_Competition_C_ShowGuide::CallFunc_GetCompetitionGroupDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, CallFunc_GetCompetitionInfoManager_ReturnValue) == 0x000040, "Member 'Popup_Competition_C_ShowGuide::CallFunc_GetCompetitionInfoManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'Popup_Competition_C_ShowGuide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000050, "Member 'Popup_Competition_C_ShowGuide::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'Popup_Competition_C_ShowGuide::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, CallFunc_IsEnable_ReturnValue) == 0x0000A8, "Member 'Popup_Competition_C_ShowGuide::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, K2Node_MakeArray_Array) == 0x0000B0, "Member 'Popup_Competition_C_ShowGuide::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ShowGuide, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'Popup_Competition_C_ShowGuide::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.SetVisibilityStatus
// 0x0038 (0x0038 - 0x0000)
struct Popup_Competition_C_SetVisibilityStatus final
{
public:
	int32                                         _cnt;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4158[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UOverlay*                               _visible_widget;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             _text_widget;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _force_visible;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4159[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(Popup_Competition_C_SetVisibilityStatus) == 0x000008, "Wrong alignment on Popup_Competition_C_SetVisibilityStatus");
static_assert(sizeof(Popup_Competition_C_SetVisibilityStatus) == 0x000038, "Wrong size on Popup_Competition_C_SetVisibilityStatus");
static_assert(offsetof(Popup_Competition_C_SetVisibilityStatus, _cnt) == 0x000000, "Member 'Popup_Competition_C_SetVisibilityStatus::_cnt' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_SetVisibilityStatus, _visible_widget) == 0x000008, "Member 'Popup_Competition_C_SetVisibilityStatus::_visible_widget' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_SetVisibilityStatus, _text_widget) == 0x000010, "Member 'Popup_Competition_C_SetVisibilityStatus::_text_widget' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_SetVisibilityStatus, _force_visible) == 0x000018, "Member 'Popup_Competition_C_SetVisibilityStatus::_force_visible' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_SetVisibilityStatus, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Popup_Competition_C_SetVisibilityStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_SetVisibilityStatus, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'Popup_Competition_C_SetVisibilityStatus::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.ExecuteUbergraph_Popup_Competition
// 0x0030 (0x0030 - 0x0000)
struct Popup_Competition_C_ExecuteUbergraph_Popup_Competition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent__id;                    // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCurrencyPlain                         CallFunc_CalcCurrency_OnFastStart_currency;        // 0x0010(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompetitionState                             CallFunc_GetPlayerState_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition) == 0x000008, "Wrong alignment on Popup_Competition_C_ExecuteUbergraph_Popup_Competition");
static_assert(sizeof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition) == 0x000030, "Wrong size on Popup_Competition_C_ExecuteUbergraph_Popup_Competition");
static_assert(offsetof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition, EntryPoint) == 0x000000, "Member 'Popup_Competition_C_ExecuteUbergraph_Popup_Competition::EntryPoint' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition, K2Node_ComponentBoundEvent__id) == 0x000004, "Member 'Popup_Competition_C_ExecuteUbergraph_Popup_Competition::K2Node_ComponentBoundEvent__id' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition, CallFunc_CalcCurrency_OnFastStart_currency) == 0x000010, "Member 'Popup_Competition_C_ExecuteUbergraph_Popup_Competition::CallFunc_CalcCurrency_OnFastStart_currency' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Popup_Competition_C_ExecuteUbergraph_Popup_Competition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition, CallFunc_GetPlayerState_ReturnValue) == 0x000029, "Member 'Popup_Competition_C_ExecuteUbergraph_Popup_Competition::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_ExecuteUbergraph_Popup_Competition, K2Node_SwitchEnum_CmpSuccess) == 0x00002A, "Member 'Popup_Competition_C_ExecuteUbergraph_Popup_Competition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.CalcCurrency_OnFastStart
// 0x0250 (0x0250 - 0x0000)
struct Popup_Competition_C_CalcCurrency_OnFastStart final
{
public:
	struct FCurrencyPlain                         Currency;                                          // 0x0000(0x0018)(Parm, OutParm)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415B[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDateTime                              CallFunc_GetBreakEndAt_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415C[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_GroupCompetition               CallFunc_GetCompetitionGroupDefine_ReturnValue;    // 0x0040(0x0040)(ConstParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_FCeil64_ReturnValue;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCurrencyDef                           CallFunc_GetCurrencyDefine__out_def;               // 0x0098(0x0168)()
	bool                                          CallFunc_GetCurrencyDefine_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415D[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Multiply_Int64Int64_ReturnValue;          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID_Currency                       CallFunc_ToCurrencyID_ReturnValue;                 // 0x0218(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415E[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCurrencyPlain                         K2Node_MakeStruct_CurrencyPlain;                   // 0x0230(0x0018)()
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_CalcCurrency_OnFastStart) == 0x000008, "Wrong alignment on Popup_Competition_C_CalcCurrency_OnFastStart");
static_assert(sizeof(Popup_Competition_C_CalcCurrency_OnFastStart) == 0x000250, "Wrong size on Popup_Competition_C_CalcCurrency_OnFastStart");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, Currency) == 0x000000, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::Currency' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_UtcNow_ReturnValue) == 0x000018, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_GetBreakEndAt_ReturnValue) == 0x000028, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_GetBreakEndAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000030, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_GetTotalSeconds_ReturnValue) == 0x000038, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_GetCompetitionGroupDefine_ReturnValue) == 0x000040, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_GetCompetitionGroupDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_FCeil64_ReturnValue) == 0x000088, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_FCeil64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_GetCurrencyDefine__out_def) == 0x000098, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_GetCurrencyDefine__out_def' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_GetCurrencyDefine_ReturnValue) == 0x000200, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_GetCurrencyDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_Multiply_Int64Int64_ReturnValue) == 0x000208, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_Multiply_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000210, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_ToCurrencyID_ReturnValue) == 0x000218, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_ToCurrencyID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_FTrunc_ReturnValue) == 0x000228, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, K2Node_MakeStruct_CurrencyPlain) == 0x000230, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::K2Node_MakeStruct_CurrencyPlain' has a wrong offset!");
static_assert(offsetof(Popup_Competition_C_CalcCurrency_OnFastStart, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000248, "Member 'Popup_Competition_C_CalcCurrency_OnFastStart::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Popup_Competition.Popup_Competition_C.BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature final
{
public:
	class FName                                   _id;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature) == 0x000004, "Wrong alignment on Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature");
static_assert(sizeof(Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature) == 0x000008, "Wrong size on Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature");
static_assert(offsetof(Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature, _id) == 0x000000, "Member 'Popup_Competition_C_BndEvt__Popup_Competition_Tab_Hour_K2Node_ComponentBoundEvent_1_OnSelected__DelegateSignature::_id' has a wrong offset!");

}

