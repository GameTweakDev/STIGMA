#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Ping

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_Ping.Ctrl_Ping_C
// 0x02F0 (0x07E0 - 0x04F0)
class UCtrl_Ping_C final : public UPreviewableWidget
{
public:
	class UWidgetAnimation*                       UI_OnHide;                                         // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_OnIdle_Default;                                 // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_OnShow;                                         // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CP_Arrow;                                          // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Arrow;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Effect;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Indicator;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        IndicatorSize;                                     // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3643[0x8];                                     // 0x0538(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateBrush                            IndicatorBrush;                                    // 0x0540(0x00D0)(Edit, BlueprintVisible)
	struct FSlateBrush                            EffectBrush;                                       // 0x0610(0x00D0)(Edit, BlueprintVisible)
	struct FVector2D                              ArrowSize;                                         // 0x06E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanShowArrow;                                      // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3644[0x7];                                     // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        ArrowPadding;                                      // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            ArrowBrush;                                        // 0x0700(0x00D0)(Edit, BlueprintVisible)
	double                                        Angle;                                             // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool OnSynchronizeProperties();
	void SetArrow(double _angle, bool _show);
	void SetEffectImage(const struct FSlateBrush& InBrush);
	void SetIndicatorImage(const struct FSlateBrush& InBrush);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_Ping_C">();
	}
	static class UCtrl_Ping_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_Ping_C>();
	}
};
static_assert(alignof(UCtrl_Ping_C) == 0x000010, "Wrong alignment on UCtrl_Ping_C");
static_assert(sizeof(UCtrl_Ping_C) == 0x0007E0, "Wrong size on UCtrl_Ping_C");
static_assert(offsetof(UCtrl_Ping_C, UI_OnHide) == 0x0004F0, "Member 'UCtrl_Ping_C::UI_OnHide' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, UI_OnIdle_Default) == 0x0004F8, "Member 'UCtrl_Ping_C::UI_OnIdle_Default' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, UI_OnShow) == 0x000500, "Member 'UCtrl_Ping_C::UI_OnShow' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, CP_Arrow) == 0x000508, "Member 'UCtrl_Ping_C::CP_Arrow' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, IMG_Arrow) == 0x000510, "Member 'UCtrl_Ping_C::IMG_Arrow' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, Img_Effect) == 0x000518, "Member 'UCtrl_Ping_C::Img_Effect' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, IMG_Indicator) == 0x000520, "Member 'UCtrl_Ping_C::IMG_Indicator' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, SizeBox) == 0x000528, "Member 'UCtrl_Ping_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, IndicatorSize) == 0x000530, "Member 'UCtrl_Ping_C::IndicatorSize' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, IndicatorBrush) == 0x000540, "Member 'UCtrl_Ping_C::IndicatorBrush' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, EffectBrush) == 0x000610, "Member 'UCtrl_Ping_C::EffectBrush' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, ArrowSize) == 0x0006E0, "Member 'UCtrl_Ping_C::ArrowSize' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, CanShowArrow) == 0x0006F0, "Member 'UCtrl_Ping_C::CanShowArrow' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, ArrowPadding) == 0x0006F8, "Member 'UCtrl_Ping_C::ArrowPadding' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, ArrowBrush) == 0x000700, "Member 'UCtrl_Ping_C::ArrowBrush' has a wrong offset!");
static_assert(offsetof(UCtrl_Ping_C, Angle) == 0x0007D0, "Member 'UCtrl_Ping_C::Angle' has a wrong offset!");

}

