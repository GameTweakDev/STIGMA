#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: GoldReviver_BP

#include "Basic.hpp"

#include "BPGLib_structs.hpp"
#include "Stigma_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GoldReviver_BP.GoldReviver_BP_C.ExecuteUbergraph_GoldReviver_BP
// 0x0198 (0x0198 - 0x0000)
struct GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3569[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356B[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356C[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP) == 0x000008, "Wrong alignment on GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP");
static_assert(sizeof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP) == 0x000198, "Wrong size on GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, EntryPoint) == 0x000000, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_GetSocketLocation_ReturnValue) == 0x000008, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000078, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_IsActive_ReturnValue) == 0x000079, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000098, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000180, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000188, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000190, "Member 'GoldReviver_BP_C_ExecuteUbergraph_GoldReviver_BP::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.OnQueryAddIndiactor
// 0x0078 (0x0078 - 0x0000)
struct GoldReviver_BP_C_OnQueryAddIndiactor final
{
public:
	class ABPGPlayerController*                   Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EIndicatorType                                _type;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FIndicatorData                         _out_detail;                                       // 0x0010(0x0028)(Parm, OutParm, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UIndicatorBaseWidget*                   Indicator;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Indicator_GoldReviver_C*            CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FIndicatorData                         K2Node_MakeStruct_IndicatorData;                   // 0x0050(0x0028)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GoldReviver_BP_C_OnQueryAddIndiactor) == 0x000008, "Wrong alignment on GoldReviver_BP_C_OnQueryAddIndiactor");
static_assert(sizeof(GoldReviver_BP_C_OnQueryAddIndiactor) == 0x000078, "Wrong size on GoldReviver_BP_C_OnQueryAddIndiactor");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, Controller) == 0x000000, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::Controller' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, _type) == 0x000008, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::_type' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, _out_detail) == 0x000010, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::_out_detail' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, ReturnValue) == 0x000038, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, Indicator) == 0x000040, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::Indicator' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, CallFunc_Create_ReturnValue) == 0x000048, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryAddIndiactor, K2Node_MakeStruct_IndicatorData) == 0x000050, "Member 'GoldReviver_BP_C_OnQueryAddIndiactor::K2Node_MakeStruct_IndicatorData' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.OnQueryVisibility
// 0x0018 (0x0018 - 0x0000)
struct GoldReviver_BP_C_OnQueryVisibility final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_OnQueryVisibility) == 0x000008, "Wrong alignment on GoldReviver_BP_C_OnQueryVisibility");
static_assert(sizeof(GoldReviver_BP_C_OnQueryVisibility) == 0x000018, "Wrong size on GoldReviver_BP_C_OnQueryVisibility");
static_assert(offsetof(GoldReviver_BP_C_OnQueryVisibility, _type) == 0x000000, "Member 'GoldReviver_BP_C_OnQueryVisibility::_type' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryVisibility, ReturnValue) == 0x000001, "Member 'GoldReviver_BP_C_OnQueryVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryVisibility, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000008, "Member 'GoldReviver_BP_C_OnQueryVisibility::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GoldReviver_BP_C_OnQueryVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'GoldReviver_BP_C_OnQueryVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'GoldReviver_BP_C_OnQueryVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.OnQueryWorldTransform
// 0x0190 (0x0190 - 0x0000)
struct GoldReviver_BP_C_OnQueryWorldTransform final
{
public:
	EIndicatorType                                _type;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3570[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_OnQueryWorldTransform) == 0x000010, "Wrong alignment on GoldReviver_BP_C_OnQueryWorldTransform");
static_assert(sizeof(GoldReviver_BP_C_OnQueryWorldTransform) == 0x000190, "Wrong size on GoldReviver_BP_C_OnQueryWorldTransform");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, _type) == 0x000000, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::_type' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, ReturnValue) == 0x000010, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_OnQueryWorldTransform, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'GoldReviver_BP_C_OnQueryWorldTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GoldReviver_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on GoldReviver_BP_C_ReceiveTick");
static_assert(sizeof(GoldReviver_BP_C_ReceiveTick) == 0x000004, "Wrong size on GoldReviver_BP_C_ReceiveTick");
static_assert(offsetof(GoldReviver_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GoldReviver_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.UpdatePingEffect
// 0x03F0 (0x03F0 - 0x0000)
struct GoldReviver_BP_C_UpdatePingEffect final
{
public:
	bool                                          Show_effect_and_indicator;                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3571[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AActor*                                 CallFunc_GetAttachParent_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3572[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetDiedCharaTeam_TeamType;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3573[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddIndicator_ReturnValue;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3574[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	uint8                                         Pad_3575[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3576[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APingMarker_BP_C*                       K2Node_DynamicCast_AsPing_Marker_BP;               // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3577[0x1];                                     // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3578[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3579[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0308(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GoldReviver_BP_C_UpdatePingEffect) == 0x000010, "Wrong alignment on GoldReviver_BP_C_UpdatePingEffect");
static_assert(sizeof(GoldReviver_BP_C_UpdatePingEffect) == 0x0003F0, "Wrong size on GoldReviver_BP_C_UpdatePingEffect");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, Show_effect_and_indicator) == 0x000000, "Member 'GoldReviver_BP_C_UpdatePingEffect::Show_effect_and_indicator' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_GetAttachParent_ReturnValue) == 0x000008, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, Temp_object_Variable) == 0x000018, "Member 'GoldReviver_BP_C_UpdatePingEffect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_GetDiedCharaTeam_TeamType) == 0x000030, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_GetDiedCharaTeam_TeamType' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000038, "Member 'GoldReviver_BP_C_UpdatePingEffect::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GoldReviver_BP_C_UpdatePingEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_IsLocalController_ReturnValue) == 0x000041, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_AddIndicator_ReturnValue) == 0x000042, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_AddIndicator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_GetTeam_ReturnValue) == 0x000043, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000044, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, K2Node_MakeArray_Array) == 0x000048, "Member 'GoldReviver_BP_C_UpdatePingEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000108, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000120, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000208, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, K2Node_DynamicCast_AsPing_Marker_BP) == 0x000210, "Member 'GoldReviver_BP_C_UpdatePingEffect::K2Node_DynamicCast_AsPing_Marker_BP' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, K2Node_DynamicCast_bSuccess_1) == 0x000218, "Member 'GoldReviver_BP_C_UpdatePingEffect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_bBlockingHit) == 0x000219, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_bInitialOverlap) == 0x00021A, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_Time) == 0x00021C, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_Distance) == 0x000220, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_Location) == 0x000228, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_ImpactPoint) == 0x000240, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_Normal) == 0x000258, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_PhysMat) == 0x000288, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_HitActor) == 0x000290, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_HitComponent) == 0x000298, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_HitBoneName) == 0x0002A0, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_BoneName) == 0x0002A8, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_HitItem) == 0x0002B0, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_ElementIndex) == 0x0002B4, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_FaceIndex) == 0x0002B8, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_TraceStart) == 0x0002C0, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_BreakHitResult_TraceEnd) == 0x0002D8, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_MakeVector_ReturnValue) == 0x0002F0, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdatePingEffect, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000308, "Member 'GoldReviver_BP_C_UpdatePingEffect::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.UpdateRadar
// 0x0040 (0x0040 - 0x0000)
struct GoldReviver_BP_C_UpdateRadar final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357A[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class UUI_Tab_C*                              K2Node_DynamicCast_AsUI_Tab;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCtrl_HUD_Radar_C*                      K2Node_DynamicCast_AsCtrl_HUD_Radar;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_UpdateRadar) == 0x000008, "Wrong alignment on GoldReviver_BP_C_UpdateRadar");
static_assert(sizeof(GoldReviver_BP_C_UpdateRadar) == 0x000040, "Wrong size on GoldReviver_BP_C_UpdateRadar");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'GoldReviver_BP_C_UpdateRadar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x000008, "Member 'GoldReviver_BP_C_UpdateRadar::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GoldReviver_BP_C_UpdateRadar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'GoldReviver_BP_C_UpdateRadar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, K2Node_DynamicCast_AsUI_Tab) == 0x000018, "Member 'GoldReviver_BP_C_UpdateRadar::K2Node_DynamicCast_AsUI_Tab' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'GoldReviver_BP_C_UpdateRadar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, CallFunc_GetWidget_ReturnValue) == 0x000028, "Member 'GoldReviver_BP_C_UpdateRadar::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, K2Node_DynamicCast_AsCtrl_HUD_Radar) == 0x000030, "Member 'GoldReviver_BP_C_UpdateRadar::K2Node_DynamicCast_AsCtrl_HUD_Radar' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_UpdateRadar, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'GoldReviver_BP_C_UpdateRadar::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.GetDiedCharaTeam
// 0x0003 (0x0003 - 0x0000)
struct GoldReviver_BP_C_GetDiedCharaTeam final
{
public:
	ETeams                                        TeamType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_GetDiedCharaTeam) == 0x000001, "Wrong alignment on GoldReviver_BP_C_GetDiedCharaTeam");
static_assert(sizeof(GoldReviver_BP_C_GetDiedCharaTeam) == 0x000003, "Wrong size on GoldReviver_BP_C_GetDiedCharaTeam");
static_assert(offsetof(GoldReviver_BP_C_GetDiedCharaTeam, TeamType) == 0x000000, "Member 'GoldReviver_BP_C_GetDiedCharaTeam::TeamType' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_GetDiedCharaTeam, CallFunc_GetTeam_ReturnValue) == 0x000001, "Member 'GoldReviver_BP_C_GetDiedCharaTeam::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_GetDiedCharaTeam, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'GoldReviver_BP_C_GetDiedCharaTeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GoldReviver_BP.GoldReviver_BP_C.GetDiedCharaType
// 0x0002 (0x0002 - 0x0000)
struct GoldReviver_BP_C_GetDiedCharaType final
{
public:
	ECharaType                                    _Chara_Type;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GoldReviver_BP_C_GetDiedCharaType) == 0x000001, "Wrong alignment on GoldReviver_BP_C_GetDiedCharaType");
static_assert(sizeof(GoldReviver_BP_C_GetDiedCharaType) == 0x000002, "Wrong size on GoldReviver_BP_C_GetDiedCharaType");
static_assert(offsetof(GoldReviver_BP_C_GetDiedCharaType, _Chara_Type) == 0x000000, "Member 'GoldReviver_BP_C_GetDiedCharaType::_Chara_Type' has a wrong offset!");
static_assert(offsetof(GoldReviver_BP_C_GetDiedCharaType, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GoldReviver_BP_C_GetDiedCharaType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

