#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: GunBase_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass GunBase_AnimBP.GunBase_AnimBP_C
// 0x0390 (0x06E0 - 0x0350)
class UGunBase_AnimBP_C : public UAnimInstance
{
public:
	uint8                                         Pad_3C4F[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0368(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0388(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x03D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0450(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0478(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x04C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0528(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0548(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0590(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x05B0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0678(0x0048)()
	int32                                         RequestFireCount;                                  // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FiredCount;                                        // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysTrue;                                        // 0x06C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C50[0x3];                                     // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         PrevLoadedBulletCount;                             // 0x06CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoadedBulletCount;                                 // 0x06D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitialized;                                     // 0x06D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsImmediateNormal;                                 // 0x06D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFiring;                                          // 0x06D6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_OnFireEnd();
	void AnimNotify_OnFireStart();
	void AnimNotify_OnSliderPulled();
	void AnimNotify_UpdateLoadedBullet();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_GunBase_AnimBP_AnimGraphNode_TransitionResult_290D52D44347853A58D53E971CD328C2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_GunBase_AnimBP_AnimGraphNode_TransitionResult_4C8ADFFB43DC35907A6C44AE8D76D9CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_GunBase_AnimBP_AnimGraphNode_TransitionResult_669B9518449FCCD17FCA5D8A2811EDE2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_GunBase_AnimBP_AnimGraphNode_TransitionResult_E6E20FAB45D4B91ACD131E9EED45CBE6();
	void ExecuteUbergraph_GunBase_AnimBP(int32 EntryPoint);
	void Initialize();
	void OnSliderPulled();
	void SetCharaShootingMotionBlur1PV(bool _activate);
	void Update_Variable();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GunBase_AnimBP_C">();
	}
	static class UGunBase_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGunBase_AnimBP_C>();
	}
};
static_assert(alignof(UGunBase_AnimBP_C) == 0x000010, "Wrong alignment on UGunBase_AnimBP_C");
static_assert(sizeof(UGunBase_AnimBP_C) == 0x0006E0, "Wrong size on UGunBase_AnimBP_C");
static_assert(offsetof(UGunBase_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UGunBase_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UGunBase_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UGunBase_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_Root) == 0x000368, "Member 'UGunBase_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000388, "Member 'UGunBase_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0003B0, "Member 'UGunBase_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x0003D8, "Member 'UGunBase_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000400, "Member 'UGunBase_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000428, "Member 'UGunBase_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000450, "Member 'UGunBase_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x000478, "Member 'UGunBase_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0004C0, "Member 'UGunBase_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0004E0, "Member 'UGunBase_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_StateResult_1) == 0x000528, "Member 'UGunBase_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x000548, "Member 'UGunBase_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_StateResult) == 0x000590, "Member 'UGunBase_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_StateMachine) == 0x0005B0, "Member 'UGunBase_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AnimGraphNode_Slot) == 0x000678, "Member 'UGunBase_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, RequestFireCount) == 0x0006C0, "Member 'UGunBase_AnimBP_C::RequestFireCount' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, FiredCount) == 0x0006C4, "Member 'UGunBase_AnimBP_C::FiredCount' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, AlwaysTrue) == 0x0006C8, "Member 'UGunBase_AnimBP_C::AlwaysTrue' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, PrevLoadedBulletCount) == 0x0006CC, "Member 'UGunBase_AnimBP_C::PrevLoadedBulletCount' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, LoadedBulletCount) == 0x0006D0, "Member 'UGunBase_AnimBP_C::LoadedBulletCount' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, IsInitialized) == 0x0006D4, "Member 'UGunBase_AnimBP_C::IsInitialized' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, IsImmediateNormal) == 0x0006D5, "Member 'UGunBase_AnimBP_C::IsImmediateNormal' has a wrong offset!");
static_assert(offsetof(UGunBase_AnimBP_C, IsFiring) == 0x0006D6, "Member 'UGunBase_AnimBP_C::IsFiring' has a wrong offset!");

}

