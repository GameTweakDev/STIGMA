#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_RankingRow

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_RankingRow.Ctrl_RankingRow_C
// 0x0028 (0x02E8 - 0x02C0)
class UCtrl_RankingRow_C final : public UUserWidget
{
public:
	class UImage*                                 Image_87;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_02;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Bg_03;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        SWITCHER_Mode;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_WinList;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void UpdateMode(ERankingType _ranking_type);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_RankingRow_C">();
	}
	static class UCtrl_RankingRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_RankingRow_C>();
	}
};
static_assert(alignof(UCtrl_RankingRow_C) == 0x000008, "Wrong alignment on UCtrl_RankingRow_C");
static_assert(sizeof(UCtrl_RankingRow_C) == 0x0002E8, "Wrong size on UCtrl_RankingRow_C");
static_assert(offsetof(UCtrl_RankingRow_C, Image_87) == 0x0002C0, "Member 'UCtrl_RankingRow_C::Image_87' has a wrong offset!");
static_assert(offsetof(UCtrl_RankingRow_C, Img_Bg_02) == 0x0002C8, "Member 'UCtrl_RankingRow_C::Img_Bg_02' has a wrong offset!");
static_assert(offsetof(UCtrl_RankingRow_C, Img_Bg_03) == 0x0002D0, "Member 'UCtrl_RankingRow_C::Img_Bg_03' has a wrong offset!");
static_assert(offsetof(UCtrl_RankingRow_C, SWITCHER_Mode) == 0x0002D8, "Member 'UCtrl_RankingRow_C::SWITCHER_Mode' has a wrong offset!");
static_assert(offsetof(UCtrl_RankingRow_C, TXT_WinList) == 0x0002E0, "Member 'UCtrl_RankingRow_C::TXT_WinList' has a wrong offset!");

}

