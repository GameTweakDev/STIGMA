#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: DLG_Account

#include "Basic.hpp"

#include "BPGLib_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function DLG_Account.DLG_Account_C.BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'DLG_Account_C_BndEvt__DLG_Account_BTN_OK_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.ExecuteUbergraph_DLG_Account
// 0x00D8 (0x00D8 - 0x0000)
struct DLG_Account_C_ExecuteUbergraph_DLG_Account final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E36[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E37[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0014(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText__text;                            // 0x0050(0x0018)()
	class FText                                   CallFunc_GetText__text_1;                          // 0x0068(0x0018)()
	class FText                                   CallFunc_GetText__text_2;                          // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText__text_3;                          // 0x00A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_ExecuteUbergraph_DLG_Account) == 0x000008, "Wrong alignment on DLG_Account_C_ExecuteUbergraph_DLG_Account");
static_assert(sizeof(DLG_Account_C_ExecuteUbergraph_DLG_Account) == 0x0000D8, "Wrong size on DLG_Account_C_ExecuteUbergraph_DLG_Account");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, EntryPoint) == 0x000000, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::EntryPoint' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::K2Node_ComponentBoundEvent__select' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, K2Node_Event_MyGeometry) == 0x000014, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_GetText__text) == 0x000050, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_GetText__text' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_GetText__text_1) == 0x000068, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_GetText__text_1' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_GetText__text_2) == 0x000080, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_GetText__text_2' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_GetText__text_3) == 0x0000A8, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_GetText__text_3' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000C0, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ExecuteUbergraph_DLG_Account, CallFunc_OnTick__delta_ImplicitCast) == 0x0000D0, "Member 'DLG_Account_C_ExecuteUbergraph_DLG_Account::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.GetFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct DLG_Account_C_GetFocusWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_GetFocusWidget) == 0x000008, "Wrong alignment on DLG_Account_C_GetFocusWidget");
static_assert(sizeof(DLG_Account_C_GetFocusWidget) == 0x000008, "Wrong size on DLG_Account_C_GetFocusWidget");
static_assert(offsetof(DLG_Account_C_GetFocusWidget, ReturnValue) == 0x000000, "Member 'DLG_Account_C_GetFocusWidget::ReturnValue' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.Init
// 0x0050 (0x0050 - 0x0000)
struct DLG_Account_C_Init final
{
public:
	class FString                                 CallFunc_GetPublisherToken_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	class FString                                 CallFunc_GetPublisherID_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0038(0x0018)()
};
static_assert(alignof(DLG_Account_C_Init) == 0x000008, "Wrong alignment on DLG_Account_C_Init");
static_assert(sizeof(DLG_Account_C_Init) == 0x000050, "Wrong size on DLG_Account_C_Init");
static_assert(offsetof(DLG_Account_C_Init, CallFunc_GetPublisherToken_ReturnValue) == 0x000000, "Member 'DLG_Account_C_Init::CallFunc_GetPublisherToken_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'DLG_Account_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_Init, CallFunc_GetPublisherID_ReturnValue) == 0x000028, "Member 'DLG_Account_C_Init::CallFunc_GetPublisherID_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_Init, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000038, "Member 'DLG_Account_C_Init::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.OnChangeWaiting
// 0x0003 (0x0003 - 0x0000)
struct DLG_Account_C_OnChangeWaiting final
{
public:
	EWaitingType                                  _waiting_type;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_OnChangeWaiting) == 0x000001, "Wrong alignment on DLG_Account_C_OnChangeWaiting");
static_assert(sizeof(DLG_Account_C_OnChangeWaiting) == 0x000003, "Wrong size on DLG_Account_C_OnChangeWaiting");
static_assert(offsetof(DLG_Account_C_OnChangeWaiting, _waiting_type) == 0x000000, "Member 'DLG_Account_C_OnChangeWaiting::_waiting_type' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnChangeWaiting, ReturnValue) == 0x000001, "Member 'DLG_Account_C_OnChangeWaiting::ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnChangeWaiting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'DLG_Account_C_OnChangeWaiting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.OnOK__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct DLG_Account_C_OnOK__DelegateSignature final
{
public:
	class FText                                   _id;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Param__Password;                                   // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDLG_Account_C*                         _ctrl;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_OnOK__DelegateSignature) == 0x000008, "Wrong alignment on DLG_Account_C_OnOK__DelegateSignature");
static_assert(sizeof(DLG_Account_C_OnOK__DelegateSignature) == 0x000038, "Wrong size on DLG_Account_C_OnOK__DelegateSignature");
static_assert(offsetof(DLG_Account_C_OnOK__DelegateSignature, _id) == 0x000000, "Member 'DLG_Account_C_OnOK__DelegateSignature::_id' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnOK__DelegateSignature, Param__Password) == 0x000018, "Member 'DLG_Account_C_OnOK__DelegateSignature::Param__Password' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnOK__DelegateSignature, _ctrl) == 0x000030, "Member 'DLG_Account_C_OnOK__DelegateSignature::_ctrl' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.OnShowPopup
// 0x0001 (0x0001 - 0x0000)
struct DLG_Account_C_OnShowPopup final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_OnShowPopup) == 0x000001, "Wrong alignment on DLG_Account_C_OnShowPopup");
static_assert(sizeof(DLG_Account_C_OnShowPopup) == 0x000001, "Wrong size on DLG_Account_C_OnShowPopup");
static_assert(offsetof(DLG_Account_C_OnShowPopup, ReturnValue) == 0x000000, "Member 'DLG_Account_C_OnShowPopup::ReturnValue' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct DLG_Account_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on DLG_Account_C_OnSynchronizeProperties");
static_assert(sizeof(DLG_Account_C_OnSynchronizeProperties) == 0x000001, "Wrong size on DLG_Account_C_OnSynchronizeProperties");
static_assert(offsetof(DLG_Account_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'DLG_Account_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.OnTick
// 0x0040 (0x0040 - 0x0000)
struct DLG_Account_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E38[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E39[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_OnTick) == 0x000008, "Wrong alignment on DLG_Account_C_OnTick");
static_assert(sizeof(DLG_Account_C_OnTick) == 0x000040, "Wrong size on DLG_Account_C_OnTick");
static_assert(offsetof(DLG_Account_C_OnTick, _delta) == 0x000000, "Member 'DLG_Account_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, Alpha) == 0x000008, "Member 'DLG_Account_C_OnTick::Alpha' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, Delta) == 0x000010, "Member 'DLG_Account_C_OnTick::Delta' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'DLG_Account_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000019, "Member 'DLG_Account_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'DLG_Account_C_OnTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'DLG_Account_C_OnTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'DLG_Account_C_OnTick::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_OnTick, CallFunc_SetOpacity_InOpacity_ImplicitCast) == 0x000038, "Member 'DLG_Account_C_OnTick::CallFunc_SetOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct DLG_Account_C_SetEnable final
{
public:
	bool                                          _enable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_SetEnable) == 0x000001, "Wrong alignment on DLG_Account_C_SetEnable");
static_assert(sizeof(DLG_Account_C_SetEnable) == 0x000001, "Wrong size on DLG_Account_C_SetEnable");
static_assert(offsetof(DLG_Account_C_SetEnable, _enable) == 0x000000, "Member 'DLG_Account_C_SetEnable::_enable' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.SetTitle
// 0x0018 (0x0018 - 0x0000)
struct DLG_Account_C_SetTitle final
{
public:
	class FText                                   _Title;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(DLG_Account_C_SetTitle) == 0x000008, "Wrong alignment on DLG_Account_C_SetTitle");
static_assert(sizeof(DLG_Account_C_SetTitle) == 0x000018, "Wrong size on DLG_Account_C_SetTitle");
static_assert(offsetof(DLG_Account_C_SetTitle, _Title) == 0x000000, "Member 'DLG_Account_C_SetTitle::_Title' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.ShowError
// 0x0020 (0x0020 - 0x0000)
struct DLG_Account_C_ShowError final
{
public:
	class FText                                   _text;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        _duration;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_ShowError) == 0x000008, "Wrong alignment on DLG_Account_C_ShowError");
static_assert(sizeof(DLG_Account_C_ShowError) == 0x000020, "Wrong size on DLG_Account_C_ShowError");
static_assert(offsetof(DLG_Account_C_ShowError, _text) == 0x000000, "Member 'DLG_Account_C_ShowError::_text' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_ShowError, _duration) == 0x000018, "Member 'DLG_Account_C_ShowError::_duration' has a wrong offset!");

// Function DLG_Account.DLG_Account_C.Tick
// 0x003C (0x003C - 0x0000)
struct DLG_Account_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DLG_Account_C_Tick) == 0x000004, "Wrong alignment on DLG_Account_C_Tick");
static_assert(sizeof(DLG_Account_C_Tick) == 0x00003C, "Wrong size on DLG_Account_C_Tick");
static_assert(offsetof(DLG_Account_C_Tick, MyGeometry) == 0x000000, "Member 'DLG_Account_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(DLG_Account_C_Tick, InDeltaTime) == 0x000038, "Member 'DLG_Account_C_Tick::InDeltaTime' has a wrong offset!");

}

