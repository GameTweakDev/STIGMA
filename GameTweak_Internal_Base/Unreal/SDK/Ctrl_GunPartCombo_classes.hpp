#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_GunPartCombo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "ItemIDEntry_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_GunPartCombo.Ctrl_GunPartCombo_C
// 0x00C0 (0x05B0 - 0x04F0)
class UCtrl_GunPartCombo_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UComboBoxString*                        CB_Items;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Title;                                         // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EItemCategory                                 ItemCategory;                                      // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3714[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Title;                                             // 0x0510(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         Font;                                              // 0x0528(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0580(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3715[0x4];                                     // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FItemIDEntry>                   ItemEntries;                                       // 0x0588(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnChangeSelection;                                 // 0x0598(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EGunType                                      GunType;                                           // 0x05A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void Construct();
	void ExecuteUbergraph_Ctrl_GunPartCombo(int32 EntryPoint);
	void OnChangeSelection__DelegateSignature(const struct FItemID& _selected_id, int32 _slot);
	void OnSelected(const class FString& _str);
	bool OnSynchronizeProperties();
	void SetGunType(EGunType _gun_type);
	void SetItemID(const struct FItemID& _item_id);
	void UpdateFont();
	void UpdateTitle();
	void ValidateComboMenu();

	void FindEntryByItemID(const struct FItemID& _item_id, int32* _index) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_GunPartCombo_C">();
	}
	static class UCtrl_GunPartCombo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_GunPartCombo_C>();
	}
};
static_assert(alignof(UCtrl_GunPartCombo_C) == 0x000008, "Wrong alignment on UCtrl_GunPartCombo_C");
static_assert(sizeof(UCtrl_GunPartCombo_C) == 0x0005B0, "Wrong size on UCtrl_GunPartCombo_C");
static_assert(offsetof(UCtrl_GunPartCombo_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_GunPartCombo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, CB_Items) == 0x0004F8, "Member 'UCtrl_GunPartCombo_C::CB_Items' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, Txt_Title) == 0x000500, "Member 'UCtrl_GunPartCombo_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, ItemCategory) == 0x000508, "Member 'UCtrl_GunPartCombo_C::ItemCategory' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, Title) == 0x000510, "Member 'UCtrl_GunPartCombo_C::Title' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, Font) == 0x000528, "Member 'UCtrl_GunPartCombo_C::Font' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, SlotIndex) == 0x000580, "Member 'UCtrl_GunPartCombo_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, ItemEntries) == 0x000588, "Member 'UCtrl_GunPartCombo_C::ItemEntries' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, OnChangeSelection) == 0x000598, "Member 'UCtrl_GunPartCombo_C::OnChangeSelection' has a wrong offset!");
static_assert(offsetof(UCtrl_GunPartCombo_C, GunType) == 0x0005A8, "Member 'UCtrl_GunPartCombo_C::GunType' has a wrong offset!");

}

