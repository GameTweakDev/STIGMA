#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: CoinBase_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_classes.hpp"
#include "BPGLib_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CoinBase_BP.CoinBase_BP_C
// 0x0018 (0x0300 - 0x02E8)
class ACoinBase_BP_C final : public ACoinBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUI_Indicator_Coin_C*                   Indicator;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Timer;                                             // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CoinBase_BP(int32 EntryPoint);
	bool OnQueryAddIndiactor(class ABPGPlayerController* Controller, EIndicatorType _type, struct FIndicatorData* _out_detail);
	class FText OnQueryGetDisplayName(EIndicatorType _type);
	bool OnQueryVisibility(EIndicatorType _type);
	struct FTransform OnQueryWorldTransform(EIndicatorType _type);
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void RemoveIndicator();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CoinBase_BP_C">();
	}
	static class ACoinBase_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACoinBase_BP_C>();
	}
};
static_assert(alignof(ACoinBase_BP_C) == 0x000008, "Wrong alignment on ACoinBase_BP_C");
static_assert(sizeof(ACoinBase_BP_C) == 0x000300, "Wrong size on ACoinBase_BP_C");
static_assert(offsetof(ACoinBase_BP_C, UberGraphFrame) == 0x0002E8, "Member 'ACoinBase_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACoinBase_BP_C, Indicator) == 0x0002F0, "Member 'ACoinBase_BP_C::Indicator' has a wrong offset!");
static_assert(offsetof(ACoinBase_BP_C, Timer) == 0x0002F8, "Member 'ACoinBase_BP_C::Timer' has a wrong offset!");

}

