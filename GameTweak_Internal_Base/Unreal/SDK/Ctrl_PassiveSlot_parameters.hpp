#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_PassiveSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_PassiveSlot.Ctrl_PassiveSlot_C.ExecuteUbergraph_Ctrl_PassiveSlot
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__selected;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot) == 0x000004, "Wrong alignment on Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot");
static_assert(sizeof(Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot) == 0x000008, "Wrong size on Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot");
static_assert(offsetof(Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot, EntryPoint) == 0x000000, "Member 'Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot, K2Node_Event__selected) == 0x000004, "Member 'Ctrl_PassiveSlot_C_ExecuteUbergraph_Ctrl_PassiveSlot::K2Node_Event__selected' has a wrong offset!");

// Function Ctrl_PassiveSlot.Ctrl_PassiveSlot_C.GetToolTip_PassiveSkillPoint
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip*                            CallFunc_CreateTooltipWidget_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_Tooltip_ItemID_Default_C*           K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint) == 0x000008, "Wrong alignment on Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint");
static_assert(sizeof(Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint) == 0x000020, "Wrong size on Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint");
static_assert(offsetof(Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint, ReturnValue) == 0x000000, "Member 'Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint, CallFunc_CreateTooltipWidget_ReturnValue) == 0x000008, "Member 'Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint::CallFunc_CreateTooltipWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint, K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default) == 0x000010, "Member 'Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint::K2Node_DynamicCast_AsUI_Tooltip_Item_ID_Default' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ctrl_PassiveSlot_C_GetToolTip_PassiveSkillPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ctrl_PassiveSlot.Ctrl_PassiveSlot_C.InitWidget
// 0x0258 (0x0258 - 0x0000)
struct Ctrl_PassiveSlot_C_InitWidget final
{
public:
	struct FItemID                                _passive_id;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemID_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetBoostedPassiveSkillLevel_ReturnValue;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPassiveSkillID                        CallFunc_ToPassiveSkillID_ReturnValue;             // 0x0020(0x0010)(HasGetValueTypeHash)
	struct FPassiveSkillEntry                     CallFunc_GetPassiveSkillDefineByID_ReturnValue;    // 0x0030(0x0198)(ConstParm)
	int32                                         CallFunc_GetUserPassiveSkillLevel_ReturnValue;     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE7[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01D8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE8[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0018)()
};
static_assert(alignof(Ctrl_PassiveSlot_C_InitWidget) == 0x000008, "Wrong alignment on Ctrl_PassiveSlot_C_InitWidget");
static_assert(sizeof(Ctrl_PassiveSlot_C_InitWidget) == 0x000258, "Wrong size on Ctrl_PassiveSlot_C_InitWidget");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, _passive_id) == 0x000000, "Member 'Ctrl_PassiveSlot_C_InitWidget::_passive_id' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_IsValidItemID_ReturnValue) == 0x000010, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_IsValidItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_GetBoostedPassiveSkillLevel_ReturnValue) == 0x000014, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_GetBoostedPassiveSkillLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_ToPassiveSkillID_ReturnValue) == 0x000020, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_ToPassiveSkillID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_GetPassiveSkillDefineByID_ReturnValue) == 0x000030, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_GetPassiveSkillDefineByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_GetUserPassiveSkillLevel_ReturnValue) == 0x0001C8, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_GetUserPassiveSkillLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001D0, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, K2Node_MakeStruct_FormatArgumentData) == 0x0001D8, "Member 'Ctrl_PassiveSlot_C_InitWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000228, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, K2Node_MakeArray_Array) == 0x000230, "Member 'Ctrl_PassiveSlot_C_InitWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_InitWidget, CallFunc_Format_ReturnValue) == 0x000240, "Member 'Ctrl_PassiveSlot_C_InitWidget::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Ctrl_PassiveSlot.Ctrl_PassiveSlot_C.OnEVENT_Select_End
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_PassiveSlot_C_OnEVENT_Select_End final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_PassiveSlot_C_OnEVENT_Select_End) == 0x000001, "Wrong alignment on Ctrl_PassiveSlot_C_OnEVENT_Select_End");
static_assert(sizeof(Ctrl_PassiveSlot_C_OnEVENT_Select_End) == 0x000001, "Wrong size on Ctrl_PassiveSlot_C_OnEVENT_Select_End");
static_assert(offsetof(Ctrl_PassiveSlot_C_OnEVENT_Select_End, _selected) == 0x000000, "Member 'Ctrl_PassiveSlot_C_OnEVENT_Select_End::_selected' has a wrong offset!");

// Function Ctrl_PassiveSlot.Ctrl_PassiveSlot_C.OnMouseButtonUp
// 0x0220 (0x0220 - 0x0000)
struct Ctrl_PassiveSlot_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(Ctrl_PassiveSlot_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on Ctrl_PassiveSlot_C_OnMouseButtonUp");
static_assert(sizeof(Ctrl_PassiveSlot_C_OnMouseButtonUp) == 0x000220, "Wrong size on Ctrl_PassiveSlot_C_OnMouseButtonUp");
static_assert(offsetof(Ctrl_PassiveSlot_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'Ctrl_PassiveSlot_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'Ctrl_PassiveSlot_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'Ctrl_PassiveSlot_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_PassiveSlot_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'Ctrl_PassiveSlot_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

