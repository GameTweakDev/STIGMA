#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_GunPartsBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.AddListItem
// 0x0078 (0x0078 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_AddListItem final
{
public:
	class FText                                   Attribute_name;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Value;                                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0030(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UAttribute_LVItem_C*                    Item;                                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F73[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UAttribute_LVItem_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_AddListItem) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_AddListItem");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_AddListItem) == 0x000078, "Wrong size on UI_Tooltip_GunPartsBase_C_AddListItem");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, Attribute_name) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::Attribute_name' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, Value) == 0x000018, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::Value' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, Icon) == 0x000030, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::Icon' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, Item) == 0x000058, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::Item' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, CallFunc_SpawnObject_ReturnValue) == 0x000068, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_AddListItem, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'UI_Tooltip_GunPartsBase_C_AddListItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.SetExpiry
// 0x0008 (0x0008 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_SetExpiry final
{
public:
	struct FDateTime                              _expiry;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_SetExpiry) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_SetExpiry");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_SetExpiry) == 0x000008, "Wrong size on UI_Tooltip_GunPartsBase_C_SetExpiry");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetExpiry, _expiry) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_SetExpiry::_expiry' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.SetGunPartsSlotInfo
// 0x0060 (0x0060 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_GetGunPartsSlotText_ReturnValue;          // 0x0018(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo) == 0x000060, "Wrong size on UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo, Text) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo::Text' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo, CallFunc_GetGunPartsSlotText_ReturnValue) == 0x000018, "Member 'UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo::CallFunc_GetGunPartsSlotText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo, CallFunc_Map_Find_Value) == 0x000030, "Member 'UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'UI_Tooltip_GunPartsBase_C_SetGunPartsSlotInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.SetShowClickBtn
// 0x0038 (0x0038 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_SetShowClickBtn final
{
public:
	bool                                          _show;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F74[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTooltipKeyInfo                        K2Node_MakeStruct_TooltipKeyInfo;                  // 0x0008(0x0030)()
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_SetShowClickBtn) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_SetShowClickBtn");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_SetShowClickBtn) == 0x000038, "Wrong size on UI_Tooltip_GunPartsBase_C_SetShowClickBtn");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetShowClickBtn, _show) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_SetShowClickBtn::_show' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetShowClickBtn, K2Node_MakeStruct_TooltipKeyInfo) == 0x000008, "Member 'UI_Tooltip_GunPartsBase_C_SetShowClickBtn::K2Node_MakeStruct_TooltipKeyInfo' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.SetTextAttachableGunTypes
// 0x0418 (0x0418 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes final
{
public:
	TMap<EGunPartsSlot, class FText>              GunPartsSlot_TxtMap;                               // 0x0000(0x0050)(Edit, BlueprintVisible)
	class FText                                   Text_attachable_guns;                              // 0x0050(0x0018)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F75[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	EGunType                                      CallFunc_Array_Get_Item;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F76[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGunEntry_Main                         CallFunc_GetGunMainEntry_ReturnValue;              // 0x00A8(0x0350)(ConstParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F77[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x0400(0x0018)()
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes) == 0x000418, "Wrong size on UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, GunPartsSlot_TxtMap) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::GunPartsSlot_TxtMap' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, Text_attachable_guns) == 0x000050, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::Text_attachable_guns' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, Temp_int_Array_Index_Variable) == 0x000068, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, K2Node_MakeArray_Array) == 0x000078, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_Format_ReturnValue) == 0x000088, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_GetGunMainEntry_ReturnValue) == 0x0000A8, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_GetGunMainEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_Less_IntInt_ReturnValue) == 0x0003F8, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes, CallFunc_AppendText_ReturnValue) == 0x000400, "Member 'UI_Tooltip_GunPartsBase_C_SetTextAttachableGunTypes::CallFunc_AppendText_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.UpdateControlPower
// 0x00B8 (0x00B8 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_UpdateControlPower final
{
public:
	float                                         ControlPower;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F78[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F79[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_UpdateControlPower) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_UpdateControlPower");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_UpdateControlPower) == 0x0000B8, "Wrong size on UI_Tooltip_GunPartsBase_C_UpdateControlPower");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, ControlPower) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::ControlPower' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, K2Node_MakeArray_Array) == 0x000070, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_Format_ReturnValue) == 0x000080, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000099, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0000A0, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateControlPower, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'UI_Tooltip_GunPartsBase_C_UpdateControlPower::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.UpdateDeviation
// 0x0148 (0x0148 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_UpdateDeviation final
{
public:
	float                                         Deviation;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemEntry                             CallFunc_GetItemEntry_ReturnValue;                 // 0x0008(0x0130)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7B[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_UpdateDeviation) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_UpdateDeviation");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_UpdateDeviation) == 0x000148, "Wrong size on UI_Tooltip_GunPartsBase_C_UpdateDeviation");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateDeviation, Deviation) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_UpdateDeviation::Deviation' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateDeviation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000004, "Member 'UI_Tooltip_GunPartsBase_C_UpdateDeviation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateDeviation, CallFunc_GetItemEntry_ReturnValue) == 0x000008, "Member 'UI_Tooltip_GunPartsBase_C_UpdateDeviation::CallFunc_GetItemEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateDeviation, CallFunc_TextIsEmpty_ReturnValue) == 0x000138, "Member 'UI_Tooltip_GunPartsBase_C_UpdateDeviation::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateDeviation, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'UI_Tooltip_GunPartsBase_C_UpdateDeviation::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.UpdateExpiry
// 0x0010 (0x0010 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_UpdateExpiry final
{
public:
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_UpdateExpiry) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_UpdateExpiry");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_UpdateExpiry) == 0x000010, "Wrong size on UI_Tooltip_GunPartsBase_C_UpdateExpiry");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateExpiry, CallFunc_MakeDateTime_ReturnValue) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_UpdateExpiry::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateExpiry, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000008, "Member 'UI_Tooltip_GunPartsBase_C_UpdateExpiry::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_GunPartsBase.UI_Tooltip_GunPartsBase_C.UpdateRecoil
// 0x0148 (0x0148 - 0x0000)
struct UI_Tooltip_GunPartsBase_C_UpdateRecoil final
{
public:
	float                                         Recoil;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemEntry                             CallFunc_GetItemEntry_ReturnValue;                 // 0x0008(0x0130)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F7D[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GunPartsBase_C_UpdateRecoil) == 0x000008, "Wrong alignment on UI_Tooltip_GunPartsBase_C_UpdateRecoil");
static_assert(sizeof(UI_Tooltip_GunPartsBase_C_UpdateRecoil) == 0x000148, "Wrong size on UI_Tooltip_GunPartsBase_C_UpdateRecoil");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateRecoil, Recoil) == 0x000000, "Member 'UI_Tooltip_GunPartsBase_C_UpdateRecoil::Recoil' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateRecoil, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000004, "Member 'UI_Tooltip_GunPartsBase_C_UpdateRecoil::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateRecoil, CallFunc_GetItemEntry_ReturnValue) == 0x000008, "Member 'UI_Tooltip_GunPartsBase_C_UpdateRecoil::CallFunc_GetItemEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateRecoil, CallFunc_TextIsEmpty_ReturnValue) == 0x000138, "Member 'UI_Tooltip_GunPartsBase_C_UpdateRecoil::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GunPartsBase_C_UpdateRecoil, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'UI_Tooltip_GunPartsBase_C_UpdateRecoil::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

