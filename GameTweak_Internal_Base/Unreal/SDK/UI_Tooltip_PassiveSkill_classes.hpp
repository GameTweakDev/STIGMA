#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_PassiveSkill

#include "Basic.hpp"

#include "UI_Tooltip_ItemID_Default_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Tooltip_PassiveSkill.UI_Tooltip_PassiveSkill_C
// 0x0020 (0x0788 - 0x0768)
class UUI_Tooltip_PassiveSkill_C final : public UUI_Tooltip_ItemID_Default_C
{
public:
	class UTextBlock*                             Txt_Effects;                                       // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Level;                                         // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Temp_Level_to_Add;                                 // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NonBoostedPassiveLevel;                            // 0x077C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BoostedPassiveLevel;                               // 0x0780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RealPassiveLevel;                                  // 0x0784(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Temp_Level(int32 OverwirtedLevel);
	void GetEffectText(const struct FPassiveSkillID& _skill_id, class FText* _effect_text);
	void GetLevelText(const struct FPassiveSkillID& _skill_id, class FText* _level_text);
	void OnShowTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Tooltip_PassiveSkill_C">();
	}
	static class UUI_Tooltip_PassiveSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Tooltip_PassiveSkill_C>();
	}
};
static_assert(alignof(UUI_Tooltip_PassiveSkill_C) == 0x000008, "Wrong alignment on UUI_Tooltip_PassiveSkill_C");
static_assert(sizeof(UUI_Tooltip_PassiveSkill_C) == 0x000788, "Wrong size on UUI_Tooltip_PassiveSkill_C");
static_assert(offsetof(UUI_Tooltip_PassiveSkill_C, Txt_Effects) == 0x000768, "Member 'UUI_Tooltip_PassiveSkill_C::Txt_Effects' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_PassiveSkill_C, Txt_Level) == 0x000770, "Member 'UUI_Tooltip_PassiveSkill_C::Txt_Level' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_PassiveSkill_C, Temp_Level_to_Add) == 0x000778, "Member 'UUI_Tooltip_PassiveSkill_C::Temp_Level_to_Add' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_PassiveSkill_C, NonBoostedPassiveLevel) == 0x00077C, "Member 'UUI_Tooltip_PassiveSkill_C::NonBoostedPassiveLevel' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_PassiveSkill_C, BoostedPassiveLevel) == 0x000780, "Member 'UUI_Tooltip_PassiveSkill_C::BoostedPassiveLevel' has a wrong offset!");
static_assert(offsetof(UUI_Tooltip_PassiveSkill_C, RealPassiveLevel) == 0x000784, "Member 'UUI_Tooltip_PassiveSkill_C::RealPassiveLevel' has a wrong offset!");

}

