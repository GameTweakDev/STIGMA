#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Comp_Indicator_Abnormals

#include "Basic.hpp"

#include "Stigma_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Comp_Indicator_Abnormals.UI_Comp_Indicator_Abnormals_C
// 0x0040 (0x05B8 - 0x0578)
class UUI_Comp_Indicator_Abnormals_C final : public UUI_Comp_Indicator_Abnormals
{
public:
	class UWidgetAnimation*                       UI_OnHide;                                         // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_OnShow;                                         // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_Abnormal_Icon_C*                    ElectricShock_Sample;                              // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Abnormal_Icon_C*                    FlashBang_Sample;                                  // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Abnormal_Icon_C*                    GasSmoke_Sample;                                   // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Abnormal_Icon_C*                    HeadShot_Sample;                                   // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Abnormal_Icon_C*                    LegInjury_Sample;                                  // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Abnormal_Icon_C*                    WPSmoke_Sample;                                    // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	bool OnSynchronizeProperties();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Comp_Indicator_Abnormals_C">();
	}
	static class UUI_Comp_Indicator_Abnormals_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Comp_Indicator_Abnormals_C>();
	}
};
static_assert(alignof(UUI_Comp_Indicator_Abnormals_C) == 0x000008, "Wrong alignment on UUI_Comp_Indicator_Abnormals_C");
static_assert(sizeof(UUI_Comp_Indicator_Abnormals_C) == 0x0005B8, "Wrong size on UUI_Comp_Indicator_Abnormals_C");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, UI_OnHide) == 0x000578, "Member 'UUI_Comp_Indicator_Abnormals_C::UI_OnHide' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, UI_OnShow) == 0x000580, "Member 'UUI_Comp_Indicator_Abnormals_C::UI_OnShow' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, ElectricShock_Sample) == 0x000588, "Member 'UUI_Comp_Indicator_Abnormals_C::ElectricShock_Sample' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, FlashBang_Sample) == 0x000590, "Member 'UUI_Comp_Indicator_Abnormals_C::FlashBang_Sample' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, GasSmoke_Sample) == 0x000598, "Member 'UUI_Comp_Indicator_Abnormals_C::GasSmoke_Sample' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, HeadShot_Sample) == 0x0005A0, "Member 'UUI_Comp_Indicator_Abnormals_C::HeadShot_Sample' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, LegInjury_Sample) == 0x0005A8, "Member 'UUI_Comp_Indicator_Abnormals_C::LegInjury_Sample' has a wrong offset!");
static_assert(offsetof(UUI_Comp_Indicator_Abnormals_C, WPSmoke_Sample) == 0x0005B0, "Member 'UUI_Comp_Indicator_Abnormals_C::WPSmoke_Sample' has a wrong offset!");

}

