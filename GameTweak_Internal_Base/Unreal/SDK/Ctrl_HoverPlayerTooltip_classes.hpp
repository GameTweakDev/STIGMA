#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_HoverPlayerTooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_HoverPlayerTooltip.Ctrl_HoverPlayerTooltip_C
// 0x0080 (0x0570 - 0x04F0)
class UCtrl_HoverPlayerTooltip_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_HoverMenu_C*                      Ctrl_HoverMenu;                                    // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_88;                                          // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Tier;                                          // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Level;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_NameTag;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TXT_Nickname;                                      // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Tier;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FHoverMenuEntry>                MenuEntries;                                       // 0x0530(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UUserProfile*                           BriefUser;                                         // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETier                                         Tier;                                              // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_39E1[0x7];                                     // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FUserName                              Nickname;                                          // 0x0550(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_Ctrl_HoverPlayerTooltip(int32 EntryPoint);
	void SetLevel(int32 _level);
	void SetMenuEntries(TArray<struct FHoverMenuEntry>& _entries);
	void SetMenuVisibility(class FName _id, bool _enable);
	void SetNickname(const struct FUserName& _Name);
	void SetTier(ETier _tier);
	void UpdateLevel();
	void UpdateNickname();
	void UpdateTier();
	void UpdateUI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_HoverPlayerTooltip_C">();
	}
	static class UCtrl_HoverPlayerTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_HoverPlayerTooltip_C>();
	}
};
static_assert(alignof(UCtrl_HoverPlayerTooltip_C) == 0x000008, "Wrong alignment on UCtrl_HoverPlayerTooltip_C");
static_assert(sizeof(UCtrl_HoverPlayerTooltip_C) == 0x000570, "Wrong size on UCtrl_HoverPlayerTooltip_C");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_HoverPlayerTooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, Ctrl_HoverMenu) == 0x0004F8, "Member 'UCtrl_HoverPlayerTooltip_C::Ctrl_HoverMenu' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, Image_88) == 0x000500, "Member 'UCtrl_HoverPlayerTooltip_C::Image_88' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, IMG_Tier) == 0x000508, "Member 'UCtrl_HoverPlayerTooltip_C::IMG_Tier' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, Txt_Level) == 0x000510, "Member 'UCtrl_HoverPlayerTooltip_C::Txt_Level' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, TXT_NameTag) == 0x000518, "Member 'UCtrl_HoverPlayerTooltip_C::TXT_NameTag' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, TXT_Nickname) == 0x000520, "Member 'UCtrl_HoverPlayerTooltip_C::TXT_Nickname' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, TXT_Tier) == 0x000528, "Member 'UCtrl_HoverPlayerTooltip_C::TXT_Tier' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, MenuEntries) == 0x000530, "Member 'UCtrl_HoverPlayerTooltip_C::MenuEntries' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, BriefUser) == 0x000540, "Member 'UCtrl_HoverPlayerTooltip_C::BriefUser' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, Tier) == 0x000548, "Member 'UCtrl_HoverPlayerTooltip_C::Tier' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, Nickname) == 0x000550, "Member 'UCtrl_HoverPlayerTooltip_C::Nickname' has a wrong offset!");
static_assert(offsetof(UCtrl_HoverPlayerTooltip_C, Level) == 0x000568, "Member 'UCtrl_HoverPlayerTooltip_C::Level' has a wrong offset!");

}

