#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_PassLevelRewardSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.ExecuteUbergraph_UI_PassLevelRewardSlot
// 0x00A8 (0x00A8 - 0x0000)
struct UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event__level;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	bool                                          K2Node_Event__is_premium;                          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8A[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	ERewardItemState                              K2Node_Event__reward_state;                        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__locked;                              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot) == 0x000008, "Wrong alignment on UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot");
static_assert(sizeof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot) == 0x0000A8, "Wrong size on UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, EntryPoint) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_Event__level) == 0x000004, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_Event__level' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_MakeArray_Array) == 0x000070, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_Event__is_premium) == 0x000080, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_Event__is_premium' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, CallFunc_Format_ReturnValue) == 0x000088, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_Event__reward_state) == 0x0000A0, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_Event__reward_state' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_SwitchEnum_CmpSuccess) == 0x0000A1, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot, K2Node_Event__locked) == 0x0000A2, "Member 'UI_PassLevelRewardSlot_C_ExecuteUbergraph_UI_PassLevelRewardSlot::K2Node_Event__locked' has a wrong offset!");

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.Get_Img_Icon_Visibility
// 0x0003 (0x0003 - 0x0000)
struct UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility) == 0x000001, "Wrong alignment on UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility");
static_assert(sizeof(UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility) == 0x000003, "Wrong size on UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility");
static_assert(offsetof(UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility, ReturnValue) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'UI_PassLevelRewardSlot_C_Get_Img_Icon_Visibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.SetPremiumLocked
// 0x0001 (0x0001 - 0x0000)
struct UI_PassLevelRewardSlot_C_SetPremiumLocked final
{
public:
	bool                                          _locked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_SetPremiumLocked) == 0x000001, "Wrong alignment on UI_PassLevelRewardSlot_C_SetPremiumLocked");
static_assert(sizeof(UI_PassLevelRewardSlot_C_SetPremiumLocked) == 0x000001, "Wrong size on UI_PassLevelRewardSlot_C_SetPremiumLocked");
static_assert(offsetof(UI_PassLevelRewardSlot_C_SetPremiumLocked, _locked) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_SetPremiumLocked::_locked' has a wrong offset!");

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.SetPremiumTag
// 0x0001 (0x0001 - 0x0000)
struct UI_PassLevelRewardSlot_C_SetPremiumTag final
{
public:
	bool                                          _is_premium;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_SetPremiumTag) == 0x000001, "Wrong alignment on UI_PassLevelRewardSlot_C_SetPremiumTag");
static_assert(sizeof(UI_PassLevelRewardSlot_C_SetPremiumTag) == 0x000001, "Wrong size on UI_PassLevelRewardSlot_C_SetPremiumTag");
static_assert(offsetof(UI_PassLevelRewardSlot_C_SetPremiumTag, _is_premium) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_SetPremiumTag::_is_premium' has a wrong offset!");

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.SetRewardState
// 0x0001 (0x0001 - 0x0000)
struct UI_PassLevelRewardSlot_C_SetRewardState final
{
public:
	ERewardItemState                              _reward_state;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_SetRewardState) == 0x000001, "Wrong alignment on UI_PassLevelRewardSlot_C_SetRewardState");
static_assert(sizeof(UI_PassLevelRewardSlot_C_SetRewardState) == 0x000001, "Wrong size on UI_PassLevelRewardSlot_C_SetRewardState");
static_assert(offsetof(UI_PassLevelRewardSlot_C_SetRewardState, _reward_state) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_SetRewardState::_reward_state' has a wrong offset!");

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.SetTargetLevel
// 0x0004 (0x0004 - 0x0000)
struct UI_PassLevelRewardSlot_C_SetTargetLevel final
{
public:
	int32                                         _level;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_SetTargetLevel) == 0x000004, "Wrong alignment on UI_PassLevelRewardSlot_C_SetTargetLevel");
static_assert(sizeof(UI_PassLevelRewardSlot_C_SetTargetLevel) == 0x000004, "Wrong size on UI_PassLevelRewardSlot_C_SetTargetLevel");
static_assert(offsetof(UI_PassLevelRewardSlot_C_SetTargetLevel, _level) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_SetTargetLevel::_level' has a wrong offset!");

// Function UI_PassLevelRewardSlot.UI_PassLevelRewardSlot_C.UpdateSpacerSize
// 0x0018 (0x0018 - 0x0000)
struct UI_PassLevelRewardSlot_C_UpdateSpacerSize final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E8B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevelRewardSlot_C_UpdateSpacerSize) == 0x000008, "Wrong alignment on UI_PassLevelRewardSlot_C_UpdateSpacerSize");
static_assert(sizeof(UI_PassLevelRewardSlot_C_UpdateSpacerSize) == 0x000018, "Wrong size on UI_PassLevelRewardSlot_C_UpdateSpacerSize");
static_assert(offsetof(UI_PassLevelRewardSlot_C_UpdateSpacerSize, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_PassLevelRewardSlot_C_UpdateSpacerSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PassLevelRewardSlot_C_UpdateSpacerSize, CallFunc_GetDesiredSize_ReturnValue) == 0x000008, "Member 'UI_PassLevelRewardSlot_C_UpdateSpacerSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");

}

