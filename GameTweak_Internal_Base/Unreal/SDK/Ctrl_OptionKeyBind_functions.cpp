#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_OptionKeyBind

#include "Basic.hpp"

#include "Ctrl_OptionKeyBind_classes.hpp"
#include "Ctrl_OptionKeyBind_parameters.hpp"


namespace SDK
{

// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.BndEvt__Ctrl_OptionKeyBind_Button_73_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UCtrl_OptionKeyBind_C::BndEvt__Ctrl_OptionKeyBind_Button_73_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "BndEvt__Ctrl_OptionKeyBind_Button_73_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCtrl_OptionKeyBind_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.ExecuteUbergraph_Ctrl_OptionKeyBind
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_OptionKeyBind_C::ExecuteUbergraph_Ctrl_OptionKeyBind(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "ExecuteUbergraph_Ctrl_OptionKeyBind");

	Params::Ctrl_OptionKeyBind_C_ExecuteUbergraph_Ctrl_OptionKeyBind Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnFocusLost
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UCtrl_OptionKeyBind_C::OnFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnFocusLost");

	Params::Ctrl_OptionKeyBind_C_OnFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnGetToolTip_KeyBind
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UCtrl_OptionKeyBind_C::OnGetToolTip_KeyBind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnGetToolTip_KeyBind");

	Params::Ctrl_OptionKeyBind_C_OnGetToolTip_KeyBind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UCtrl_OptionKeyBind_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnMouseButtonUp");

	Params::Ctrl_OptionKeyBind_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UCtrl_OptionKeyBind_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnMouseEnter");

	Params::Ctrl_OptionKeyBind_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UCtrl_OptionKeyBind_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnMouseLeave");

	Params::Ctrl_OptionKeyBind_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UCtrl_OptionKeyBind_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnMouseMove");

	Params::Ctrl_OptionKeyBind_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnSynchronizeProperties
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UCtrl_OptionKeyBind_C::OnSynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnSynchronizeProperties");

	Params::Ctrl_OptionKeyBind_C_OnSynchronizeProperties Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.OnVisibility_Duplicate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UCtrl_OptionKeyBind_C::OnVisibility_Duplicate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "OnVisibility_Duplicate");

	Params::Ctrl_OptionKeyBind_C_OnVisibility_Duplicate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.Popup Input Guide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCtrl_OptionKeyBind_C::Popup_Input_Guide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "Popup Input Guide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCtrl_OptionKeyBind_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "Tick");

	Params::Ctrl_OptionKeyBind_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Ctrl_OptionKeyBind.Ctrl_OptionKeyBind_C.UpdateUI
// (Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCtrl_OptionKeyBindBase*          _key_binder                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FKeyMapping                      _mapping                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UCtrl_OptionKeyBind_C::UpdateUI(class UCtrl_OptionKeyBindBase* _key_binder, const struct FKeyMapping& _mapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Ctrl_OptionKeyBind_C", "UpdateUI");

	Params::Ctrl_OptionKeyBind_C_UpdateUI Parms{};

	Parms._key_binder = _key_binder;
	Parms._mapping = std::move(_mapping);

	UObject::ProcessEvent(Func, &Parms);
}

}

