#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: AIDeco_AbnormalCheck

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function AIDeco_AbnormalCheck.AIDeco_AbnormalCheck_C.IsAbonromalChara
// 0x0018 (0x0018 - 0x0000)
struct AIDeco_AbnormalCheck_C_IsAbonromalChara final
{
public:
	class ACharaBase*                             Chara;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_abnormal;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovable_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyLowerState                               CallFunc_GetLowerState_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDied_ReturnValue;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIDeco_AbnormalCheck_C_IsAbonromalChara) == 0x000008, "Wrong alignment on AIDeco_AbnormalCheck_C_IsAbonromalChara");
static_assert(sizeof(AIDeco_AbnormalCheck_C_IsAbonromalChara) == 0x000018, "Wrong size on AIDeco_AbnormalCheck_C_IsAbonromalChara");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, Chara) == 0x000000, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::Chara' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, Is_abnormal) == 0x000008, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::Is_abnormal' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_IsMovable_ReturnValue) == 0x00000A, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_IsMovable_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_GetLowerState_ReturnValue) == 0x00000C, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_GetLowerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_IsDied_ReturnValue) == 0x00000D, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_IsDied_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000F, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_IsAbonromalChara, CallFunc_BooleanOR_ReturnValue_2) == 0x000012, "Member 'AIDeco_AbnormalCheck_C_IsAbonromalChara::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function AIDeco_AbnormalCheck.AIDeco_AbnormalCheck_C.PerformConditionCheck
// 0x0020 (0x0020 - 0x0000)
struct AIDeco_AbnormalCheck_C_PerformConditionCheck final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAbonromalChara_is_abnormal;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIDeco_AbnormalCheck_C_PerformConditionCheck) == 0x000008, "Wrong alignment on AIDeco_AbnormalCheck_C_PerformConditionCheck");
static_assert(sizeof(AIDeco_AbnormalCheck_C_PerformConditionCheck) == 0x000020, "Wrong size on AIDeco_AbnormalCheck_C_PerformConditionCheck");
static_assert(offsetof(AIDeco_AbnormalCheck_C_PerformConditionCheck, OwnerActor) == 0x000000, "Member 'AIDeco_AbnormalCheck_C_PerformConditionCheck::OwnerActor' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_PerformConditionCheck, ReturnValue) == 0x000008, "Member 'AIDeco_AbnormalCheck_C_PerformConditionCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_PerformConditionCheck, K2Node_DynamicCast_AsChara_Base) == 0x000010, "Member 'AIDeco_AbnormalCheck_C_PerformConditionCheck::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_PerformConditionCheck, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AIDeco_AbnormalCheck_C_PerformConditionCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_PerformConditionCheck, CallFunc_IsAbonromalChara_is_abnormal) == 0x000019, "Member 'AIDeco_AbnormalCheck_C_PerformConditionCheck::CallFunc_IsAbonromalChara_is_abnormal' has a wrong offset!");
static_assert(offsetof(AIDeco_AbnormalCheck_C_PerformConditionCheck, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'AIDeco_AbnormalCheck_C_PerformConditionCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

