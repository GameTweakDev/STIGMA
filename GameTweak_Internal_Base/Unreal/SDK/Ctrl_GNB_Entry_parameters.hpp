#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_GNB_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Stigma_structs.hpp"
#include "GNB_Entry_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.UpdateSelection
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_GNB_Entry_C_UpdateSelection final
{
public:
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_UpdateSelection) == 0x000001, "Wrong alignment on Ctrl_GNB_Entry_C_UpdateSelection");
static_assert(sizeof(Ctrl_GNB_Entry_C_UpdateSelection) == 0x000001, "Wrong size on Ctrl_GNB_Entry_C_UpdateSelection");
static_assert(offsetof(Ctrl_GNB_Entry_C_UpdateSelection, CallFunc_IsSelected_ReturnValue) == 0x000000, "Member 'Ctrl_GNB_Entry_C_UpdateSelection::CallFunc_IsSelected_ReturnValue' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.SetSelectedPage
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_GNB_Entry_C_SetSelectedPage final
{
public:
	ELobbyPage                                    _page;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4181[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FGNB_Entry>                     _sub_pages;                                        // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Param_Select;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_child_selected;                                 // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_SetSelectedPage) == 0x000008, "Wrong alignment on Ctrl_GNB_Entry_C_SetSelectedPage");
static_assert(sizeof(Ctrl_GNB_Entry_C_SetSelectedPage) == 0x000020, "Wrong size on Ctrl_GNB_Entry_C_SetSelectedPage");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, _page) == 0x000000, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::_page' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, _sub_pages) == 0x000008, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::_sub_pages' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, Param_Select) == 0x000018, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::Param_Select' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, Is_child_selected) == 0x000019, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::Is_child_selected' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, CallFunc_Set_Contains_ReturnValue) == 0x00001A, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_SetSelectedPage, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'Ctrl_GNB_Entry_C_SetSelectedPage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_GNB_Entry_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_GNB_Entry_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_GNB_Entry_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_GNB_Entry_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_GNB_Entry_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_GNB_Entry_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.OnEVENT_Select_End
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_GNB_Entry_C_OnEVENT_Select_End final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_OnEVENT_Select_End) == 0x000001, "Wrong alignment on Ctrl_GNB_Entry_C_OnEVENT_Select_End");
static_assert(sizeof(Ctrl_GNB_Entry_C_OnEVENT_Select_End) == 0x000001, "Wrong size on Ctrl_GNB_Entry_C_OnEVENT_Select_End");
static_assert(offsetof(Ctrl_GNB_Entry_C_OnEVENT_Select_End, _selected) == 0x000000, "Member 'Ctrl_GNB_Entry_C_OnEVENT_Select_End::_selected' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.OnClicked__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct Ctrl_GNB_Entry_C_OnClicked__DelegateSignature final
{
public:
	ELobbyPage                                    _page;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemCategory                                 _option;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_OnClicked__DelegateSignature) == 0x000001, "Wrong alignment on Ctrl_GNB_Entry_C_OnClicked__DelegateSignature");
static_assert(sizeof(Ctrl_GNB_Entry_C_OnClicked__DelegateSignature) == 0x000002, "Wrong size on Ctrl_GNB_Entry_C_OnClicked__DelegateSignature");
static_assert(offsetof(Ctrl_GNB_Entry_C_OnClicked__DelegateSignature, _page) == 0x000000, "Member 'Ctrl_GNB_Entry_C_OnClicked__DelegateSignature::_page' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_OnClicked__DelegateSignature, _option) == 0x000001, "Member 'Ctrl_GNB_Entry_C_OnClicked__DelegateSignature::_option' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.Get_IMG_Glow_Brush
// 0x01E0 (0x01E0 - 0x0000)
struct Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            Tint;                                              // 0x00D0(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00E4(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00F8(0x0014)()
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4182[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0110(0x00D0)()
};
static_assert(alignof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush) == 0x000010, "Wrong alignment on Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush");
static_assert(sizeof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush) == 0x0001E0, "Wrong size on Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, ReturnValue) == 0x000000, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, Tint) == 0x0000D0, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::Tint' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, K2Node_MakeStruct_SlateColor) == 0x0000E4, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, K2Node_MakeStruct_SlateColor_1) == 0x0000F8, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, CallFunc_IsSelected_ReturnValue) == 0x00010C, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::CallFunc_IsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, CallFunc_IsHovered_ReturnValue) == 0x00010D, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush, K2Node_MakeStruct_SlateBrush) == 0x000110, "Member 'Ctrl_GNB_Entry_C_Get_IMG_Glow_Brush::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.ExecuteUbergraph_Ctrl_GNB_Entry
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__selected;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry) == 0x000004, "Wrong alignment on Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry");
static_assert(sizeof(Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry) == 0x000008, "Wrong size on Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry");
static_assert(offsetof(Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry, EntryPoint) == 0x000000, "Member 'Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry, K2Node_Event__selected) == 0x000004, "Member 'Ctrl_GNB_Entry_C_ExecuteUbergraph_Ctrl_GNB_Entry::K2Node_Event__selected' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.BIND_Underline_Visibility
// 0x0003 (0x0003 - 0x0000)
struct Ctrl_GNB_Entry_C_BIND_Underline_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_BIND_Underline_Visibility) == 0x000001, "Wrong alignment on Ctrl_GNB_Entry_C_BIND_Underline_Visibility");
static_assert(sizeof(Ctrl_GNB_Entry_C_BIND_Underline_Visibility) == 0x000003, "Wrong size on Ctrl_GNB_Entry_C_BIND_Underline_Visibility");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_Underline_Visibility, ReturnValue) == 0x000000, "Member 'Ctrl_GNB_Entry_C_BIND_Underline_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_Underline_Visibility, CallFunc_IsSelected_ReturnValue) == 0x000001, "Member 'Ctrl_GNB_Entry_C_BIND_Underline_Visibility::CallFunc_IsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_Underline_Visibility, CallFunc_IsHovered_ReturnValue) == 0x000002, "Member 'Ctrl_GNB_Entry_C_BIND_Underline_Visibility::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.BIND_Title_Color
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_GNB_Entry_C_BIND_Title_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_BIND_Title_Color) == 0x000004, "Wrong alignment on Ctrl_GNB_Entry_C_BIND_Title_Color");
static_assert(sizeof(Ctrl_GNB_Entry_C_BIND_Title_Color) == 0x000018, "Wrong size on Ctrl_GNB_Entry_C_BIND_Title_Color");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_Title_Color, ReturnValue) == 0x000000, "Member 'Ctrl_GNB_Entry_C_BIND_Title_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_Title_Color, CallFunc_IsSelected_ReturnValue) == 0x000014, "Member 'Ctrl_GNB_Entry_C_BIND_Title_Color::CallFunc_IsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_Title_Color, CallFunc_IsHovered_ReturnValue) == 0x000015, "Member 'Ctrl_GNB_Entry_C_BIND_Title_Color::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function Ctrl_GNB_Entry.Ctrl_GNB_Entry_C.BIND_BG_Alpha
// 0x0014 (0x0014 - 0x0000)
struct Ctrl_GNB_Entry_C_BIND_BG_Alpha final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GNB_Entry_C_BIND_BG_Alpha) == 0x000004, "Wrong alignment on Ctrl_GNB_Entry_C_BIND_BG_Alpha");
static_assert(sizeof(Ctrl_GNB_Entry_C_BIND_BG_Alpha) == 0x000014, "Wrong size on Ctrl_GNB_Entry_C_BIND_BG_Alpha");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_BG_Alpha, ReturnValue) == 0x000000, "Member 'Ctrl_GNB_Entry_C_BIND_BG_Alpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_BG_Alpha, CallFunc_IsSelected_ReturnValue) == 0x000010, "Member 'Ctrl_GNB_Entry_C_BIND_BG_Alpha::CallFunc_IsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GNB_Entry_C_BIND_BG_Alpha, CallFunc_IsHovered_ReturnValue) == 0x000011, "Member 'Ctrl_GNB_Entry_C_BIND_BG_Alpha::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

}

