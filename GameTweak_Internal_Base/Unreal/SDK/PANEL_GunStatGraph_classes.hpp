#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: PANEL_GunStatGraph

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PANEL_GunStatGraph.PANEL_GunStatGraph_C
// 0x0100 (0x05F0 - 0x04F0)
class UPANEL_GunStatGraph_C final : public UPreviewableWidget
{
public:
	class UCTRL_GunStatGraph_C*                   GRAPH_Accuracy;                                    // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCTRL_GunStatGraph_C*                   GRAPH_Bullets;                                     // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCTRL_GunStatGraph_C*                   GRAPH_Damage;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCTRL_GunStatGraph_C*                   GRAPH_FireRate;                                    // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCTRL_GunStatGraph_C*                   GRAPH_Reload;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCTRL_GunStatGraph_C*                   GRAPH_Stability;                                   // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             GRID_Container;                                    // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECharaType                                    CharaType;                                         // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D17[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UGunObject*                             GunObject;                                         // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGunBuffEffect                         BoosterEffect;                                     // 0x0538(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGunBuffEffect                         PassiveSkillEffect;                                // 0x0558(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGunGraphValues                        GraphValue_Gun;                                    // 0x0578(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGunGraphValues                        GraphValue_Booster;                                // 0x0594(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FGunGraphValues                        GraphValue_Passive;                                // 0x05B0(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          HorizontalLayout;                                  // 0x05CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D18[0x3];                                     // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunGraphValues                        GraphValue_GunParts;                               // 0x05D0(0x001C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          Is_Init;                                           // 0x05EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Config(ECharaType _chara_type, class UGunObject* _gun_object, bool _is_init);
	class UWidget* OnGetTooltip_Accuracy();
	class UWidget* OnGetTooltip_Bullets();
	class UWidget* OnGetTooltip_Damage();
	class UWidget* OnGetTooltip_FireRate();
	class UWidget* OnGetTooltip_Reload();
	class UWidget* OnGetTooltip_Stability();
	bool OnSynchronizeProperties();
	void Set_Current_Gun_Object(class UGunObject* _gun_object);
	void SetBoosters(TArray<struct FItemID_Booster>& _boosters);
	void SetPassiveSkills(TArray<struct FPassiveSkill>& _passive_skills);
	void UpdateGraphs();
	void UpdateLayout();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PANEL_GunStatGraph_C">();
	}
	static class UPANEL_GunStatGraph_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPANEL_GunStatGraph_C>();
	}
};
static_assert(alignof(UPANEL_GunStatGraph_C) == 0x000008, "Wrong alignment on UPANEL_GunStatGraph_C");
static_assert(sizeof(UPANEL_GunStatGraph_C) == 0x0005F0, "Wrong size on UPANEL_GunStatGraph_C");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRAPH_Accuracy) == 0x0004F0, "Member 'UPANEL_GunStatGraph_C::GRAPH_Accuracy' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRAPH_Bullets) == 0x0004F8, "Member 'UPANEL_GunStatGraph_C::GRAPH_Bullets' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRAPH_Damage) == 0x000500, "Member 'UPANEL_GunStatGraph_C::GRAPH_Damage' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRAPH_FireRate) == 0x000508, "Member 'UPANEL_GunStatGraph_C::GRAPH_FireRate' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRAPH_Reload) == 0x000510, "Member 'UPANEL_GunStatGraph_C::GRAPH_Reload' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRAPH_Stability) == 0x000518, "Member 'UPANEL_GunStatGraph_C::GRAPH_Stability' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GRID_Container) == 0x000520, "Member 'UPANEL_GunStatGraph_C::GRID_Container' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, CharaType) == 0x000528, "Member 'UPANEL_GunStatGraph_C::CharaType' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GunObject) == 0x000530, "Member 'UPANEL_GunStatGraph_C::GunObject' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, BoosterEffect) == 0x000538, "Member 'UPANEL_GunStatGraph_C::BoosterEffect' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, PassiveSkillEffect) == 0x000558, "Member 'UPANEL_GunStatGraph_C::PassiveSkillEffect' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GraphValue_Gun) == 0x000578, "Member 'UPANEL_GunStatGraph_C::GraphValue_Gun' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GraphValue_Booster) == 0x000594, "Member 'UPANEL_GunStatGraph_C::GraphValue_Booster' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GraphValue_Passive) == 0x0005B0, "Member 'UPANEL_GunStatGraph_C::GraphValue_Passive' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, HorizontalLayout) == 0x0005CC, "Member 'UPANEL_GunStatGraph_C::HorizontalLayout' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, GraphValue_GunParts) == 0x0005D0, "Member 'UPANEL_GunStatGraph_C::GraphValue_GunParts' has a wrong offset!");
static_assert(offsetof(UPANEL_GunStatGraph_C, Is_Init) == 0x0005EC, "Member 'UPANEL_GunStatGraph_C::Is_Init' has a wrong offset!");

}

