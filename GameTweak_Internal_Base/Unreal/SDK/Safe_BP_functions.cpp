#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Safe_BP

#include "Basic.hpp"

#include "Safe_BP_classes.hpp"
#include "Safe_BP_parameters.hpp"


namespace SDK
{

// Function Safe_BP.Safe_BP_C.BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ASafe_BP_C::BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Safe_BP.Safe_BP_C.BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASafe_BP_C::BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");

	Params::Safe_BP_C_BndEvt__Safe_BP__SafeArea_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Safe_BP.Safe_BP_C.ExecuteUbergraph_Safe_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASafe_BP_C::ExecuteUbergraph_Safe_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "ExecuteUbergraph_Safe_BP");

	Params::Safe_BP_C_ExecuteUbergraph_Safe_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Safe_BP.Safe_BP_C.GetIndicatorPosComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UIndicatorPosComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UIndicatorPosComponent* ASafe_BP_C::GetIndicatorPosComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "GetIndicatorPosComponent");

	Params::Safe_BP_C_GetIndicatorPosComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.HackingComplete
// (Event, Public, BlueprintEvent)

void ASafe_BP_C::HackingComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "HackingComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Safe_BP.Safe_BP_C.OnQueryAddIndiactor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABPGPlayerController*             Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EIndicatorType                          _type                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIndicatorData                   _out_detail                                            (Parm, OutParm, NoDestructor, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASafe_BP_C::OnQueryAddIndiactor(class ABPGPlayerController* Controller, EIndicatorType _type, struct FIndicatorData* _out_detail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "OnQueryAddIndiactor");

	Params::Safe_BP_C_OnQueryAddIndiactor Parms{};

	Parms.Controller = Controller;
	Parms._type = _type;

	UObject::ProcessEvent(Func, &Parms);

	if (_out_detail != nullptr)
		*_out_detail = std::move(Parms._out_detail);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.OnQueryGetDisplayName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EIndicatorType                          _type                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ASafe_BP_C::OnQueryGetDisplayName(EIndicatorType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "OnQueryGetDisplayName");

	Params::Safe_BP_C_OnQueryGetDisplayName Parms{};

	Parms._type = _type;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.OnQueryInteractionPoint
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharaBase*                       _involver                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FInteractionPoint                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)

struct FInteractionPoint ASafe_BP_C::OnQueryInteractionPoint(class ACharaBase* _involver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "OnQueryInteractionPoint");

	Params::Safe_BP_C_OnQueryInteractionPoint Parms{};

	Parms._involver = _involver;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.OnQueryVisibility
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EIndicatorType                          _type                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ASafe_BP_C::OnQueryVisibility(EIndicatorType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "OnQueryVisibility");

	Params::Safe_BP_C_OnQueryVisibility Parms{};

	Parms._type = _type;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.OnQueryWorldTransform
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EIndicatorType                          _type                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform ASafe_BP_C::OnQueryWorldTransform(EIndicatorType _type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "OnQueryWorldTransform");

	Params::Safe_BP_C_OnQueryWorldTransform Parms{};

	Parms._type = _type;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASafe_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Safe_BP.Safe_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASafe_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "ReceiveTick");

	Params::Safe_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Safe_BP.Safe_BP_C.SetHackingScreen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsHacking                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASafe_BP_C::SetHackingScreen(bool IsHacking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "SetHackingScreen");

	Params::Safe_BP_C_SetHackingScreen Parms{};

	Parms.IsHacking = IsHacking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Safe_BP.Safe_BP_C.GetActorDisplayName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ASafe_BP_C::GetActorDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "GetActorDisplayName");

	Params::Safe_BP_C_GetActorDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.GetActorIcon
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UTexture2D* ASafe_BP_C::GetActorIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "GetActorIcon");

	Params::Safe_BP_C_GetActorIcon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Safe_BP.Safe_BP_C.GetDisplayText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ACharaBase*                       _involver                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText ASafe_BP_C::GetDisplayText(class ACharaBase* _involver) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Safe_BP_C", "GetDisplayText");

	Params::Safe_BP_C_GetDisplayText Parms{};

	Parms._involver = _involver;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

