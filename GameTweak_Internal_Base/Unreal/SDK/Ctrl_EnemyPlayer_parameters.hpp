#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_EnemyPlayer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_EnemyPlayer.Ctrl_EnemyPlayer_C.BindPlayer
// 0x0008 (0x0008 - 0x0000)
struct Ctrl_EnemyPlayer_C_BindPlayer final
{
public:
	class AMatchServicedPlayerState*              _player_state;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_EnemyPlayer_C_BindPlayer) == 0x000008, "Wrong alignment on Ctrl_EnemyPlayer_C_BindPlayer");
static_assert(sizeof(Ctrl_EnemyPlayer_C_BindPlayer) == 0x000008, "Wrong size on Ctrl_EnemyPlayer_C_BindPlayer");
static_assert(offsetof(Ctrl_EnemyPlayer_C_BindPlayer, _player_state) == 0x000000, "Member 'Ctrl_EnemyPlayer_C_BindPlayer::_player_state' has a wrong offset!");

// Function Ctrl_EnemyPlayer.Ctrl_EnemyPlayer_C.UpdateState
// 0x0030 (0x0030 - 0x0000)
struct Ctrl_EnemyPlayer_C_UpdateState final
{
public:
	bool                                          CallFunc_HasValidValue_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReadyToFight_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAA[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_EnemyPlayer_C_UpdateState) == 0x000004, "Wrong alignment on Ctrl_EnemyPlayer_C_UpdateState");
static_assert(sizeof(Ctrl_EnemyPlayer_C_UpdateState) == 0x000030, "Wrong size on Ctrl_EnemyPlayer_C_UpdateState");
static_assert(offsetof(Ctrl_EnemyPlayer_C_UpdateState, CallFunc_HasValidValue_ReturnValue) == 0x000000, "Member 'Ctrl_EnemyPlayer_C_UpdateState::CallFunc_HasValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_EnemyPlayer_C_UpdateState, CallFunc_IsReadyToFight_ReturnValue) == 0x000001, "Member 'Ctrl_EnemyPlayer_C_UpdateState::CallFunc_IsReadyToFight_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_EnemyPlayer_C_UpdateState, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'Ctrl_EnemyPlayer_C_UpdateState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_EnemyPlayer_C_UpdateState, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'Ctrl_EnemyPlayer_C_UpdateState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Ctrl_EnemyPlayer_C_UpdateState, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'Ctrl_EnemyPlayer_C_UpdateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

