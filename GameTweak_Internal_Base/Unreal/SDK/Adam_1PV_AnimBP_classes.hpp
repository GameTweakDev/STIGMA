#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Adam_1PV_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Adam_1PV_AnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Stigma_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Adam_1PV_AnimBP.Adam_1PV_AnimBP_C
// 0x0BF0 (0x1410 - 0x0820)
class UAdam_1PV_AnimBP_C : public USpecterAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0820(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Adam_1PV_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0828(0x0004)(HasGetValueTypeHash)
	uint8                                         Pad_3771[0x4];                                     // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0830(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0838(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0840(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x0860(0x0048)()
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend_1;                     // 0x08A8(0x0050)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x08F8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x0940(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0988(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x09D0(0x0048)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x0A18(0x00D0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x0AE8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0B68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x0B90(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x0BB8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x0BE0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x0C08(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0C30(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x0CB0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0CD8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0D20(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x0D68(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0D90(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0E80(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0EA8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0EF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0F18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0F40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0FB8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0FE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1028(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1048(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1090(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x10B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x10F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1118(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x11E0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1228(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1270(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1298(0x0048)()
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend;                       // 0x12E0(0x0050)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1330(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1378(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x13A0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x13E8(0x0028)()

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Adam_1PV_AnimBP_AnimGraphNode_TransitionResult_35A5DE34428D7767FC9DA9BBDDD318F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Adam_1PV_AnimBP_AnimGraphNode_TransitionResult_5AF659B54910C62FBFEDBE94463076B7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Adam_1PV_AnimBP_AnimGraphNode_TransitionResult_9DE672A74F122B7EB1009FB84ABCAC3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Adam_1PV_AnimBP_AnimGraphNode_TransitionResult_C4CF790A4A7BF4A54CDA3791AC0AEA8B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Adam_1PV_AnimBP_AnimGraphNode_TransitionResult_D114852043D0622E59BCDEAAA0B015CA();
	void ExecuteUbergraph_Adam_1PV_AnimBP(int32 EntryPoint);
	void On_State_Entry_Idle(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void On_State_Entry_Loop(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Adam_1PV_AnimBP_C">();
	}
	static class UAdam_1PV_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAdam_1PV_AnimBP_C>();
	}
};
static_assert(alignof(UAdam_1PV_AnimBP_C) == 0x000010, "Wrong alignment on UAdam_1PV_AnimBP_C");
static_assert(sizeof(UAdam_1PV_AnimBP_C) == 0x001410, "Wrong size on UAdam_1PV_AnimBP_C");
static_assert(offsetof(UAdam_1PV_AnimBP_C, UberGraphFrame) == 0x000820, "Member 'UAdam_1PV_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, __AnimBlueprintMutables) == 0x000828, "Member 'UAdam_1PV_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000830, "Member 'UAdam_1PV_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimBlueprintExtension_Base) == 0x000838, "Member 'UAdam_1PV_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Root) == 0x000840, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_7) == 0x000860, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_MultiWayBlend_1) == 0x0008A8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_MultiWayBlend_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x0008F8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_6) == 0x000940, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_5) == 0x000988, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_4) == 0x0009D0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x000A18, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x000AE8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_10) == 0x000B68, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_9) == 0x000B90, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_8) == 0x000BB8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_7) == 0x000BE0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x000C08, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x000C30, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x000CB0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000CD8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000D20, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x000D68, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000D90, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x000E80, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_3) == 0x000EA8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x000EF0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000F18, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000F40, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000F68, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x000F90, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_TransitionResult) == 0x000FB8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x000FE0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_StateResult_2) == 0x001028, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001048, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001090, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0010B0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_StateResult) == 0x0010F8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_StateMachine) == 0x001118, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0011E0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_2) == 0x001228, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x001270, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001298, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_MultiWayBlend) == 0x0012E0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_MultiWayBlend' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot_1) == 0x001330, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001378, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_Slot) == 0x0013A0, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAdam_1PV_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x0013E8, "Member 'UAdam_1PV_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");

}

