#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Costume_ArmorPart

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Costume_ArmorPart.UI_Costume_ArmorPart_C
// 0x0068 (0x0558 - 0x04F0)
class UUI_Costume_ArmorPart_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Blink_Anim;                                        // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IMG_Blink;                                         // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Image;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x0518(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ArmorColor;                                        // 0x0528(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GearColor;                                         // 0x0538(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BlinkingElapsedTime;                               // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsBlinking;                                        // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Costume_ArmorPart(int32 EntryPoint);
	bool OnSynchronizeProperties();
	void PlayBlink(double _delta);
	void SetArmorColor();
	void SetDefaultColor();
	void SetGearColor();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Costume_ArmorPart_C">();
	}
	static class UUI_Costume_ArmorPart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Costume_ArmorPart_C>();
	}
};
static_assert(alignof(UUI_Costume_ArmorPart_C) == 0x000008, "Wrong alignment on UUI_Costume_ArmorPart_C");
static_assert(sizeof(UUI_Costume_ArmorPart_C) == 0x000558, "Wrong size on UUI_Costume_ArmorPart_C");
static_assert(offsetof(UUI_Costume_ArmorPart_C, UberGraphFrame) == 0x0004F0, "Member 'UUI_Costume_ArmorPart_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, Blink_Anim) == 0x0004F8, "Member 'UUI_Costume_ArmorPart_C::Blink_Anim' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, IMG_Blink) == 0x000500, "Member 'UUI_Costume_ArmorPart_C::IMG_Blink' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, IMG_Image) == 0x000508, "Member 'UUI_Costume_ArmorPart_C::IMG_Image' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, Texture) == 0x000510, "Member 'UUI_Costume_ArmorPart_C::Texture' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, DefaultColor) == 0x000518, "Member 'UUI_Costume_ArmorPart_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, ArmorColor) == 0x000528, "Member 'UUI_Costume_ArmorPart_C::ArmorColor' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, GearColor) == 0x000538, "Member 'UUI_Costume_ArmorPart_C::GearColor' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, BlinkingElapsedTime) == 0x000548, "Member 'UUI_Costume_ArmorPart_C::BlinkingElapsedTime' has a wrong offset!");
static_assert(offsetof(UUI_Costume_ArmorPart_C, IsBlinking) == 0x000550, "Member 'UUI_Costume_ArmorPart_C::IsBlinking' has a wrong offset!");

}

