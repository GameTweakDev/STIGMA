#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_DEBUG_Damage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_DEBUG_Damage.UI_DEBUG_Damage_C.ExecuteUbergraph_UI_DEBUG_Damage
// 0x0040 (0x0040 - 0x0000)
struct UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage) == 0x000004, "Wrong alignment on UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage");
static_assert(sizeof(UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage) == 0x000040, "Wrong size on UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage");
static_assert(offsetof(UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage, EntryPoint) == 0x000000, "Member 'UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_DEBUG_Damage_C_ExecuteUbergraph_UI_DEBUG_Damage::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_DEBUG_Damage.UI_DEBUG_Damage_C.GetText_0
// 0x0180 (0x0180 - 0x0000)
struct UI_DEBUG_Damage_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0018(0x0018)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0088(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
};
static_assert(alignof(UI_DEBUG_Damage_C_GetText_0) == 0x000008, "Wrong alignment on UI_DEBUG_Damage_C_GetText_0");
static_assert(sizeof(UI_DEBUG_Damage_C_GetText_0) == 0x000180, "Wrong size on UI_DEBUG_Damage_C_GetText_0");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, ReturnValue) == 0x000000, "Member 'UI_DEBUG_Damage_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000018, "Member 'UI_DEBUG_Damage_C_GetText_0::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'UI_DEBUG_Damage_C_GetText_0::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'UI_DEBUG_Damage_C_GetText_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000088, "Member 'UI_DEBUG_Damage_C_GetText_0::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x0000A0, "Member 'UI_DEBUG_Damage_C_GetText_0::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'UI_DEBUG_Damage_C_GetText_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'UI_DEBUG_Damage_C_GetText_0::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, K2Node_MakeArray_Array) == 0x000158, "Member 'UI_DEBUG_Damage_C_GetText_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_GetText_0, CallFunc_Format_ReturnValue) == 0x000168, "Member 'UI_DEBUG_Damage_C_GetText_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UI_DEBUG_Damage.UI_DEBUG_Damage_C.OnTick
// 0x0098 (0x0098 - 0x0000)
struct UI_DEBUG_Damage_C_OnTick final
{
public:
	struct FSlateFontInfo                         Font;                                              // 0x0000(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0078(0x0020)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DEBUG_Damage_C_OnTick) == 0x000008, "Wrong alignment on UI_DEBUG_Damage_C_OnTick");
static_assert(sizeof(UI_DEBUG_Damage_C_OnTick) == 0x000098, "Wrong size on UI_DEBUG_Damage_C_OnTick");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, Font) == 0x000000, "Member 'UI_DEBUG_Damage_C_OnTick::Font' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, CallFunc_BreakColor_R) == 0x000058, "Member 'UI_DEBUG_Damage_C_OnTick::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, CallFunc_BreakColor_G) == 0x00005C, "Member 'UI_DEBUG_Damage_C_OnTick::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, CallFunc_BreakColor_B) == 0x000060, "Member 'UI_DEBUG_Damage_C_OnTick::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, CallFunc_BreakColor_A) == 0x000064, "Member 'UI_DEBUG_Damage_C_OnTick::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, CallFunc_MakeColor_ReturnValue) == 0x000068, "Member 'UI_DEBUG_Damage_C_OnTick::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_OnTick, K2Node_MakeStruct_FontOutlineSettings) == 0x000078, "Member 'UI_DEBUG_Damage_C_OnTick::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");

// Function UI_DEBUG_Damage.UI_DEBUG_Damage_C.SetDamage
// 0x0010 (0x0010 - 0x0000)
struct UI_DEBUG_Damage_C_SetDamage final
{
public:
	double                                        _hp_damage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        _armor_damage;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DEBUG_Damage_C_SetDamage) == 0x000008, "Wrong alignment on UI_DEBUG_Damage_C_SetDamage");
static_assert(sizeof(UI_DEBUG_Damage_C_SetDamage) == 0x000010, "Wrong size on UI_DEBUG_Damage_C_SetDamage");
static_assert(offsetof(UI_DEBUG_Damage_C_SetDamage, _hp_damage) == 0x000000, "Member 'UI_DEBUG_Damage_C_SetDamage::_hp_damage' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_SetDamage, _armor_damage) == 0x000008, "Member 'UI_DEBUG_Damage_C_SetDamage::_armor_damage' has a wrong offset!");

// Function UI_DEBUG_Damage.UI_DEBUG_Damage_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_DEBUG_Damage_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DEBUG_Damage_C_Tick) == 0x000004, "Wrong alignment on UI_DEBUG_Damage_C_Tick");
static_assert(sizeof(UI_DEBUG_Damage_C_Tick) == 0x00003C, "Wrong size on UI_DEBUG_Damage_C_Tick");
static_assert(offsetof(UI_DEBUG_Damage_C_Tick, MyGeometry) == 0x000000, "Member 'UI_DEBUG_Damage_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_DEBUG_Damage_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_DEBUG_Damage_C_Tick::InDeltaTime' has a wrong offset!");

}

