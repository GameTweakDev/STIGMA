#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: RewardBase_Alert

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RewardBase_Alert.RewardBase_Alert_C
// 0x00C8 (0x0638 - 0x0570)
class URewardBase_Alert_C final : public UPopupBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_OnShow;                                         // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Background_Outline;                                // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bakcground_Img;                                    // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Count_Text;                                        // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_KeyIcon_C*                        Ctrl_KeyIcon;                                      // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Desc_Text;                                         // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_102;                                         // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Back_Normal;                                   // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_Img;                                          // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemNameText;                                      // 0x05C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_Img;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title_Text;                                        // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x05E0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   ItemText;                                          // 0x05F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   ItemDesc;                                          // 0x0610(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                             ItemImage;                                         // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x0630(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          CanClose;                                          // 0x0634(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClosing;                                         // 0x0635(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckCanClose();
	void ClosePopup();
	void Construct();
	void DelayClose();
	void Destruct();
	void ExecuteUbergraph_RewardBase_Alert(int32 EntryPoint);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RewardBase_Alert_C">();
	}
	static class URewardBase_Alert_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URewardBase_Alert_C>();
	}
};
static_assert(alignof(URewardBase_Alert_C) == 0x000008, "Wrong alignment on URewardBase_Alert_C");
static_assert(sizeof(URewardBase_Alert_C) == 0x000638, "Wrong size on URewardBase_Alert_C");
static_assert(offsetof(URewardBase_Alert_C, UberGraphFrame) == 0x000570, "Member 'URewardBase_Alert_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, UI_OnShow) == 0x000578, "Member 'URewardBase_Alert_C::UI_OnShow' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Background_Outline) == 0x000580, "Member 'URewardBase_Alert_C::Background_Outline' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Bakcground_Img) == 0x000588, "Member 'URewardBase_Alert_C::Bakcground_Img' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Count_Text) == 0x000590, "Member 'URewardBase_Alert_C::Count_Text' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Ctrl_KeyIcon) == 0x000598, "Member 'URewardBase_Alert_C::Ctrl_KeyIcon' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Desc_Text) == 0x0005A0, "Member 'URewardBase_Alert_C::Desc_Text' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Image) == 0x0005A8, "Member 'URewardBase_Alert_C::Image' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Image_102) == 0x0005B0, "Member 'URewardBase_Alert_C::Image_102' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, IMG_Back_Normal) == 0x0005B8, "Member 'URewardBase_Alert_C::IMG_Back_Normal' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Item_Img) == 0x0005C0, "Member 'URewardBase_Alert_C::Item_Img' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, ItemNameText) == 0x0005C8, "Member 'URewardBase_Alert_C::ItemNameText' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Line_Img) == 0x0005D0, "Member 'URewardBase_Alert_C::Line_Img' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, Title_Text) == 0x0005D8, "Member 'URewardBase_Alert_C::Title_Text' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, TitleText) == 0x0005E0, "Member 'URewardBase_Alert_C::TitleText' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, ItemText) == 0x0005F8, "Member 'URewardBase_Alert_C::ItemText' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, ItemDesc) == 0x000610, "Member 'URewardBase_Alert_C::ItemDesc' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, ItemImage) == 0x000628, "Member 'URewardBase_Alert_C::ItemImage' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, ItemCount) == 0x000630, "Member 'URewardBase_Alert_C::ItemCount' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, CanClose) == 0x000634, "Member 'URewardBase_Alert_C::CanClose' has a wrong offset!");
static_assert(offsetof(URewardBase_Alert_C, IsClosing) == 0x000635, "Member 'URewardBase_Alert_C::IsClosing' has a wrong offset!");

}

