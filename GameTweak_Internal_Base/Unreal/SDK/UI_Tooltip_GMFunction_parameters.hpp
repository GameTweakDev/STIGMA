#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Tooltip_GMFunction

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Tooltip_GMFunction.UI_Tooltip_GMFunction_C.InitWidget
// 0x00D0 (0x00D0 - 0x0000)
struct UI_Tooltip_GMFunction_C_InitWidget final
{
public:
	int32                                         GM_IDN;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A00[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGMFunction                            Gm_func;                                           // 0x0008(0x0048)(Edit, BlueprintVisible)
	struct FGMFunction                            CallFunc_FindGMFunctionByGMFuncID__out_function;   // 0x0050(0x0048)()
	bool                                          CallFunc_FindGMFunctionByGMFuncID_ReturnValue;     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A01[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B8(0x0018)()
};
static_assert(alignof(UI_Tooltip_GMFunction_C_InitWidget) == 0x000008, "Wrong alignment on UI_Tooltip_GMFunction_C_InitWidget");
static_assert(sizeof(UI_Tooltip_GMFunction_C_InitWidget) == 0x0000D0, "Wrong size on UI_Tooltip_GMFunction_C_InitWidget");
static_assert(offsetof(UI_Tooltip_GMFunction_C_InitWidget, GM_IDN) == 0x000000, "Member 'UI_Tooltip_GMFunction_C_InitWidget::GM_IDN' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_InitWidget, Gm_func) == 0x000008, "Member 'UI_Tooltip_GMFunction_C_InitWidget::Gm_func' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_InitWidget, CallFunc_FindGMFunctionByGMFuncID__out_function) == 0x000050, "Member 'UI_Tooltip_GMFunction_C_InitWidget::CallFunc_FindGMFunctionByGMFuncID__out_function' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_InitWidget, CallFunc_FindGMFunctionByGMFuncID_ReturnValue) == 0x000098, "Member 'UI_Tooltip_GMFunction_C_InitWidget::CallFunc_FindGMFunctionByGMFuncID_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_InitWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'UI_Tooltip_GMFunction_C_InitWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_InitWidget, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B8, "Member 'UI_Tooltip_GMFunction_C_InitWidget::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function UI_Tooltip_GMFunction.UI_Tooltip_GMFunction_C.SetEffects
// 0x0268 (0x0268 - 0x0000)
struct UI_Tooltip_GMFunction_C_SetEffects final
{
public:
	TArray<struct FItemID>                        Func_ids;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Effect_text;                                       // 0x0010(0x0018)(Edit, BlueprintVisible)
	TArray<class FText>                           Raw_effect_texts;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A02[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A03[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x0070(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A04[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A05[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_Array_Get_Item_1;                         // 0x0098(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A06[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Function                       CallFunc_GetFunctionDefine_ReturnValue;            // 0x00B0(0x01A8)(ConstParm)
	TArray<class FText>                           CallFunc_GetFunctionEffectText_ReturnValue;        // 0x0258(0x0010)(ReferenceParm)
};
static_assert(alignof(UI_Tooltip_GMFunction_C_SetEffects) == 0x000008, "Wrong alignment on UI_Tooltip_GMFunction_C_SetEffects");
static_assert(sizeof(UI_Tooltip_GMFunction_C_SetEffects) == 0x000268, "Wrong size on UI_Tooltip_GMFunction_C_SetEffects");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Func_ids) == 0x000000, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Func_ids' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Effect_text) == 0x000010, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Effect_text' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Raw_effect_texts) == 0x000028, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Raw_effect_texts' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000038, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Temp_int_Array_Index_Variable) == 0x000044, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Array_Get_Item) == 0x000050, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'UI_Tooltip_GMFunction_C_SetEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_AppendText_ReturnValue) == 0x000070, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_AppendText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_GetFunctionDefine_ReturnValue) == 0x0000B0, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_GetFunctionDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetEffects, CallFunc_GetFunctionEffectText_ReturnValue) == 0x000258, "Member 'UI_Tooltip_GMFunction_C_SetEffects::CallFunc_GetFunctionEffectText_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_GMFunction.UI_Tooltip_GMFunction_C.SetModes
// 0x05B8 (0x05B8 - 0x0000)
struct UI_Tooltip_GMFunction_C_SetModes final
{
public:
	TArray<struct FItemID>                        Func_ids;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Has_any_modes;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A07[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   Mode_text;                                         // 0x0018(0x0018)(Edit, BlueprintVisible)
	TArray<EGameMode>                             Modes;                                             // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A08[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     CallFunc_Array_Get_Item;                           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A09[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FMode                                  CallFunc_GetGameModeEntry_ReturnValue;             // 0x0058(0x0370)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0A[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_AppendText_ReturnValue;                   // 0x03D0(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0B[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                CallFunc_Array_Get_Item_1;                         // 0x03F8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0C[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FConfig_Function                       CallFunc_GetFunctionDefine_ReturnValue;            // 0x0410(0x01A8)(ConstParm)
};
static_assert(alignof(UI_Tooltip_GMFunction_C_SetModes) == 0x000008, "Wrong alignment on UI_Tooltip_GMFunction_C_SetModes");
static_assert(sizeof(UI_Tooltip_GMFunction_C_SetModes) == 0x0005B8, "Wrong size on UI_Tooltip_GMFunction_C_SetModes");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Func_ids) == 0x000000, "Member 'UI_Tooltip_GMFunction_C_SetModes::Func_ids' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Has_any_modes) == 0x000010, "Member 'UI_Tooltip_GMFunction_C_SetModes::Has_any_modes' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Mode_text) == 0x000018, "Member 'UI_Tooltip_GMFunction_C_SetModes::Mode_text' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Modes) == 0x000030, "Member 'UI_Tooltip_GMFunction_C_SetModes::Modes' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000040, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'UI_Tooltip_GMFunction_C_SetModes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'UI_Tooltip_GMFunction_C_SetModes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'UI_Tooltip_GMFunction_C_SetModes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Array_Get_Item) == 0x000054, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_GetGameModeEntry_ReturnValue) == 0x000058, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_GetGameModeEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Array_Length_ReturnValue) == 0x0003C8, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_AppendText_ReturnValue) == 0x0003D0, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_AppendText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, Temp_int_Loop_Counter_Variable_1) == 0x0003E8, "Member 'UI_Tooltip_GMFunction_C_SetModes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Less_IntInt_ReturnValue) == 0x0003EC, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003F0, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Array_Length_ReturnValue_1) == 0x0003F4, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Array_Get_Item_1) == 0x0003F8, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_Less_IntInt_ReturnValue_1) == 0x000408, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetModes, CallFunc_GetFunctionDefine_ReturnValue) == 0x000410, "Member 'UI_Tooltip_GMFunction_C_SetModes::CallFunc_GetFunctionDefine_ReturnValue' has a wrong offset!");

// Function UI_Tooltip_GMFunction.UI_Tooltip_GMFunction_C.SetRemainTime
// 0x0018 (0x0018 - 0x0000)
struct UI_Tooltip_GMFunction_C_SetRemainTime final
{
public:
	struct FDateTime                              _expired_at;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tooltip_GMFunction_C_SetRemainTime) == 0x000008, "Wrong alignment on UI_Tooltip_GMFunction_C_SetRemainTime");
static_assert(sizeof(UI_Tooltip_GMFunction_C_SetRemainTime) == 0x000018, "Wrong size on UI_Tooltip_GMFunction_C_SetRemainTime");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetRemainTime, _expired_at) == 0x000000, "Member 'UI_Tooltip_GMFunction_C_SetRemainTime::_expired_at' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetRemainTime, CallFunc_MakeDateTime_ReturnValue) == 0x000008, "Member 'UI_Tooltip_GMFunction_C_SetRemainTime::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tooltip_GMFunction_C_SetRemainTime, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'UI_Tooltip_GMFunction_C_SetRemainTime::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");

}

