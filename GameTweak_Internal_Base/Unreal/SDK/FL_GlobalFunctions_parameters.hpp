#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: FL_GlobalFunctions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.1-x
// 0x0020 (0x0020 - 0x0000)
struct FL_GlobalFunctions_C_OneMinusx final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_OneMinusx) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_OneMinusx");
static_assert(sizeof(FL_GlobalFunctions_C_OneMinusx) == 0x000020, "Wrong size on FL_GlobalFunctions_C_OneMinusx");
static_assert(offsetof(FL_GlobalFunctions_C_OneMinusx, In) == 0x000000, "Member 'FL_GlobalFunctions_C_OneMinusx::In' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_OneMinusx, __WorldContext) == 0x000008, "Member 'FL_GlobalFunctions_C_OneMinusx::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_OneMinusx, Out) == 0x000010, "Member 'FL_GlobalFunctions_C_OneMinusx::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_OneMinusx, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'FL_GlobalFunctions_C_OneMinusx::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Angle Between Projected Vectors
// 0x0090 (0x0090 - 0x0000)
struct FL_GlobalFunctions_C_Angle_Between_Projected_Vectors final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Plane_Normal;                                      // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_1;     // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Angle_Between_Vectors_Angle;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Angle_Between_Projected_Vectors");
static_assert(sizeof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors) == 0x000090, "Wrong size on FL_GlobalFunctions_C_Angle_Between_Projected_Vectors");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, A) == 0x000000, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::A' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, B) == 0x000018, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::B' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, Plane_Normal) == 0x000030, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::Plane_Normal' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, __WorldContext) == 0x000048, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, Angle) == 0x000050, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::Angle' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000058, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, CallFunc_ProjectVectorOnToPlane_ReturnValue_1) == 0x000070, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::CallFunc_ProjectVectorOnToPlane_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Projected_Vectors, CallFunc_Angle_Between_Vectors_Angle) == 0x000088, "Member 'FL_GlobalFunctions_C_Angle_Between_Projected_Vectors::CallFunc_Angle_Between_Vectors_Angle' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Angle Between Vectors
// 0x0050 (0x0050 - 0x0000)
struct FL_GlobalFunctions_C_Angle_Between_Vectors final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Norm_dot_Out;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Angle_Between_Vectors) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Angle_Between_Vectors");
static_assert(sizeof(FL_GlobalFunctions_C_Angle_Between_Vectors) == 0x000050, "Wrong size on FL_GlobalFunctions_C_Angle_Between_Vectors");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Vectors, A) == 0x000000, "Member 'FL_GlobalFunctions_C_Angle_Between_Vectors::A' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Vectors, B) == 0x000018, "Member 'FL_GlobalFunctions_C_Angle_Between_Vectors::B' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Vectors, __WorldContext) == 0x000030, "Member 'FL_GlobalFunctions_C_Angle_Between_Vectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Vectors, Angle) == 0x000038, "Member 'FL_GlobalFunctions_C_Angle_Between_Vectors::Angle' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Vectors, CallFunc_Norm_dot_Out) == 0x000040, "Member 'FL_GlobalFunctions_C_Angle_Between_Vectors::CallFunc_Norm_dot_Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Angle_Between_Vectors, CallFunc_DegAcos_ReturnValue) == 0x000048, "Member 'FL_GlobalFunctions_C_Angle_Between_Vectors::CallFunc_DegAcos_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Direction
// 0x0068 (0x0068 - 0x0000)
struct FL_GlobalFunctions_C_Direction final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Direction) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Direction");
static_assert(sizeof(FL_GlobalFunctions_C_Direction) == 0x000068, "Wrong size on FL_GlobalFunctions_C_Direction");
static_assert(offsetof(FL_GlobalFunctions_C_Direction, Start) == 0x000000, "Member 'FL_GlobalFunctions_C_Direction::Start' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction, End) == 0x000018, "Member 'FL_GlobalFunctions_C_Direction::End' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction, __WorldContext) == 0x000030, "Member 'FL_GlobalFunctions_C_Direction::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction, Out) == 0x000038, "Member 'FL_GlobalFunctions_C_Direction::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'FL_GlobalFunctions_C_Direction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Direction Norm
// 0x0080 (0x0080 - 0x0000)
struct FL_GlobalFunctions_C_Direction_Norm final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Direction_Norm) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Direction_Norm");
static_assert(sizeof(FL_GlobalFunctions_C_Direction_Norm) == 0x000080, "Wrong size on FL_GlobalFunctions_C_Direction_Norm");
static_assert(offsetof(FL_GlobalFunctions_C_Direction_Norm, Start) == 0x000000, "Member 'FL_GlobalFunctions_C_Direction_Norm::Start' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction_Norm, End) == 0x000018, "Member 'FL_GlobalFunctions_C_Direction_Norm::End' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction_Norm, __WorldContext) == 0x000030, "Member 'FL_GlobalFunctions_C_Direction_Norm::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction_Norm, Out) == 0x000038, "Member 'FL_GlobalFunctions_C_Direction_Norm::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction_Norm, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'FL_GlobalFunctions_C_Direction_Norm::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Direction_Norm, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'FL_GlobalFunctions_C_Direction_Norm::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.DrawDirection
// 0x0080 (0x0080 - 0x0000)
struct FL_GlobalFunctions_C_DrawDirection final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_Direction;                                   // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ResizeVector_Result;                      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_DrawDirection) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_DrawDirection");
static_assert(sizeof(FL_GlobalFunctions_C_DrawDirection) == 0x000080, "Wrong size on FL_GlobalFunctions_C_DrawDirection");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, Center) == 0x000000, "Member 'FL_GlobalFunctions_C_DrawDirection::Center' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, Param_Direction) == 0x000018, "Member 'FL_GlobalFunctions_C_DrawDirection::Param_Direction' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, Length) == 0x000030, "Member 'FL_GlobalFunctions_C_DrawDirection::Length' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, Color) == 0x000038, "Member 'FL_GlobalFunctions_C_DrawDirection::Color' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, __WorldContext) == 0x000048, "Member 'FL_GlobalFunctions_C_DrawDirection::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, CallFunc_ResizeVector_Result) == 0x000050, "Member 'FL_GlobalFunctions_C_DrawDirection::CallFunc_ResizeVector_Result' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_DrawDirection, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'FL_GlobalFunctions_C_DrawDirection::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.FlatNormalized
// 0x0080 (0x0080 - 0x0000)
struct FL_GlobalFunctions_C_FlatNormalized final
{
public:
	struct FVector                                In;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_FlatNormalized) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_FlatNormalized");
static_assert(sizeof(FL_GlobalFunctions_C_FlatNormalized) == 0x000080, "Wrong size on FL_GlobalFunctions_C_FlatNormalized");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, In) == 0x000000, "Member 'FL_GlobalFunctions_C_FlatNormalized::In' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, __WorldContext) == 0x000018, "Member 'FL_GlobalFunctions_C_FlatNormalized::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, Out) == 0x000020, "Member 'FL_GlobalFunctions_C_FlatNormalized::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, CallFunc_BreakVector_X) == 0x000038, "Member 'FL_GlobalFunctions_C_FlatNormalized::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, CallFunc_BreakVector_Y) == 0x000040, "Member 'FL_GlobalFunctions_C_FlatNormalized::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, CallFunc_BreakVector_Z) == 0x000048, "Member 'FL_GlobalFunctions_C_FlatNormalized::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'FL_GlobalFunctions_C_FlatNormalized::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_FlatNormalized, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'FL_GlobalFunctions_C_FlatNormalized::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Flatten
// 0x0068 (0x0068 - 0x0000)
struct FL_GlobalFunctions_C_Flatten final
{
public:
	struct FVector                                In;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Flatten) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Flatten");
static_assert(sizeof(FL_GlobalFunctions_C_Flatten) == 0x000068, "Wrong size on FL_GlobalFunctions_C_Flatten");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, In) == 0x000000, "Member 'FL_GlobalFunctions_C_Flatten::In' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, __WorldContext) == 0x000018, "Member 'FL_GlobalFunctions_C_Flatten::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, Out) == 0x000020, "Member 'FL_GlobalFunctions_C_Flatten::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, CallFunc_BreakVector_X) == 0x000038, "Member 'FL_GlobalFunctions_C_Flatten::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, CallFunc_BreakVector_Y) == 0x000040, "Member 'FL_GlobalFunctions_C_Flatten::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, CallFunc_BreakVector_Z) == 0x000048, "Member 'FL_GlobalFunctions_C_Flatten::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Flatten, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'FL_GlobalFunctions_C_Flatten::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Float Delta
// 0x0030 (0x0030 - 0x0000)
struct FL_GlobalFunctions_C_Float_Delta final
{
public:
	double                                        A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Abs_delta;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Float_Delta) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Float_Delta");
static_assert(sizeof(FL_GlobalFunctions_C_Float_Delta) == 0x000030, "Wrong size on FL_GlobalFunctions_C_Float_Delta");
static_assert(offsetof(FL_GlobalFunctions_C_Float_Delta, A) == 0x000000, "Member 'FL_GlobalFunctions_C_Float_Delta::A' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Float_Delta, B) == 0x000008, "Member 'FL_GlobalFunctions_C_Float_Delta::B' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Float_Delta, __WorldContext) == 0x000010, "Member 'FL_GlobalFunctions_C_Float_Delta::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Float_Delta, Abs_delta) == 0x000018, "Member 'FL_GlobalFunctions_C_Float_Delta::Abs_delta' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Float_Delta, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'FL_GlobalFunctions_C_Float_Delta::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Float_Delta, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'FL_GlobalFunctions_C_Float_Delta::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.GetOrthogonalVector
// 0x0070 (0x0070 - 0x0000)
struct FL_GlobalFunctions_C_GetOrthogonalVector final
{
public:
	struct FVector                                In;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_GetOrthogonalVector) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_GetOrthogonalVector");
static_assert(sizeof(FL_GlobalFunctions_C_GetOrthogonalVector) == 0x000070, "Wrong size on FL_GlobalFunctions_C_GetOrthogonalVector");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, In) == 0x000000, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::In' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, __WorldContext) == 0x000018, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, Out) == 0x000020, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, CallFunc_BreakVector_X) == 0x000038, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, CallFunc_BreakVector_Y) == 0x000040, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, CallFunc_BreakVector_Z) == 0x000048, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetOrthogonalVector, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'FL_GlobalFunctions_C_GetOrthogonalVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.GetValueAtPercentage
// 0x0048 (0x0048 - 0x0000)
struct FL_GlobalFunctions_C_GetValueAtPercentage final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_GetValueAtPercentage) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_GetValueAtPercentage");
static_assert(sizeof(FL_GlobalFunctions_C_GetValueAtPercentage) == 0x000048, "Wrong size on FL_GlobalFunctions_C_GetValueAtPercentage");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, Percentage) == 0x000000, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::Percentage' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, Max) == 0x000008, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::Max' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, Min) == 0x000010, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::Min' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, __WorldContext) == 0x000018, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, Value) == 0x000020, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::Value' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_GetValueAtPercentage, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'FL_GlobalFunctions_C_GetValueAtPercentage::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.IsLocationToTheRight
// 0x0080 (0x0080 - 0x0000)
struct FL_GlobalFunctions_C_IsLocationToTheRight final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightDirection;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3775[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_Direction_Out;                            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Norm_dot_Out;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_IsLocationToTheRight) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_IsLocationToTheRight");
static_assert(sizeof(FL_GlobalFunctions_C_IsLocationToTheRight) == 0x000080, "Wrong size on FL_GlobalFunctions_C_IsLocationToTheRight");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, Center) == 0x000000, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::Center' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, RightDirection) == 0x000018, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::RightDirection' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, Target) == 0x000030, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::Target' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, __WorldContext) == 0x000048, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, Out) == 0x000050, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, CallFunc_Direction_Out) == 0x000058, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::CallFunc_Direction_Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, CallFunc_Norm_dot_Out) == 0x000070, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::CallFunc_Norm_dot_Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRight, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000078, "Member 'FL_GlobalFunctions_C_IsLocationToTheRight::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.IsLocationToTheRightOfActor
// 0x0088 (0x0088 - 0x0000)
struct FL_GlobalFunctions_C_IsLocationToTheRightOfActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3776[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Direction_Out;                            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Norm_dot_Out;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_IsLocationToTheRightOfActor");
static_assert(sizeof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor) == 0x000088, "Wrong size on FL_GlobalFunctions_C_IsLocationToTheRightOfActor");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, Actor) == 0x000000, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::Actor' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, Location) == 0x000008, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::Location' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, __WorldContext) == 0x000020, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, Out) == 0x000028, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, CallFunc_GetActorRightVector_ReturnValue) == 0x000030, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, CallFunc_Direction_Out) == 0x000060, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::CallFunc_Direction_Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, CallFunc_Norm_dot_Out) == 0x000078, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::CallFunc_Norm_dot_Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_IsLocationToTheRightOfActor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000080, "Member 'FL_GlobalFunctions_C_IsLocationToTheRightOfActor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.MoveTowards
// 0x00A0 (0x00A0 - 0x0000)
struct FL_GlobalFunctions_C_MoveTowards final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moved_position;                                    // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ResizeVector_Result;                      // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_MoveTowards) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_MoveTowards");
static_assert(sizeof(FL_GlobalFunctions_C_MoveTowards) == 0x0000A0, "Wrong size on FL_GlobalFunctions_C_MoveTowards");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, Start) == 0x000000, "Member 'FL_GlobalFunctions_C_MoveTowards::Start' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, Target) == 0x000018, "Member 'FL_GlobalFunctions_C_MoveTowards::Target' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, Distance) == 0x000030, "Member 'FL_GlobalFunctions_C_MoveTowards::Distance' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, __WorldContext) == 0x000038, "Member 'FL_GlobalFunctions_C_MoveTowards::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, Moved_position) == 0x000040, "Member 'FL_GlobalFunctions_C_MoveTowards::Moved_position' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'FL_GlobalFunctions_C_MoveTowards::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, CallFunc_ResizeVector_Result) == 0x000070, "Member 'FL_GlobalFunctions_C_MoveTowards::CallFunc_ResizeVector_Result' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_MoveTowards, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'FL_GlobalFunctions_C_MoveTowards::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Norm
// 0x0050 (0x0050 - 0x0000)
struct FL_GlobalFunctions_C_Norm final
{
public:
	struct FVector                                In;                                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out;                                               // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Norm) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Norm");
static_assert(sizeof(FL_GlobalFunctions_C_Norm) == 0x000050, "Wrong size on FL_GlobalFunctions_C_Norm");
static_assert(offsetof(FL_GlobalFunctions_C_Norm, In) == 0x000000, "Member 'FL_GlobalFunctions_C_Norm::In' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm, __WorldContext) == 0x000018, "Member 'FL_GlobalFunctions_C_Norm::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm, Out) == 0x000020, "Member 'FL_GlobalFunctions_C_Norm::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm, CallFunc_Normal_ReturnValue) == 0x000038, "Member 'FL_GlobalFunctions_C_Norm::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.Norm dot
// 0x0078 (0x0078 - 0x0000)
struct FL_GlobalFunctions_C_Norm_dot final
{
public:
	struct FVector                                A;                                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                B;                                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Norm_Out;                                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Norm_Out_1;                               // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_Norm_dot) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_Norm_dot");
static_assert(sizeof(FL_GlobalFunctions_C_Norm_dot) == 0x000078, "Wrong size on FL_GlobalFunctions_C_Norm_dot");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, A) == 0x000000, "Member 'FL_GlobalFunctions_C_Norm_dot::A' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, B) == 0x000018, "Member 'FL_GlobalFunctions_C_Norm_dot::B' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, __WorldContext) == 0x000030, "Member 'FL_GlobalFunctions_C_Norm_dot::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, Out) == 0x000038, "Member 'FL_GlobalFunctions_C_Norm_dot::Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, CallFunc_Norm_Out) == 0x000040, "Member 'FL_GlobalFunctions_C_Norm_dot::CallFunc_Norm_Out' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, CallFunc_Norm_Out_1) == 0x000058, "Member 'FL_GlobalFunctions_C_Norm_dot::CallFunc_Norm_Out_1' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_Norm_dot, CallFunc_Dot_VectorVector_ReturnValue) == 0x000070, "Member 'FL_GlobalFunctions_C_Norm_dot::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function FL_GlobalFunctions.FL_GlobalFunctions_C.ResizeVector
// 0x0088 (0x0088 - 0x0000)
struct FL_GlobalFunctions_C_ResizeVector final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_GlobalFunctions_C_ResizeVector) == 0x000008, "Wrong alignment on FL_GlobalFunctions_C_ResizeVector");
static_assert(sizeof(FL_GlobalFunctions_C_ResizeVector) == 0x000088, "Wrong size on FL_GlobalFunctions_C_ResizeVector");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, Vector) == 0x000000, "Member 'FL_GlobalFunctions_C_ResizeVector::Vector' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, Length) == 0x000018, "Member 'FL_GlobalFunctions_C_ResizeVector::Length' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, __WorldContext) == 0x000020, "Member 'FL_GlobalFunctions_C_ResizeVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, Result) == 0x000028, "Member 'FL_GlobalFunctions_C_ResizeVector::Result' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, CallFunc_Normal_ReturnValue) == 0x000040, "Member 'FL_GlobalFunctions_C_ResizeVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000058, "Member 'FL_GlobalFunctions_C_ResizeVector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_GlobalFunctions_C_ResizeVector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000070, "Member 'FL_GlobalFunctions_C_ResizeVector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

}

