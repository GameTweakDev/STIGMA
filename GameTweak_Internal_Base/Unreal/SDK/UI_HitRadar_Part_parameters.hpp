#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_HitRadar_Part

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_HitRadar_Part.UI_HitRadar_Part_C.ExecuteUbergraph_UI_HitRadar_Part
// 0x0048 (0x0048 - 0x0000)
struct UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part) == 0x000008, "Wrong alignment on UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part");
static_assert(sizeof(UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part) == 0x000048, "Wrong size on UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part");
static_assert(offsetof(UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part, EntryPoint) == 0x000000, "Member 'UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part, CallFunc_OnTick__delta_ImplicitCast) == 0x000040, "Member 'UI_HitRadar_Part_C_ExecuteUbergraph_UI_HitRadar_Part::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

// Function UI_HitRadar_Part.UI_HitRadar_Part_C.Mark
// 0x0018 (0x0018 - 0x0000)
struct UI_HitRadar_Part_C_Mark final
{
public:
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3909[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_Part_C_Mark) == 0x000008, "Wrong alignment on UI_HitRadar_Part_C_Mark");
static_assert(sizeof(UI_HitRadar_Part_C_Mark) == 0x000018, "Wrong size on UI_HitRadar_Part_C_Mark");
static_assert(offsetof(UI_HitRadar_Part_C_Mark, CallFunc_GetVisibility_ReturnValue) == 0x000000, "Member 'UI_HitRadar_Part_C_Mark::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_Mark, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'UI_HitRadar_Part_C_Mark::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_Mark, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'UI_HitRadar_Part_C_Mark::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_Mark, CallFunc_FMin_ReturnValue) == 0x000010, "Member 'UI_HitRadar_Part_C_Mark::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function UI_HitRadar_Part.UI_HitRadar_Part_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct UI_HitRadar_Part_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_Part_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on UI_HitRadar_Part_C_OnSynchronizeProperties");
static_assert(sizeof(UI_HitRadar_Part_C_OnSynchronizeProperties) == 0x000001, "Wrong size on UI_HitRadar_Part_C_OnSynchronizeProperties");
static_assert(offsetof(UI_HitRadar_Part_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'UI_HitRadar_Part_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function UI_HitRadar_Part.UI_HitRadar_Part_C.OnTick
// 0x0040 (0x0040 - 0x0000)
struct UI_HitRadar_Part_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        T;                                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         CallFunc_SetOpacity_InOpacity_ImplicitCast;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_Part_C_OnTick) == 0x000008, "Wrong alignment on UI_HitRadar_Part_C_OnTick");
static_assert(sizeof(UI_HitRadar_Part_C_OnTick) == 0x000040, "Wrong size on UI_HitRadar_Part_C_OnTick");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, _delta) == 0x000000, "Member 'UI_HitRadar_Part_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, T) == 0x000008, "Member 'UI_HitRadar_Part_C_OnTick::T' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, Delta) == 0x000010, "Member 'UI_HitRadar_Part_C_OnTick::Delta' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'UI_HitRadar_Part_C_OnTick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'UI_HitRadar_Part_C_OnTick::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'UI_HitRadar_Part_C_OnTick::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'UI_HitRadar_Part_C_OnTick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'UI_HitRadar_Part_C_OnTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_OnTick, CallFunc_SetOpacity_InOpacity_ImplicitCast) == 0x00003C, "Member 'UI_HitRadar_Part_C_OnTick::CallFunc_SetOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function UI_HitRadar_Part.UI_HitRadar_Part_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_HitRadar_Part_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_HitRadar_Part_C_Tick) == 0x000004, "Wrong alignment on UI_HitRadar_Part_C_Tick");
static_assert(sizeof(UI_HitRadar_Part_C_Tick) == 0x00003C, "Wrong size on UI_HitRadar_Part_C_Tick");
static_assert(offsetof(UI_HitRadar_Part_C_Tick, MyGeometry) == 0x000000, "Member 'UI_HitRadar_Part_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_HitRadar_Part_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_HitRadar_Part_C_Tick::InDeltaTime' has a wrong offset!");

}

