#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Annihilation_RoundResult

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.blue_background_img_Event_0
// 0x0018 (0x0018 - 0x0000)
struct Annihilation_RoundResult_C_blue_background_img_Event_0 final
{
public:
	class UImage*                                 Param_blue_background_img;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatchSize;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_blue_background_img_Event_0) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_blue_background_img_Event_0");
static_assert(sizeof(Annihilation_RoundResult_C_blue_background_img_Event_0) == 0x000018, "Wrong size on Annihilation_RoundResult_C_blue_background_img_Event_0");
static_assert(offsetof(Annihilation_RoundResult_C_blue_background_img_Event_0, Param_blue_background_img) == 0x000000, "Member 'Annihilation_RoundResult_C_blue_background_img_Event_0::Param_blue_background_img' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_blue_background_img_Event_0, Texture) == 0x000008, "Member 'Annihilation_RoundResult_C_blue_background_img_Event_0::Texture' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_blue_background_img_Event_0, bMatchSize) == 0x000010, "Member 'Annihilation_RoundResult_C_blue_background_img_Event_0::bMatchSize' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.ExecuteUbergraph_Annihilation_RoundResult
// 0x0080 (0x0080 - 0x0000)
struct Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1992[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UImage*                                 K2Node_CustomEvent_blue_background_img;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Texture_1;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMatchSize_1;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1993[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UImage*                                 K2Node_CustomEvent_red_background_img;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Texture;                        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMatchSize;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1994[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRoundResult                           K2Node_Event__result;                              // 0x0040(0x0008)(ConstParm, NoDestructor)
	float                                         K2Node_Event__override_life_time;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1995[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1996[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAnnihilation_GameState*                K2Node_DynamicCast_AsAnnihilation_Game_State;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFactionChangedRound_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult");
static_assert(sizeof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult) == 0x000080, "Wrong size on Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, EntryPoint) == 0x000000, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::EntryPoint' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_CustomEvent_blue_background_img) == 0x000008, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_CustomEvent_blue_background_img' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_CustomEvent_Texture_1) == 0x000010, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_CustomEvent_Texture_1' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_CustomEvent_bMatchSize_1) == 0x000018, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_CustomEvent_bMatchSize_1' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_CustomEvent_red_background_img) == 0x000020, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_CustomEvent_red_background_img' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_CustomEvent_Texture) == 0x000028, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_CustomEvent_Texture' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_CustomEvent_bMatchSize) == 0x000030, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_CustomEvent_bMatchSize' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000038, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_Event__result) == 0x000040, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_Event__result' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_Event__override_life_time) == 0x000048, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_Event__override_life_time' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_Event_Animation) == 0x000050, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, CallFunc_PlayAnimation_ReturnValue) == 0x000060, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_DynamicCast_AsAnnihilation_Game_State) == 0x000070, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_DynamicCast_AsAnnihilation_Game_State' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult, CallFunc_IsFactionChangedRound_ReturnValue) == 0x000079, "Member 'Annihilation_RoundResult_C_ExecuteUbergraph_Annihilation_RoundResult::CallFunc_IsFactionChangedRound_ReturnValue' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.GetRoundText
// 0x00B0 (0x00B0 - 0x0000)
struct Annihilation_RoundResult_C_GetRoundText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattleGameStateBase*                   K2Node_DynamicCast_AsBattle_Game_State_Base;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1997[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
};
static_assert(alignof(Annihilation_RoundResult_C_GetRoundText) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_GetRoundText");
static_assert(sizeof(Annihilation_RoundResult_C_GetRoundText) == 0x0000B0, "Wrong size on Annihilation_RoundResult_C_GetRoundText");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, ReturnValue) == 0x000000, "Member 'Annihilation_RoundResult_C_GetRoundText::ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'Annihilation_RoundResult_C_GetRoundText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, K2Node_DynamicCast_AsBattle_Game_State_Base) == 0x000020, "Member 'Annihilation_RoundResult_C_GetRoundText::K2Node_DynamicCast_AsBattle_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Annihilation_RoundResult_C_GetRoundText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'Annihilation_RoundResult_C_GetRoundText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'Annihilation_RoundResult_C_GetRoundText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, K2Node_MakeArray_Array) == 0x000088, "Member 'Annihilation_RoundResult_C_GetRoundText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_GetRoundText, CallFunc_Format_ReturnValue) == 0x000098, "Member 'Annihilation_RoundResult_C_GetRoundText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.InitWidget
// 0x000C (0x000C - 0x0000)
struct Annihilation_RoundResult_C_InitWidget final
{
public:
	struct FRoundResult                           _result;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         _override_life_time;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_InitWidget) == 0x000004, "Wrong alignment on Annihilation_RoundResult_C_InitWidget");
static_assert(sizeof(Annihilation_RoundResult_C_InitWidget) == 0x00000C, "Wrong size on Annihilation_RoundResult_C_InitWidget");
static_assert(offsetof(Annihilation_RoundResult_C_InitWidget, _result) == 0x000000, "Member 'Annihilation_RoundResult_C_InitWidget::_result' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_InitWidget, _override_life_time) == 0x000008, "Member 'Annihilation_RoundResult_C_InitWidget::_override_life_time' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct Annihilation_RoundResult_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_OnAnimationFinished) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_OnAnimationFinished");
static_assert(sizeof(Annihilation_RoundResult_C_OnAnimationFinished) == 0x000008, "Wrong size on Annihilation_RoundResult_C_OnAnimationFinished");
static_assert(offsetof(Annihilation_RoundResult_C_OnAnimationFinished, Animation) == 0x000000, "Member 'Annihilation_RoundResult_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.red_background_img_Event_0
// 0x0018 (0x0018 - 0x0000)
struct Annihilation_RoundResult_C_Red_background_img_Event_0 final
{
public:
	class UImage*                                 Param_Red_background_img;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bMatchSize;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_Red_background_img_Event_0) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_Red_background_img_Event_0");
static_assert(sizeof(Annihilation_RoundResult_C_Red_background_img_Event_0) == 0x000018, "Wrong size on Annihilation_RoundResult_C_Red_background_img_Event_0");
static_assert(offsetof(Annihilation_RoundResult_C_Red_background_img_Event_0, Param_Red_background_img) == 0x000000, "Member 'Annihilation_RoundResult_C_Red_background_img_Event_0::Param_Red_background_img' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_Red_background_img_Event_0, Texture) == 0x000008, "Member 'Annihilation_RoundResult_C_Red_background_img_Event_0::Texture' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_Red_background_img_Event_0, bMatchSize) == 0x000010, "Member 'Annihilation_RoundResult_C_Red_background_img_Event_0::bMatchSize' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.ShowAnim
// 0x0020 (0x0020 - 0x0000)
struct Annihilation_RoundResult_C_ShowAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_ShowAnim) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_ShowAnim");
static_assert(sizeof(Annihilation_RoundResult_C_ShowAnim) == 0x000020, "Wrong size on Annihilation_RoundResult_C_ShowAnim");
static_assert(offsetof(Annihilation_RoundResult_C_ShowAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'Annihilation_RoundResult_C_ShowAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ShowAnim, CallFunc_PlayAnimation_ReturnValue_1) == 0x000008, "Member 'Annihilation_RoundResult_C_ShowAnim::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ShowAnim, CallFunc_PlayAnimation_ReturnValue_2) == 0x000010, "Member 'Annihilation_RoundResult_C_ShowAnim::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_ShowAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'Annihilation_RoundResult_C_ShowAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.UpdateBG
// 0x0030 (0x0030 - 0x0000)
struct Annihilation_RoundResult_C_UpdateBG final
{
public:
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0000(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Annihilation_RoundResult_C_UpdateBG) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_UpdateBG");
static_assert(sizeof(Annihilation_RoundResult_C_UpdateBG) == 0x000030, "Wrong size on Annihilation_RoundResult_C_UpdateBG");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateBG, CallFunc_Map_Find_Value) == 0x000000, "Member 'Annihilation_RoundResult_C_UpdateBG::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateBG, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'Annihilation_RoundResult_C_UpdateBG::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Annihilation_RoundResult.Annihilation_RoundResult_C.UpdateText
// 0x0140 (0x0140 - 0x0000)
struct Annihilation_RoundResult_C_UpdateText final
{
public:
	class AAnnihilation_PlayerController*         Local_pc;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	ETeams                                        Team_R;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        Team_L;                                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1998[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AAnnihilation_PlayerState*              Local_ps;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FText                                   BlueWinText;                                       // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   RedWinText;                                        // 0x0030(0x0018)(Edit, BlueprintVisible)
	class ABattleGameStateBase*                   Gs;                                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FText                                   LoseText;                                          // 0x0050(0x0018)(Edit, BlueprintVisible)
	class FText                                   DrawText;                                          // 0x0068(0x0018)(Edit, BlueprintVisible)
	class FText                                   WinText;                                           // 0x0080(0x0018)(Edit, BlueprintVisible)
	class AStigmaPlayerController*                CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetEnemyTeam_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1999[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AAnnihilation_PlayerController*         K2Node_DynamicCast_AsAnnihilation_Player_Controller; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeams                                        CallFunc_GetTeam_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199A[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamScore_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199B[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ABattleGameStateBase*                   K2Node_DynamicCast_AsBattle_Game_State_Base;       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199C[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00D8(0x0018)()
	class FText                                   CallFunc_GetRoundText_ReturnValue;                 // 0x00F0(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EJoinType                                     CallFunc_GetJoinType_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199D[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_GetTeamScore_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199E[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class AAnnihilation_PlayerState*              K2Node_DynamicCast_AsAnnihilation_Player_State;    // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199F[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0128(0x0018)()
};
static_assert(alignof(Annihilation_RoundResult_C_UpdateText) == 0x000008, "Wrong alignment on Annihilation_RoundResult_C_UpdateText");
static_assert(sizeof(Annihilation_RoundResult_C_UpdateText) == 0x000140, "Wrong size on Annihilation_RoundResult_C_UpdateText");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, Local_pc) == 0x000000, "Member 'Annihilation_RoundResult_C_UpdateText::Local_pc' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, Team_R) == 0x000008, "Member 'Annihilation_RoundResult_C_UpdateText::Team_R' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, Team_L) == 0x000009, "Member 'Annihilation_RoundResult_C_UpdateText::Team_L' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, Local_ps) == 0x000010, "Member 'Annihilation_RoundResult_C_UpdateText::Local_ps' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, BlueWinText) == 0x000018, "Member 'Annihilation_RoundResult_C_UpdateText::BlueWinText' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, RedWinText) == 0x000030, "Member 'Annihilation_RoundResult_C_UpdateText::RedWinText' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, Gs) == 0x000048, "Member 'Annihilation_RoundResult_C_UpdateText::Gs' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, LoseText) == 0x000050, "Member 'Annihilation_RoundResult_C_UpdateText::LoseText' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, DrawText) == 0x000068, "Member 'Annihilation_RoundResult_C_UpdateText::DrawText' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, WinText) == 0x000080, "Member 'Annihilation_RoundResult_C_UpdateText::WinText' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000098, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetEnemyTeam_ReturnValue) == 0x0000A0, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetEnemyTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_DynamicCast_AsAnnihilation_Player_Controller) == 0x0000A8, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_DynamicCast_AsAnnihilation_Player_Controller' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetTeam_ReturnValue) == 0x0000B1, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetTeamScore_ReturnValue) == 0x0000C0, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetTeamScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_DynamicCast_AsBattle_Game_State_Base) == 0x0000C8, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_DynamicCast_AsBattle_Game_State_Base' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_Conv_IntToText_ReturnValue) == 0x0000D8, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetRoundText_ReturnValue) == 0x0000F0, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetRoundText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_SwitchEnum_CmpSuccess) == 0x000108, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetJoinType_ReturnValue) == 0x000109, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetJoinType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_SwitchEnum_CmpSuccess_1) == 0x00010A, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_SwitchEnum_CmpSuccess_2) == 0x00010B, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_SwitchEnum_CmpSuccess_3) == 0x00010C, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_GetTeamScore_ReturnValue_1) == 0x000110, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_GetTeamScore_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_DynamicCast_AsAnnihilation_Player_State) == 0x000118, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_DynamicCast_AsAnnihilation_Player_State' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'Annihilation_RoundResult_C_UpdateText::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Annihilation_RoundResult_C_UpdateText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000128, "Member 'Annihilation_RoundResult_C_UpdateText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

}

