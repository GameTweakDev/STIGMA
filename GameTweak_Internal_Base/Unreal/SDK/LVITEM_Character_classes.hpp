#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: LVITEM_Character

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LVITEM_Character.LVITEM_Character_C
// 0x09E8 (0x0A10 - 0x0028)
class ULVITEM_Character_C final : public UObject
{
public:
	struct FCharacterDefine                       Define;                                            // 0x0028(0x09E0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsPossesed;                                        // 0x0A08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CurrentCharaType;                                  // 0x0A09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnabled;                                         // 0x0A0A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Config(struct FCharacterDefine& _define, bool _is_possessed);
	void GetItemID(struct FItemID* Item_ID);
	void SetCurrentCharacterType(ECharaType _chara_type);
	void SetEnable(bool _is_enable);

	void GetCharacterName(class FText* _Name) const;
	void GetCharacterType(ECharaType* _type) const;
	void GetIcon(TSoftObjectPtr<class UTexture2D>* _Icon) const;
	void IsEnable(bool* _is_enable) const;
	void IsSelected(bool* _selected) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LVITEM_Character_C">();
	}
	static class ULVITEM_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULVITEM_Character_C>();
	}
};
static_assert(alignof(ULVITEM_Character_C) == 0x000008, "Wrong alignment on ULVITEM_Character_C");
static_assert(sizeof(ULVITEM_Character_C) == 0x000A10, "Wrong size on ULVITEM_Character_C");
static_assert(offsetof(ULVITEM_Character_C, Define) == 0x000028, "Member 'ULVITEM_Character_C::Define' has a wrong offset!");
static_assert(offsetof(ULVITEM_Character_C, IsPossesed) == 0x000A08, "Member 'ULVITEM_Character_C::IsPossesed' has a wrong offset!");
static_assert(offsetof(ULVITEM_Character_C, CurrentCharaType) == 0x000A09, "Member 'ULVITEM_Character_C::CurrentCharaType' has a wrong offset!");
static_assert(offsetof(ULVITEM_Character_C, IsEnabled) == 0x000A0A, "Member 'ULVITEM_Character_C::IsEnabled' has a wrong offset!");

}

