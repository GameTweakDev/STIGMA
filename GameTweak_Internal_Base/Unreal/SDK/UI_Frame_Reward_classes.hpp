#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Frame_Reward

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Frame_Reward.UI_Frame_Reward_C
// 0x0048 (0x0538 - 0x04F0)
class UUI_Frame_Reward_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Img_Icon;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Frame;                                     // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Count;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Desc1;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Desc2;                                         // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_Title;                                         // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        SizeX;                                             // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        SizeY;                                             // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	bool OnSynchronizeProperties();
	void ExecuteUbergraph_UI_Frame_Reward(int32 EntryPoint);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnEntryReleased();
	void BindTier(const class FText& _tier_name, int32 _TRP_min, double _top_ratio, TSoftObjectPtr<class UTexture2D> _Icon);
	void BindItem(const struct FRewardItem& _item);
	void Bind_Currency(const struct FRewardItem& _currency);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Frame_Reward_C">();
	}
	static class UUI_Frame_Reward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Frame_Reward_C>();
	}
};
static_assert(alignof(UUI_Frame_Reward_C) == 0x000008, "Wrong alignment on UUI_Frame_Reward_C");
static_assert(sizeof(UUI_Frame_Reward_C) == 0x000538, "Wrong size on UUI_Frame_Reward_C");
static_assert(offsetof(UUI_Frame_Reward_C, UberGraphFrame) == 0x0004F0, "Member 'UUI_Frame_Reward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, Img_Icon) == 0x0004F8, "Member 'UUI_Frame_Reward_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, SizeBox_Frame) == 0x000500, "Member 'UUI_Frame_Reward_C::SizeBox_Frame' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, TXT_Count) == 0x000508, "Member 'UUI_Frame_Reward_C::TXT_Count' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, TXT_Desc1) == 0x000510, "Member 'UUI_Frame_Reward_C::TXT_Desc1' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, TXT_Desc2) == 0x000518, "Member 'UUI_Frame_Reward_C::TXT_Desc2' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, Txt_Title) == 0x000520, "Member 'UUI_Frame_Reward_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, SizeX) == 0x000528, "Member 'UUI_Frame_Reward_C::SizeX' has a wrong offset!");
static_assert(offsetof(UUI_Frame_Reward_C, SizeY) == 0x000530, "Member 'UUI_Frame_Reward_C::SizeY' has a wrong offset!");

}

