#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_WebBrowser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_WebBrowser.Ctrl_WebBrowser_C
// 0x0040 (0x0530 - 0x04F0)
class UCtrl_WebBrowser_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Btn;                                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_Navigation_Border_C*              Ctrl_Navigation_Border;                            // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_134;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWebBrowser*                            NewsWeb;                                           // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_62;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0520(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SetURL(const class FString& _url);
	bool OnSynchronizeProperties();
	void ExecuteUbergraph_Ctrl_WebBrowser(int32 EntryPoint);
	void BndEvt__Ctrl_WebBrowser_NewsWeb_K2Node_ComponentBoundEvent_0_OnConsoleMessage__DelegateSignature(const class FString& Message, const class FString& Source, int32 Line);
	void BndEvt__Ctrl_WebBrowser_Btn_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Ctrl_WebBrowser_Btn_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Ctrl_WebBrowser_Btn_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_WebBrowser_C">();
	}
	static class UCtrl_WebBrowser_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_WebBrowser_C>();
	}
};
static_assert(alignof(UCtrl_WebBrowser_C) == 0x000008, "Wrong alignment on UCtrl_WebBrowser_C");
static_assert(sizeof(UCtrl_WebBrowser_C) == 0x000530, "Wrong size on UCtrl_WebBrowser_C");
static_assert(offsetof(UCtrl_WebBrowser_C, UberGraphFrame) == 0x0004F0, "Member 'UCtrl_WebBrowser_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCtrl_WebBrowser_C, Btn) == 0x0004F8, "Member 'UCtrl_WebBrowser_C::Btn' has a wrong offset!");
static_assert(offsetof(UCtrl_WebBrowser_C, Ctrl_Navigation_Border) == 0x000500, "Member 'UCtrl_WebBrowser_C::Ctrl_Navigation_Border' has a wrong offset!");
static_assert(offsetof(UCtrl_WebBrowser_C, Image_134) == 0x000508, "Member 'UCtrl_WebBrowser_C::Image_134' has a wrong offset!");
static_assert(offsetof(UCtrl_WebBrowser_C, NewsWeb) == 0x000510, "Member 'UCtrl_WebBrowser_C::NewsWeb' has a wrong offset!");
static_assert(offsetof(UCtrl_WebBrowser_C, Overlay_62) == 0x000518, "Member 'UCtrl_WebBrowser_C::Overlay_62' has a wrong offset!");
static_assert(offsetof(UCtrl_WebBrowser_C, Size) == 0x000520, "Member 'UCtrl_WebBrowser_C::Size' has a wrong offset!");

}

