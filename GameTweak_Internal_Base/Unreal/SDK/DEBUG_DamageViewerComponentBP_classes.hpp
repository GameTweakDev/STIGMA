#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: DEBUG_DamageViewerComponentBP

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DEBUG_DamageViewerComponentBP.DEBUG_DamageViewerComponentBP_C
// 0x0028 (0x00C8 - 0x00A0)
class UDEBUG_DamageViewerComponentBP_C final : public UDebug_DamageViewerComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EDebug_DamageViewerType                       DamageViewerType;                                  // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivation;                                      // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3741[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        TotalDamage;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastDamage;                                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       DamageViewer_Fixed;                                // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void AddDamage(const struct FDamagedData& Data);
	void ExecuteUbergraph_DEBUG_DamageViewerComponentBP(int32 EntryPoint);
	void OnActivation(bool _is_activated, EDebug_DamageViewerType _type);
	void OnAddDamage(const struct FDamagedData& _damage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DEBUG_DamageViewerComponentBP_C">();
	}
	static class UDEBUG_DamageViewerComponentBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDEBUG_DamageViewerComponentBP_C>();
	}
};
static_assert(alignof(UDEBUG_DamageViewerComponentBP_C) == 0x000008, "Wrong alignment on UDEBUG_DamageViewerComponentBP_C");
static_assert(sizeof(UDEBUG_DamageViewerComponentBP_C) == 0x0000C8, "Wrong size on UDEBUG_DamageViewerComponentBP_C");
static_assert(offsetof(UDEBUG_DamageViewerComponentBP_C, UberGraphFrame) == 0x0000A0, "Member 'UDEBUG_DamageViewerComponentBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDEBUG_DamageViewerComponentBP_C, DamageViewerType) == 0x0000A8, "Member 'UDEBUG_DamageViewerComponentBP_C::DamageViewerType' has a wrong offset!");
static_assert(offsetof(UDEBUG_DamageViewerComponentBP_C, IsActivation) == 0x0000A9, "Member 'UDEBUG_DamageViewerComponentBP_C::IsActivation' has a wrong offset!");
static_assert(offsetof(UDEBUG_DamageViewerComponentBP_C, TotalDamage) == 0x0000B0, "Member 'UDEBUG_DamageViewerComponentBP_C::TotalDamage' has a wrong offset!");
static_assert(offsetof(UDEBUG_DamageViewerComponentBP_C, LastDamage) == 0x0000B8, "Member 'UDEBUG_DamageViewerComponentBP_C::LastDamage' has a wrong offset!");
static_assert(offsetof(UDEBUG_DamageViewerComponentBP_C, DamageViewer_Fixed) == 0x0000C0, "Member 'UDEBUG_DamageViewerComponentBP_C::DamageViewer_Fixed' has a wrong offset!");

}

