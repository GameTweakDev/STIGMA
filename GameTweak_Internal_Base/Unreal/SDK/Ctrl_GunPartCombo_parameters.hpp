#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_GunPartCombo

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "ItemIDEntry_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'Ctrl_GunPartCombo_C_BndEvt__Ctrl_ItemCombo_CB_Items_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.ExecuteUbergraph_Ctrl_GunPartCombo
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3716[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo");
static_assert(sizeof(Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo) == 0x000020, "Wrong size on Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo");
static_assert(offsetof(Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo, EntryPoint) == 0x000000, "Member 'Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo, K2Node_ComponentBoundEvent_SelectedItem) == 0x000008, "Member 'Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo, K2Node_ComponentBoundEvent_SelectionType) == 0x000018, "Member 'Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ctrl_GunPartCombo_C_ExecuteUbergraph_Ctrl_GunPartCombo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.OnChangeSelection__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature final
{
public:
	struct FItemID                                _selected_id;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _slot;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature");
static_assert(sizeof(Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature) == 0x000018, "Wrong size on Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature, _selected_id) == 0x000000, "Member 'Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature::_selected_id' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature, _slot) == 0x000010, "Member 'Ctrl_GunPartCombo_C_OnChangeSelection__DelegateSignature::_slot' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.OnSelected
// 0x0020 (0x0020 - 0x0000)
struct Ctrl_GunPartCombo_C_OnSelected final
{
public:
	class FString                                 _str;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Idx;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3717[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_FindOptionIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_OnSelected) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_OnSelected");
static_assert(sizeof(Ctrl_GunPartCombo_C_OnSelected) == 0x000020, "Wrong size on Ctrl_GunPartCombo_C_OnSelected");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnSelected, _str) == 0x000000, "Member 'Ctrl_GunPartCombo_C_OnSelected::_str' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnSelected, Idx) == 0x000010, "Member 'Ctrl_GunPartCombo_C_OnSelected::Idx' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnSelected, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ctrl_GunPartCombo_C_OnSelected::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnSelected, CallFunc_FindOptionIndex_ReturnValue) == 0x000018, "Member 'Ctrl_GunPartCombo_C_OnSelected::CallFunc_FindOptionIndex_ReturnValue' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_GunPartCombo_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_GunPartCombo_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_GunPartCombo_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_GunPartCombo_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_GunPartCombo_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_GunPartCombo_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.SetGunType
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_GunPartCombo_C_SetGunType final
{
public:
	EGunType                                      _gun_type;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_SetGunType) == 0x000001, "Wrong alignment on Ctrl_GunPartCombo_C_SetGunType");
static_assert(sizeof(Ctrl_GunPartCombo_C_SetGunType) == 0x000001, "Wrong size on Ctrl_GunPartCombo_C_SetGunType");
static_assert(offsetof(Ctrl_GunPartCombo_C_SetGunType, _gun_type) == 0x000000, "Member 'Ctrl_GunPartCombo_C_SetGunType::_gun_type' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.SetItemID
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_GunPartCombo_C_SetItemID final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindEntryByItemID__index;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_SetItemID) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_SetItemID");
static_assert(sizeof(Ctrl_GunPartCombo_C_SetItemID) == 0x000018, "Wrong size on Ctrl_GunPartCombo_C_SetItemID");
static_assert(offsetof(Ctrl_GunPartCombo_C_SetItemID, _item_id) == 0x000000, "Member 'Ctrl_GunPartCombo_C_SetItemID::_item_id' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_SetItemID, Param_Index) == 0x000010, "Member 'Ctrl_GunPartCombo_C_SetItemID::Param_Index' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_SetItemID, CallFunc_FindEntryByItemID__index) == 0x000014, "Member 'Ctrl_GunPartCombo_C_SetItemID::CallFunc_FindEntryByItemID__index' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.ValidateComboMenu
// 0x0268 (0x0268 - 0x0000)
struct Ctrl_GunPartCombo_C_ValidateComboMenu final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3718[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                CallFunc_MakeItemID_ReturnValue;                   // 0x0018(0x0010)(HasGetValueTypeHash)
	struct FItemIDEntry                           K2Node_MakeStruct_ItemIDEntry;                     // 0x0028(0x0020)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3719[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemIDEntry                           CallFunc_Array_Get_Item;                           // 0x0058(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371A[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371B[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<struct FItemEntry>                     CallFunc_GetEntriesByCategory__item_array;         // 0x0088(0x0010)(ReferenceParm)
	struct FItemEntry                             CallFunc_Array_Get_Item_1;                         // 0x0098(0x0130)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371C[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSubCategoryByItemID_ReturnValue;       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ToInt_ReturnValue;                        // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371D[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371E[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371F[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FItemIDEntry                           K2Node_MakeStruct_ItemIDEntry_1;                   // 0x0240(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_ValidateComboMenu) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_ValidateComboMenu");
static_assert(sizeof(Ctrl_GunPartCombo_C_ValidateComboMenu) == 0x000268, "Wrong size on Ctrl_GunPartCombo_C_ValidateComboMenu");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_MakeItemID_ReturnValue) == 0x000018, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_MakeItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, K2Node_MakeStruct_ItemIDEntry) == 0x000028, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::K2Node_MakeStruct_ItemIDEntry' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_MakeLiteralByte_ReturnValue) == 0x00007D, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000080, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_GetEntriesByCategory__item_array) == 0x000088, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_GetEntriesByCategory__item_array' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Array_Length_ReturnValue_1) == 0x0001C8, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001CC, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Conv_TextToString_ReturnValue) == 0x0001D0, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Concat_StrStr_ReturnValue) == 0x0001E0, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_GetSubCategoryByItemID_ReturnValue) == 0x0001F0, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_GetSubCategoryByItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_ToInt_ReturnValue) == 0x0001F4, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F8, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Conv_IntToString_ReturnValue) == 0x000200, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000210, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000218, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_BooleanOR_ReturnValue) == 0x000228, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000230, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, K2Node_MakeStruct_ItemIDEntry_1) == 0x000240, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::K2Node_MakeStruct_ItemIDEntry_1' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_ValidateComboMenu, CallFunc_Array_Add_ReturnValue_1) == 0x000260, "Member 'Ctrl_GunPartCombo_C_ValidateComboMenu::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ctrl_GunPartCombo.Ctrl_GunPartCombo_C.FindEntryByItemID
// 0x0060 (0x0060 - 0x0000)
struct Ctrl_GunPartCombo_C_FindEntryByItemID final
{
public:
	struct FItemID                                _item_id;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         _index;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3720[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FItemID                                Item_id;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemIDEntry                           CallFunc_Array_Get_Item;                           // 0x0038(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEqualItemID_ReturnValue;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_GunPartCombo_C_FindEntryByItemID) == 0x000008, "Wrong alignment on Ctrl_GunPartCombo_C_FindEntryByItemID");
static_assert(sizeof(Ctrl_GunPartCombo_C_FindEntryByItemID) == 0x000060, "Wrong size on Ctrl_GunPartCombo_C_FindEntryByItemID");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, _item_id) == 0x000000, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::_item_id' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, _index) == 0x000010, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::_index' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, Item_id) == 0x000018, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::Item_id' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_GunPartCombo_C_FindEntryByItemID, CallFunc_IsEqualItemID_ReturnValue) == 0x000059, "Member 'Ctrl_GunPartCombo_C_FindEntryByItemID::CallFunc_IsEqualItemID_ReturnValue' has a wrong offset!");

}

