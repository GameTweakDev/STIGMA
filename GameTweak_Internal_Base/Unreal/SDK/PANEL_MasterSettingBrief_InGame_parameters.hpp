#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: PANEL_MasterSettingBrief_InGame

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature final
{
public:
	class UPopupBase*                             _popup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature) == 0x000008, "Wrong size on PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature, _popup) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_BndEvt__PANEL_MasterSettingBrief_InGame_WIDGET_Skin_K2Node_ComponentBoundEvent_3_OnOpenCostumePopup__DelegateSignature::_popup' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.ExecuteUbergraph_PANEL_MasterSettingBrief_InGame
// 0x0010 (0x0010 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D63[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UPopupBase*                             K2Node_ComponentBoundEvent__popup;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame) == 0x000010, "Wrong size on PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame, EntryPoint) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame, K2Node_ComponentBoundEvent__popup) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_ExecuteUbergraph_PANEL_MasterSettingBrief_InGame::K2Node_ComponentBoundEvent__popup' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.GetVisibility_0
// 0x09F0 (0x09F0 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D64[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterDefine                       CallFunc_GetCharacterDefByType__out_data;          // 0x0008(0x09E0)()
	bool                                          CallFunc_GetCharacterDefByType_ReturnValue;        // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUpcommingItem_ReturnValue;              // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_0) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_GetVisibility_0");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_0) == 0x0009F0, "Wrong size on PANEL_MasterSettingBrief_InGame_C_GetVisibility_0");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_0, CallFunc_GetCharacterDefByType__out_data) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_0::CallFunc_GetCharacterDefByType__out_data' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_0, CallFunc_GetCharacterDefByType_ReturnValue) == 0x0009E8, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_0::CallFunc_GetCharacterDefByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_0, CallFunc_IsUpcommingItem_ReturnValue) == 0x0009E9, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_0::CallFunc_IsUpcommingItem_ReturnValue' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.GetVisibility_Icon_ExpiredGun
// 0x0090 (0x0090 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D65[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    CallFunc_GetLocalPlayerContext_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D66[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterInfo                         CallFunc_GetCurrentCharacter_ReturnValue;          // 0x0018(0x0058)(ConstParm)
	class UGunObject*                             CallFunc_FindGunObjectByPreset_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EGunPartsSlot>                         CallFunc_GetUnownedGunParts_ReturnValue;           // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun) == 0x000090, "Wrong size on PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, ReturnValue) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_GetLocalPlayerContext_ReturnValue) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_GetLocalPlayerContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_GetCurrentCharacter_ReturnValue) == 0x000018, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_GetCurrentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_FindGunObjectByPreset_ReturnValue) == 0x000070, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_FindGunObjectByPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_GetUnownedGunParts_ReturnValue) == 0x000078, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_GetUnownedGunParts_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000089, "Member 'PANEL_MasterSettingBrief_InGame_C_GetVisibility_Icon_ExpiredGun::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.On Update User
// 0x0028 (0x0028 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_On_Update_User final
{
public:
	EUserEvent                                    _event;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D67[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerState*                           CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D68[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              K2Node_DynamicCast_AsMatch_Serviced_Player_State;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    CallFunc_GetCurrentlySelectedCharaType_ReturnValue; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_On_Update_User) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_On_Update_User");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_On_Update_User) == 0x000028, "Wrong size on PANEL_MasterSettingBrief_InGame_C_On_Update_User");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_On_Update_User, _event) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_On_Update_User::_event' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_On_Update_User, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_On_Update_User::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_On_Update_User, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'PANEL_MasterSettingBrief_InGame_C_On_Update_User::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_On_Update_User, K2Node_DynamicCast_AsMatch_Serviced_Player_State) == 0x000018, "Member 'PANEL_MasterSettingBrief_InGame_C_On_Update_User::K2Node_DynamicCast_AsMatch_Serviced_Player_State' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_On_Update_User, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PANEL_MasterSettingBrief_InGame_C_On_Update_User::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_On_Update_User, CallFunc_GetCurrentlySelectedCharaType_ReturnValue) == 0x000021, "Member 'PANEL_MasterSettingBrief_InGame_C_On_Update_User::CallFunc_GetCurrentlySelectedCharaType_ReturnValue' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.OnChanged_PlayerState
// 0x0010 (0x0010 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState final
{
public:
	EChangedPlayerState                           _reason;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D69[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AMatchServicedPlayerState*              _ps;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState) == 0x000010, "Wrong size on PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState, _reason) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState::_reason' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState, _ps) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_OnChanged_PlayerState::_ps' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.SelectCharacter
// 0x00E8 (0x00E8 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_SelectCharacter final
{
public:
	ECharaType                                    _chara;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    Lpc;                                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStigmaGameInstance*                    Game_inst;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharaType                                    Chara_type;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6B[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterInfo                         CallFunc_GetDefaultCharacterInfo_ReturnValue;      // 0x0020(0x0058)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6C[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ULocalPlayerContext*                    CallFunc_Get_ReturnValue;                          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCharacter_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FCharacterInfo                         CallFunc_GetCharacter_ReturnValue;                 // 0x0090(0x0058)(ConstParm)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_SelectCharacter");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter) == 0x0000E8, "Wrong size on PANEL_MasterSettingBrief_InGame_C_SelectCharacter");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, _chara) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::_chara' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, Lpc) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::Lpc' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, Game_inst) == 0x000010, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::Game_inst' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, Chara_type) == 0x000018, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::Chara_type' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, CallFunc_GetDefaultCharacterInfo_ReturnValue) == 0x000020, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::CallFunc_GetDefaultCharacterInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, CallFunc_Get_ReturnValue) == 0x000080, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, CallFunc_HasCharacter_ReturnValue) == 0x000088, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::CallFunc_HasCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_SelectCharacter, CallFunc_GetCharacter_ReturnValue) == 0x000090, "Member 'PANEL_MasterSettingBrief_InGame_C_SelectCharacter::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.Subscribe on Update
// 0x00B0 (0x00B0 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update final
{
public:
	TSet<EUserEvent>                              Interests;                                         // 0x0000(0x0050)(Edit, BlueprintVisible)
	TSet<EUserEvent>                              K2Node_MakeVariable_MakeVariableOutput;            // 0x0050(0x0050)()
	TDelegate<void(EUserEvent _event)>            K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update) == 0x0000B0, "Wrong size on PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update, Interests) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update::Interests' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update, K2Node_MakeVariable_MakeVariableOutput) == 0x000050, "Member 'PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'PANEL_MasterSettingBrief_InGame_C_Subscribe_on_Update::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function PANEL_MasterSettingBrief_InGame.PANEL_MasterSettingBrief_InGame_C.UpdateGun
// 0x0370 (0x0370 - 0x0000)
struct PANEL_MasterSettingBrief_InGame_C_UpdateGun final
{
public:
	class ULocalPlayerContext*                    Lpc;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_equipped;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UImage*                                 Img_parts_slot;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Equip_parts_cnt;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunType                                      Gun_type;                                          // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FGunEntry_Main                         Gun_main_entry;                                    // 0x0020(0x0350)(Edit, BlueprintVisible)
};
static_assert(alignof(PANEL_MasterSettingBrief_InGame_C_UpdateGun) == 0x000008, "Wrong alignment on PANEL_MasterSettingBrief_InGame_C_UpdateGun");
static_assert(sizeof(PANEL_MasterSettingBrief_InGame_C_UpdateGun) == 0x000370, "Wrong size on PANEL_MasterSettingBrief_InGame_C_UpdateGun");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_UpdateGun, Lpc) == 0x000000, "Member 'PANEL_MasterSettingBrief_InGame_C_UpdateGun::Lpc' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_UpdateGun, Is_equipped) == 0x000008, "Member 'PANEL_MasterSettingBrief_InGame_C_UpdateGun::Is_equipped' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_UpdateGun, Img_parts_slot) == 0x000010, "Member 'PANEL_MasterSettingBrief_InGame_C_UpdateGun::Img_parts_slot' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_UpdateGun, Equip_parts_cnt) == 0x000018, "Member 'PANEL_MasterSettingBrief_InGame_C_UpdateGun::Equip_parts_cnt' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_UpdateGun, Gun_type) == 0x00001C, "Member 'PANEL_MasterSettingBrief_InGame_C_UpdateGun::Gun_type' has a wrong offset!");
static_assert(offsetof(PANEL_MasterSettingBrief_InGame_C_UpdateGun, Gun_main_entry) == 0x000020, "Member 'PANEL_MasterSettingBrief_InGame_C_UpdateGun::Gun_main_entry' has a wrong offset!");

}

