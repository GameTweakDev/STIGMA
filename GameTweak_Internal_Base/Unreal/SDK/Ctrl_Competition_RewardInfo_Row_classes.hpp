#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Competition_RewardInfo_Row

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "BPGLib_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Ctrl_Competition_RewardInfo_Row.Ctrl_Competition_RewardInfo_Row_C
// 0x0058 (0x0548 - 0x04F0)
class UCtrl_Competition_RewardInfo_Row_C final : public UPreviewableWidget
{
public:
	class UHorizontalBox*                         HB_Reward;                                         // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_91;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_MineBg;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Rank;                                          // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MyRankPanel;                                       // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Rank;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_Rank;                                           // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGroupCompetitionReward                CompetitionRewardDef;                              // 0x0528(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	ECompetitionType                              CompetitionType;                                   // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsMyRank;                                          // 0x0541(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UpdateReward();
	void UpdateRank();
	bool OnSynchronizeProperties();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ctrl_Competition_RewardInfo_Row_C">();
	}
	static class UCtrl_Competition_RewardInfo_Row_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrl_Competition_RewardInfo_Row_C>();
	}
};
static_assert(alignof(UCtrl_Competition_RewardInfo_Row_C) == 0x000008, "Wrong alignment on UCtrl_Competition_RewardInfo_Row_C");
static_assert(sizeof(UCtrl_Competition_RewardInfo_Row_C) == 0x000548, "Wrong size on UCtrl_Competition_RewardInfo_Row_C");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, HB_Reward) == 0x0004F0, "Member 'UCtrl_Competition_RewardInfo_Row_C::HB_Reward' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, Image_91) == 0x0004F8, "Member 'UCtrl_Competition_RewardInfo_Row_C::Image_91' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, IMG_MineBg) == 0x000500, "Member 'UCtrl_Competition_RewardInfo_Row_C::IMG_MineBg' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, IMG_Rank) == 0x000508, "Member 'UCtrl_Competition_RewardInfo_Row_C::IMG_Rank' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, MyRankPanel) == 0x000510, "Member 'UCtrl_Competition_RewardInfo_Row_C::MyRankPanel' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, TXT_Rank) == 0x000518, "Member 'UCtrl_Competition_RewardInfo_Row_C::TXT_Rank' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, WS_Rank) == 0x000520, "Member 'UCtrl_Competition_RewardInfo_Row_C::WS_Rank' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, CompetitionRewardDef) == 0x000528, "Member 'UCtrl_Competition_RewardInfo_Row_C::CompetitionRewardDef' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, CompetitionType) == 0x000540, "Member 'UCtrl_Competition_RewardInfo_Row_C::CompetitionType' has a wrong offset!");
static_assert(offsetof(UCtrl_Competition_RewardInfo_Row_C, IsMyRank) == 0x000541, "Member 'UCtrl_Competition_RewardInfo_Row_C::IsMyRank' has a wrong offset!");

}

