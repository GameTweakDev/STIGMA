#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Indicator_Ping_Chara

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_Indicator_Ping_Chara.UI_Indicator_Ping_Chara_C.ExecuteUbergraph_UI_Indicator_Ping_Chara
// 0x0020 (0x0020 - 0x0000)
struct UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__is_clipped;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E20[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         K2Node_Event__angle;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E21[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara) == 0x000008, "Wrong alignment on UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara");
static_assert(sizeof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara) == 0x000020, "Wrong size on UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara, EntryPoint) == 0x000000, "Member 'UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara, K2Node_Event__is_clipped) == 0x000004, "Member 'UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara::K2Node_Event__is_clipped' has a wrong offset!");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara, K2Node_Event__angle) == 0x000008, "Member 'UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara::K2Node_Event__angle' has a wrong offset!");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'UI_Indicator_Ping_Chara_C_ExecuteUbergraph_UI_Indicator_Ping_Chara::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_Indicator_Ping_Chara.UI_Indicator_Ping_Chara_C.OnUpdateLocation
// 0x0008 (0x0008 - 0x0000)
struct UI_Indicator_Ping_Chara_C_OnUpdateLocation final
{
public:
	bool                                          _is_clipped;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E22[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	float                                         _angle;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Indicator_Ping_Chara_C_OnUpdateLocation) == 0x000004, "Wrong alignment on UI_Indicator_Ping_Chara_C_OnUpdateLocation");
static_assert(sizeof(UI_Indicator_Ping_Chara_C_OnUpdateLocation) == 0x000008, "Wrong size on UI_Indicator_Ping_Chara_C_OnUpdateLocation");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_OnUpdateLocation, _is_clipped) == 0x000000, "Member 'UI_Indicator_Ping_Chara_C_OnUpdateLocation::_is_clipped' has a wrong offset!");
static_assert(offsetof(UI_Indicator_Ping_Chara_C_OnUpdateLocation, _angle) == 0x000004, "Member 'UI_Indicator_Ping_Chara_C_OnUpdateLocation::_angle' has a wrong offset!");

}

