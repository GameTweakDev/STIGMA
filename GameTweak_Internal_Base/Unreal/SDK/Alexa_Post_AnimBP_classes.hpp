#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Alexa_Post_AnimBP

#include "Basic.hpp"

#include "KawaiiPhysics_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Alexa_Post_AnimBP.Alexa_Post_AnimBP_C
// 0x2A20 (0x2D70 - 0x0350)
class UAlexa_Post_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3AFE[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-69 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0368(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0388(0x00B8)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_2;                      // 0x0440(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x0960(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x0E80(0x0520)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x13A0(0x0020)()
	struct FAnimNode_SpringBone                   AnimGraphNode_SpringBone_1;                        // 0x13C0(0x0168)()
	struct FAnimNode_SpringBone                   AnimGraphNode_SpringBone;                          // 0x1528(0x0168)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x1690(0x0790)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1E20(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x1E40(0x0790)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x25D0(0x0790)()
	double                                        DynamicAlpha;                                      // 0x2D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Alexa_Post_AnimBP(int32 EntryPoint);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Alexa_Post_AnimBP_C">();
	}
	static class UAlexa_Post_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAlexa_Post_AnimBP_C>();
	}
};
static_assert(alignof(UAlexa_Post_AnimBP_C) == 0x000010, "Wrong alignment on UAlexa_Post_AnimBP_C");
static_assert(sizeof(UAlexa_Post_AnimBP_C) == 0x002D70, "Wrong size on UAlexa_Post_AnimBP_C");
static_assert(offsetof(UAlexa_Post_AnimBP_C, UberGraphFrame) == 0x000350, "Member 'UAlexa_Post_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'UAlexa_Post_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'UAlexa_Post_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x000368, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_LinkedInputPose) == 0x000388, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_AnimDynamics_2) == 0x000440, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_AnimDynamics_2' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_AnimDynamics_1) == 0x000960, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_AnimDynamics) == 0x000E80, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0013A0, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_SpringBone_1) == 0x0013C0, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_SpringBone_1' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_SpringBone) == 0x001528, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_SpringBone' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_2) == 0x001690, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_Root) == 0x001E20, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics_1) == 0x001E40, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, AnimGraphNode_KawaiiPhysics) == 0x0025D0, "Member 'UAlexa_Post_AnimBP_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UAlexa_Post_AnimBP_C, DynamicAlpha) == 0x002D60, "Member 'UAlexa_Post_AnimBP_C::DynamicAlpha' has a wrong offset!");

}

