#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_DamageFX

#include "Basic.hpp"

#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_DamageFX.UI_DamageFX_C.ExecuteUbergraph_UI_DamageFX
// 0x0048 (0x0048 - 0x0000)
struct UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_OnTick__delta_ImplicitCast;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX) == 0x000008, "Wrong alignment on UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX");
static_assert(sizeof(UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX) == 0x000048, "Wrong size on UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX");
static_assert(offsetof(UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX, EntryPoint) == 0x000000, "Member 'UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX, CallFunc_OnTick__delta_ImplicitCast) == 0x000040, "Member 'UI_DamageFX_C_ExecuteUbergraph_UI_DamageFX::CallFunc_OnTick__delta_ImplicitCast' has a wrong offset!");

// Function UI_DamageFX.UI_DamageFX_C.OnTick
// 0x00A8 (0x00A8 - 0x0000)
struct UI_DamageFX_C_OnTick final
{
public:
	double                                        _delta;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_visible;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3962[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        Delta;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  My_chara;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3963[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcWorldDirectionToUIAngle_ReturnValue;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3964[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3965[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FWidgetTransform                       CallFunc_GetRotatedWidgetTransform_ReturnValue;    // 0x0058(0x0038)(NoDestructor)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotatedWidgetTransform__angle_in_deg_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageFX_C_OnTick) == 0x000008, "Wrong alignment on UI_DamageFX_C_OnTick");
static_assert(sizeof(UI_DamageFX_C_OnTick) == 0x0000A8, "Wrong size on UI_DamageFX_C_OnTick");
static_assert(offsetof(UI_DamageFX_C_OnTick, _delta) == 0x000000, "Member 'UI_DamageFX_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, Is_visible) == 0x000008, "Member 'UI_DamageFX_C_OnTick::Is_visible' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, Delta) == 0x000010, "Member 'UI_DamageFX_C_OnTick::Delta' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, My_chara) == 0x000018, "Member 'UI_DamageFX_C_OnTick::My_chara' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'UI_DamageFX_C_OnTick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'UI_DamageFX_C_OnTick::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'UI_DamageFX_C_OnTick::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_CalcWorldDirectionToUIAngle_ReturnValue) == 0x000040, "Member 'UI_DamageFX_C_OnTick::CallFunc_CalcWorldDirectionToUIAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'UI_DamageFX_C_OnTick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'UI_DamageFX_C_OnTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_GetRotatedWidgetTransform_ReturnValue) == 0x000058, "Member 'UI_DamageFX_C_OnTick::CallFunc_GetRotatedWidgetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'UI_DamageFX_C_OnTick::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'UI_DamageFX_C_OnTick::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_OnTick, CallFunc_GetRotatedWidgetTransform__angle_in_deg_ImplicitCast) == 0x0000A0, "Member 'UI_DamageFX_C_OnTick::CallFunc_GetRotatedWidgetTransform__angle_in_deg_ImplicitCast' has a wrong offset!");

// Function UI_DamageFX.UI_DamageFX_C.SetHitCount
// 0x0050 (0x0050 - 0x0000)
struct UI_DamageFX_C_SetHitCount final
{
public:
	int32                                         _count;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3966[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	struct FDamagedData                           _damaged_data;                                     // 0x0008(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3967[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             Victim;                                            // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHitCount_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageFX_C_SetHitCount) == 0x000008, "Wrong alignment on UI_DamageFX_C_SetHitCount");
static_assert(sizeof(UI_DamageFX_C_SetHitCount) == 0x000050, "Wrong size on UI_DamageFX_C_SetHitCount");
static_assert(offsetof(UI_DamageFX_C_SetHitCount, _count) == 0x000000, "Member 'UI_DamageFX_C_SetHitCount::_count' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_SetHitCount, _damaged_data) == 0x000008, "Member 'UI_DamageFX_C_SetHitCount::_damaged_data' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_SetHitCount, ReturnValue) == 0x000038, "Member 'UI_DamageFX_C_SetHitCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_SetHitCount, Victim) == 0x000040, "Member 'UI_DamageFX_C_SetHitCount::Victim' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_SetHitCount, CallFunc_SetHitCount_ReturnValue) == 0x000048, "Member 'UI_DamageFX_C_SetHitCount::CallFunc_SetHitCount_ReturnValue' has a wrong offset!");

// Function UI_DamageFX.UI_DamageFX_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_DamageFX_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_DamageFX_C_Tick) == 0x000004, "Wrong alignment on UI_DamageFX_C_Tick");
static_assert(sizeof(UI_DamageFX_C_Tick) == 0x00003C, "Wrong size on UI_DamageFX_C_Tick");
static_assert(offsetof(UI_DamageFX_C_Tick, MyGeometry) == 0x000000, "Member 'UI_DamageFX_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_DamageFX_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_DamageFX_C_Tick::InDeltaTime' has a wrong offset!");

}

