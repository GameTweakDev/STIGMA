#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Challenge_MissionResultPopup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Challenge_MissionResultPopup.Challenge_MissionResultPopup_C.CheckCanClose
// 0x0040 (0x0040 - 0x0000)
struct Challenge_MissionResultPopup_C_CheckCanClose final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UChallenge_MissionResult_Entry_C*       K2Node_DynamicCast_AsChallenge_Mission_Result_Entry; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_MissionResultPopup_C_CheckCanClose) == 0x000008, "Wrong alignment on Challenge_MissionResultPopup_C_CheckCanClose");
static_assert(sizeof(Challenge_MissionResultPopup_C_CheckCanClose) == 0x000040, "Wrong size on Challenge_MissionResultPopup_C_CheckCanClose");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, CallFunc_Array_Get_Item) == 0x000020, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, K2Node_DynamicCast_AsChallenge_Mission_Result_Entry) == 0x000030, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::K2Node_DynamicCast_AsChallenge_Mission_Result_Entry' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_CheckCanClose, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00003A, "Member 'Challenge_MissionResultPopup_C_CheckCanClose::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function Challenge_MissionResultPopup.Challenge_MissionResultPopup_C.ExecuteUbergraph_Challenge_MissionResultPopup
// 0x0068 (0x0068 - 0x0000)
struct Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_388F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UChallenge_MissionResult_Entry_C*       K2Node_DynamicCast_AsChallenge_Mission_Result_Entry; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3890[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AChallenge_PlayerController*            K2Node_DynamicCast_AsChallenge_Player_Controller;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3891[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AChallenge_PlayerController*            K2Node_DynamicCast_AsChallenge_Player_Controller_1; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup) == 0x000008, "Wrong alignment on Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup");
static_assert(sizeof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup) == 0x000068, "Wrong size on Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, EntryPoint) == 0x000000, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, Temp_int_Variable) == 0x000004, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_DynamicCast_AsChallenge_Mission_Result_Entry) == 0x000028, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_DynamicCast_AsChallenge_Mission_Result_Entry' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000040, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_DynamicCast_AsChallenge_Player_Controller) == 0x000048, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_DynamicCast_AsChallenge_Player_Controller' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_DynamicCast_AsChallenge_Player_Controller_1) == 0x000058, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_DynamicCast_AsChallenge_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'Challenge_MissionResultPopup_C_ExecuteUbergraph_Challenge_MissionResultPopup::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function Challenge_MissionResultPopup.Challenge_MissionResultPopup_C.Get_Title_Text_Text_0
// 0x00A0 (0x00A0 - 0x0000)
struct Challenge_MissionResultPopup_C_Get_Title_Text_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UChallenge_SubSystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0) == 0x000008, "Wrong alignment on Challenge_MissionResultPopup_C_Get_Title_Text_Text_0");
static_assert(sizeof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0) == 0x0000A0, "Wrong size on Challenge_MissionResultPopup_C_Get_Title_Text_Text_0");
static_assert(offsetof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0, ReturnValue) == 0x000000, "Member 'Challenge_MissionResultPopup_C_Get_Title_Text_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'Challenge_MissionResultPopup_C_Get_Title_Text_Text_0::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'Challenge_MissionResultPopup_C_Get_Title_Text_Text_0::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'Challenge_MissionResultPopup_C_Get_Title_Text_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0, K2Node_MakeArray_Array) == 0x000078, "Member 'Challenge_MissionResultPopup_C_Get_Title_Text_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_Get_Title_Text_Text_0, CallFunc_Format_ReturnValue) == 0x000088, "Member 'Challenge_MissionResultPopup_C_Get_Title_Text_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Challenge_MissionResultPopup.Challenge_MissionResultPopup_C.UpdateMissions
// 0x00B8 (0x00B8 - 0x0000)
struct Challenge_MissionResultPopup_C_UpdateMissions final
{
public:
	class UMission*                               Mission;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CompleteCount;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3892[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UPanelSlot*                             Mission_entry_panel;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Delay_time;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallenge_MissionResult_Entry_C*       Mission_result_entry;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3893[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FItemID                                CallFunc_MakeItemIDByCategories_ReturnValue;       // 0x0038(0x0010)(HasGetValueTypeHash)
	TArray<class UMission*>                       CallFunc_GetMissionsByTaskID__out_missions;        // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3894[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UMission*                               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3895[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMissionProgressType                          CallFunc_GetProgressType_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3896[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-69 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3897[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UChallenge_MissionResult_Entry_C*       K2Node_DynamicCast_AsChallenge_Mission_Result_Entry; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3898[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3899[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_MissionResultPopup_C_UpdateMissions) == 0x000008, "Wrong alignment on Challenge_MissionResultPopup_C_UpdateMissions");
static_assert(sizeof(Challenge_MissionResultPopup_C_UpdateMissions) == 0x0000B8, "Wrong size on Challenge_MissionResultPopup_C_UpdateMissions");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Mission) == 0x000000, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Mission' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CompleteCount) == 0x000008, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CompleteCount' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Mission_entry_panel) == 0x000010, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Mission_entry_panel' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Delay_time) == 0x000018, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Delay_time' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Mission_result_entry) == 0x000020, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Mission_result_entry' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_MakeLiteralByte_ReturnValue) == 0x000028, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_MakeItemIDByCategories_ReturnValue) == 0x000038, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_MakeItemIDByCategories_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_GetMissionsByTaskID__out_missions) == 0x000048, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_GetMissionsByTaskID__out_missions' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_Array_Get_Item) == 0x000068, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_PlayAnimation_ReturnValue) == 0x000078, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, Temp_int_Variable) == 0x000080, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_GetProgressType_ReturnValue) == 0x000084, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_GetProgressType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, K2Node_SwitchEnum_CmpSuccess) == 0x000085, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_GetChildAt_ReturnValue) == 0x000088, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, K2Node_DynamicCast_AsChallenge_Mission_Result_Entry) == 0x000098, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::K2Node_DynamicCast_AsChallenge_Mission_Result_Entry' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_GetChildAt_ReturnValue_1) == 0x0000A8, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Challenge_MissionResultPopup_C_UpdateMissions, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'Challenge_MissionResultPopup_C_UpdateMissions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function Challenge_MissionResultPopup.Challenge_MissionResultPopup_C.GetCloseKey
// 0x0018 (0x0018 - 0x0000)
struct Challenge_MissionResultPopup_C_GetCloseKey final
{
public:
	struct FKey                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(Challenge_MissionResultPopup_C_GetCloseKey) == 0x000008, "Wrong alignment on Challenge_MissionResultPopup_C_GetCloseKey");
static_assert(sizeof(Challenge_MissionResultPopup_C_GetCloseKey) == 0x000018, "Wrong size on Challenge_MissionResultPopup_C_GetCloseKey");
static_assert(offsetof(Challenge_MissionResultPopup_C_GetCloseKey, ReturnValue) == 0x000000, "Member 'Challenge_MissionResultPopup_C_GetCloseKey::ReturnValue' has a wrong offset!");

}

