#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_GameResult_Record

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GameResult_Record.UI_GameResult_Record_C
// 0x0230 (0x04F0 - 0x02C0)
class UUI_GameResult_Record_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWIDGET_Report_Row_C*                   ENTRY_BattleEXP;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_Buff;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_KDA;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_LearningEXP;                                 // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_LearningPoint;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_PlayTime;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_Resurrect;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_Report_Row_C*                   ENTRY_Transfer;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_123;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_DivLine;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_MapIcon;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Mode;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_FinishTime;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_MapName;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FBattleDecisionDetail                  Result;                                            // 0x0338(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FMyBattleResult                        MyBattleResult;                                    // 0x0408(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FUserBattleResult                      MyUserResult;                                      // 0x0460(0x0090)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_UI_GameResult_Record(int32 EntryPoint);
	class UWidget* Get_ENTRY_LearningPoint_ToolTipWidget();
	void Init(const struct FBattleDecisionDetail& _result, const struct FUserBattleResult& _my_result);
	void OnUpdateUser(EUserEvent _event);
	void SubscribeUpdateUser();
	void ToEXPText(double _exp_val, class FText* _exp_txt);
	void UpdateEXP();
	void UpdateMap();
	void UpdateRecord();
	void UpdateUI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GameResult_Record_C">();
	}
	static class UUI_GameResult_Record_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GameResult_Record_C>();
	}
};
static_assert(alignof(UUI_GameResult_Record_C) == 0x000008, "Wrong alignment on UUI_GameResult_Record_C");
static_assert(sizeof(UUI_GameResult_Record_C) == 0x0004F0, "Wrong size on UUI_GameResult_Record_C");
static_assert(offsetof(UUI_GameResult_Record_C, UberGraphFrame) == 0x0002C0, "Member 'UUI_GameResult_Record_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_BattleEXP) == 0x0002C8, "Member 'UUI_GameResult_Record_C::ENTRY_BattleEXP' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_Buff) == 0x0002D0, "Member 'UUI_GameResult_Record_C::ENTRY_Buff' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_KDA) == 0x0002D8, "Member 'UUI_GameResult_Record_C::ENTRY_KDA' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_LearningEXP) == 0x0002E0, "Member 'UUI_GameResult_Record_C::ENTRY_LearningEXP' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_LearningPoint) == 0x0002E8, "Member 'UUI_GameResult_Record_C::ENTRY_LearningPoint' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_PlayTime) == 0x0002F0, "Member 'UUI_GameResult_Record_C::ENTRY_PlayTime' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_Resurrect) == 0x0002F8, "Member 'UUI_GameResult_Record_C::ENTRY_Resurrect' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, ENTRY_Transfer) == 0x000300, "Member 'UUI_GameResult_Record_C::ENTRY_Transfer' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, Image_123) == 0x000308, "Member 'UUI_GameResult_Record_C::Image_123' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, Img_DivLine) == 0x000310, "Member 'UUI_GameResult_Record_C::Img_DivLine' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, IMG_MapIcon) == 0x000318, "Member 'UUI_GameResult_Record_C::IMG_MapIcon' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, IMG_Mode) == 0x000320, "Member 'UUI_GameResult_Record_C::IMG_Mode' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, TXT_FinishTime) == 0x000328, "Member 'UUI_GameResult_Record_C::TXT_FinishTime' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, TXT_MapName) == 0x000330, "Member 'UUI_GameResult_Record_C::TXT_MapName' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, Result) == 0x000338, "Member 'UUI_GameResult_Record_C::Result' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, MyBattleResult) == 0x000408, "Member 'UUI_GameResult_Record_C::MyBattleResult' has a wrong offset!");
static_assert(offsetof(UUI_GameResult_Record_C, MyUserResult) == 0x000460, "Member 'UUI_GameResult_Record_C::MyUserResult' has a wrong offset!");

}

