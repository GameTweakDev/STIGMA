#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_Indicator_TargetChara

#include "Basic.hpp"

#include "UI_Indicator_TargetChara_classes.hpp"
#include "UI_Indicator_TargetChara_parameters.hpp"


namespace SDK
{

// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Indicator_TargetChara_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.CreateProgressMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_TargetChara_C::CreateProgressMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "CreateProgressMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.ExecuteUbergraph_UI_Indicator_TargetChara
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Indicator_TargetChara_C::ExecuteUbergraph_UI_Indicator_TargetChara(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "ExecuteUbergraph_UI_Indicator_TargetChara");

	Params::UI_Indicator_TargetChara_C_ExecuteUbergraph_UI_Indicator_TargetChara Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.Get Text_Time
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UUI_Indicator_TargetChara_C::Get_Text_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "Get Text_Time");

	Params::UI_Indicator_TargetChara_C_Get_Text_Time Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.GetTeamColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor UUI_Indicator_TargetChara_C::GetTeamColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "GetTeamColor");

	Params::UI_Indicator_TargetChara_C_GetTeamColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.OnInitIndicator
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_TargetChara_C::OnInitIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "OnInitIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.OnUpdateIndicator
// (Event, Protected, BlueprintEvent)

void UUI_Indicator_TargetChara_C::OnUpdateIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "OnUpdateIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.OnUpdateLocation
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _is_clipped                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   _angle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Indicator_TargetChara_C::OnUpdateLocation(bool _is_clipped, float _angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "OnUpdateLocation");

	Params::UI_Indicator_TargetChara_C_OnUpdateLocation Parms{};

	Parms._is_clipped = _is_clipped;
	Parms._angle = _angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Indicator_TargetChara_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "Tick");

	Params::UI_Indicator_TargetChara_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.UpdateColors
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_TargetChara_C::UpdateColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "UpdateColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.UpdateDistance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_TargetChara_C::UpdateDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "UpdateDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Indicator_TargetChara.UI_Indicator_TargetChara_C.UpdateProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Indicator_TargetChara_C::UpdateProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Indicator_TargetChara_C", "UpdateProgress");

	UObject::ProcessEvent(Func, nullptr);
}

}

