#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: UI_PassLevel

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_PassLevel.UI_PassLevel_C.ExecuteUbergraph_UI_PassLevel
// 0x0010 (0x0010 - 0x0000)
struct UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__is_max;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B84[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	int32                                         K2Node_Event__level;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__set_instance;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel) == 0x000004, "Wrong alignment on UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel");
static_assert(sizeof(UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel) == 0x000010, "Wrong size on UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel");
static_assert(offsetof(UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel, EntryPoint) == 0x000000, "Member 'UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel, K2Node_Event__is_max) == 0x000004, "Member 'UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel::K2Node_Event__is_max' has a wrong offset!");
static_assert(offsetof(UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel, K2Node_Event__level) == 0x000008, "Member 'UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel::K2Node_Event__level' has a wrong offset!");
static_assert(offsetof(UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel, K2Node_Event__set_instance) == 0x00000C, "Member 'UI_PassLevel_C_ExecuteUbergraph_UI_PassLevel::K2Node_Event__set_instance' has a wrong offset!");

// Function UI_PassLevel.UI_PassLevel_C.SetLevel
// 0x0008 (0x0008 - 0x0000)
struct UI_PassLevel_C_SetLevel final
{
public:
	int32                                         _level;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _set_instance;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevel_C_SetLevel) == 0x000004, "Wrong alignment on UI_PassLevel_C_SetLevel");
static_assert(sizeof(UI_PassLevel_C_SetLevel) == 0x000008, "Wrong size on UI_PassLevel_C_SetLevel");
static_assert(offsetof(UI_PassLevel_C_SetLevel, _level) == 0x000000, "Member 'UI_PassLevel_C_SetLevel::_level' has a wrong offset!");
static_assert(offsetof(UI_PassLevel_C_SetLevel, _set_instance) == 0x000004, "Member 'UI_PassLevel_C_SetLevel::_set_instance' has a wrong offset!");

// Function UI_PassLevel.UI_PassLevel_C.SetMax
// 0x0001 (0x0001 - 0x0000)
struct UI_PassLevel_C_SetMax final
{
public:
	bool                                          _is_max;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PassLevel_C_SetMax) == 0x000001, "Wrong alignment on UI_PassLevel_C_SetMax");
static_assert(sizeof(UI_PassLevel_C_SetMax) == 0x000001, "Wrong size on UI_PassLevel_C_SetMax");
static_assert(offsetof(UI_PassLevel_C_SetMax, _is_max) == 0x000000, "Member 'UI_PassLevel_C_SetMax::_is_max' has a wrong offset!");

}

