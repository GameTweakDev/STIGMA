#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Ctrl_Mode_Button_Major

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Stigma_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.UpdateState
// 0x0038 (0x0038 - 0x0000)
struct Ctrl_Mode_Button_Major_C_UpdateState final
{
public:
	struct FLinearColor                           Icon_color;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           base_color;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFocused_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40F9[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0024(0x0014)()
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_UpdateState) == 0x000004, "Wrong alignment on Ctrl_Mode_Button_Major_C_UpdateState");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_UpdateState) == 0x000038, "Wrong size on Ctrl_Mode_Button_Major_C_UpdateState");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateState, Icon_color) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_UpdateState::Icon_color' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateState, base_color) == 0x000010, "Member 'Ctrl_Mode_Button_Major_C_UpdateState::base_color' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateState, CallFunc_IsSelected_ReturnValue) == 0x000020, "Member 'Ctrl_Mode_Button_Major_C_UpdateState::CallFunc_IsSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateState, CallFunc_IsFocused_ReturnValue) == 0x000021, "Member 'Ctrl_Mode_Button_Major_C_UpdateState::CallFunc_IsFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateState, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'Ctrl_Mode_Button_Major_C_UpdateState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateState, K2Node_MakeStruct_SlateColor) == 0x000024, "Member 'Ctrl_Mode_Button_Major_C_UpdateState::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.UpdateMode
// 0x03D0 (0x03D0 - 0x0000)
struct Ctrl_Mode_Button_Major_C_UpdateMode final
{
public:
	TArray<struct FItemIDRef_Mission>             Target_missions;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FLinearColor                           base_color;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemIDRef_Mission>             K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	struct FItemID                                CallFunc_MakeItemID_ReturnValue;                   // 0x0030(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FA[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0044(0x0014)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FMode                                  CallFunc_GetGameModeEntry_ReturnValue;             // 0x0060(0x0370)(ConstParm)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_UpdateMode) == 0x000008, "Wrong alignment on Ctrl_Mode_Button_Major_C_UpdateMode");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_UpdateMode) == 0x0003D0, "Wrong size on Ctrl_Mode_Button_Major_C_UpdateMode");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, Target_missions) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::Target_missions' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, base_color) == 0x000010, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::base_color' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, K2Node_MakeArray_Array) == 0x000020, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, CallFunc_MakeItemID_ReturnValue) == 0x000030, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::CallFunc_MakeItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, K2Node_MakeStruct_SlateColor) == 0x000044, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000058, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_UpdateMode, CallFunc_GetGameModeEntry_ReturnValue) == 0x000060, "Member 'Ctrl_Mode_Button_Major_C_UpdateMode::CallFunc_GetGameModeEntry_ReturnValue' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.SetSelected
// 0x0002 (0x0002 - 0x0000)
struct Ctrl_Mode_Button_Major_C_SetSelected final
{
public:
	bool                                          _selected;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_SetSelected) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_SetSelected");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_SetSelected) == 0x000002, "Wrong size on Ctrl_Mode_Button_Major_C_SetSelected");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_SetSelected, _selected) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_SetSelected::_selected' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_SetSelected, Selected) == 0x000001, "Member 'Ctrl_Mode_Button_Major_C_SetSelected::Selected' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.SetGameMode
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Mode_Button_Major_C_SetGameMode final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_SetGameMode) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_SetGameMode");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_SetGameMode) == 0x000001, "Wrong size on Ctrl_Mode_Button_Major_C_SetGameMode");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_SetGameMode, _game_mode) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_SetGameMode::_game_mode' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Mode_Button_Major_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_PreConstruct) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_PreConstruct");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_PreConstruct) == 0x000001, "Wrong size on Ctrl_Mode_Button_Major_C_PreConstruct");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Mode_Button_Major_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_OnSynchronizeProperties");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_OnSynchronizeProperties) == 0x000001, "Wrong size on Ctrl_Mode_Button_Major_C_OnSynchronizeProperties");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.OnGetVisibility_Selected
// 0x0002 (0x0002 - 0x0000)
struct Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected) == 0x000002, "Wrong size on Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected, ReturnValue) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected, CallFunc_IsSelected_ReturnValue) == 0x000001, "Member 'Ctrl_Mode_Button_Major_C_OnGetVisibility_Selected::CallFunc_IsSelected_ReturnValue' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.OnGetVisibility_Normal
// 0x0002 (0x0002 - 0x0000)
struct Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal) == 0x000002, "Wrong size on Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal, ReturnValue) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal, CallFunc_IsSelected_ReturnValue) == 0x000001, "Member 'Ctrl_Mode_Button_Major_C_OnGetVisibility_Normal::CallFunc_IsSelected_ReturnValue' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.OnGetVisibility_AIBot
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot) == 0x000001, "Wrong size on Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot, ReturnValue) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_OnGetVisibility_AIBot::ReturnValue' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.OnEVENT_Select_Start
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start final
{
public:
	bool                                          _select;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start) == 0x000001, "Wrong size on Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start, _select) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_OnEVENT_Select_Start::_select' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.OnEVENT_Focus
// 0x0001 (0x0001 - 0x0000)
struct Ctrl_Mode_Button_Major_C_OnEVENT_Focus final
{
public:
	bool                                          _focus;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_OnEVENT_Focus) == 0x000001, "Wrong alignment on Ctrl_Mode_Button_Major_C_OnEVENT_Focus");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_OnEVENT_Focus) == 0x000001, "Wrong size on Ctrl_Mode_Button_Major_C_OnEVENT_Focus");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_OnEVENT_Focus, _focus) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_OnEVENT_Focus::_focus' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.ExecuteUbergraph_Ctrl_Mode_Button_Major
// 0x0018 (0x0018 - 0x0000)
struct Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__focus;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event__select;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40FC[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	class UAnimatableWidget*                      K2Node_ComponentBoundEvent__widget;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent__select;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major) == 0x000008, "Wrong alignment on Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major) == 0x000018, "Wrong size on Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major, EntryPoint) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major, K2Node_Event__focus) == 0x000005, "Member 'Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major::K2Node_Event__focus' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major, K2Node_Event__select) == 0x000006, "Member 'Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major::K2Node_Event__select' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major, K2Node_ComponentBoundEvent__widget) == 0x000008, "Member 'Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major::K2Node_ComponentBoundEvent__widget' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major, K2Node_ComponentBoundEvent__select) == 0x000010, "Member 'Ctrl_Mode_Button_Major_C_ExecuteUbergraph_Ctrl_Mode_Button_Major::K2Node_ComponentBoundEvent__select' has a wrong offset!");

// Function Ctrl_Mode_Button_Major.Ctrl_Mode_Button_Major_C.BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature final
{
public:
	class UAnimatableWidget*                      _widget;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          _select;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000008, "Wrong alignment on Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(sizeof(Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature) == 0x000010, "Wrong size on Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _widget) == 0x000000, "Member 'Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_widget' has a wrong offset!");
static_assert(offsetof(Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature, _select) == 0x000008, "Member 'Ctrl_Mode_Button_Major_C_BndEvt__Ctrl_Mode_Button_Major_Ctrl_CommonButtonBase_K2Node_ComponentBoundEvent_1_DM_OnSelectEnd__DelegateSignature::_select' has a wrong offset!");

}

