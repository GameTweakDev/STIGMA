#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: WIDGET_ModeAndMap

#include "Basic.hpp"

#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_ModeAndMap.WIDGET_ModeAndMap_C.OnSynchronizeProperties
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_ModeAndMap_C_OnSynchronizeProperties final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ModeAndMap_C_OnSynchronizeProperties) == 0x000001, "Wrong alignment on WIDGET_ModeAndMap_C_OnSynchronizeProperties");
static_assert(sizeof(WIDGET_ModeAndMap_C_OnSynchronizeProperties) == 0x000001, "Wrong size on WIDGET_ModeAndMap_C_OnSynchronizeProperties");
static_assert(offsetof(WIDGET_ModeAndMap_C_OnSynchronizeProperties, ReturnValue) == 0x000000, "Member 'WIDGET_ModeAndMap_C_OnSynchronizeProperties::ReturnValue' has a wrong offset!");

// Function WIDGET_ModeAndMap.WIDGET_ModeAndMap_C.Set
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_ModeAndMap_C_Set final
{
public:
	EGameMode                                     _game_mode;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D62[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 _map_name;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ModeAndMap_C_Set) == 0x000008, "Wrong alignment on WIDGET_ModeAndMap_C_Set");
static_assert(sizeof(WIDGET_ModeAndMap_C_Set) == 0x000018, "Wrong size on WIDGET_ModeAndMap_C_Set");
static_assert(offsetof(WIDGET_ModeAndMap_C_Set, _game_mode) == 0x000000, "Member 'WIDGET_ModeAndMap_C_Set::_game_mode' has a wrong offset!");
static_assert(offsetof(WIDGET_ModeAndMap_C_Set, _map_name) == 0x000008, "Member 'WIDGET_ModeAndMap_C_Set::_map_name' has a wrong offset!");

// Function WIDGET_ModeAndMap.WIDGET_ModeAndMap_C.UpdateGameMode
// 0x0370 (0x0370 - 0x0000)
struct WIDGET_ModeAndMap_C_UpdateGameMode final
{
public:
	struct FMode                                  CallFunc_GetGameModeEntry_ReturnValue;             // 0x0000(0x0370)(ConstParm)
};
static_assert(alignof(WIDGET_ModeAndMap_C_UpdateGameMode) == 0x000008, "Wrong alignment on WIDGET_ModeAndMap_C_UpdateGameMode");
static_assert(sizeof(WIDGET_ModeAndMap_C_UpdateGameMode) == 0x000370, "Wrong size on WIDGET_ModeAndMap_C_UpdateGameMode");
static_assert(offsetof(WIDGET_ModeAndMap_C_UpdateGameMode, CallFunc_GetGameModeEntry_ReturnValue) == 0x000000, "Member 'WIDGET_ModeAndMap_C_UpdateGameMode::CallFunc_GetGameModeEntry_ReturnValue' has a wrong offset!");

// Function WIDGET_ModeAndMap.WIDGET_ModeAndMap_C.UpdateMap
// 0x0160 (0x0160 - 0x0000)
struct WIDGET_ModeAndMap_C_UpdateMap final
{
public:
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapEntry                              CallFunc_GetMapEntry_ReturnValue;                  // 0x0008(0x0158)()
};
static_assert(alignof(WIDGET_ModeAndMap_C_UpdateMap) == 0x000008, "Wrong alignment on WIDGET_ModeAndMap_C_UpdateMap");
static_assert(sizeof(WIDGET_ModeAndMap_C_UpdateMap) == 0x000160, "Wrong size on WIDGET_ModeAndMap_C_UpdateMap");
static_assert(offsetof(WIDGET_ModeAndMap_C_UpdateMap, CallFunc_Conv_StringToName_ReturnValue) == 0x000000, "Member 'WIDGET_ModeAndMap_C_UpdateMap::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ModeAndMap_C_UpdateMap, CallFunc_GetMapEntry_ReturnValue) == 0x000008, "Member 'WIDGET_ModeAndMap_C_UpdateMap::CallFunc_GetMapEntry_ReturnValue' has a wrong offset!");

}

