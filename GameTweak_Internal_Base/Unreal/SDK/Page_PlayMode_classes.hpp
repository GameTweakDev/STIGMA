#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Page_PlayMode

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Stigma_structs.hpp"
#include "Stigma_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Page_PlayMode.Page_PlayMode_C
// 0x00F0 (0x0600 - 0x0510)
class UPage_PlayMode_C final : public UUI_LobbyPage
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_OnHide;                                         // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UI_OnShow;                                         // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Btn_Custom_Create;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Btn_Custom_Join;                                   // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeButton_C*               BTN_GameMode_GTA;                                  // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeButton_C*               BTN_GameMode_KTA;                                  // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeButton_C*               BTN_GameMode_TDM;                                  // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeButton_C*               BTN_GameMode_VS;                                   // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_KeyButton_C*                    BTN_GoBack;                                        // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButtonBase_C*               Btn_Training;                                      // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_QuickMatch_C*                     Ctrl_QuickMatch;                                   // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_ShortCut_Region_C*                Ctrl_ShortCut_Region;                              // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Title_Custom;                                  // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Title_Training;                                // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Panel_CustomLocked;                                // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Guide;                                         // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_TextDialogue_Mission_C*             UI_TextDialogue_Mission_184;                       // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeFilter_C*               WIDGET_ModeFilter_GTA;                             // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeFilter_C*               WIDGET_ModeFilter_KTA;                             // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeFilter_C*               WIDGET_ModeFilter_TDM;                             // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_GameModeFilter_C*               WIDGET_ModeFilter_VS;                              // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          CanPVP;                                            // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTraning;                                        // 0x05C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF5[0x6];                                     // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FString                                 BattleIDS;                                         // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          DisableMatch;                                      // 0x05D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     CurGameModeGuide;                                  // 0x05D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF6[0x6];                                     // 0x05DA(0x0006)(Fixing Size After Last Property [ Dumper-69 ])
	class FText                                   DefaultGuideText;                                  // 0x05E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDateTime                              LastToastAddedTime;                                // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateWishedGameMode(EGameMode _game_mode, bool _add);
	void UpdateControllable();
	void TryJoinCustomGame();
	void TryCreateCustomGame();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void StartMatch(EGameMode _game_mode);
	void SetPVPButtonLock(bool _is_lock);
	void Set_Game_Mode_Guide(EGameMode _game_mode, const class FText& _msg);
	void RequestStartCustomGame();
	bool OnParty_LeaderUpdated(const struct FUserID& _leader_id);
	bool OnParty_Exited();
	bool OnParty_Entered(const class UBriefParty* _party);
	bool OnMatchChanged();
	void OnJoinCustomGame_Confirmed(const class FString& _battle_ids);
	ESlateVisibility OnGetVisibility_CreateCustomGame();
	void OnCloseCustomModePopup();
	struct FNetReply OnAck_StartMatchMaking(EResultCode _rcode, const struct FACK_FindMatch& _ack);
	struct FNetReply OnACK_LeaveParty(EResultCode _rcode, const struct FACK_PartyDelete& _ack);
	void On_Confirm_Leave_Party(const class UPopupBase* _popup, class FName _ctrl_id);
	void Init();
	void HandleResultCode(EResultCode _rcode, struct FNetReply* _Reply);
	void ExecuteUbergraph_Page_PlayMode(int32 EntryPoint);
	void EnableCtrls(bool _enable);
	void Construct();
	void CheckDisableMatchFunc(bool* Param_DisableMatch, struct FDateTime* ExpireAt);
	void BndEvt__Page_PlayMode_WIDGET_ModeFilter_VS_K2Node_ComponentBoundEvent_2_OnChecked__DelegateSignature(EGameMode _game_mode, bool _is_checked);
	void BndEvt__Page_PlayMode_WIDGET_ModeFilter_TDM_K2Node_ComponentBoundEvent_4_OnChecked__DelegateSignature(EGameMode _game_mode, bool _is_checked);
	void BndEvt__Page_PlayMode_WIDGET_ModeFilter_KTA_K2Node_ComponentBoundEvent_0_OnChecked__DelegateSignature(EGameMode _game_mode, bool _is_checked);
	void BndEvt__Page_PlayMode_WIDGET_ModeFilter_GTA_K2Node_ComponentBoundEvent_1_OnChecked__DelegateSignature(EGameMode _game_mode, bool _is_checked);
	void BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_3_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Page_PlayMode_Ctrl_QuickMatch_K2Node_ComponentBoundEvent_21_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_38_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void BndEvt__Page_PlayMode_Btn_Training_K2Node_ComponentBoundEvent_12_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Page_PlayMode_BTN_GoBack_K2Node_ComponentBoundEvent_18_OnClick__DelegateSignature();
	void BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_22_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void BndEvt__Page_PlayMode_BTN_GameMode_VS_K2Node_ComponentBoundEvent_10_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_9_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Page_PlayMode_BTN_GameMode_TDM_K2Node_ComponentBoundEvent_8_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_5_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Page_PlayMode_BTN_GameMode_KTA_K2Node_ComponentBoundEvent_11_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_7_DM_OnSelectStart__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Page_PlayMode_BTN_GameMode_GTA_K2Node_ComponentBoundEvent_19_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void BndEvt__Page_PlayMode_Btn_Custom_Join_K2Node_ComponentBoundEvent_16_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Page_PlayMode_Btn_Custom_Join_K2Node_ComponentBoundEvent_15_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Page_PlayMode_Btn_Custom_Create_K2Node_ComponentBoundEvent_14_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Page_PlayMode_Btn_Custom_Create_K2Node_ComponentBoundEvent_13_OnButtonClickedEvent__DelegateSignature();
	void AskLeavePartyIfAny();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Page_PlayMode_C">();
	}
	static class UPage_PlayMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPage_PlayMode_C>();
	}
};
static_assert(alignof(UPage_PlayMode_C) == 0x000008, "Wrong alignment on UPage_PlayMode_C");
static_assert(sizeof(UPage_PlayMode_C) == 0x000600, "Wrong size on UPage_PlayMode_C");
static_assert(offsetof(UPage_PlayMode_C, UberGraphFrame) == 0x000510, "Member 'UPage_PlayMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, UI_OnHide) == 0x000518, "Member 'UPage_PlayMode_C::UI_OnHide' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, UI_OnShow) == 0x000520, "Member 'UPage_PlayMode_C::UI_OnShow' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Btn_Custom_Create) == 0x000528, "Member 'UPage_PlayMode_C::Btn_Custom_Create' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Btn_Custom_Join) == 0x000530, "Member 'UPage_PlayMode_C::Btn_Custom_Join' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, BTN_GameMode_GTA) == 0x000538, "Member 'UPage_PlayMode_C::BTN_GameMode_GTA' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, BTN_GameMode_KTA) == 0x000540, "Member 'UPage_PlayMode_C::BTN_GameMode_KTA' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, BTN_GameMode_TDM) == 0x000548, "Member 'UPage_PlayMode_C::BTN_GameMode_TDM' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, BTN_GameMode_VS) == 0x000550, "Member 'UPage_PlayMode_C::BTN_GameMode_VS' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, BTN_GoBack) == 0x000558, "Member 'UPage_PlayMode_C::BTN_GoBack' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Btn_Training) == 0x000560, "Member 'UPage_PlayMode_C::Btn_Training' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Ctrl_QuickMatch) == 0x000568, "Member 'UPage_PlayMode_C::Ctrl_QuickMatch' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Ctrl_ShortCut_Region) == 0x000570, "Member 'UPage_PlayMode_C::Ctrl_ShortCut_Region' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Img_Title_Custom) == 0x000578, "Member 'UPage_PlayMode_C::Img_Title_Custom' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Img_Title_Training) == 0x000580, "Member 'UPage_PlayMode_C::Img_Title_Training' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, Panel_CustomLocked) == 0x000588, "Member 'UPage_PlayMode_C::Panel_CustomLocked' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, TXT_Guide) == 0x000590, "Member 'UPage_PlayMode_C::TXT_Guide' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, UI_TextDialogue_Mission_184) == 0x000598, "Member 'UPage_PlayMode_C::UI_TextDialogue_Mission_184' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, WIDGET_ModeFilter_GTA) == 0x0005A0, "Member 'UPage_PlayMode_C::WIDGET_ModeFilter_GTA' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, WIDGET_ModeFilter_KTA) == 0x0005A8, "Member 'UPage_PlayMode_C::WIDGET_ModeFilter_KTA' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, WIDGET_ModeFilter_TDM) == 0x0005B0, "Member 'UPage_PlayMode_C::WIDGET_ModeFilter_TDM' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, WIDGET_ModeFilter_VS) == 0x0005B8, "Member 'UPage_PlayMode_C::WIDGET_ModeFilter_VS' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, CanPVP) == 0x0005C0, "Member 'UPage_PlayMode_C::CanPVP' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, CanTraning) == 0x0005C1, "Member 'UPage_PlayMode_C::CanTraning' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, BattleIDS) == 0x0005C8, "Member 'UPage_PlayMode_C::BattleIDS' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, DisableMatch) == 0x0005D8, "Member 'UPage_PlayMode_C::DisableMatch' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, CurGameModeGuide) == 0x0005D9, "Member 'UPage_PlayMode_C::CurGameModeGuide' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, DefaultGuideText) == 0x0005E0, "Member 'UPage_PlayMode_C::DefaultGuideText' has a wrong offset!");
static_assert(offsetof(UPage_PlayMode_C, LastToastAddedTime) == 0x0005F8, "Member 'UPage_PlayMode_C::LastToastAddedTime' has a wrong offset!");

}

