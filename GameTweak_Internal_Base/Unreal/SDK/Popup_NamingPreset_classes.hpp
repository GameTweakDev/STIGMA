#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Popup_NamingPreset

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "BPGLib_classes.hpp"
#include "Stigma_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Popup_NamingPreset.Popup_NamingPreset_C
// 0x0078 (0x05E8 - 0x0570)
class UPopup_NamingPreset_C final : public UPopupBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0570(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Btn_Clear;                                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButton_Intensity_C*         btn_close;                                         // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_CommonButton_Intensity_C*         BTN_Use;                                           // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEditableText*                          ED_Nickname;                                       // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_PopupBg;                                       // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Txt_ItemName;                                      // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         MaxNumChar;                                        // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2C[0x4];                                     // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class UGunObject*                             GunObject;                                         // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnChangedPresetName;                               // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 NewPresetName;                                     // 0x05C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 PrevPresetName;                                    // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void TryChangePresetName();
	struct FNetReply OnUpdateGunSettingAck(EResultCode _rcode, const struct FACK_UpdateGunSpec& _ack);
	void OnChangedPresetName__DelegateSignature(const struct FACK_UpdateGunSpec& _ack);
	class UWidget* GetFocusWidget();
	bool Get_BTN_Use_bIsEnabled();
	void ExecuteUbergraph_Popup_NamingPreset(int32 EntryPoint);
	void Construct();
	void BndEvt__Popup_NamingPreset_ED_Nickname_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__Popup_NamingPreset_ED_Nickname_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Popup_NamingPreset_BTN_Use_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Popup_NamingPreset_BTN_Close_K2Node_ComponentBoundEvent_0_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__Popup_NamingPreset_Btn_Clear_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Popup_NamingPreset_C">();
	}
	static class UPopup_NamingPreset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPopup_NamingPreset_C>();
	}
};
static_assert(alignof(UPopup_NamingPreset_C) == 0x000008, "Wrong alignment on UPopup_NamingPreset_C");
static_assert(sizeof(UPopup_NamingPreset_C) == 0x0005E8, "Wrong size on UPopup_NamingPreset_C");
static_assert(offsetof(UPopup_NamingPreset_C, UberGraphFrame) == 0x000570, "Member 'UPopup_NamingPreset_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, Btn_Clear) == 0x000578, "Member 'UPopup_NamingPreset_C::Btn_Clear' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, btn_close) == 0x000580, "Member 'UPopup_NamingPreset_C::btn_close' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, BTN_Use) == 0x000588, "Member 'UPopup_NamingPreset_C::BTN_Use' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, ED_Nickname) == 0x000590, "Member 'UPopup_NamingPreset_C::ED_Nickname' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, IMG_PopupBg) == 0x000598, "Member 'UPopup_NamingPreset_C::IMG_PopupBg' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, Txt_ItemName) == 0x0005A0, "Member 'UPopup_NamingPreset_C::Txt_ItemName' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, MaxNumChar) == 0x0005A8, "Member 'UPopup_NamingPreset_C::MaxNumChar' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, GunObject) == 0x0005B0, "Member 'UPopup_NamingPreset_C::GunObject' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, OnChangedPresetName) == 0x0005B8, "Member 'UPopup_NamingPreset_C::OnChangedPresetName' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, NewPresetName) == 0x0005C8, "Member 'UPopup_NamingPreset_C::NewPresetName' has a wrong offset!");
static_assert(offsetof(UPopup_NamingPreset_C, PrevPresetName) == 0x0005D8, "Member 'UPopup_NamingPreset_C::PrevPresetName' has a wrong offset!");

}

