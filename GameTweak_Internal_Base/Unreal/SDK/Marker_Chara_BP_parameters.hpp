#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: Marker_Chara_BP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Stigma_structs.hpp"


namespace SDK::Params
{

// Function Marker_Chara_BP.Marker_Chara_BP_C.ChangeNewState
// 0x0002 (0x0002 - 0x0000)
struct Marker_Chara_BP_C_ChangeNewState final
{
public:
	ECharaMarkerState                             _new_state;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_ChangeNewState) == 0x000001, "Wrong alignment on Marker_Chara_BP_C_ChangeNewState");
static_assert(sizeof(Marker_Chara_BP_C_ChangeNewState) == 0x000002, "Wrong size on Marker_Chara_BP_C_ChangeNewState");
static_assert(offsetof(Marker_Chara_BP_C_ChangeNewState, _new_state) == 0x000000, "Member 'Marker_Chara_BP_C_ChangeNewState::_new_state' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeNewState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'Marker_Chara_BP_C_ChangeNewState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.ChangeState_AliveState
// 0x0040 (0x0040 - 0x0000)
struct Marker_Chara_BP_C_ChangeState_AliveState final
{
public:
	EPlayerSide                                   Side;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3831[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             Chara;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerSide                                   CallFunc_GetSide_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3832[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLinearColor                           CallFunc_GetMarkerColor_ReturnValue;               // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3833[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class AActor*                                 CallFunc_GetBoundActor_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_ChangeState_AliveState) == 0x000008, "Wrong alignment on Marker_Chara_BP_C_ChangeState_AliveState");
static_assert(sizeof(Marker_Chara_BP_C_ChangeState_AliveState) == 0x000040, "Wrong size on Marker_Chara_BP_C_ChangeState_AliveState");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, Side) == 0x000000, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::Side' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, Chara) == 0x000008, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::Chara' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, CallFunc_GetSide_ReturnValue) == 0x000012, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, CallFunc_GetMarkerColor_ReturnValue) == 0x000014, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::CallFunc_GetMarkerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, CallFunc_GetBoundActor_ReturnValue) == 0x000028, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::CallFunc_GetBoundActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, K2Node_DynamicCast_AsChara_Base) == 0x000030, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_AliveState, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Marker_Chara_BP_C_ChangeState_AliveState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.ChangeState_BountyTarget
// 0x0020 (0x0020 - 0x0000)
struct Marker_Chara_BP_C_ChangeState_BountyTarget final
{
public:
	class ACharaBase*                             My_chara;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Is_target;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3834[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ABountyTDM_GameState*                   Game_state;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EPlayerSide                                   CallFunc_GetSide_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_ChangeState_BountyTarget) == 0x000008, "Wrong alignment on Marker_Chara_BP_C_ChangeState_BountyTarget");
static_assert(sizeof(Marker_Chara_BP_C_ChangeState_BountyTarget) == 0x000020, "Wrong size on Marker_Chara_BP_C_ChangeState_BountyTarget");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_BountyTarget, My_chara) == 0x000000, "Member 'Marker_Chara_BP_C_ChangeState_BountyTarget::My_chara' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_BountyTarget, Is_target) == 0x000008, "Member 'Marker_Chara_BP_C_ChangeState_BountyTarget::Is_target' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_BountyTarget, Game_state) == 0x000010, "Member 'Marker_Chara_BP_C_ChangeState_BountyTarget::Game_state' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_BountyTarget, CallFunc_GetSide_ReturnValue) == 0x000018, "Member 'Marker_Chara_BP_C_ChangeState_BountyTarget::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeState_BountyTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'Marker_Chara_BP_C_ChangeState_BountyTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.ChangeVisibilityWRTState
// 0x0018 (0x0018 - 0x0000)
struct Marker_Chara_BP_C_ChangeVisibilityWRTState final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3835[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLinearColor                           CallFunc_GetMarkerColor_ReturnValue;               // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_ChangeVisibilityWRTState) == 0x000004, "Wrong alignment on Marker_Chara_BP_C_ChangeVisibilityWRTState");
static_assert(sizeof(Marker_Chara_BP_C_ChangeVisibilityWRTState) == 0x000018, "Wrong size on Marker_Chara_BP_C_ChangeVisibilityWRTState");
static_assert(offsetof(Marker_Chara_BP_C_ChangeVisibilityWRTState, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'Marker_Chara_BP_C_ChangeVisibilityWRTState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeVisibilityWRTState, CallFunc_GetMarkerColor_ReturnValue) == 0x000004, "Member 'Marker_Chara_BP_C_ChangeVisibilityWRTState::CallFunc_GetMarkerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_ChangeVisibilityWRTState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Marker_Chara_BP_C_ChangeVisibilityWRTState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.ExecuteUbergraph_Marker_Chara_BP
// 0x0004 (0x0004 - 0x0000)
struct Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP) == 0x000004, "Wrong alignment on Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP");
static_assert(sizeof(Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP) == 0x000004, "Wrong size on Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP");
static_assert(offsetof(Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP, EntryPoint) == 0x000000, "Member 'Marker_Chara_BP_C_ExecuteUbergraph_Marker_Chara_BP::EntryPoint' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.GetTeamColor
// 0x00B8 (0x00B8 - 0x0000)
struct Marker_Chara_BP_C_GetTeamColor final
{
public:
	EPlayerSide                                   _side;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3836[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-69 ])
	struct FLinearColor                           _color;                                            // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3837[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             Local_chara;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             My_chara;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTeamDef                               CallFunc_GetTeamDefine_ReturnValue;                // 0x0028(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3838[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FTeamDef                               CallFunc_GetTeamDefine_ReturnValue_1;              // 0x0058(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0094(0x0014)()
	struct FLinearColor                           CallFunc_GetMyColor_ReturnValue;                   // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_GetTeamColor) == 0x000008, "Wrong alignment on Marker_Chara_BP_C_GetTeamColor");
static_assert(sizeof(Marker_Chara_BP_C_GetTeamColor) == 0x0000B8, "Wrong size on Marker_Chara_BP_C_GetTeamColor");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, _side) == 0x000000, "Member 'Marker_Chara_BP_C_GetTeamColor::_side' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, _color) == 0x000004, "Member 'Marker_Chara_BP_C_GetTeamColor::_color' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, Local_chara) == 0x000018, "Member 'Marker_Chara_BP_C_GetTeamColor::Local_chara' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, My_chara) == 0x000020, "Member 'Marker_Chara_BP_C_GetTeamColor::My_chara' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, CallFunc_GetTeamDefine_ReturnValue) == 0x000028, "Member 'Marker_Chara_BP_C_GetTeamColor::CallFunc_GetTeamDefine_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'Marker_Chara_BP_C_GetTeamColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, CallFunc_GetTeamDefine_ReturnValue_1) == 0x000058, "Member 'Marker_Chara_BP_C_GetTeamColor::CallFunc_GetTeamDefine_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'Marker_Chara_BP_C_GetTeamColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, K2Node_MakeStruct_SlateColor_1) == 0x000094, "Member 'Marker_Chara_BP_C_GetTeamColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetTeamColor, CallFunc_GetMyColor_ReturnValue) == 0x0000A8, "Member 'Marker_Chara_BP_C_GetTeamColor::CallFunc_GetMyColor_ReturnValue' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.IsSpectatedChara
// 0x0020 (0x0020 - 0x0000)
struct Marker_Chara_BP_C_IsSpectatedChara final
{
public:
	bool                                          _is;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3839[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class AActor*                                 CallFunc_GetBoundActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpectated_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_IsSpectatedChara) == 0x000008, "Wrong alignment on Marker_Chara_BP_C_IsSpectatedChara");
static_assert(sizeof(Marker_Chara_BP_C_IsSpectatedChara) == 0x000020, "Wrong size on Marker_Chara_BP_C_IsSpectatedChara");
static_assert(offsetof(Marker_Chara_BP_C_IsSpectatedChara, _is) == 0x000000, "Member 'Marker_Chara_BP_C_IsSpectatedChara::_is' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_IsSpectatedChara, CallFunc_GetBoundActor_ReturnValue) == 0x000008, "Member 'Marker_Chara_BP_C_IsSpectatedChara::CallFunc_GetBoundActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_IsSpectatedChara, K2Node_DynamicCast_AsChara_Base) == 0x000010, "Member 'Marker_Chara_BP_C_IsSpectatedChara::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_IsSpectatedChara, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Marker_Chara_BP_C_IsSpectatedChara::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_IsSpectatedChara, CallFunc_IsSpectated_ReturnValue) == 0x000019, "Member 'Marker_Chara_BP_C_IsSpectatedChara::CallFunc_IsSpectated_ReturnValue' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.OnBindActor
// 0x0030 (0x0030 - 0x0000)
struct Marker_Chara_BP_C_OnBindActor final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             Chara;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ECharaMarkerState                             CallFunc_DetermineState_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class ACharaBase*                             K2Node_DynamicCast_AsChara_Base;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_OnBindActor) == 0x000008, "Wrong alignment on Marker_Chara_BP_C_OnBindActor");
static_assert(sizeof(Marker_Chara_BP_C_OnBindActor) == 0x000030, "Wrong size on Marker_Chara_BP_C_OnBindActor");
static_assert(offsetof(Marker_Chara_BP_C_OnBindActor, _Actor) == 0x000000, "Member 'Marker_Chara_BP_C_OnBindActor::_Actor' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnBindActor, ReturnValue) == 0x000008, "Member 'Marker_Chara_BP_C_OnBindActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnBindActor, Chara) == 0x000010, "Member 'Marker_Chara_BP_C_OnBindActor::Chara' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnBindActor, CallFunc_DetermineState_ReturnValue) == 0x000018, "Member 'Marker_Chara_BP_C_OnBindActor::CallFunc_DetermineState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnBindActor, K2Node_DynamicCast_AsChara_Base) == 0x000020, "Member 'Marker_Chara_BP_C_OnBindActor::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnBindActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Marker_Chara_BP_C_OnBindActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.OnTick
// 0x0044 (0x0044 - 0x0000)
struct Marker_Chara_BP_C_OnTick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                         _delta;                                            // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x003C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerSide                                   Side;                                              // 0x003D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaMarkerState                             New_state;                                         // 0x003E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaMarkerState                             CallFunc_DetermineState_ReturnValue;               // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerSide                                   CallFunc_GetSide_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_OnTick) == 0x000004, "Wrong alignment on Marker_Chara_BP_C_OnTick");
static_assert(sizeof(Marker_Chara_BP_C_OnTick) == 0x000044, "Wrong size on Marker_Chara_BP_C_OnTick");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, MyGeometry) == 0x000000, "Member 'Marker_Chara_BP_C_OnTick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, _delta) == 0x000038, "Member 'Marker_Chara_BP_C_OnTick::_delta' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, ReturnValue) == 0x00003C, "Member 'Marker_Chara_BP_C_OnTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, Side) == 0x00003D, "Member 'Marker_Chara_BP_C_OnTick::Side' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, New_state) == 0x00003E, "Member 'Marker_Chara_BP_C_OnTick::New_state' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, CallFunc_DetermineState_ReturnValue) == 0x00003F, "Member 'Marker_Chara_BP_C_OnTick::CallFunc_DetermineState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, CallFunc_GetSide_ReturnValue) == 0x000040, "Member 'Marker_Chara_BP_C_OnTick::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000041, "Member 'Marker_Chara_BP_C_OnTick::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_OnTick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'Marker_Chara_BP_C_OnTick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.UpdateSpectating
// 0x0003 (0x0003 - 0x0000)
struct Marker_Chara_BP_C_UpdateSpectating final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpectatedChara__is;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_UpdateSpectating) == 0x000001, "Wrong alignment on Marker_Chara_BP_C_UpdateSpectating");
static_assert(sizeof(Marker_Chara_BP_C_UpdateSpectating) == 0x000003, "Wrong size on Marker_Chara_BP_C_UpdateSpectating");
static_assert(offsetof(Marker_Chara_BP_C_UpdateSpectating, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Marker_Chara_BP_C_UpdateSpectating::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_UpdateSpectating, CallFunc_IsSpectatedChara__is) == 0x000001, "Member 'Marker_Chara_BP_C_UpdateSpectating::CallFunc_IsSpectatedChara__is' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_UpdateSpectating, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'Marker_Chara_BP_C_UpdateSpectating::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function Marker_Chara_BP.Marker_Chara_BP_C.GetLocalPlayerState
// 0x0010 (0x0010 - 0x0000)
struct Marker_Chara_BP_C_GetLocalPlayerState final
{
public:
	class APlayerState*                           _player_state;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Marker_Chara_BP_C_GetLocalPlayerState) == 0x000008, "Wrong alignment on Marker_Chara_BP_C_GetLocalPlayerState");
static_assert(sizeof(Marker_Chara_BP_C_GetLocalPlayerState) == 0x000010, "Wrong size on Marker_Chara_BP_C_GetLocalPlayerState");
static_assert(offsetof(Marker_Chara_BP_C_GetLocalPlayerState, _player_state) == 0x000000, "Member 'Marker_Chara_BP_C_GetLocalPlayerState::_player_state' has a wrong offset!");
static_assert(offsetof(Marker_Chara_BP_C_GetLocalPlayerState, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'Marker_Chara_BP_C_GetLocalPlayerState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

}

