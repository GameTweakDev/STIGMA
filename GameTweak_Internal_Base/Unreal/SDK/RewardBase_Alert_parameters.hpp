#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: RewardBase_Alert

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function RewardBase_Alert.RewardBase_Alert_C.CheckCanClose
// 0x0001 (0x0001 - 0x0000)
struct RewardBase_Alert_C_CheckCanClose final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardBase_Alert_C_CheckCanClose) == 0x000001, "Wrong alignment on RewardBase_Alert_C_CheckCanClose");
static_assert(sizeof(RewardBase_Alert_C_CheckCanClose) == 0x000001, "Wrong size on RewardBase_Alert_C_CheckCanClose");
static_assert(offsetof(RewardBase_Alert_C_CheckCanClose, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'RewardBase_Alert_C_CheckCanClose::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function RewardBase_Alert.RewardBase_Alert_C.ExecuteUbergraph_RewardBase_Alert
// 0x0048 (0x0048 - 0x0000)
struct RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AChallenge_PlayerController*            K2Node_DynamicCast_AsChallenge_Player_Controller;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38EF[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AChallenge_PlayerController*            K2Node_DynamicCast_AsChallenge_Player_Controller_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert) == 0x000008, "Wrong alignment on RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert");
static_assert(sizeof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert) == 0x000048, "Wrong size on RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, EntryPoint) == 0x000000, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::EntryPoint' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, K2Node_DynamicCast_AsChallenge_Player_Controller) == 0x000020, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::K2Node_DynamicCast_AsChallenge_Player_Controller' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000030, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, K2Node_DynamicCast_AsChallenge_Player_Controller_1) == 0x000038, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::K2Node_DynamicCast_AsChallenge_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'RewardBase_Alert_C_ExecuteUbergraph_RewardBase_Alert::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function RewardBase_Alert.RewardBase_Alert_C.OnKeyDown
// 0x02D8 (0x02D8 - 0x0000)
struct RewardBase_Alert_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F0[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-69 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0208(0x00B8)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABattlePlayerControllerBase*            K2Node_DynamicCast_AsBattle_Player_Controller_Base; // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardBase_Alert_C_OnKeyDown) == 0x000008, "Wrong alignment on RewardBase_Alert_C_OnKeyDown");
static_assert(sizeof(RewardBase_Alert_C_OnKeyDown) == 0x0002D8, "Wrong size on RewardBase_Alert_C_OnKeyDown");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'RewardBase_Alert_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'RewardBase_Alert_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'RewardBase_Alert_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'RewardBase_Alert_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'RewardBase_Alert_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'RewardBase_Alert_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000208, "Member 'RewardBase_Alert_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, CallFunc_GetPlayerController_ReturnValue) == 0x0002C0, "Member 'RewardBase_Alert_C_OnKeyDown::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, K2Node_DynamicCast_AsBattle_Player_Controller_Base) == 0x0002C8, "Member 'RewardBase_Alert_C_OnKeyDown::K2Node_DynamicCast_AsBattle_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(RewardBase_Alert_C_OnKeyDown, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'RewardBase_Alert_C_OnKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

