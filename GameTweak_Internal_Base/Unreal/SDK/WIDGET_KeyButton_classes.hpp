#pragma once

/*
* SDK generated by Dumper-69
*
* https://github.com/Encryqed/Dumper-69
*/

// Package: WIDGET_KeyButton

#include "Basic.hpp"

#include "BPGLib_classes.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_KeyButton.WIDGET_KeyButton_C
// 0x00A0 (0x0590 - 0x04F0)
class UWIDGET_KeyButton_C final : public UPreviewableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCtrl_CommonButtonBase_C*               Btn_Main;                                          // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_KeyIcon_C*                        Ctrl_KeyIcon;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCtrl_Navigation_Border_C*              Ctrl_Navigation_Border;                            // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TXT_Desc;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FKey                                   GamepadKey;                                        // 0x0518(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   MouseKey;                                          // 0x0530(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0548(0x0018)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OnClick;                                           // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FLinearColor                           UI_TextColor_Hovered;                              // 0x0570(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UI_TextColor_UnHovered;                            // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WIDGET_KeyButton_Btn_Main_K2Node_ComponentBoundEvent_3_DM_OnSelectEnd__DelegateSignature(class UAnimatableWidget* _widget, bool _select);
	void BndEvt__WIDGET_KeyButton_Btn_Main_K2Node_ComponentBoundEvent_4_DM_OnFocus__DelegateSignature(class UAnimatableWidget* _widget, bool _focus);
	void ExecuteUbergraph_WIDGET_KeyButton(int32 EntryPoint);
	void OnClick__DelegateSignature();
	void OnEVENT_Focus(bool _focus);
	bool OnSynchronizeProperties();
	void SetDescText(const class FText& _desc_text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_KeyButton_C">();
	}
	static class UWIDGET_KeyButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_KeyButton_C>();
	}
};
static_assert(alignof(UWIDGET_KeyButton_C) == 0x000008, "Wrong alignment on UWIDGET_KeyButton_C");
static_assert(sizeof(UWIDGET_KeyButton_C) == 0x000590, "Wrong size on UWIDGET_KeyButton_C");
static_assert(offsetof(UWIDGET_KeyButton_C, UberGraphFrame) == 0x0004F0, "Member 'UWIDGET_KeyButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, Btn_Main) == 0x0004F8, "Member 'UWIDGET_KeyButton_C::Btn_Main' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, Ctrl_KeyIcon) == 0x000500, "Member 'UWIDGET_KeyButton_C::Ctrl_KeyIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, Ctrl_Navigation_Border) == 0x000508, "Member 'UWIDGET_KeyButton_C::Ctrl_Navigation_Border' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, TXT_Desc) == 0x000510, "Member 'UWIDGET_KeyButton_C::TXT_Desc' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, GamepadKey) == 0x000518, "Member 'UWIDGET_KeyButton_C::GamepadKey' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, MouseKey) == 0x000530, "Member 'UWIDGET_KeyButton_C::MouseKey' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, Text) == 0x000548, "Member 'UWIDGET_KeyButton_C::Text' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, OnClick) == 0x000560, "Member 'UWIDGET_KeyButton_C::OnClick' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, UI_TextColor_Hovered) == 0x000570, "Member 'UWIDGET_KeyButton_C::UI_TextColor_Hovered' has a wrong offset!");
static_assert(offsetof(UWIDGET_KeyButton_C, UI_TextColor_UnHovered) == 0x000580, "Member 'UWIDGET_KeyButton_C::UI_TextColor_UnHovered' has a wrong offset!");

}

